"use strict";

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _extends2 = require("babel-runtime/helpers/extends");

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require("babel-runtime/helpers/objectWithoutProperties");

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _sitemap = require("sitemap");

var _sitemap2 = _interopRequireDefault(_sitemap);

var _internals = require("./internals");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var publicPath = "./public";

exports.onPostBuild = function () {
  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(_ref, pluginOptions) {
    var graphql = _ref.graphql;

    var _defaultOptions$plugi, query, serialize, output, rest, map, records, saved;

    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            delete pluginOptions.plugins;

            _defaultOptions$plugi = (0, _extends3.default)({}, _internals.defaultOptions, pluginOptions), query = _defaultOptions$plugi.query, serialize = _defaultOptions$plugi.serialize, output = _defaultOptions$plugi.output, rest = (0, _objectWithoutProperties3.default)(_defaultOptions$plugi, ["query", "serialize", "output"]);
            map = _sitemap2.default.createSitemap(rest);
            _context.next = 5;
            return (0, _internals.runQuery)(graphql, query);

          case 5:
            records = _context.sent;
            saved = _path2.default.join(publicPath, output);


            serialize(records).forEach(function (u) {
              return map.add(u);
            });
            _context.next = 10;
            return (0, _internals.writeFile)(saved, map.toString());

          case 10:
            return _context.abrupt("return", _context.sent);

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function (_x, _x2) {
    return _ref2.apply(this, arguments);
  };
}();
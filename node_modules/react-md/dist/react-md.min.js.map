{"version":3,"file":"react-md.min.js","sources":["../node_modules/fbjs/lib/emptyFunction.js","../node_modules/object-assign/index.js","../node_modules/react-transition-group/node_modules/fbjs/lib/emptyFunction.js","../src/js/utils/getField.js","../src/js/utils/omit.js","../src/js/utils/Positioning/getTextWidth.js","../src/js/utils/themeColors.js","../src/js/utils/getCollapserStyles.js","../src/js/utils/closest.js","../src/js/utils/isFormPartRole.js","../src/js/utils/EventUtils/handleKeyboardAccessibility.js","../src/js/utils/StringUtils/getDisplayName.js","../src/js/utils/Positioning/getPagePosition.js","../src/js/utils/Positioning/calcPageOffset.js","../src/js/utils/EventUtils/isValidClick.js","../src/js/utils/EventUtils/touches.js","../src/js/utils/EventUtils/captureNextEvent.js","../src/js/utils/NumberUtils/calculateHypotenuse.js","../node_modules/react-motion/node_modules/fbjs/lib/emptyFunction.js","../src/js/FontIcons/getDeprecatedIcon.js","../src/js/utils/EventUtils/handleWindowClickListeners.js","../src/js/utils/getSelectedText.js","../src/js/utils/Positioning/getSelectedTextPosition.js","../src/js/utils/Positioning/getScroll.js","../src/js/utils/Positioning/getScreenSize.js","../src/js/utils/Positioning/viewport.js","../src/js/utils/Positioning/isOutOfBounds.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../src/js/utils/isValued.js","../src/js/utils/StringUtils/addSuffix.js","../src/js/utils/NumberUtils/isBetween.js","../src/js/Buttons/getBtnStyles.js","../src/js/utils/StringUtils/capitalizeFirst.js","../src/js/DataTables/findTable.js","../src/js/utils/EventUtils/isValidFocusKeypress.js","../src/js/DataTables/findFixedTo.js","../src/js/DataTables/withTableFixes.js","../src/js/utils/mapToListParts.js","../src/js/utils/toggleScroll.js","../src/js/Drawers/isType.js","../src/js/utils/bem.js","../src/js/NavigationDrawers/NavigationDrawer.js","../src/js/utils/DateUtils/isDateEqual.js","../src/js/utils/DateUtils/addDate.js","../src/js/utils/DateUtils/stripTime.js","../src/js/utils/DateUtils/getLastDay.js","../src/js/utils/DateUtils/getDayOfWeek.js","../src/js/utils/DateUtils/isMonthBefore.js","../src/js/utils/DateUtils/formatTime.js","../src/js/utils/DateUtils/extractTimeParts.js","../src/js/utils/NumberUtils/calcTimeFromPoint.js","../src/js/utils/DateUtils/addHours.js","../src/js/utils/NumberUtils/minMaxLoop.js","../src/js/utils/NumberUtils/calculateValueDistance.js","../src/js/utils/NumberUtils/updateUnit.js","../src/js/Snackbars/isInvalidAnimate.js","../node_modules/react-swipeable-views/node_modules/fbjs/lib/emptyFunction.js","../src/js/Tooltips/Tooltipped.js","../node_modules/fbjs/lib/invariant.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/react-transition-group/node_modules/fbjs/lib/invariant.js","../node_modules/react-transition-group/node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-transition-group/node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/react-transition-group/node_modules/prop-types/index.js","../node_modules/chain-function/index.js","../node_modules/warning/browser.js","../node_modules/react-transition-group/utils/ChildMapping.js","../node_modules/react-transition-group/TransitionGroup.js","../node_modules/dom-helpers/class/hasClass.js","../node_modules/dom-helpers/class/addClass.js","../node_modules/dom-helpers/class/removeClass.js","../node_modules/dom-helpers/util/inDOM.js","../node_modules/dom-helpers/util/requestAnimationFrame.js","../node_modules/dom-helpers/transition/properties.js","../node_modules/react-transition-group/utils/PropTypes.js","../node_modules/react-transition-group/CSSTransitionGroupChild.js","../node_modules/react-transition-group/CSSTransitionGroup.js","../node_modules/classnames/index.js","../src/js/constants/keyCodes.js","../src/js/Helpers/HorizontalAnchors.js","../src/js/Helpers/VerticalAnchors.js","../src/js/Helpers/anchorShape.js","../src/js/Helpers/fixedToShape.js","../src/js/Helpers/Positions.js","../src/js/Helpers/positionShape.js","../node_modules/react-prop-types/lib/deprecated.js","../src/js/Helpers/AccessibleFakeButton.js","../src/js/constants/CSSTransitionGroupTick.js","../src/js/Inks/Ink.js","../src/js/Inks/InkContainer.js","../src/js/Inks/inkContextTypes.js","../src/js/Inks/injectInk.js","../src/js/Helpers/AccessibleFakeInkedButton.js","../node_modules/react-motion/lib/mapToZero.js","../node_modules/react-motion/lib/stripStyle.js","../node_modules/react-motion/lib/stepper.js","../node_modules/raf/index.js","../node_modules/performance-now/lib/performance-now.js","../node_modules/react-motion/lib/shouldStopAnimation.js","../node_modules/react-motion/node_modules/fbjs/lib/invariant.js","../node_modules/react-motion/node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-motion/node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/react-motion/node_modules/prop-types/index.js","../node_modules/react-motion/lib/Motion.js","../node_modules/react-motion/lib/StaggeredMotion.js","../node_modules/react-motion/lib/mergeDiff.js","../node_modules/react-motion/lib/TransitionMotion.js","../node_modules/react-motion/lib/presets.js","../node_modules/react-motion/lib/spring.js","../node_modules/react-motion/lib/reorderKeys.js","../node_modules/react-motion/lib/react-motion.js","../src/js/Helpers/Collapse.js","../src/js/FontIcons/FontIcon.js","../src/js/Lists/TileAddon.js","../src/js/Lists/ListItemText.js","../src/js/Subheaders/Subheader.js","../src/js/Lists/List.js","../node_modules/react-prop-types/lib/isRequiredForA11y.js","../src/js/Helpers/ResizeObserver.js","../src/js/Helpers/Layover.js","../src/js/Menus/Menu.js","../src/js/Lists/ListItem.js","../src/js/TextFields/FloatingLabel.js","../src/js/TextFields/Message.js","../src/js/TextFields/TextFieldMessage.js","../src/js/TextFields/PasswordButton.js","../src/js/TextFields/TextArea.js","../src/js/TextFields/InputField.js","../src/js/Dividers/Divider.js","../src/js/TextFields/TextFieldDivider.js","../src/js/TextFields/TextField.js","../src/js/Autocompletes/Autocomplete.js","../src/js/utils/fuzzyFilter.js","../src/js/utils/caseInsensitiveFilter.js","../src/js/utils/findIgnoreCase.js","../src/js/Avatars/Avatar.js","../src/js/Badges/Badge.js","../src/js/Helpers/Portal.js","../src/js/Papers/Paper.js","../src/js/BottomNavigations/BottomNav.js","../src/js/BottomNavigations/BottomNavigation.js","../src/js/Helpers/IconSeparator.js","../src/js/Tooltips/Tooltip.js","../src/js/Tooltips/TooltipContainer.js","../src/js/Tooltips/injectTooltip.js","../src/js/Buttons/Button.js","../src/js/Cards/contextTypes.js","../src/js/Cards/Card.js","../src/js/Cards/CardExpander.js","../src/js/Cards/CardActions.js","../src/js/Cards/CardTitleBlock.js","../src/js/Cards/CardTitle.js","../src/js/Cards/CardText.js","../src/js/Chips/Chip.js","../src/js/DataTables/contextTypes.js","../src/js/DataTables/DataTable.js","../src/js/DataTables/headerContextTypes.js","../src/js/DataTables/TableHeader.js","../src/js/DataTables/TableBody.js","../src/js/DataTables/rowContextTypes.js","../src/js/SelectionControls/SwitchThumb.js","../src/js/SelectionControls/SwitchTrack.js","../src/js/SelectionControls/SelectionControl.js","../src/js/DataTables/TableCheckbox.js","../src/js/DataTables/TableRow.js","../src/js/DataTables/TableColumn.js","../src/js/SelectFields/SelectFieldInput.js","../src/js/SelectFields/SelectFieldToggle.js","../src/js/SelectFields/SelectField.js","../src/js/DataTables/TableFooter.js","../src/js/DataTables/TablePagination.js","../src/js/Helpers/FocusContainer.js","../src/js/Dialogs/DialogTitle.js","../src/js/Dialogs/DialogFooter.js","../src/js/Dialogs/Dialog.js","../src/js/DataTables/EditDialog.js","../src/js/DataTables/EditDialogColumn.js","../src/js/DataTables/SelectFieldColumn.js","../src/js/Menus/DropdownMenu.js","../src/js/Menus/MenuButton.js","../src/js/DataTables/MenuButtonColumn.js","../src/js/DataTables/DropdownMenuColumn.js","../src/js/DataTables/TableCardHeader.js","../src/js/Dialogs/DialogContainer.js","../src/js/Drawers/Overlay.js","../src/js/Drawers/DrawerTypes.js","../src/js/Drawers/Drawer.js","../src/js/constants/media.js","../src/js/ExpansionPanels/PanelContent.js","../src/js/ExpansionPanels/ExpansionPanel.js","../src/js/ExpansionPanels/ExpansionList.js","../src/js/FileInputs/FileInput.js","../src/js/FileInputs/FileUpload.js","../src/js/Grids/Grid.js","../src/js/Grids/Cell.js","../src/js/Grids/GridList.js","../src/js/Lists/ListItemControl.js","../src/js/Media/Media.js","../src/js/Media/MediaOverlay.js","../src/js/Toolbars/ToolbarTitle.js","../src/js/Toolbars/Toolbar.js","../src/js/NavigationDrawers/JumpToContentLink.js","../src/js/NavigationDrawers/CloseButton.js","../src/js/NavigationDrawers/MiniListItem.js","../src/js/utils/DateUtils/DateTimeFormat.js","../src/js/Pickers/PickerControl.js","../src/js/Pickers/DatePickerHeader.js","../src/js/Pickers/CalendarDate.js","../src/js/Pickers/CalendarMonth.js","../src/js/Pickers/CalendarHeader.js","../src/js/Pickers/DatePickerCalendar.js","../src/js/Pickers/Year.js","../src/js/Pickers/YearPicker.js","../src/js/Pickers/DatePicker.js","../src/js/Pickers/DatePickerContainer.js","../src/js/Pickers/ClockTime.js","../src/js/Pickers/ClockHand.js","../src/js/Pickers/ClockFace.js","../src/js/Pickers/TimePeriods.js","../src/js/Pickers/TimePickerHeader.js","../src/js/Pickers/TimePicker.js","../src/js/Pickers/TimePickerContainer.js","../src/js/Progress/CircularProgress.js","../src/js/Progress/LinearProgress.js","../src/js/SelectionControls/SelectionControlGroup.js","../src/js/SelectionControls/Checkbox.js","../src/js/SelectionControls/Radio.js","../src/js/SelectionControls/Switch.js","../src/js/Sliders/SliderLabel.js","../src/js/Sliders/TrackFill.js","../src/js/Sliders/Thumb.js","../src/js/Sliders/ThumbMask.js","../src/js/Sliders/DiscreteValue.js","../src/js/Sliders/Track.js","../src/js/Sliders/Slider.js","../src/js/Snackbars/Snackbar.js","../src/js/Snackbars/SnackbarContainer.js","../src/js/SVGIcons/SVGIcon.js","../node_modules/core-js/library/modules/_global.js","../node_modules/core-js/library/modules/_core.js","../node_modules/core-js/library/modules/_a-function.js","../node_modules/core-js/library/modules/_ctx.js","../node_modules/core-js/library/modules/_is-object.js","../node_modules/core-js/library/modules/_an-object.js","../node_modules/core-js/library/modules/_fails.js","../node_modules/core-js/library/modules/_descriptors.js","../node_modules/core-js/library/modules/_dom-create.js","../node_modules/core-js/library/modules/_ie8-dom-define.js","../node_modules/core-js/library/modules/_to-primitive.js","../node_modules/core-js/library/modules/_object-dp.js","../node_modules/core-js/library/modules/_property-desc.js","../node_modules/core-js/library/modules/_hide.js","../node_modules/core-js/library/modules/_export.js","../node_modules/core-js/library/modules/_has.js","../node_modules/core-js/library/modules/_cof.js","../node_modules/core-js/library/modules/_iobject.js","../node_modules/core-js/library/modules/_defined.js","../node_modules/core-js/library/modules/_to-iobject.js","../node_modules/core-js/library/modules/_to-integer.js","../node_modules/core-js/library/modules/_to-length.js","../node_modules/core-js/library/modules/_to-index.js","../node_modules/core-js/library/modules/_shared.js","../node_modules/core-js/library/modules/_uid.js","../node_modules/core-js/library/modules/_shared-key.js","../node_modules/core-js/library/modules/_object-keys-internal.js","../node_modules/core-js/library/modules/_array-includes.js","../node_modules/core-js/library/modules/_enum-bug-keys.js","../node_modules/core-js/library/modules/_object-keys.js","../node_modules/core-js/library/modules/_object-gops.js","../node_modules/core-js/library/modules/_object-pie.js","../node_modules/core-js/library/modules/_to-object.js","../node_modules/core-js/library/modules/_object-assign.js","../node_modules/core-js/library/modules/es6.object.assign.js","../node_modules/core-js/library/fn/object/assign.js","../node_modules/babel-runtime/core-js/object/assign.js","../node_modules/babel-runtime/helpers/extends.js","../node_modules/babel-runtime/helpers/objectWithoutProperties.js","../node_modules/core-js/library/modules/_object-gpo.js","../node_modules/core-js/library/modules/_object-sap.js","../node_modules/core-js/library/modules/es6.object.get-prototype-of.js","../node_modules/core-js/library/fn/object/get-prototype-of.js","../node_modules/babel-runtime/core-js/object/get-prototype-of.js","../node_modules/babel-runtime/helpers/classCallCheck.js","../node_modules/core-js/library/modules/es6.object.define-property.js","../node_modules/core-js/library/fn/object/define-property.js","../node_modules/babel-runtime/core-js/object/define-property.js","../node_modules/babel-runtime/helpers/createClass.js","../node_modules/core-js/library/modules/_string-at.js","../node_modules/core-js/library/modules/_redefine.js","../node_modules/core-js/library/modules/_object-dps.js","../node_modules/core-js/library/modules/_html.js","../node_modules/core-js/library/modules/_object-create.js","../node_modules/core-js/library/modules/_wks.js","../node_modules/core-js/library/modules/_set-to-string-tag.js","../node_modules/core-js/library/modules/_iter-create.js","../node_modules/core-js/library/modules/_iter-define.js","../node_modules/core-js/library/modules/es6.string.iterator.js","../node_modules/core-js/library/modules/_iter-step.js","../node_modules/core-js/library/modules/es6.array.iterator.js","../node_modules/core-js/library/modules/web.dom.iterable.js","../node_modules/core-js/library/modules/_wks-ext.js","../node_modules/core-js/library/fn/symbol/iterator.js","../node_modules/babel-runtime/core-js/symbol/iterator.js","../node_modules/core-js/library/modules/_meta.js","../node_modules/core-js/library/modules/_wks-define.js","../node_modules/core-js/library/modules/_keyof.js","../node_modules/core-js/library/modules/_enum-keys.js","../node_modules/core-js/library/modules/_is-array.js","../node_modules/core-js/library/modules/_object-gopn.js","../node_modules/core-js/library/modules/_object-gopn-ext.js","../node_modules/core-js/library/modules/_object-gopd.js","../node_modules/core-js/library/modules/es6.symbol.js","../node_modules/core-js/library/modules/es7.symbol.async-iterator.js","../node_modules/core-js/library/modules/es7.symbol.observable.js","../node_modules/core-js/library/fn/symbol/index.js","../node_modules/babel-runtime/core-js/symbol.js","../node_modules/babel-runtime/helpers/typeof.js","../node_modules/babel-runtime/helpers/possibleConstructorReturn.js","../node_modules/core-js/library/modules/_set-proto.js","../node_modules/core-js/library/modules/es6.object.set-prototype-of.js","../node_modules/core-js/library/fn/object/set-prototype-of.js","../node_modules/babel-runtime/core-js/object/set-prototype-of.js","../node_modules/core-js/library/modules/es6.object.create.js","../node_modules/core-js/library/fn/object/create.js","../node_modules/babel-runtime/core-js/object/create.js","../node_modules/babel-runtime/helpers/inherits.js","../node_modules/react-swipeable-views/node_modules/fbjs/lib/invariant.js","../node_modules/react-swipeable-views/node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-swipeable-views/node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/react-swipeable-views/node_modules/prop-types/index.js","../node_modules/dom-helpers/events/on.js","../node_modules/dom-helpers/events/off.js","../node_modules/react-swipeable-views-core/lib/checkIndexBounds.js","../node_modules/react-swipeable-views-core/lib/constant.js","../node_modules/react-swipeable-views-core/lib/computeIndex.js","../node_modules/react-swipeable-views-core/lib/getDisplaySameSlide.js","../node_modules/react-swipeable-views-core/lib/mod.js","../node_modules/react-swipeable-views-core/lib/index.js","../node_modules/react-swipeable-views/lib/SwipeableViews.js","../node_modules/react-swipeable-views/lib/index.js","../src/js/Tabs/TabPanel.js","../src/js/Tabs/TabsContainer.js","../src/js/Tabs/TabIndicator.js","../src/js/Tabs/MenuTab.js","../src/js/Tabs/TabOverflowButton.js","../src/js/Tabs/Tabs.js","../src/js/Tabs/Tab.js","../src/js/Version.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/** @module utils/getField */\n\n/**\n * Gets the current field for a component that can the field\n * as either uncontrolled or controlled.\n *\n * @param {Object} props - the props object.\n * @param {Object} state = the state object.\n * @param {string=} field - the field to extract a value from. Defaults to 'value'.\n *\n * @return the field's value.\n */\nexport default function getField(props, state, field = 'value') {\n  return typeof props[field] !== 'undefined' ? props[field] : state[field];\n}\n","/** @module utils/omit */\n\n/**\n * This should hopefully be very similar to lodash's omit function. It will\n * take an object and return a new object without any of the given keys.\n *\n * @param {Object} obj - The object to omit keys from.\n * @param {Array.<String>} keys - a list of keys to remove.\n */\nexport default function omit(obj, keys) {\n  if (!obj) {\n    return {};\n  } else if (!keys || !keys.length) {\n    return obj;\n  }\n\n  return Object.keys(obj).filter(key => keys.indexOf(key) === -1).reduce((newProps, key) => {\n    newProps[key] = obj[key];\n\n    return newProps;\n  }, {});\n}\n","/** @module utils/Positioning/getTextWidth */\n\nlet cachedCanvas;\n\n/**\n * A utility function to measure the width (in px) of any text. It will require a canvas\n * and an element to use to determine the current fonts to apply since different fonts will\n * have different widths.\n *\n * This isn't fully accurate since some browsers handle the calculations a bit differently so\n * they are off by a 0-3px\n *\n * @param {String} text - The text to measure the width\n * @param {HTMLElement} el - The element to use to determine the current font for the text.\n * @param {HTMLElement=} canvas - An optional canvas to use for doing the calculations. If this\n *    is omitted, it will just use the locally created canvas to do the calculations.\n * @return {number} this will either return null if there is a problem calculating the width or\n *    the length (in px) of the text.\n */\nexport default function getTextWidth(text, el, canvas) {\n  if (!el) {\n    return null;\n  }\n\n  if (!canvas) {\n    if (!cachedCanvas) {\n      cachedCanvas = document.createElement('canvas');\n    }\n\n    canvas = cachedCanvas;\n  }\n\n  const context = canvas.getContext('2d');\n  if (!context) { // context doesn't exist in testing without complicated mocks\n    return null;\n  }\n\n  const styles = window.getComputedStyle(el);\n  let font = styles.font;\n  // Some browsers do not actually supply the font style since they are on an older version of CSSProperties,\n  // so the font string needs to be made manually.\n  if (!font) {\n    // font-style font-variant font-weight font-size/line-height font-family\n    const sizing = `${styles.fontSize} / ${styles.lineHeight} ${styles.fontFamily}`;\n    font = `${styles.fontStyle} ${styles.fontVariant} ${styles.fontWeight} ${sizing}`;\n  }\n\n  context.font = font;\n  return context.measureText(text).width;\n}\n","/** @module utils/themeColors */\nimport cn from 'classnames';\n\n/**\n * This is a utility function to apply the different text colors as a class name.\n *\n * @param {Object} options - The options to use to figure out which styles to apply.\n * @param {boolean?} options.text - Boolean if the base text color should attempt to be\n *    applied. This will only be applied if all the other states are not true.\n * @param {boolean?} options.disabled - Boolean if the text should be disabled.\n * @param {boolean?} options.error - Boolean if the error color should attempt to be applied.\n *    This will only be applied if the disabled state is false.\n * @param {boolean?} options.primary - Boolean if the primary color should be applied. This\n *    will only be applied if all the other states are false.\n * @param {boolean?} options.secondary - Boolean if the secondary color should be applied.\n *    This will only be applied if all the other states are false.\n * @param {boolean?} options.inherit - Boolean if the color should be inherited by a parent.\n *    This will only be applied if the error and disabled states are false.\n * @return {String} the class name\n */\nexport default function themeColors({\n  themeText = true,\n  text = false,\n  background = false,\n  disabled = false,\n  error = false,\n  hint = false,\n  primary = false,\n  secondary = false,\n  inherit = false,\n  ink = false,\n  card = false,\n  hover = false,\n} = {}, className) {\n  let colors = '';\n  if (themeText) {\n    if (disabled) {\n      colors = 'md-text--disabled';\n    } else if (error) {\n      colors = 'md-text--error';\n    } else if (inherit) {\n      colors = 'md-text--inherit';\n    } else {\n      colors = cn({\n        'md-text': text && !primary && !secondary && !hint,\n        'md-text--secondary': hint,\n        'md-text--theme-primary': !hint && primary,\n        'md-text--theme-secondary': !hint && secondary,\n        'md-ink--primary': ink && primary,\n        'md-ink--secondary': ink && secondary,\n      });\n    }\n  } else {\n    colors = cn({\n      'md-background': background && !primary && !secondary && !card,\n      'md-background--card': card,\n      'md-background--primary': primary,\n      'md-background--primary-hover': primary && hover,\n      'md-background--secondary': secondary,\n      'md-background--secondary-hover': secondary && hover,\n    });\n  }\n\n  return cn(colors, className);\n}\n","import cn from 'classnames';\n\n/**\n * A simple utility function to get the dynamic collapser styles.\n */\nexport default function getCollapserStyles({ flipped, suffix, suffixFlipped }, ...classNames) {\n  return cn('md-collapser', {\n    'md-collapser--flipped': flipped && (!suffixFlipped || !suffix),\n    [`md-collapser--${suffix}`]: suffix,\n    [`md-collapser--${suffix}-flipped`]: suffix && flipped && suffixFlipped,\n  }, ...classNames);\n}\n","/** @module utils/closest */\n\n/**\n * A _very_ primitive polyfill for the Element.closest function. If this is a browser that doesn't\n * support it (IE, Edge, etc), it will just keep searching the parent elements until the nodeName\n * matches the provided type.\n *\n * @param {Element} el - the html element to find a closest node type for\n * @param {String} type - the html element type to find.\n * @return {Element} the found element or null.\n */\nexport default function closest(el, type) {\n  if (typeof el.closest === 'function') {\n    return el.closest(type);\n  }\n\n  const nodeType = type.toUpperCase();\n  let node = el.parentElement;\n  while (node && node.parentElement) {\n    if (node.nodeName === nodeType) {\n      return node;\n    }\n\n    node = node.parentElement;\n  }\n\n  return null;\n}\n","/** @module utils/isFormPartRole */\n\n/**\n * A simple utility function to determine if an element has a role that should\n * be used as a form part. This is mostly used for changing the behavior of keyboard\n * events.\n *\n * A form part role is one of the following:\n * - checkbox\n * - radio\n * - listbox\n * - input\n *\n * @param {HTMLElement} el - the element to check.\n * @return {boolean} true if the element is considered an element part of a form.\n */\nexport default function isFormPartRole(el) {\n  if (!el) {\n    return false;\n  } else if (el.nodeName === 'INPUT') {\n    return true;\n  }\n\n  const role = el.getAttribute('role');\n  return role === 'checkbox' || role === 'radio' || role === 'listbox';\n}\n","/** @module utils/EventUtils/handleKeyboardAccessibility */\n\nimport { SPACE, ENTER } from '../../constants/keyCodes';\nimport closest from '../closest';\nimport isFormPartRole from '../isFormPartRole';\n\n/**\n * A utility function for adding keyboard accessibility to elements that are not a natively\n * clickable (div, span, etc). When the space or enter key is pressed while focusing the\n * element, different flows will happen.\n *\n * - space - The click event will be triggered and the default page scrolling behavior of the\n *      spacebar will be prevented\n * - enter - If the element has a form role ('checkbox' or 'radio'), the click event will not\n *      be triggered. Instead, it will find out if the element is inside a form. If it is, it\n *      will emulate the default behavior of attempting to submit the form. If the element does\n *      not have a form role, the click event will be triggered.\n *\n * @param {Event} e - the keydown event\n * @param {function} onClick - the on click event to be triggered if space or enter was pressed\n * @param {boolean=true} listenToEnter - boolean if the enter key should be used to trigger the\n *      the click event. Even if this is true, the click event will not be triggered if the role\n *      is for a form role.\n * @param {boolean=true} listenToSpace - boolean if the space key should be used to trigger the\n *      click event.\n * @return {Boolean} true if the enter or space keys were pressed while their listener is also active.\n */\nexport default function handleKeyboardAccessibility(e, onClick, listenToEnter = true, listenToSpace = true) {\n  const key = e.which || e.keyCode;\n  const space = listenToSpace && key === SPACE;\n  const enter = key === ENTER;\n\n  const { tagName } = e.target;\n  if (space && !tagName.match(/input|textarea|button/i)) { // it is valid to press space in text fields and buttons\n    // Stop page scrolling\n    e.preventDefault();\n  }\n\n  if (enter && isFormPartRole(e.target)) {\n    const form = closest(e.target, 'form');\n    const submit = form ? form.querySelector('*[type=\"submit\"]') : null;\n    if (submit) {\n      submit.click();\n    }\n\n    return true;\n  }\n\n  if ((enter && listenToEnter) || space) {\n    onClick(e);\n\n    return true;\n  }\n\n  return false;\n}\n","/** @module utils/StringUtils/getDisplayName */\n\n/**\n * Gets the display name for a composed component.\n *\n * @param {function|Object} ComposedComponent - The composed component to use\n * @param {String} hoc - The higher order component's name to use.\n * @return {String} the new name of the component.\n */\nexport default function getDisplayName(ComposedComponent, hoc) {\n  const name = `${ComposedComponent.displayName || ComposedComponent.name || 'Component'}`;\n\n  return `with${hoc}(${name})`;\n}\n","/** @module utils/Positioning/getPagePosition */\n\n/**\n * Gets the current page position.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY\n * @param {String} direction - The direction that should be retrieved. This\n *    should be either 'x' or 'y'.\n * @return {number} the position of the direction on the page.\n */\nexport default function getPagePosition(direction) {\n  const scroll = `scroll${direction === 'x' ? 'Left' : 'Top'}`;\n  if (typeof window.pageXOffset !== 'undefined') {\n    return window[`page${direction.toUpperCase()}Offset`];\n  } else if ((document.compatMode || '') === 'CSS1Compat') {\n    return document.documentElement[scroll];\n  } else {\n    return document.body[scroll];\n  }\n}\n","/** @module utils/Positioning/calcPageOffset */\nimport getPagePosition from './getPagePosition';\n\n/**\n * Calculates the page offset of an element. If the element\n * is false-ish, an empty object will be returned.\n *\n * This is really only used for calculating an ink position.\n *\n * @param {Node} el - An html node to find a page offset for.\n * @return {Object} an object with a left and top attribute for the page\n *    offset.\n */\nexport default function calcPageOffset(el) {\n  if (!el) {\n    return { left: null, right: null };\n  }\n\n  const rect = el.getBoundingClientRect();\n  return {\n    left: rect.left + getPagePosition('x'),\n    top: rect.top + getPagePosition('y'),\n  };\n}\n","/** @module utils/EventUtils/isValidClick */\nimport { LEFT_MOUSE } from '../../constants/keyCodes';\n\n/**\n * Checks if an event is a valid click event by ignoring\n * any clisk that are not the left mouse button and not\n * clicks that involve the shift key.\n *\n * @param {Object} e - the event to check\n * @return {Boolean} true if the event is valid.\n */\nexport default function isValidClick(e) {\n  return e.button === LEFT_MOUSE\n    && !e.shiftKey;\n}\n","// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\nlet supportsPassive;\ntry {\n  const opts = Object.defineProperty({}, 'passive', {\n    get() {\n      supportsPassive = true;\n    },\n  });\n  window.addEventListener('test', null, opts);\n} catch (e) {\n  supportsPassive = false;\n}\n\n/**\n * A helper function for manually setting touch events on elements with the passive\n * option (when it is supported).\n *\n * @param {boolean} add - Boolean if the event listener should be added or removed.\n * @param {HTMLElement} el - The element to add the listener to.\n * @param {String} type - the event type to set. This should be 'start', 'move', or 'end'\n * @param {function} callback - The event listener callback function.\n * @param {Object=} options - any additional options to apply.\n */\nexport function setTouchEvent(add, el, eventType, callback, options) {\n  return el[`${add ? 'add' : 'remove'}EventListener`](\n    `touch${eventType}`,\n    callback,\n    supportsPassive ? { passive: true, ...options } : false\n  );\n}\n\n/**\n * A helper function for manually adding touch events on elements with the passive\n * option (when it is supported).\n *\n * @param {HTMLElement} el - The element to add the listener to.\n * @param {String} type - the event type to set. This should be 'start', 'move', or 'end'\n * @param {function} callback - The event listener callback function.\n * @param {Object=} options - any additional options to apply.\n */\nexport function addTouchEvent(el, type, callback, options) {\n  return setTouchEvent(true, el, type, callback, options);\n}\n\n/**\n * A helper function for manually removing touch events on elements with the passive\n * option (when it is supported).\n *\n * @param {HTMLElement} el - The element to add the listener to.\n * @param {String} type - the event type to set. This should be 'start', 'move', or 'end'\n * @param {function} callback - The event listener callback function.\n * @param {Object=} options - any additional options to apply.\n */\nexport function removeTouchEvent(el, type, callback, options) {\n  return setTouchEvent(false, el, type, callback, options);\n}\n","/** @module utils/EventUtils/captureNextEvent */\n\n/**\n * This function will capture the next event and stop propagation during the\n * bubbling cycle of events. This is really only useful if you want to stop\n * the default behavior of chained events.\n *\n * @param {String} type - The event type to capture.\n * @param {Object|func=} target - Either the DOM node to target, a callback function\n *      to call once the event has been captured, or undefined. If this is undefined,\n *      the event will be captured on the window.\n * @param {func=} callback - An optional callback function to call once the event\n *      has been captured.\n */\nexport default function captureNextEvent(type, target, callback) {\n  const el = typeof target !== 'function' && target ? target : window;\n  const cb = typeof target === 'function' ? target : callback;\n\n  const capture = e => {\n    e.stopPropagation();\n    if (cb) {\n      cb(e);\n    }\n\n    el.removeEventListener(type, capture, true);\n  };\n\n  el.addEventListener(type, capture, true);\n}\n","/** @module utils/NumberUtils/calculateHypotenuse */\n\n/**\n * Calculates the hypotenuse using the x and y coordinates given.\n *\n * @param {number} a the x coordinate\n * @param {number} b the y coordinate\n * @return {number} the hypotenuse length for the given x and y coordinates.\n */\nexport default function calculateHypotenuse(a, b) {\n  return Math.sqrt((a * a) + (b * b));\n}\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","import React from 'react';\nimport FontIcon from '../FontIcons/FontIcon';\n\nexport default function getDeprecatedIcon(className, children, icon) {\n  if (className || children) {\n    return <FontIcon iconClassName={className}>{children}</FontIcon>;\n  }\n\n  return icon;\n}\n","/** @module utils/EventUtils/handleWindowClickListeners */\nlet mobileSafari;\n\n/**\n * Since mobile safari doesn't delegate click events to the window (it only does touch events),\n * this utility function will hack a fix to allow the delegation by updaging the body's cursor\n * to be a pointer.\n *\n * Hopefully this can be removed one day....\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile\n * @param {function} cb - the callback function to use for a window click event.\n * @param {boolean} enabled - boolean if the click event is enabled.\n */\nexport default function handleWindowClickListeners(cb, enabled = false) {\n  if (typeof mobileSafari === 'undefined' && typeof window !== 'undefined') {\n    const ua = window.navigator.userAgent;\n    const iOS = ua.match(/iP(ad|hone)/i);\n    const webkit = ua.match(/WebKit/i);\n    mobileSafari = iOS && webkit && !ua.match(/CriOS/i);\n\n    if (mobileSafari) {\n      document.body.style.cursor = 'pointer';\n    }\n  }\n\n  const listener = window[`${enabled ? 'add' : 'remove'}EventListener`];\n  listener('click', cb);\n}\n","/** @module utils/getSelectedText */\n\n/**\n * A utility function that gets the current selected text in the document. I think\n * that all the browsers I support have `window.getSelection`, but it falls back to\n * support others.\n *\n * @return {String} the current selection on the page\n */\nexport default function getSelectedText() {\n  if (typeof window.getSelection !== 'undefined') {\n    return window.getSelection().toString();\n  } else if (typeof document.selection !== 'undefined' && document.selection.type === 'Text') {\n    return document.selection.createRange().text;\n  }\n\n  return '';\n}\n","/** @module utils/Positoning/getSelectedTextPosition */\nimport getSelectedText from '../getSelectedText';\nimport getTextWidth from './getTextWidth';\n\nconst ZERO_WIDTH_CHARACTER = '\\u200b';\n\n/**\n * A utility function to attempt to get the current highlighted text position.\n *\n * When a context menu is opened, this function attempts to find the bounding client rect\n * for the highlighted text. However, if the text is in the text field, some weird stuff\n * happens and it is unable to get it correctly.\n */\nexport default function getSelectedTextPosition(e) {\n  let height;\n  const { target, clientX, clientY } = e;\n  const text = getSelectedText();\n  const width = Math.round(getTextWidth(text, target) || 0);\n  if (!text || target.classList.contains('md-text-field')) {\n    height = parseInt(window.getComputedStyle(target).fontSize, 10);\n    return {\n      width,\n      height,\n      left: clientX - width,\n      top: clientY,\n    };\n  }\n\n  // All browsers I am supporting have window.getSelection, but better safe than sorry\n  if (window.getSelection) {\n    const selection = window.getSelection();\n    if (selection.rangeCount) {\n      const range = selection.getRangeAt(0).cloneRange();\n      let rect = null;\n      if (range.getClientRects) {\n        const rects = range.getClientRects();\n        if (rects.length > 0) {\n          rect = rects[0];\n        }\n      }\n\n      if (!rect) {\n        const span = document.createElement('span');\n        span.appendChild(document.createTextNode(ZERO_WIDTH_CHARACTER));\n        range.insertNode(span);\n        rect = span.getBoundingClientRect();\n\n        const spanParent = span.parentNode;\n        spanParent.removeChild(span);\n        spanParent.normalize();\n      }\n\n      return rect;\n    }\n  }\n\n  return null;\n}\n","/** @module utils/Positioning/getScroll */\n\n/**\n * A utility function to just get an element's scroll x and y\n * values. This is really just needed because `window` uses\n * different attributes.\n *\n * @param {Object} el - The element to get a scroll value from.\n * @return {Object} an object containing the scrollX and scrollY of the element.\n */\nexport default function getScroll(el) {\n  if (typeof el.scrollX !== 'undefined' && typeof el.scrollY !== 'undefined') {\n    return { x: el.scrollX, y: el.scrollY };\n  } else if (typeof el.scrollLeft !== 'undefined' && typeof el.scrollTop !== 'undefined') {\n    return { x: el.scrollLeft, y: el.scrollTop };\n  }\n\n  return { x: 0, y: 0 };\n}\n","/** @module utils/Positioning/getScreenSize */\n\n/**\n * A utility function to get the height or width of the of the browser with\n * a fallback for older browsers.\n *\n * @param {String} position - the position to get the screen size for\n * @return {number} the screen size for the provided position.\n */\nexport default function getScreenSize(position) {\n  if (position !== 'Height' && position !== 'Width' && process.env.NODE_ENV !== 'production') {\n    throw new Error(\n      'The \\'getScreenSize\\' function requires either a position of \\'Height\\' or \\'Width\\' ' +\n      `but received \\`${position}\\``\n    );\n  }\n\n  return window[`inner${position}`] || document.documentElement[`client${position}`];\n}\n","/** @module utils/Positioning/viewport */\nimport getScreenSize from './getScreenSize';\n\n/**\n * Determines if an element is still in the viewport. If it is,\n * it will return a `true` boolean. If it is not, it will return\n * an object containing booleans for top, right, bottom, and left\n * where a `false` value will mean it is out of the viewport for that\n * position.\n *\n * @param {Object} el - The element to test.\n * @return {boolean|Object} the results.\n */\nexport default function viewport(el) {\n  if (!el) {\n    return {};\n  }\n\n  const rect = el.getBoundingClientRect();\n  const top = rect.top >= 0;\n  const right = rect.right <= getScreenSize('Width');\n  const bottom = rect.bottom <= getScreenSize('Height');\n  const left = rect.left >= 0;\n\n  return top && right && bottom && left || { top, right, bottom, left };\n}\n","/** @module utils/Positioning/isOutOfBounds */\n\nimport getScreenSize from './getScreenSize';\n\nfunction isOutHorizontally(fixedTo, child, threshold) {\n  const { left: fixedLeft, right: fixedRight } = fixedTo.getBoundingClientRect();\n  const { left: childLeft, right: childRight } = child.getBoundingClientRect();\n  const offset = child.offsetWidth * threshold;\n\n  const left = childLeft + offset;\n  const right = childRight - offset;\n\n  const screenEdge = childLeft === 0 || getScreenSize('Width') === childRight;\n  return fixedLeft > left || fixedRight < right || screenEdge;\n}\n\nfunction isOutVertically(fixedTo, child, toggle, threshold) {\n  const { top: fixedTop, bottom: fixedBottom } = fixedTo.getBoundingClientRect();\n  const { top: childTop, bottom: childBottom } = child.getBoundingClientRect();\n  const offset = toggle.offsetHeight * threshold;\n\n  const screenEdge = childTop === 0 || getScreenSize('Height') === childBottom;\n  return fixedTop > childTop + offset || fixedBottom < childTop - offset || screenEdge;\n}\n\n/**\n * Checks if the fixedTo object for the Layover component is considered\n * out of bounds relative to the container.\n *\n * @param {Object} fixedTo - The Layover's `fixedTo` prop.\n * @param {Object} child - The Layover's `children` prop as a DOM element.\n * @param {Object} toggle - The Layover's `toggle` prop as a DOM element.\n * @param {number} verticalThreshold - The vertical threshold multiplier to apply.\n * @param {number} horizontalThreshold - The horizontal threshold multiplier to apply.\n * @return {boolean} true if the Layover's `fixedTo` prop is considered out of bounds.\n */\nexport default function isOutOfBounds(fixedTo, child, toggle, verticalThreshold, horizontalThreshold) {\n  if (fixedTo === window) {\n    return false;\n  } else if (fixedTo.x || fixedTo.y) {\n    const { x, y } = fixedTo;\n    return (!!y && isOutVertically(y, child, toggle, verticalThreshold)) ||\n      (!!x && isOutHorizontally(x, child, horizontalThreshold));\n  }\n\n  return isOutVertically(fixedTo, child, toggle, verticalThreshold) ||\n    isOutHorizontally(fixedTo, child, horizontalThreshold);\n}\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map != 'undefined') {\r\n        return Map;\r\n    }\r\n\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return (function () {\r\n        function anonymous() {\r\n            this.__entries__ = [];\r\n        }\r\n\r\n        var prototypeAccessors = { size: {} };\r\n\r\n        /**\r\n         * @returns {boolean}\r\n         */\r\n        prototypeAccessors.size.get = function () {\r\n            return this.__entries__.length;\r\n        };\r\n\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        anonymous.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n\r\n            return entry && entry[1];\r\n        };\r\n\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            } else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.forEach = function (callback, ctx) {\r\n            if ( ctx === void 0 ) ctx = null;\r\n\r\n            for (var i = 0, list = this.__entries__; i < list.length; i += 1) {\r\n                var entry = list[i];\r\n\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n\r\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\r\n\r\n        return anonymous;\r\n    }());\r\n})();\r\n\r\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window != 'undefined' && typeof document != 'undefined' && window.document === document;\r\n\r\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        return requestAnimationFrame;\r\n    }\r\n\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\r\n\r\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nvar throttle = function (callback, delay) {\r\n    var leadingCall = false,\r\n        trailingCall = false,\r\n        lastCallTime = 0;\r\n\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n\r\n            callback();\r\n        }\r\n\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        } else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n\r\n        lastCallTime = timeStamp;\r\n    }\r\n\r\n    return proxy;\r\n};\r\n\r\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n\r\n// Detect whether running in IE 11 (facepalm).\r\nvar isIE11 = typeof navigator != 'undefined' && /Trident\\/.*rv:11/.test(navigator.userAgent);\r\n\r\n// MutationObserver should not be used if running in Internet Explorer 11 as it's\r\n// implementation is unreliable. Example: https://jsfiddle.net/x2r3jpuz/2/\r\n//\r\n// It's a real bummer that there is no other way to check for this issue but to\r\n// use the UA information.\r\nvar mutationObserverSupported = typeof MutationObserver != 'undefined' && !isIE11;\r\n\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = function() {\r\n    /**\r\n     * Indicates whether DOM listeners have been added.\r\n     *\r\n     * @private {boolean}\r\n     */\r\n    this.connected_ = false;\r\n\r\n    /**\r\n     * Tells that controller has subscribed for Mutation Events.\r\n     *\r\n     * @private {boolean}\r\n     */\r\n    this.mutationEventsAdded_ = false;\r\n\r\n    /**\r\n     * Keeps reference to the instance of MutationObserver.\r\n     *\r\n     * @private {MutationObserver}\r\n     */\r\n    this.mutationsObserver_ = null;\r\n\r\n    /**\r\n     * A list of connected observers.\r\n     *\r\n     * @private {Array<ResizeObserverSPI>}\r\n     */\r\n    this.observers_ = [];\r\n\r\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n};\r\n\r\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.addObserver = function (observer) {\r\n    if (!~this.observers_.indexOf(observer)) {\r\n        this.observers_.push(observer);\r\n    }\r\n\r\n    // Add listeners if they haven't been added yet.\r\n    if (!this.connected_) {\r\n        this.connect_();\r\n    }\r\n};\r\n\r\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.removeObserver = function (observer) {\r\n    var observers = this.observers_;\r\n    var index = observers.indexOf(observer);\r\n\r\n    // Remove observer if it's present in registry.\r\n    if (~index) {\r\n        observers.splice(index, 1);\r\n    }\r\n\r\n    // Remove listeners if controller has no connected observers.\r\n    if (!observers.length && this.connected_) {\r\n        this.disconnect_();\r\n    }\r\n};\r\n\r\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.refresh = function () {\r\n    var changesDetected = this.updateObservers_();\r\n\r\n    // Continue running updates if changes have been detected as there might\r\n    // be future ones caused by CSS transitions.\r\n    if (changesDetected) {\r\n        this.refresh();\r\n    }\r\n};\r\n\r\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\r\nResizeObserverController.prototype.updateObservers_ = function () {\r\n    // Collect observers that have active observations.\r\n    var activeObservers = this.observers_.filter(function (observer) {\r\n        return observer.gatherActive(), observer.hasActive();\r\n    });\r\n\r\n    // Deliver notifications in a separate cycle in order to avoid any\r\n    // collisions between observers, e.g. when multiple instances of\r\n    // ResizeObserver are tracking the same element and the callback of one\r\n    // of them changes content dimensions of the observed target. Sometimes\r\n    // this may result in notifications being blocked for the rest of observers.\r\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n\r\n    return activeObservers.length > 0;\r\n};\r\n\r\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.connect_ = function () {\r\n    // Do nothing if running in a non-browser environment or if listeners\r\n    // have been already added.\r\n    if (!isBrowser || this.connected_) {\r\n        return;\r\n    }\r\n\r\n    // Subscription to the \"Transitionend\" event is used as a workaround for\r\n    // delayed transitions. This way it's possible to capture at least the\r\n    // final state of an element.\r\n    document.addEventListener('transitionend', this.onTransitionEnd_);\r\n\r\n    window.addEventListener('resize', this.refresh);\r\n\r\n    if (mutationObserverSupported) {\r\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n\r\n        this.mutationsObserver_.observe(document, {\r\n            attributes: true,\r\n            childList: true,\r\n            characterData: true,\r\n            subtree: true\r\n        });\r\n    } else {\r\n        document.addEventListener('DOMSubtreeModified', this.refresh);\r\n\r\n        this.mutationEventsAdded_ = true;\r\n    }\r\n\r\n    this.connected_ = true;\r\n};\r\n\r\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.disconnect_ = function () {\r\n    // Do nothing if running in a non-browser environment or if listeners\r\n    // have been already removed.\r\n    if (!isBrowser || !this.connected_) {\r\n        return;\r\n    }\r\n\r\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n    window.removeEventListener('resize', this.refresh);\r\n\r\n    if (this.mutationsObserver_) {\r\n        this.mutationsObserver_.disconnect();\r\n    }\r\n\r\n    if (this.mutationEventsAdded_) {\r\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n    }\r\n\r\n    this.mutationsObserver_ = null;\r\n    this.mutationEventsAdded_ = false;\r\n    this.connected_ = false;\r\n};\r\n\r\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\r\n        var propertyName = ref.propertyName;\r\n\r\n    // Detect whether transition may affect dimensions of an element.\r\n    var isReflowProperty = transitionKeys.some(function (key) {\r\n        return !!~propertyName.indexOf(key);\r\n    });\r\n\r\n    if (isReflowProperty) {\r\n        this.refresh();\r\n    }\r\n};\r\n\r\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\r\nResizeObserverController.getInstance = function () {\r\n    if (!this.instance_) {\r\n        this.instance_ = new ResizeObserverController();\r\n    }\r\n\r\n    return this.instance_;\r\n};\r\n\r\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\r\nResizeObserverController.instance_ = null;\r\n\r\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\r\n        var key = list[i];\r\n\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n\r\n    return target;\r\n});\r\n\r\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = Array.prototype.slice.call(arguments, 1);\r\n\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n\r\n    for (var i = 0, list = positions; i < list.length; i += 1) {\r\n        var position = list[i];\r\n\r\n        var value = styles['padding-' + position];\r\n\r\n        paddings[position] = toFloat(value);\r\n    }\r\n\r\n    return paddings;\r\n}\r\n\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth;\r\n    var clientHeight = target.clientHeight;\r\n\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n\r\n    var styles = getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width),\r\n        height = toFloat(styles.height);\r\n\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement != 'undefined') {\r\n        return function (target) { return target instanceof SVGGraphicsElement; };\r\n    }\r\n\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return target instanceof SVGElement && typeof target.getBBox === 'function'; };\r\n})();\r\n\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === document.documentElement;\r\n}\r\n\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n\r\n    return getHTMLElementContentRect(target);\r\n}\r\n\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(ref) {\r\n    var x = ref.x;\r\n    var y = ref.y;\r\n    var width = ref.width;\r\n    var height = ref.height;\r\n\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly != 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n\r\n    return rect;\r\n}\r\n\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\r\n\r\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = function(target) {\r\n    /**\r\n     * Broadcasted width of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\r\n    this.broadcastWidth = 0;\r\n\r\n    /**\r\n     * Broadcasted height of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\r\n    this.broadcastHeight = 0;\r\n\r\n    /**\r\n     * Reference to the last observed content rectangle.\r\n     *\r\n     * @private {DOMRectInit}\r\n     */\r\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n\r\n    /**\r\n     * Reference to the observed element.\r\n     *\r\n     * @type {Element}\r\n     */\r\n    this.target = target;\r\n};\r\n\r\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\r\nResizeObservation.prototype.isActive = function () {\r\n    var rect = getContentRect(this.target);\r\n\r\n    this.contentRect_ = rect;\r\n\r\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\r\n};\r\n\r\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\r\nResizeObservation.prototype.broadcastRect = function () {\r\n    var rect = this.contentRect_;\r\n\r\n    this.broadcastWidth = rect.width;\r\n    this.broadcastHeight = rect.height;\r\n\r\n    return rect;\r\n};\r\n\r\nvar ResizeObserverEntry = function(target, rectInit) {\r\n    var contentRect = createReadOnlyRect(rectInit);\r\n\r\n    // According to the specification following properties are not writable\r\n    // and are also not enumerable in the native implementation.\r\n    //\r\n    // Property accessors are not being used as they'd require to define a\r\n    // private WeakMap storage which may cause memory leaks in browsers that\r\n    // don't support this type of collections.\r\n    defineConfigurable(this, { target: target, contentRect: contentRect });\r\n};\r\n\r\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\r\n    if (typeof callback !== 'function') {\r\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n    }\r\n\r\n    /**\r\n     * Collection of resize observations that have detected changes in dimensions\r\n     * of elements.\r\n     *\r\n     * @private {Array<ResizeObservation>}\r\n     */\r\n    this.activeObservations_ = [];\r\n\r\n    /**\r\n     * Registry of the ResizeObservation instances.\r\n     *\r\n     * @private {Map<Element, ResizeObservation>}\r\n     */\r\n    this.observations_ = new MapShim();\r\n\r\n    /**\r\n     * Reference to the callback function.\r\n     *\r\n     * @private {ResizeObserverCallback}\r\n     */\r\n    this.callback_ = callback;\r\n\r\n    /**\r\n     * Reference to the associated ResizeObserverController.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    this.controller_ = controller;\r\n\r\n    /**\r\n     * Public ResizeObserver instance which will be passed to the callback\r\n     * function and used as a value of it's \"this\" binding.\r\n     *\r\n     * @private {ResizeObserver}\r\n     */\r\n    this.callbackCtx_ = callbackCtx;\r\n};\r\n\r\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.observe = function (target) {\r\n    if (!arguments.length) {\r\n        throw new TypeError('1 argument required, but only 0 present.');\r\n    }\r\n\r\n    // Do nothing if current environment doesn't have the Element interface.\r\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n        return;\r\n    }\r\n\r\n    if (!(target instanceof Element)) {\r\n        throw new TypeError('parameter 1 is not of type \"Element\".');\r\n    }\r\n\r\n    var observations = this.observations_;\r\n\r\n    // Do nothing if element is already being observed.\r\n    if (observations.has(target)) {\r\n        return;\r\n    }\r\n\r\n    observations.set(target, new ResizeObservation(target));\r\n\r\n    this.controller_.addObserver(this);\r\n\r\n    // Force the update of observations.\r\n    this.controller_.refresh();\r\n};\r\n\r\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.unobserve = function (target) {\r\n    if (!arguments.length) {\r\n        throw new TypeError('1 argument required, but only 0 present.');\r\n    }\r\n\r\n    // Do nothing if current environment doesn't have the Element interface.\r\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n        return;\r\n    }\r\n\r\n    if (!(target instanceof Element)) {\r\n        throw new TypeError('parameter 1 is not of type \"Element\".');\r\n    }\r\n\r\n    var observations = this.observations_;\r\n\r\n    // Do nothing if element is not being observed.\r\n    if (!observations.has(target)) {\r\n        return;\r\n    }\r\n\r\n    observations.delete(target);\r\n\r\n    if (!observations.size) {\r\n        this.controller_.removeObserver(this);\r\n    }\r\n};\r\n\r\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.disconnect = function () {\r\n    this.clearActive();\r\n    this.observations_.clear();\r\n    this.controller_.removeObserver(this);\r\n};\r\n\r\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.gatherActive = function () {\r\n        var this$1 = this;\r\n\r\n    this.clearActive();\r\n\r\n    this.observations_.forEach(function (observation) {\r\n        if (observation.isActive()) {\r\n            this$1.activeObservations_.push(observation);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.broadcastActive = function () {\r\n    // Do nothing if observer doesn't have active observations.\r\n    if (!this.hasActive()) {\r\n        return;\r\n    }\r\n\r\n    var ctx = this.callbackCtx_;\r\n\r\n    // Create ResizeObserverEntry instance for every active observation.\r\n    var entries = this.activeObservations_.map(function (observation) {\r\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n    });\r\n\r\n    this.callback_.call(ctx, entries, ctx);\r\n    this.clearActive();\r\n};\r\n\r\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.clearActive = function () {\r\n    this.activeObservations_.splice(0);\r\n};\r\n\r\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\r\nResizeObserverSPI.prototype.hasActive = function () {\r\n    return this.activeObservations_.length > 0;\r\n};\r\n\r\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap != 'undefined' ? new WeakMap() : new MapShim();\r\n\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver$1 = function(callback) {\r\n    if (!(this instanceof ResizeObserver$1)) {\r\n        throw new TypeError('Cannot call a class as a function');\r\n    }\r\n\r\n    if (!arguments.length) {\r\n        throw new TypeError('1 argument required, but only 0 present.');\r\n    }\r\n\r\n    var controller = ResizeObserverController.getInstance();\r\n    var observer = new ResizeObserverSPI(callback, controller, this);\r\n\r\n    observers.set(this, observer);\r\n};\r\n\r\n// Expose public methods of ResizeObserver.\r\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\r\n    ResizeObserver$1.prototype[method] = function () {\r\n        return (ref = observers.get(this))[method].apply(ref, arguments);\r\n        var ref;\r\n    };\r\n});\r\n\r\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof ResizeObserver != 'undefined') {\r\n        // eslint-disable-next-line no-undef\r\n        return ResizeObserver;\r\n    }\r\n\r\n    return ResizeObserver$1;\r\n})();\r\n\r\nexport default index;\r\n","/** @module utils/isValied */\n\n/**\n * A really simple utility function to check if an input's value is considered \"valued\".\n *\n * @param {string|number} v - the value to check\n * @return {boolean} true if the value is a number or a non-empty string.\n */\nexport default function isValued(v) {\n  return v === 0 || !!v;\n}\n","/** @module utils/StringUtils/addSuffix */\n\n/**\n * Optionally adds a suffix to a string if it does\n * not already contain that string.\n *\n * @param {String} str - The string to modify\n * @param {String} suffix - The suffix to add\n *\n * @return {String} the string with a suffix\n */\nexport default function addSuffix(str, suffix) {\n  if (!str || typeof str !== 'string') {\n    return str;\n  }\n\n  return str.indexOf(suffix) === -1\n    ? `${str.trim()} ${suffix}`\n    : str;\n}\n","/** @module utils/NumberUtils/isBetween */\n\n/**\n * Checks if a number is between a min and maximum (inclusive)\n *\n * @param {Number} num the number to check\n * @param {Number} min the minimum\n * @param {Number} max the maximum\n * @return {Boolean} true if the number is between the min and max (inclusive)\n */\nexport default function isBetween(num, min, max) {\n  return num >= min && num <= max;\n}\n","import cn from 'classnames';\nimport themeColors from '../utils/themeColors';\n\n/**\n * Since it can be helpful to apply button styles on other components, this is a utlity function\n * to apply those styles based on props.\n */\nexport default function getBtnStyles({\n  flat,\n  raised,\n  icon,\n  floating,\n  disabled,\n  primary,\n  secondary,\n  hover,\n  swapTheming,\n  pressed,\n  mini,\n  fixed,\n  fixedPosition,\n}, ...classNames) {\n  const flatStyles = flat || icon;\n  const raisedStyles = raised || floating;\n  const textTheming = (flatStyles && !swapTheming) || (raisedStyles && swapTheming);\n  const backgroundTheming = ((!disabled && raisedStyles && !swapTheming)\n    || (flatStyles && swapTheming))\n    && (primary || secondary);\n\n  return cn('md-btn', {\n    'md-btn--flat': flat || (disabled && raised),\n    'md-btn--raised': !disabled && raised,\n    'md-btn--icon': icon || floating,\n    'md-btn--floating': floating,\n    'md-btn--text': flat || raised,\n    'md-btn--hover': !disabled && hover,\n    'md-btn--raised-disabled': disabled && raised,\n    'md-btn--raised-pressed': !disabled && raisedStyles && pressed,\n    'md-btn--fixed': fixed,\n    [`md-btn--fixed-${fixedPosition}`]: floating && fixed,\n    'md-btn--floating-mini': floating && mini,\n    'md-btn--color-primary-active': !disabled && primary && hover && textTheming,\n    'md-btn--color-secondary-active': !disabled && secondary && hover && textTheming,\n    'md-pointer--hover': !disabled,\n    'md-paper md-paper--2': !disabled && floating,\n    'md-paper--4': !disabled && floating && pressed,\n  }, themeColors({\n    text: !icon && !floating && !backgroundTheming,\n    themeText: !backgroundTheming,\n    disabled,\n    primary,\n    secondary,\n    hover: true,\n    ink: true,\n  }), ...classNames);\n}\n","/** @module utils/StringUtils/capitlizeFirst */\n\n/**\n * Capitalizes the first letter of a string. If the string is falsish, it will be\n * returned as is. If the string is only one letter long, it will be capitalized;\n *\n * @param {String} str - The string to capitalize.\n * @return {String} the updated string or false-ish self.\n */\nexport default function capitalizeFirst(str) {\n  if (!str) {\n    return str;\n  } else if (str.length === 1) {\n    return str.toUpperCase();\n  }\n\n  return `${str.charAt(0).toUpperCase()}${str.substring(1, str.length)}`;\n}\n","/**\n * Attempts fo find the base table component from an element in the table.\n * This will either be the wrapper for responsive data tables, or the table element.\n *\n * @param {Object} el - The element to traverse from\n * @param {Object} the table or null.\n */\nexport default function findTable(el) {\n  let table;\n  let node = el;\n  while (node && node.parentNode) {\n    if (node.classList) {\n      if (node.classList.contains('md-data-table')) {\n        table = node;\n      } else if (node.classList.contains('md-data-table--responsive')) {\n        return node;\n      } else if (node.classList.contains('md-data-table__scroll-wrapper')) {\n        // fixed-wrapper then responsive\n        return node.parentNode.parentNode;\n      } else if (table) {\n        return table;\n      }\n    }\n\n    node = node.parentNode;\n  }\n\n  return null;\n}\n","/** @module utils/EventUtils/isValidFocusKeypress */\nimport { TAB } from '../../constants/keyCodes';\n\n/**\n * Checks if a keydown or keyup event's key was the TAB key or any additional valid\n * keys that were passed in.\n *\n * @param {Object} event - The event to check.\n * @param {Array.<number>=} additionalKeys - An optional array of additional key codes\n *    that are considered valid for a focus event.\n */\nexport default function isValidFocusKeypress(event, additionalKeys) {\n  const key = event.which || event.keyCode;\n  return key === TAB ||\n    (additionalKeys && additionalKeys.indexOf(key) !== -1);\n}\n","export default function findFixedTo(table) {\n  if (table && table.firstChild.firstChild.classList.contains('md-data-table__scroll-wrapper')) {\n    return {\n      x: table,\n      y: table.firstChild.firstChild,\n    };\n  }\n\n  return table;\n}\n","import React, { PureComponent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport getField from '../utils/getField';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport findTable from './findTable';\nimport findFixedTo from './findFixedTo';\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\n\n/**\n * This is a utility HOC to fix the components that use the `Menu` component behind the scenes. This will\n * correctly add the `id` and `fixedTo` props if they are omitted from the child component's props.\n *\n * If the id prop is omitted, it will default to the `${rowId}-${cellIndex}-${suffix}` and when the\n * `fixedTo` prop is omitted, it will automatically set it to the responsive table wrapper so that\n * it will stay in viewport as expected.\n *\n * This component also attempts to find the `cellIndex` prop if it is not correctly cloned into the\n * component.\n *\n * @param {function|Class} ComposedComponent - the component to compose with the tooltip functionality.\n * @param {String} suffix - the id suffix to apply.\n * @return {Class} the ComposedComponent with some fixes applied.\n */\nexport default function withTableFixes(ComposedComponent, suffix) {\n  return class TableFixesComponent extends PureComponent {\n    static Positions = ComposedComponent.Positions;\n    static HorizontalAnchors = ComposedComponent.HorizontalAnchors;\n    static VerticalAnchors = ComposedComponent.VerticalAnchors;\n    static displayName = getDisplayName(ComposedComponent, 'TableFixes');\n    static propTypes = {\n      id: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      cellIndex: PropTypes.number,\n      fixedTo: fixedToShape,\n    };\n\n    static contextTypes = {\n      rowId: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }\n\n    state = { cellIndex: undefined };\n\n    componentDidMount() {\n      const { cellIndex, fixedTo, id } = this.props;\n      const isIndexed = !!id || cellIndex === 0 || !!cellIndex;\n      const isFixed = fixedTo === null || !!fixedTo;\n      if (isIndexed && isFixed) {\n        // all is good\n        return;\n      }\n\n      const column = findDOMNode(this);\n      const table = findTable(column);\n      this._fixedTo = findFixedTo(table);\n\n      // If a developer creates their own component to wrap the component that uses a menu, the cellIndex prop\n      // might not be defined if they don't pass ...props\n      if (!isIndexed) {\n        const columns = [].slice.call(column.parentNode.querySelectorAll('th,td'));\n        this.setState({ cellIndex: columns.indexOf(column) }); // eslint-disable-line react/no-did-mount-set-state\n      } else if (this._fixedTo) {\n        // need to apply the _fixedTo for the select field\n        this.forceUpdate();\n      }\n    }\n\n    _fixedTo = null;\n\n    render() {\n      const { rowId } = this.context;\n      const {\n        /* eslint-disable no-unused-vars */\n        id: propid,\n        fixedTo: propFixedTo,\n        cellIndex: propCellIndex,\n        /* eslint-enable no-unused-vars */\n        ...props\n      } = this.props;\n\n      let { id } = this.props;\n      const fixedTo = this._fixedTo === null || propFixedTo ? propFixedTo : this._fixedTo;\n      const cellIndex = getField(this.props, this.state, 'cellIndex');\n      if (!id) {\n        id = `${rowId}-${cellIndex}-${suffix}`;\n      }\n\n      return <ComposedComponent {...props} id={id} fixedTo={fixedTo} />;\n    }\n  };\n}\n","/** @module utils/mapToListParts */\n\nimport { createElement, isValidElement } from 'react';\nimport Divider from '../Dividers/Divider';\nimport Subheader from '../Subheaders/Subheader';\nimport ListItem from '../Lists/ListItem';\n\n/**\n * A utility function to convert any \"item\" into a valid React element that is used\n * within the `List` component.\n *\n * Use cases:\n * - is a valid React element -> item returned unmodified\n * - `number` or `string` -> `ListItem` with the item as the `primaryText`\n * - an `object` with a key `divider: true` -> a `Divider` component with the remaining\n *    keys applied as props.\n * - an `object` with a key `subheader: true` -> a `Subheader` component with the remianing\n *    keys applied as props. This one technically requires the `primaryText` key to be defined.\n * - an `object` -> all keys passed into the `ListItem` component.\n *\n * Examples:\n * ```js\n * mapToListParts('Hello') == <ListItem primaryText=\"Hello\" />\n * mapToListParts(100)     == <ListItem primaryText={100} />\n * mapToListParts({ primaryText: 'Item' }) == <ListItem primaryText=\"Item\" />\n * mapToListParts({ divider: true }) == <Divider />\n * mapToListParts({ subheader: true, primaryText: 'Subheader' }) == <Subheader primaryText=\"Subheader\" />\n * ```\n *\n * @param {string|number|Object} item - the item to convert\n * @param {number|string=} index - the current index in the array (if used in an array)\n * @return {Object} a React element\n */\nexport default function mapToListParts(item, index) {\n  if (typeof item === 'string' || typeof item === 'number') {\n    return createElement(ListItem, { key: item, primaryText: item });\n  } else if (isValidElement(item)) {\n    return item;\n  }\n\n  const { divider, subheader, nestedItems, ...remainingProps } = item;\n  let component;\n  if (divider) {\n    component = Divider;\n  } else if (subheader) {\n    component = Subheader;\n  } else {\n    component = ListItem;\n  }\n\n  const props = { ...remainingProps, key: item.key || index };\n  if (nestedItems) {\n    props.nestedItems = nestedItems.map(mapToListParts);\n  }\n\n  return createElement(component, props);\n}\n","/** @module utils/toggleScroll */\nimport getPagePosition from './Positioning/getPagePosition';\n\n/**\n * A utility function for toggling the overflow visibility on an element. This will either target\n * the given `selector`, or the `body` tag to set a `className`.\n *\n * If the `visible` param is `undefined`, the className will be toggled.\n * If the `visible` param is `true`, the className will be added.\n * If the `visible` param is `false`, the className will be removed.\n *\n *\n * > This depends on the `classList` attribute on elements.\n *\n * @param {bool=} visible - An optional boolean to determine how the `className` will be applied.\n * @param {string|Object=} selector - An optional query selector string to use to select an element.\n * @param {string=} className - The className to apply. Defaults to 'md-overflow-hidden'\n */\nexport default function toggleScroll(scrollable, selector, className = 'md-no-scroll') {\n  const queryable = !selector || typeof selector === 'string';\n  let el;\n  if (queryable) {\n    el = selector ? document.querySelector(selector) : document.querySelector('html');\n  } else {\n    el = selector;\n  }\n\n  if (!el) {\n    return;\n  }\n\n  if (typeof scrollable === 'undefined') {\n    scrollable = !el.classList.contains(className);\n  }\n\n  if (scrollable && !el.classList.contains(className)) {\n    el.style.top = `-${queryable ? getPagePosition('y') : el.scrollTop}px`;\n    el.classList.add(className);\n  } else if (!scrollable && el.classList.contains(className)) {\n    const scrollTop = Math.abs(parseInt(el.style.top, 10));\n    el.classList.remove(className);\n    el.style.top = null;\n\n    if (!selector) {\n      window.scrollTo(0, scrollTop);\n    } else {\n      el.scrollTop = scrollTop;\n    }\n  }\n}\n","import DrawerTypes from './DrawerTypes';\nconst {\n  FULL_HEIGHT,\n  CLIPPED,\n  FLOATING,\n  PERSISTENT,\n  PERSISTENT_MINI,\n  TEMPORARY,\n  TEMPORARY_MINI,\n} = DrawerTypes;\n\nexport function isTemporary(type) {\n  return [TEMPORARY, TEMPORARY_MINI].indexOf(type) !== -1;\n}\n\nexport function isPersistent(type) {\n  return [PERSISTENT, PERSISTENT_MINI].indexOf(type) !== -1;\n}\n\nexport function isPermanent(type) {\n  return [FULL_HEIGHT, CLIPPED, FLOATING].indexOf(type) !== -1;\n}\n\nexport function isMini(type) {\n  return [PERSISTENT_MINI, TEMPORARY_MINI].indexOf(type) !== -1;\n}\n","/** @module utils/bem */\nimport cn from 'classnames';\n\n/**\n * A utility function to apply BEM class names to an element.\n *\n * ### Examples:\n * ```js\n * bem('class') === 'class'\n * bem('block', 'element') === 'block__element'\n * bem('block', 'element', 'sub-element') === 'block__element__sub-element'\n * bem('block', { 'mod-1': true, 'mod-2': false }) === 'block block--mod-1'\n * bem('block', 'element', { 'mod-1': false, 'mod-2': true }) === 'block__element block__element--mod-2'\n * bem('block', 'element', {\n *   'mod-1': false,\n *   'mod-2': true,\n * }, 'other', 'class-names') === 'block__element block__element--mod-2 other class-names'\n * ```\n *\n * @param {...String} blocks - 1 to many blocks to use. These names will be joined\n *    with underscores.\n * @param {Object=} modifiers - Any conditional modifiers to apply to the blocks. Each\n *    key in this object will be applied as a `--suffix` to the blocks ONLY when\n *    their value is true-ish.\n * @param {...String} others - Any additional class names to apply.\n * @return {String} the bem-formatted className string.\n */\nexport default function bem(...args) {\n  const base = [];\n  let modifiers = null;\n  let remaining = -1;\n  args.some((arg, i) => {\n    if (arg) {\n      const type = typeof arg;\n      if (type === 'number' || type === 'string') {\n        base.push(arg);\n      } else if (type === 'object') {\n        modifiers = arg;\n        remaining = i + 1;\n      }\n    }\n    return modifiers;\n  });\n\n  const element = base.join('__');\n  if (modifiers) {\n    modifiers = Object.keys(modifiers).reduce((obj, key) => {\n      obj[`${element}--${key}`] = modifiers[key];\n      return obj;\n    }, {});\n  }\n  const classes = remaining > -1 ? args.slice(remaining) : null;\n  return cn(element, modifiers, classes).trim();\n}\n","import React, { PureComponent, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport Button from '../Buttons/Button';\nimport Drawer from '../Drawers/Drawer';\nimport List from '../Lists/List';\nimport Toolbar from '../Toolbars/Toolbar';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\n\nconst { DrawerTypes } = Drawer;\nimport { isTemporary, isPersistent, isPermanent, isMini } from '../Drawers/isType';\nimport JumpToContentLink from './JumpToContentLink';\nimport CloseButton from './CloseButton';\nimport MiniListItem from './MiniListItem';\n\nfunction getNonMiniType(type) {\n  const { PERSISTENT_MINI: pMini, TEMPORARY_MINI: tMini } = DrawerTypes;\n  if ([pMini, tMini].indexOf(type) === -1) {\n    return type;\n  }\n\n  return pMini === type ? DrawerTypes.PERSISTENT : DrawerTypes.TEMPORARY;\n}\n\nfunction toMiniListItem(item, index) {\n  if (isValidElement(item)) {\n    return item;\n  }\n\n  const { divider, subheader, key, ...itemProps } = item;\n  if (divider || subheader) {\n    return null;\n  }\n\n  return <MiniListItem key={key || index} {...itemProps} />;\n}\n\n/**\n * The `NavigationDrawer` is used when you want a full layout configuration. It is a combination\n * of the `Toolbar` component and the `Drawer` component. Any props that are not specifically\n * listed below will be provided to the `Drawer` component. So if there are props on the `Drawer`\n * that are not listed here, they will be passed along.\n *\n * The main benefit of using this component is that it will manage adding respective offset\n * classes automatically for you to the content and the drawer. It will also manage using\n * a mini drawer type for you.\n */\nexport default class NavigationDrawer extends PureComponent {\n  static DrawerType = { // deprecated\n    /* eslint-disable no-console */\n    _warned: false,\n    _msg: 'Invalid use of `NavigationDrawer.DrawerType.{{TYPE}}`. The `NavigationDrawer.DrawerType` ' +\n      'has been deprecated and will be removed in the next major release. Please use the ' +\n      '`NavigationDrawer.DrawerTypes.{{TYPE}}` instead.',\n\n    get FULL_HEIGHT() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'FULL_HEIGHT'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.FULL_HEIGHT;\n    },\n\n    get CLIPPED() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'CLIPPED'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.CLIPPED;\n    },\n\n    get FLOATING() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'FLOATING'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.FLOATING;\n    },\n\n    get PERSISTENT() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'PERSISTENT'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.PERSISTENT;\n    },\n\n    get PERSISTENT_MINI() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'PERSISTENT_MINI'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.PERSISTENT_MINI;\n    },\n\n    get TEMPORARY() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'TEMPORARY'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.TEMPORARY;\n    },\n\n    get TEMPORARY_MINI() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'TEMPORARY_MINI'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.TEMPORARY_MINI;\n    },\n    /* eslint-enable no-console */\n  };\n\n  static DrawerTypes = DrawerTypes;\n\n  static propTypes = {\n    /**\n     * An optional id to provide to the entire div wrapper.\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the drawer. This is generally a good idea to provide if\n     * there are any `navItems` defined.\n     *\n     * @see {@link #navItemsId}\n     */\n    drawerId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the navItems list. If this is omitted and the `drawerId` prop is\n     * defined, it will be defaulted to `${drawerId}-nav-items`.\n     *\n     * @see {@link #drawerId}\n     * @see {@link Drawers#navItemsId}\n     */\n    navItemsId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the main toolbar.\n     */\n    toolbarId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An id to give the main content. A hidden link is created in the main drawer's header that links to the main\n     * content. This is used for keyboard only users to jump the navigation and jump straight to the content.\n     *\n     * If you provide your own `drawerHeader`, it is suggested to include the link yourself.\n     */\n    contentId: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional style to apply to the surrounding container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the surrounding container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the main toolbar.\n     */\n    toolbarStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the toolbar.\n     */\n    toolbarClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the main toolbar's title.\n     */\n    toolbarTitleStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the main toolbar's title.\n     */\n    toolbarTitleClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the drawer.\n     */\n    drawerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the drawer.\n     */\n    drawerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `List` surrounding the `navItems`.\n     */\n    navStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `List` surrounding the `navItems`.\n     */\n    navClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the content. This is the container surrounding whatever\n     * `children` are passed in.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the content. This is the container surrounding whatever\n     * `children` are passed in.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the overlay.\n     */\n    overlayStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the overlay.\n     */\n    overlayClassName: PropTypes.string,\n\n    /**\n     * The children to display in the main content.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the `drawerHeader` component should be built if the `drawerHeader` prop is not\n     * passed in.\n     */\n    includeDrawerHeader: PropTypes.bool,\n\n    /**\n     * An optional header to display in the drawer. This will normally be the `Toolbar` component\n     * or any other type of header. You can either use this prop with the `CloseButton` component\n     * when displaying a persistent drawer, or use the `drawerTitle` and `drawerHeaderChildren` prop\n     * to build a toolbar.\n     */\n    drawerHeader: PropTypes.node,\n\n    /**\n     * An optional title to use for the drawer's header toolbar. If the `drawerHeader` prop is defined,\n     * this is invalid.\n     */\n    drawerTitle: invalidIf(PropTypes.node, 'drawerHeader'),\n\n    /**\n     * An optional zDepth to apply to the drawer. If this is omitted, the value will be set as follows:\n     * - floating || inline = 1\n     * - temporary = 5\n     * - all others = 1\n     *\n     * @see {@link Papers/Paper#zDepth}\n     */\n    drawerZDepth: PropTypes.number,\n\n    /**\n     * Any additional children to display after the `drawerHeader` and `navItems` list in the drawer.\n     */\n    drawerChildren: PropTypes.node,\n\n    /**\n     * Any additional children to display in the drawer's header `Toolbar`. If the `drawerHeader` prop is defined,\n     * this is invalid.\n     */\n    drawerHeaderChildren: invalidIf(PropTypes.node, 'drawerHeader'),\n\n    /**\n     * The position for the drawer to be displayed.\n     */\n    position: PropTypes.oneOf(['left', 'right']).isRequired,\n\n    /**\n     * An optional list of elements or props to use to build a navigational list in the drawer.\n     * When the item is an object of props, it will build a `ListItem` component unless a key of\n     * `divider` or `subheader` is set to true. It will then create the Divider or Subheader component\n     * with any other remaining keys.\n     */\n    navItems: PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({\n        divider: PropTypes.bool,\n        subheader: PropTypes.bool,\n        primaryText: PropTypes.node,\n      }),\n    ])),\n\n    /**\n     * The drawer type to use for mobile devices.\n     */\n    mobileDrawerType: PropTypes.oneOf([\n      DrawerTypes.TEMPORARY,\n      DrawerTypes.TEMPORARY_MINI,\n    ]).isRequired,\n\n    /**\n     * The drawer type to use for tablets.\n     */\n    tabletDrawerType: PropTypes.oneOf([\n      DrawerTypes.FULL_HEIGHT,\n      DrawerTypes.CLIPPED,\n      DrawerTypes.FLOATING,\n      DrawerTypes.PERSISTENT,\n      DrawerTypes.PERSISTENT_MINI,\n      DrawerTypes.TEMPORARY,\n      DrawerTypes.TEMPORARY_MINI,\n    ]).isRequired,\n\n    /**\n     * The drawer type to use for desktop displays.\n     */\n    desktopDrawerType: PropTypes.oneOf([\n      DrawerTypes.FULL_HEIGHT,\n      DrawerTypes.CLIPPED,\n      DrawerTypes.FLOATING,\n      DrawerTypes.PERSISTENT,\n      DrawerTypes.PERSISTENT_MINI,\n      DrawerTypes.TEMPORARY,\n      DrawerTypes.TEMPORARY_MINI,\n    ]).isRequired,\n\n    /**\n     * An optional drawer type to enforce on all screen sizes. If the drawer type is not\n     * `temporary`, you are required to define the `onMediaTypeChange` prop to handle switching\n     * to temporary when the media matches a mobile device.\n     * ```\n     */\n    drawerType: PropTypes.oneOf([\n      DrawerTypes.FULL_HEIGHT,\n      DrawerTypes.CLIPPED,\n      DrawerTypes.FLOATING,\n      DrawerTypes.PERSISTENT,\n      DrawerTypes.PERSISTENT_MINI,\n      DrawerTypes.TEMPORARY,\n      DrawerTypes.TEMPORARY_MINI,\n    ]),\n\n    /**\n     * The default media match for the drawer. This will be what is displayed on first render.\n     * The component will adjust itself to the current media after it has mounted, but this\n     * is mostly used for server side rendering.\n     */\n    defaultMedia: PropTypes.oneOf(['mobile', 'tablet', 'desktop']),\n\n    /**\n     * The min width to use for a mobile media query. This prop should match the `md-mobile-min-width`\n     * variable.\n     *\n     * The media query for a mobile device will be:\n     *\n     * ```js\n     * window.matchMedia(\n     *   `screen and (min-width: ${mobileMinWidth}px) and (max-width: ${tabletMinWidth - 1}px`\n     * ).matches;\n     * ```\n     */\n    mobileMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * The min width to use for a tablet media query. This prop should match the `md-tablet-min-width`\n     * variable.\n     *\n     * The media query for a tablet device will be:\n     *\n     * ```js\n     * window.matchMedia(\n     *   `screen and (min-width: ${tabletMinWidth}px) and (max-width: ${desktopWidth - 1}px`\n     * ).matches;\n     * ```\n     */\n    tabletMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * The min width to use for a desktop media query. This prop should match the `md-desktop-min-width`\n     * variable.\n     *\n     * The media query for a tablet device will be:\n     *\n     * ```js\n     * window.matchMedia(`screen and (min-width: ${tabletMinWidth}px)`).matches;\n     * ```\n     */\n    desktopMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to call when the type of the drawer changes because of the\n     * new media queries. The callback will include the newly selected drawer type\n     * and an object containing the media matches of `mobile`, `tablet`, and `desktop`.\n     *\n     * ```js\n     * this.props.onMediaTypeChange(NavigationDrawer.DrawerTypes.TEMPORARY, {\n     *   mobile: true,\n     *   tablet: false,\n     *   desktop: false,\n     * });\n     * ```\n     */\n    onMediaTypeChange: PropTypes.func,\n\n    /**\n     * Boolean if the temporary or persistent drawers are visible by default.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * Boolean if the temporary or persistent drawers are visible. If this is defined,\n     * it will make the component controlled and require the `onVisibilityChange` prop\n     * to be defined.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the visibility of the drawer changes. The callback\n     * will include the new visibility.\n     *\n     * ```js\n     * onVisibilityChange(false);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * A boolean if the mini drawer's list should be generated from the `navItems` prop. When building\n     * the list, it will extract the `leftIcon` or `leftAvatar` from the `navItem` and then create a\n     * mini `ListItem` containing only that icon or image. Any other event listeners will also be applied.\n     *\n     *\n     * @see {@link #miniDrawerHeader}\n     * @see {@link #miniDrawerChildren}\n     */\n    extractMini: PropTypes.bool,\n\n    /**\n     * An optional header to display in the mini drawer. This will be displayed above the optional\n     * mini nav list that get generated if the `extractMini` prop is `true` and the `miniDrawerChildren`.\n     *\n     * @see {@link #extractMini}\n     */\n    miniDrawerHeader: PropTypes.node,\n\n    /**\n     * Any additional children to display in the mini drawer. This will be displayed after the `miniDrawerHeader`\n     * and the optional mini nav list that gets generated if the `extractMini` prop is `true`.\n     *\n     * @see {@link #extractMini}\n     */\n    miniDrawerChildren: PropTypes.node,\n\n    /**\n     * Boolean if the drawer should automatically close after a nav item has been clicked for `temporary` drawers.\n     */\n    autoclose: PropTypes.bool,\n\n    /**\n     * An optional title to display in the main toolbar. Either the `toolbarTitle` or the `toolbarTitleMenu`\n     * may be defined, not both.\n     */\n    toolbarTitle: invalidIf(PropTypes.node, 'toolbarTitleMenu'),\n\n    /**\n     * An optional select field menu to display in the main toolbar. Either the `toolbarTitle` or the `toolbarTitleMenu`\n     * may be defined, not both.\n     */\n    toolbarTitleMenu: PropTypes.element,\n\n    /**\n     * The theme style for the main toolbar.\n     *\n     * @see {@link Toolbars/Toolbar}\n     */\n    toolbarThemeType: PropTypes.oneOf(['default', 'colored', 'themed']).isRequired,\n\n    /**\n     * Boolean if the toolbar's nav, actions, and title should share the same color.\n     */\n    toolbarSingleColor: PropTypes.bool,\n\n    /**\n     * A boolean if the toolbar should be prominent.\n     */\n    toolbarProminent: PropTypes.bool,\n\n    /**\n     * A boolean if the toolbar's title should be prominent.\n     */\n    toolbarProminentTitle: PropTypes.bool,\n\n    /**\n     * A list of elements or a single element to display to the right of the\n     * toolbar's nav, title, and children.\n     *\n     * @see {@link Toolbars/Toolbar#actions}\n     */\n    toolbarActions: Toolbar.propTypes.actions,\n\n    /**\n     * Any children to display in the toolbar. This will be displayed between the optional title and\n     * actions.\n     */\n    toolbarChildren: Toolbar.propTypes.children,\n\n    /**\n     * An optional zDepth to apply to the toolbar.\n     *\n     * @see {@link Toolbars/Toolbar#zDepth}\n     */\n    toolbarZDepth: PropTypes.number,\n\n    /**\n     * The component to render the content in.\n     */\n    contentComponent: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * An optional footer display after the main content.\n     */\n    footer: PropTypes.node,\n\n    /**\n     * The icon to use to render the button that will toggle the visibility of the\n     * navigation drawer for `temporary` and `persistent` drawers. This is normally a\n     * hamburger menu.\n     */\n    temporaryIcon: PropTypes.element,\n\n    /**\n     * The icon to use to render the button that appears on a persistent drawer's open\n     * header. This is used to create the `CloseButton` for drawers. When a persistent\n     * drawer is closed, the `temporaryIcon` will be used to create a button to open the drawer.\n     *\n     * If the `drawerHeader` prop is defined, you will have to either include the `CloseButton`\n     * in your header manually, or create your own controlled button to close the drawer.\n     */\n    persistentIcon: PropTypes.element,\n\n    /**\n     * The transition name to use when the page's content changes. If you want to disable\n     * transitions, set both the `transitionEnterTimeout` and `transitionLeaveTimeout` props\n     * to a false-ish value. (`null`, `undefined`, or `0`).\n     */\n    transitionName: PropTypes.string.isRequired,\n\n    /**\n     * The transition enter timeout when the page's content changes. If you want to disable\n     * the enter transition, set this to a false-ish value (`null`, `undefined`, or `0`).\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * The transition leave timeout when the page's content changes. If you want to disable\n     * the leave transition, set this to a false-ish value (`null`, `undefined`, or `0`).\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * The transition duration for the drawer when sliding in and out of view.\n     */\n    drawerTransitionDuration: PropTypes.number.isRequired,\n\n    /**\n     * Any additional props to provide to the main content. This will be applied before any of the generated props,\n     * so this should not include `style`, `className`, or `component`.\n     */\n    contentProps: PropTypes.object,\n\n    /**\n     * The label to use for a keyboard accessibility link that jumps all the navigation and allows a user to focus\n     * the main content. This is created in the drawer's header.\n     */\n    jumpLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the drawer. The overlay that appears for temporary type drawers will still appear in the\n     * separate subtree.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM Node to render the drawer into. The default is to render as\n     * the first child in the `body`.\n     *\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n     * since the `Portal` component will not be used.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the drawer should be rendered as the last child instead of the first child\n     * in the `renderNode` or `body`.\n     *\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n     * since the `Portal` component will not be used.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * Boolean if the `drawerType` should remain constant across all media. This is really only valid\n     * if the `drawerType` is one of the temporary types.\n     */\n    constantDrawerType: PropTypes.bool,\n\n    menuIconChildren: deprecated(PropTypes.node, 'Use `temporaryIcon` instead'),\n    menuIconClassName: deprecated(PropTypes.string, 'Use `temporaryIcon` instead'),\n    closeIconChildren: deprecated(PropTypes.node, 'Use `persistentIcon` instead'),\n    closeIconClassName: deprecated(PropTypes.string, 'Use `persistentIcon` instead'),\n    temporaryIconChildren: deprecated(PropTypes.node, 'Use the `temporaryIcon` instead'),\n    temporaryIconClassName: deprecated(PropTypes.string, 'Use the `temporaryIcon` instead.'),\n    persistentIconChildren: deprecated(PropTypes.node, 'Use the `persistentIcon` instead'),\n    persistentIconClassName: deprecated(PropTypes.string, 'Use the `persistentIcon` prop instead'),\n    onDrawerChange: deprecated(PropTypes.func, 'Use `onVisibilityChange` or `onMediaTypeChange` instead'),\n    onVisibilityToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\n    contentTransitionName: deprecated(PropTypes.string, 'Use `transitionName` instead'),\n    contentTransitionEnterTimeout: deprecated(PropTypes.number, 'Use `transtionEnterTimeout` instead'),\n    contentTransitionLeaveTimeout: deprecated(PropTypes.number, 'Use `transtionLeaveTimeout` instead'),\n    initialDrawerType: deprecated(\n      PropTypes.oneOf(['mobile', 'tablet', 'desktop']),\n      'Use `defaultMedia` instead'\n    ),\n  };\n\n  static contextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  static childContextTypes = {\n    closeIcon: PropTypes.element,\n    onCloseClick: PropTypes.func,\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    label: PropTypes.node.isRequired,\n    renderNode: PropTypes.object,\n  }\n\n  static defaultProps = {\n    autoclose: Drawer.defaultProps.autoclose,\n    contentId: 'main-content',\n    // Defaults to false since it keeps the state of the drawerType in sync and makes the Drawer\n    // controlled. On initial mount without any defaultMedia updates, it would always be considered\n    // temporary\n    constantDrawerType: false,\n    jumpLabel: 'Jump to content',\n    extractMini: true,\n    position: Drawer.defaultProps.position,\n    defaultMedia: Drawer.defaultProps.defaultMedia,\n    mobileDrawerType: Drawer.defaultProps.mobileType,\n    tabletDrawerType: Drawer.defaultProps.tabletType,\n    desktopDrawerType: Drawer.defaultProps.desktopType,\n    mobileMinWidth: Drawer.defaultProps.mobileMinWidth,\n    tabletMinWidth: Drawer.defaultProps.tabletMinWidth,\n    desktopMinWidth: Drawer.defaultProps.desktopMinWidth,\n    includeDrawerHeader: true,\n    contentComponent: 'main',\n    temporaryIcon: <FontIcon>menu</FontIcon>,\n    toolbarThemeType: 'colored',\n    persistentIcon: <FontIcon>arrow_back</FontIcon>,\n    transitionName: 'md-cross-fade',\n    transitionEnterTimeout: 300,\n    drawerTransitionDuration: Drawer.defaultProps.transitionDuration,\n  };\n\n  /**\n   * Determines the current media and returns an object containing matches for `mobile`, `tablet`, `desktop`,\n   * and the current drawer type. This expects a `props` object of the drawer.\n   *\n   * If this is used server side, it will default to only matching mobile.\n   *\n   * @param {Object=} props - The current drawer's prop shape to extract the mobile, tablet, and desktop type/min\n   *    widths. This defaults to the drawer's default props.\n   * @return {Object} an object containing the media matches and the current type to use for the drawer.\n   */\n  static getCurrentMedia(props = NavigationDrawer.defaultProps) {\n    const {\n      mobileDrawerType: mobileType,\n      tabletDrawerType: tabletType,\n      desktopDrawerType: desktopType,\n      constantDrawerType: constantType,\n      ...others\n    } = props;\n\n    return Drawer.getCurrentMedia({ mobileType, tabletType, desktopType, constantType, ...others });\n  }\n\n  constructor(props) {\n    super(props);\n\n    const { defaultMedia, defaultVisible, initialDrawerType } = props;\n\n    this.state = {\n      mobile: initialDrawerType || defaultMedia === 'mobile',\n      tablet: initialDrawerType || defaultMedia === 'tablet',\n      desktop: initialDrawerType || defaultMedia === 'desktop',\n    };\n\n    if (typeof props.drawerType === 'undefined') {\n      this.state.drawerType = props[`${initialDrawerType || defaultMedia}DrawerType`];\n    }\n\n    const type = getField(props, this.state, 'drawerType');\n\n    if (typeof props.visible === 'undefined') {\n      // The logic for determining the visibility is handled by the created mini drawer\n      this.state.visible = isPermanent(type);\n      if (!this.state.visible && typeof defaultVisible !== 'undefined') {\n        this.state.visible = defaultVisible;\n      }\n    }\n  }\n\n  getChildContext() {\n    const {\n      persistentIcon,\n      contentId: id,\n      jumpLabel: label,\n\n      // deprecated\n      persistentIconChildren,\n      persistentIconClassName,\n      closeIconChildren,\n      closeIconClassName,\n    } = this.props;\n\n    return {\n      id,\n      label,\n      closeIcon: getDeprecatedIcon(\n        closeIconClassName || persistentIconClassName,\n        closeIconChildren || persistentIconChildren,\n        persistentIcon,\n      ),\n      onCloseClick: this._toggleVisibility,\n      renderNode: this.context.renderNode,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const visible = getField(this.props, this.state, 'visible');\n    const nVisible = getField(nextProps, this.state, 'visible');\n    if (visible !== nVisible) {\n      this._animate(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  _animate = (props = this.props, state = this.state) => {\n    if (isTemporary(getField(props, state, 'drawerType'))) {\n      return;\n    }\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this.setState({ contentActive: false });\n    }, props.drawerTransitionDuration);\n\n    this.setState({ contentActive: true });\n  };\n\n  _toggleVisibility = (e) => {\n    const { onVisibilityToggle, onVisibilityChange, onDrawerChange } = this.props;\n    const visible = !getField(this.props, this.state, 'visible');\n    const callback = onVisibilityChange || onVisibilityToggle || onDrawerChange;\n    if (callback) {\n      callback(visible, e);\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n      this._animate(this.props);\n    }\n  };\n\n  _handleVisibility = (visible) => {\n    const { onVisibilityToggle, onVisibilityChange, onDrawerChange } = this.props;\n    const callback = onVisibilityChange || onVisibilityToggle || onDrawerChange;\n    if (callback) {\n      callback(visible);\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n      this._animate(this.props);\n    }\n  };\n\n  _handleTypeChange = (drawerType, mediaState) => {\n    const { onMediaTypeChange } = this.props;\n    let state = mediaState;\n    if (onMediaTypeChange) {\n      onMediaTypeChange(drawerType, mediaState);\n    }\n\n    if (typeof this.props.drawerType === 'undefined') {\n      state = { ...mediaState, drawerType };\n    }\n\n\n    this.setState(state);\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      toolbarStyle,\n      toolbarClassName,\n      drawerStyle,\n      drawerClassName,\n      contentStyle,\n      contentClassName,\n      contentComponent: Content,\n      navItems,\n      children,\n      drawerId,\n      drawerTitle,\n      drawerZDepth,\n      drawerChildren,\n      drawerHeaderChildren,\n      drawerTransitionDuration,\n      toolbarId,\n      toolbarTitle,\n      toolbarTitleMenu,\n      toolbarTitleStyle,\n      toolbarTitleClassName,\n      toolbarActions,\n      toolbarProminent,\n      toolbarProminentTitle,\n      toolbarThemeType,\n      toolbarSingleColor,\n      toolbarChildren,\n      toolbarZDepth,\n      mobileDrawerType: mobileType,\n      tabletDrawerType: tabletType,\n      desktopDrawerType: desktopType,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      extractMini,\n      miniDrawerHeader,\n      miniDrawerChildren,\n      footer,\n      includeDrawerHeader,\n      contentId,\n      contentProps,\n      constantDrawerType,\n      temporaryIcon,\n\n      // deprecated\n      temporaryIconChildren,\n      temporaryIconClassName,\n      menuIconChildren,\n      menuIconClassName,\n      /* eslint-disable no-unused-vars */\n      drawerType: propDrawerType,\n      drawerHeader: propDrawerHeader,\n      renderNode: propRenderNode,\n      jumpLabel,\n      persistentIcon,\n\n      // deprecated\n      onDrawerChange,\n      closeIconChildren,\n      closeIconClassName,\n      persistentIconChildren,\n      persistentIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { drawerHeader } = this.props;\n    const { desktop, tablet, contentActive } = this.state;\n\n    const drawerType = getField(this.props, this.state, 'drawerType');\n    const visible = getField(this.props, this.state, 'visible');\n    const renderNode = getField(this.props, this.context, 'renderNode');\n    const mini = isMini(drawerType);\n    const temporary = isTemporary(drawerType);\n    const persistent = isPersistent(drawerType);\n    const clipped = drawerType === DrawerTypes.CLIPPED;\n    const floating = drawerType === DrawerTypes.FLOATING;\n\n    const offset = (desktop || tablet ? !temporary && visible : visible);\n    const toolbarRelative = cn({\n      'md-toolbar-relative': !toolbarProminent && !toolbarProminentTitle,\n      'md-toolbar-relative--prominent': toolbarProminent || toolbarProminentTitle,\n    });\n\n    let nav;\n    if (temporary || persistent) {\n      nav = (\n        <Button\n          key=\"nav\"\n          onClick={this._toggleVisibility}\n          disabled={persistent && visible}\n          icon\n          iconEl={getDeprecatedIcon(\n            menuIconClassName || temporaryIconClassName,\n            menuIconChildren || temporaryIconChildren,\n            temporaryIcon\n          )}\n        />\n      );\n    }\n\n    let closeButton;\n    if (persistent) {\n      closeButton = <CloseButton />;\n    }\n\n    if (!drawerHeader && includeDrawerHeader) {\n      drawerHeader = (\n        <Toolbar\n          key=\"drawer-header\"\n          title={drawerTitle}\n          actions={visible && nav ? closeButton : null}\n          className={cn('md-divider-border md-divider-border--bottom', {\n            [toolbarRelative]: clipped || floating,\n          })}\n        >\n          {drawerHeaderChildren}\n          <JumpToContentLink />\n        </Toolbar>\n      );\n    }\n    let miniDrawer;\n    if (mini) {\n      let miniList;\n      if (extractMini) {\n        miniList = navItems.map(toMiniListItem);\n        miniList = <List key=\"mini-nav-items\" className={toolbarRelative}>{miniList}</List>;\n      }\n\n      miniDrawer = (\n        <Drawer key=\"mini-drawer\" type={drawerType} renderNode={renderNode} aria-hidden={visible}>\n          {miniDrawerHeader}\n          {miniList}\n          {miniDrawerChildren}\n        </Drawer>\n      );\n    }\n\n    const desktopOffset = !clipped && !floating && offset;\n\n    return (\n      <div style={style} className={className} id={id}>\n        <Toolbar\n          id={toolbarId}\n          colored={toolbarThemeType === 'colored'}\n          themed={toolbarThemeType === 'themed'}\n          singleColor={toolbarSingleColor}\n          style={toolbarStyle}\n          className={cn({\n            'md-toolbar--over-drawer': clipped || floating || (mini && !visible),\n          }, toolbarClassName)}\n          title={toolbarTitle}\n          titleMenu={toolbarTitleMenu}\n          prominent={toolbarProminent}\n          prominentTitle={toolbarProminentTitle}\n          titleStyle={toolbarTitleStyle}\n          titleClassName={cn({\n            'md-title--drawer-active': contentActive,\n            'md-transition--deceleration': offset && visible,\n            'md-transition--acceleration': offset && !visible,\n            'md-title--permanent-offset': desktopOffset && isPermanent(drawerType),\n            'md-title--persistent-offset': desktopOffset && persistent,\n          }, toolbarTitleClassName)}\n          nav={nav}\n          actions={toolbarActions}\n          fixed\n          zDepth={toolbarZDepth}\n        >\n          {toolbarChildren}\n        </Toolbar>\n        {miniDrawer}\n        <Drawer\n          {...props}\n          id={drawerId}\n          constantType={constantDrawerType}\n          transitionDuration={drawerTransitionDuration}\n          header={drawerHeader}\n          style={drawerStyle}\n          className={drawerClassName}\n          navItems={navItems}\n          renderNode={renderNode}\n          mobileType={mobileType}\n          tabletType={tabletType}\n          desktopType={desktopType}\n          type={getNonMiniType(drawerType)}\n          visible={visible}\n          zDepth={drawerZDepth}\n          onVisibilityChange={this._handleVisibility}\n          onMediaTypeChange={this._handleTypeChange}\n        >\n          {drawerChildren}\n        </Drawer>\n        <CSSTransitionGroup\n          {...contentProps}\n          id={contentId}\n          component={Content}\n          transitionName={transitionName}\n          transitionEnter={!!transitionEnterTimeout}\n          transitionEnterTimeout={transitionEnterTimeout}\n          transitionLeave={!!transitionLeaveTimeout}\n          transitionLeaveTimeout={transitionLeaveTimeout}\n          tabIndex={-1}\n          style={contentStyle}\n          className={cn('md-navigation-drawer-content', {\n            'md-navigation-drawer-content--active': contentActive,\n            'md-navigation-drawer-content--inactive': !visible,\n            'md-navigation-drawer-content--prominent-offset': toolbarProminent || toolbarProminentTitle,\n            'md-transition--deceleration': visible,\n            'md-transition--acceleration': !visible,\n            'md-drawer-relative': offset,\n            'md-drawer-relative--mini': mini && (!visible || temporary),\n          }, toolbarRelative, contentClassName)}\n        >\n          {children}\n        </CSSTransitionGroup>\n        {footer}\n      </div>\n    );\n  }\n}\n","/** @module utils/DateUtils/isDateEqual */\n\n/**\n * Checks if two dates are equal by comparing the exact time.\n * This allows null or undefined.\n *\n * @param {Date} d1 - The first date to compare.\n * @param {Date} d2 - The second date to compare.\n * @return {bool} - true if the dates are equal.\n */\nexport default function isDateEqual(d1, d2) {\n  if (!d1 && !d2) {\n    return true;\n  } else if ((!d1 && d2) || (d1 && !d2)) {\n    return false;\n  }\n\n  return d1.getTime() === d2.getTime();\n}\n\n","/** @module utils/DateUtils/addDate */\n\n/**\n * Adds a given amount to a date.\n *\n * @param {date} sourceDate the date to add\n * @param {number} amt the amount to add\n * @param {string} part the date part to add to. ['D', 'M', 'Y']\n * @return a new Date with the part added or the date if the part is not valid.\n */\nexport default function addDate(sourceDate, amt, part) {\n  const date = new Date(sourceDate);\n\n  switch (part) {\n    case 'D':\n      return new Date(date.setDate(date.getDate() + amt));\n    case 'M':\n      date.setDate(1);\n      return new Date(date.setMonth(date.getMonth() + amt));\n    case 'Y':\n      return new Date(date.setFullYear(date.getFullYear() + amt));\n    default:\n      return date;\n  }\n}\n","/** @module utils/DateUtils/stripTime */\n\n/**\n * Removes all time from a date. Only keeps year, month, and date.\n * @param {Date} date the date to strip\n * @return a new Date with the time stripped.\n */\nexport default function stripTime(date) {\n  if (!date || !(date instanceof Date)) {\n    return null;\n  }\n\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n}\n","/** @module utils/DateUtils/getLastDay */\n\n/**\n * Gets the last day in a month\n *\n * @param {Date} sourceDate the date to get the last day from.\n * @return a new Date as the last day of the month.\n */\nexport default function getLastDay(sourceDate) {\n  return new Date(sourceDate.getFullYear(), sourceDate.getMonth() + 1, 0);\n}\n","/** @module utils/DateUtils/getDayOfWeek */\n\n/**\n * Gets a day in the week. 0 = Sunday 6 = Saturday\n *\n * @param {date} sourceDate the date to find a relative day of week from\n * @param {number} dow the day of the week to find\n * @return a new Date as the given day of week\n */\nexport default function getDayOfWeek(sourceDate, dow = 0) {\n  const date = new Date(sourceDate);\n  const day = date.getDay();\n\n  const diff = date.getDate() - day + dow;\n  return new Date(date.setDate(diff));\n}\n","/** @module utils/DateUtils/isMonthBefore */\nimport stripTime from './stripTime';\n\n/**\n * Checks if a date is the month before another date without time\n *\n * @param {Date} date the date to check if it is before the other\n * @param {Date} toCompare the date to compare to\n * @return true if the date is before the other date's first day of month.\n */\nexport default function isMonthBefore(date, toCompare) {\n  if (!date || !toCompare) {\n    return false;\n  }\n\n  const d1 = stripTime(new Date(date.getFullYear(), date.getMonth(), 1));\n  const d2 = stripTime(new Date(toCompare.getFullYear(), toCompare.getMonth() - 1, 1));\n  return d1 > d2;\n}\n","/** @module utils/DateUtils/formatTime */\n\n/**\n * Formats a date as a time string using the DateTimeFormat function and locales.\n *\n * @param {function} DateTimeFormat the DateTimeFormat function to use.\n * @param {string|string[]} locales the locales to use.\n * @param {Date} time the time to format into a string.\n * @return a string of the formatted time.\n */\nexport default function formatTime(DateTimeFormat, locales, time) {\n  return new DateTimeFormat(locales, { hour: 'numeric', minute: '2-digit' }).format(time);\n}\n","/** @module utils/DateUtils/extractTimeParts */\nimport formatTime from './formatTime';\n\n/**\n * Extracts the hours, minutes, and optional time period from\n * a date time.\n *\n * @param {function} DateTimeFormat the DateTimeFormat function to use.\n * @param {string|string[]} locales the locales to use.\n * @param {Date} time the time to extract from.\n * @return {Object} an object of { hours, minutes, timePeriod }\n */\nexport default function extractTimeParts(DateTimeFormat, locales, time) {\n  const formatted = formatTime(DateTimeFormat, locales, time);\n\n  // IE does not like lookaheads or splitting on [^0-9]\n  // it will include the non-printable characters..\n  const [hours, minutes] = formatted.match(/[0-9]+/g);\n  const [separator, ...remaining] = formatted.match(/[ ,.:A-z]+/g);\n  let timePeriod;\n  if (remaining && remaining.length) {\n    timePeriod = remaining.join('').trim();\n  }\n\n  return {\n    hours,\n    minutes: separator + minutes,\n    timePeriod,\n  };\n}\n\n","/** @module utils/NumberUtils/calcTimeFromPoint */\n\nfunction isPointInCircle(cx, cy, r, x, y) {\n  const distance = Math.pow(cx - x, 2) + Math.pow(cy - y, 2);\n  return distance <= Math.pow(r, 2);\n}\n\nfunction toDegrees(radians) {\n  return radians * (180 / Math.PI);\n}\n\n/**\n * Takes a point from a mouse or touch event and a center point of a circle to determine\n * what the new time should be.\n *\n * If the point.y < center.y, the point is in the top half of the circle.\n * If the point.x < center.x, the point is in the left half of the circle.\n *\n * @param {Object} point - The mouse or touch event's point that contains an x and y coordinate.\n * @param {Object} center - The center point for the circle that contains an x and y coordinate.\n * @param {Number} innerRadius - An inner radius for clocks that have 24 hour times. This is\n *    a circle that contains hours 12-23.\n * @param {Boolean} minutes - Boolena if the current time to be calculated is minutes instead of\n *    hours.\n * @param {Boolean} hour12 - Boolean if the clock is a 12 hour clock.\n * @return {Number} the new time.\n */\nexport default function calcTimeFromPoint(point, center, innerRadius, minutes, hour12) {\n  const x = point.x - center.x;\n  const y = point.y - center.y;\n  const degrees = toDegrees(Math.atan2(y, x));\n  const sectors = minutes ? 60 : 12;\n  const sectorSize = 360 / sectors;\n  let time = Math.round(degrees / sectorSize);\n\n  // Since the css transform has 0π at π/2 place, we need to offset the\n  // time to that location.\n  time += (minutes ? 15 : 3);\n\n  // If time is still negative, it is in the top half of the circle\n  if (time < 0) {\n    time += sectors;\n  }\n\n\n  // Finally, if it is a 24 hour clock, need to check if the point is actually\n  // selecting hours 13 - 24 (0).\n  if (!minutes && !hour12) {\n    const isInCircle = isPointInCircle(0, 0, innerRadius, x, y);\n\n    if ((time === 0 && !isInCircle) || (time !== 0 && isInCircle)) {\n      time += 12;\n    }\n  }\n\n  return time;\n}\n","/** @module utils/DateUtils/addHours */\n\n/**\n * Adds hours to a date.\n *\n * @param {Date} time the time to increment\n * @param {number} hours the number of hours to increment by.\n * @return a new Date with the new hours set.\n */\nexport default function addHours(time, hours) {\n  const t = new Date(time.getTime());\n  t.setHours(t.getHours() + hours);\n  return t;\n}\n","/** @module utils/NumberUtils/minMaxLoop */\n\n/**\n * Keeps a number within the min and max values. When the number becomes less\n * than the min, it will loop around and be the max value. When the number is\n * greater than the max, it will loop around and be the min value.\n *\n * @param {Number} current - the current number\n * @param {Number} min - the minimum number allowed\n * @param {Number} max - the maximum number allowed\n * @param {Boolean} increment - boolean if the value should be incremented or decremented by\n *    1.\n * @return {Number} the next number\n */\nexport default function minMaxLoop(current, min, max, increment = true) {\n  let next = current + (increment ? 1 : -1);\n  if (max < next) {\n    next = min;\n  } else if (next < min) {\n    next = max;\n  }\n\n  return next;\n}\n","/** @module utils/NumberUtils/calculateValueDistance */\n\n/**\n * This calculates the distance from a screen x location to a position in some element\n * by comparing the width of the element and the element's page position to the screen\n * x position.\n *\n * If the distance is not _normalized_ the distance will be updated to be a percentage\n * of the element's total width.\n *\n * @param {Number} x - the screen x location.\n * @param {Number} width - the element's width\n * @param {Number} left - the element's page x position.\n * @param {Boolean} normalize - boolean if the distance should be a percentage.\n *\n * @return {Number} the distance from the element's left position to the page x\n *    location.\n */\nfunction calculateDistance(x, width, left, normalize) {\n  const distance = Math.min(\n    width,\n    Math.max(0, x - left)\n  );\n\n  return normalize ? distance : distance / width * 100;\n}\n\n/**\n * This calculates the new value and distance for a slider. It will compare the page x\n * location of a touch or mouse event to the slider's track page x position. If the\n * final value and distance should be _normalized_, they will be updated to be rounded\n * with the scale and steps in mind.\n *\n * The distance will always be contained within a percentage of 0 - 100 while the\n * value will be contained within the min and max values.\n *\n * @param {Number} x - the page x location of the touch or mouse event.\n * @param {Number} width - the slider's width\n * @param {Number} left - the slider's left position in the page.\n * @param {Number} scale - the total number values included in the slider.\n * @param {Number} step - the amount to increment by.\n * @param {Number} min - the min value for the slider.\n * @param {Number} max - the max value for the slider.\n * @param {Boolean} normalize - boolean if the vaue and distance should be _normalized_.\n *\n * @return {Object} an object with the value and distance.\n */\nexport default function calculateValueDistance(x, width, left, scale, step, min, max, normalize) {\n  let value;\n  let distance = calculateDistance(x, width, left, normalize);\n  if (normalize) {\n    value = Math.round(distance / (width / scale));\n    if (step < 1) {\n      const decimals = String(step).split('.')[1];\n      const corrector = typeof decimals !== 'undefined' && decimals.length > 0\n        ? Math.pow(10, decimals.length)\n        : 1;\n\n      const modded = (value * corrector) % (step * corrector);\n      if (modded !== 0 && modded >= step / 2) {\n        value += (step - modded);\n      } else if (modded !== 0) {\n        value -= modded;\n      }\n    }\n\n    distance = value / scale * 100;\n    value = (value * step) + min;\n  } else {\n    value = min + step * Math.round(distance / 100 * scale);\n  }\n\n  return {\n    distance: Math.max(0, Math.min(100, distance)),\n    value: Math.max(min, Math.min(max, value)),\n  };\n}\n","/** @module utils/NumberUtils/updateUnit */\n\n/**\n * Takes in a css unit (px, rem, em, etc) or a number and applies a function to the\n * number part of the unit.\n *\n * If the unit was a number to start with and a `toUnit` is given, the number will\n * be given the `toUnit`. Otherwise the number will be returned.\n *\n * If the unit was a string, the original units will be applied back to the updated\n * unit's value.\n *\n * @param {number|String} unit - the unit to apply a function to.\n * @param {function} fn - the function to apply to the number.\n * @param {String=} toUnit - an optional unit to cast the updated unit to.\n *\n * @return {String|number} the updated unit.\n */\nexport default function updateUnit(unit, fn, toUnit) {\n  const updated = fn(parseInt(unit, 10));\n\n  if (typeof unit === 'number') {\n    return toUnit\n      ? `${updated}${toUnit}`\n      : updated;\n  }\n\n  return `${updated}${unit.replace(/[0-9]/g, '')}`;\n}\n","const gcc = 'getComposedComponent';\n\n/**\n * Just checks if the fab is actually a ref to the FAB Button.\n */\nexport default function isInvalidAnimate(fab) {\n  return typeof fab[gcc] !== 'function' ||\n    typeof fab[gcc]()[gcc] !== 'function' ||\n    typeof fab[gcc]()[gcc]()._animateForSnackbar !== 'function';\n}\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TooltipContainer from './TooltipContainer';\n\n\n/**\n * Adds a tooltip for a component/element given as the only child.\n *\n * The component should render its children, or the tooltip will not be shown.\n * Also the component should be positioned by `className` or `style`\n * (CSS property `position` should have value `relative`, `absolute` or `fixed`),\n * or the tooltip can appear incorrectly.\n * Use `setPosition={true}` to automatically add `position: 'relative'` to the `style` of the wrapped component.\n *\n * Besides of `children` and `setPosition` all props set for `Tooltipped` component are passed through\n * to `TooltipContainer` that is added as a child of the wrapped component and controls the tooltip.\n *\n * ```js\n * <Tooltipped\n *   label=\"Tooltip for text\"\n *   position=\"left\"\n *   delay={1000}\n * >\n *   <span style={{position: 'absolute', top: '10px', left: '70%'}}>\n *     Some text\n *     <div>Another line of text</div>\n *   </span>\n * </Tooltipped>\n * ```\n *\n * ```js\n * <Tooltipped\n *   setPosition={true}\n *   label=\"Avatar's tooltip\"\n *   position=\"top\"\n * >\n *   <span style={{marginLeft: '30px'}}>\n *       <Avatar random>T</Avatar>\n *   </span>\n * </Tooltipped>\n * ```\n */\nexport default function Tooltipped({ children, setPosition, ...props }) {\n  let target = React.Children.only(children);\n  const targetProps = target.props;\n\n  if (props.label) {\n    let clonedProps = targetProps;\n    if (setPosition) {\n      clonedProps = {\n        ...clonedProps,\n        style: { ...clonedProps.style, position: 'relative' },\n      };\n    }\n\n    target = React.cloneElement(target, clonedProps, [\n      targetProps.children,\n      <TooltipContainer key=\"tooltipContainer\" {...props} />,\n    ]);\n  }\n\n  return target;\n}\n\nTooltipped.displayName = 'Tooltipped';\n\nTooltipped.propTypes = {\n  /**\n   * A component/element the tooltip should be linked to.\n   */\n  children: PropTypes.element.isRequired,\n  /**\n   * Tooltip's content.\n   */\n  label: PropTypes.node,\n  /**\n   * Whether `position: relative` should be added to the `style` property of the wrapped component.\n   */\n  setPosition: PropTypes.bool,\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","\r\nmodule.exports = function chain(){\r\n  var len = arguments.length\r\n  var args = [];\r\n\r\n  for (var i = 0; i < len; i++)\r\n    args[i] = arguments[i]\r\n\r\n  args = args.filter(function(fn){ return fn != null })\r\n\r\n  if (args.length === 0) return undefined\r\n  if (args.length === 1) return args[0]\r\n\r\n  return args.reduce(function(current, next){\r\n    return function chainedFunction() {\r\n      current.apply(this, arguments);\r\n      next.apply(this, arguments);\r\n    };\r\n  })\r\n}\r\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n","'use strict';\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\n\nvar _react = require('react');\n\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\nfunction getChildMapping(children) {\n  if (!children) {\n    return children;\n  }\n  var result = {};\n  _react.Children.map(children, function (child) {\n    return child;\n  }).forEach(function (child) {\n    result[child.key] = child;\n  });\n  return result;\n}\n\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    if (next.hasOwnProperty(key)) {\n      return next[key];\n    }\n\n    return prev[key];\n  }\n\n  // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n  var nextKeysPending = {};\n\n  var pendingKeys = [];\n  for (var prevKey in prev) {\n    if (next.hasOwnProperty(prevKey)) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i = void 0;\n  var childMapping = {};\n  for (var nextKey in next) {\n    if (nextKeysPending.hasOwnProperty(nextKey)) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n    childMapping[nextKey] = getValueForKey(nextKey);\n  }\n\n  // Finally, add the keys which didn't appear before any key in `next`\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _chainFunction = require('chain-function');\n\nvar _chainFunction2 = _interopRequireDefault(_chainFunction);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _ChildMapping = require('./utils/ChildMapping');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  component: _propTypes2.default.any,\n  childFactory: _propTypes2.default.func,\n  children: _propTypes2.default.node\n};\n\nvar defaultProps = {\n  component: 'span',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n\nvar TransitionGroup = function (_React$Component) {\n  _inherits(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    _classCallCheck(this, TransitionGroup);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.performAppear = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillAppear) {\n        component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key, component));\n      } else {\n        _this._handleDoneAppearing(key, component);\n      }\n    };\n\n    _this._handleDoneAppearing = function (key, component) {\n      if (component.componentDidAppear) {\n        component.componentDidAppear();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n        // This was removed before it had fully appeared. Remove it.\n        _this.performLeave(key, component);\n      }\n    };\n\n    _this.performEnter = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillEnter) {\n        component.componentWillEnter(_this._handleDoneEntering.bind(_this, key, component));\n      } else {\n        _this._handleDoneEntering(key, component);\n      }\n    };\n\n    _this._handleDoneEntering = function (key, component) {\n      if (component.componentDidEnter) {\n        component.componentDidEnter();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n        // This was removed before it had fully entered. Remove it.\n        _this.performLeave(key, component);\n      }\n    };\n\n    _this.performLeave = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillLeave) {\n        component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key, component));\n      } else {\n        // Note that this is somewhat dangerous b/c it calls setState()\n        // again, effectively mutating the component before all the work\n        // is done.\n        _this._handleDoneLeaving(key, component);\n      }\n    };\n\n    _this._handleDoneLeaving = function (key, component) {\n      if (component.componentDidLeave) {\n        component.componentDidLeave();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n        // This entered again before it fully left. Add it again.\n        _this.keysToEnter.push(key);\n      } else {\n        _this.setState(function (state) {\n          var newChildren = _extends({}, state.children);\n          delete newChildren[key];\n          return { children: newChildren };\n        });\n      }\n    };\n\n    _this.childRefs = Object.create(null);\n\n    _this.state = {\n      children: (0, _ChildMapping.getChildMapping)(props.children)\n    };\n    return _this;\n  }\n\n  TransitionGroup.prototype.componentWillMount = function componentWillMount() {\n    this.currentlyTransitioningKeys = {};\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n  };\n\n  TransitionGroup.prototype.componentDidMount = function componentDidMount() {\n    var initialChildMapping = this.state.children;\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key, this.childRefs[key]);\n      }\n    }\n  };\n\n  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);\n    var prevChildMapping = this.state.children;\n\n    this.setState({\n      children: (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping)\n    });\n\n    for (var key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (var _key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(_key);\n      if (prevChildMapping[_key] && !hasNext && !this.currentlyTransitioningKeys[_key]) {\n        this.keysToLeave.push(_key);\n      }\n    }\n\n    // If we want to someday check for reordering, we could do it here.\n  };\n\n  TransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {\n    var _this2 = this;\n\n    var keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(function (key) {\n      return _this2.performEnter(key, _this2.childRefs[key]);\n    });\n\n    var keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(function (key) {\n      return _this2.performLeave(key, _this2.childRefs[key]);\n    });\n  };\n\n  TransitionGroup.prototype.render = function render() {\n    var _this3 = this;\n\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n\n    var _loop = function _loop(key) {\n      var child = _this3.state.children[key];\n      if (child) {\n        var isCallbackRef = typeof child.ref !== 'string';\n        var factoryChild = _this3.props.childFactory(child);\n        var ref = function ref(r) {\n          _this3.childRefs[key] = r;\n        };\n\n        process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(isCallbackRef, 'string refs are not supported on children of TransitionGroup and will be ignored. ' + 'Please use a callback ref instead: https://facebook.github.io/react/docs/refs-and-the-dom.html#the-ref-callback-attribute') : void 0;\n\n        // Always chaining the refs leads to problems when the childFactory\n        // wraps the child. The child ref callback gets called twice with the\n        // wrapper and the child. So we only need to chain the ref if the\n        // factoryChild is not different from child.\n        if (factoryChild === child && isCallbackRef) {\n          ref = (0, _chainFunction2.default)(child.ref, ref);\n        }\n\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(_react2.default.cloneElement(factoryChild, {\n          key: key,\n          ref: ref\n        }));\n      }\n    };\n\n    for (var key in this.state.children) {\n      _loop(key);\n    }\n\n    // Do not forward TransitionGroup props to primitive DOM nodes\n    var props = _extends({}, this.props);\n    delete props.transitionLeave;\n    delete props.transitionName;\n    delete props.transitionAppear;\n    delete props.transitionEnter;\n    delete props.childFactory;\n    delete props.transitionLeaveTimeout;\n    delete props.transitionEnterTimeout;\n    delete props.transitionAppearTimeout;\n    delete props.component;\n\n    return _react2.default.createElement(this.props.component, props, childrenToRender);\n  };\n\n  return TransitionGroup;\n}(_react2.default.Component);\n\nTransitionGroup.displayName = 'TransitionGroup';\n\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nTransitionGroup.defaultProps = defaultProps;\n\nexports.default = TransitionGroup;\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasClass;\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + element.className + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addClass;\n\nvar _hasClass = require('./hasClass');\n\nvar _hasClass2 = _interopRequireDefault(_hasClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element)) element.className = element.className + ' ' + className;\n}\nmodule.exports = exports['default'];","'use strict';\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\\\s)' + className + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inDOM = require('./inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar vendors = ['', 'webkit', 'moz', 'o', 'ms'];\nvar cancel = 'clearTimeout';\nvar raf = fallback;\nvar compatRaf = void 0;\n\nvar getKey = function getKey(vendor, k) {\n  return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + 'AnimationFrame';\n};\n\nif (_inDOM2.default) {\n  vendors.some(function (vendor) {\n    var rafKey = getKey(vendor, 'request');\n\n    if (rafKey in window) {\n      cancel = getKey(vendor, 'cancel');\n      return raf = function raf(cb) {\n        return window[rafKey](cb);\n      };\n    }\n  });\n}\n\n/* https://github.com/component/raf */\nvar prev = new Date().getTime();\nfunction fallback(fn) {\n  var curr = new Date().getTime(),\n      ms = Math.max(0, 16 - (curr - prev)),\n      req = setTimeout(fn, ms);\n\n  prev = curr;\n  return req;\n}\n\ncompatRaf = function compatRaf(cb) {\n  return raf(cb);\n};\ncompatRaf.cancel = function (id) {\n  window[cancel] && typeof window[cancel] === 'function' && window[cancel](id);\n};\nexports.default = compatRaf;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = undefined;\n\nvar _inDOM = require('../util/inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar transform = 'transform';\nvar prefix = void 0,\n    transitionEnd = void 0,\n    animationEnd = void 0;\nvar transitionProperty = void 0,\n    transitionDuration = void 0,\n    transitionTiming = void 0,\n    transitionDelay = void 0;\nvar animationName = void 0,\n    animationDuration = void 0,\n    animationTiming = void 0,\n    animationDelay = void 0;\n\nif (_inDOM2.default) {\n  var _getTransitionPropert = getTransitionProperties();\n\n  prefix = _getTransitionPropert.prefix;\n  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;\n  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;\n\n\n  exports.transform = transform = prefix + '-' + transform;\n  exports.transitionProperty = transitionProperty = prefix + '-transition-property';\n  exports.transitionDuration = transitionDuration = prefix + '-transition-duration';\n  exports.transitionDelay = transitionDelay = prefix + '-transition-delay';\n  exports.transitionTiming = transitionTiming = prefix + '-transition-timing-function';\n\n  exports.animationName = animationName = prefix + '-animation-name';\n  exports.animationDuration = animationDuration = prefix + '-animation-duration';\n  exports.animationTiming = animationTiming = prefix + '-animation-delay';\n  exports.animationDelay = animationDelay = prefix + '-animation-timing-function';\n}\n\nexports.transform = transform;\nexports.transitionProperty = transitionProperty;\nexports.transitionTiming = transitionTiming;\nexports.transitionDelay = transitionDelay;\nexports.transitionDuration = transitionDuration;\nexports.transitionEnd = transitionEnd;\nexports.animationName = animationName;\nexports.animationDuration = animationDuration;\nexports.animationTiming = animationTiming;\nexports.animationDelay = animationDelay;\nexports.animationEnd = animationEnd;\nexports.default = {\n  transform: transform,\n  end: transitionEnd,\n  property: transitionProperty,\n  timing: transitionTiming,\n  delay: transitionDelay,\n  duration: transitionDuration\n};\n\n\nfunction getTransitionProperties() {\n  var style = document.createElement('div').style;\n\n  var vendorMap = {\n    O: function O(e) {\n      return 'o' + e.toLowerCase();\n    },\n    Moz: function Moz(e) {\n      return e.toLowerCase();\n    },\n    Webkit: function Webkit(e) {\n      return 'webkit' + e;\n    },\n    ms: function ms(e) {\n      return 'MS' + e;\n    }\n  };\n\n  var vendors = Object.keys(vendorMap);\n\n  var transitionEnd = void 0,\n      animationEnd = void 0;\n  var prefix = '';\n\n  for (var i = 0; i < vendors.length; i++) {\n    var vendor = vendors[i];\n\n    if (vendor + 'TransitionProperty' in style) {\n      prefix = '-' + vendor.toLowerCase();\n      transitionEnd = vendorMap[vendor]('TransitionEnd');\n      animationEnd = vendorMap[vendor]('AnimationEnd');\n      break;\n    }\n  }\n\n  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';\n\n  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';\n\n  style = null;\n\n  return { animationEnd: animationEnd, transitionEnd: transitionEnd, prefix: prefix };\n}","'use strict';\n\nexports.__esModule = true;\nexports.nameShape = undefined;\nexports.transitionTimeout = transitionTimeout;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction transitionTimeout(transitionType) {\n  var timeoutPropName = 'transition' + transitionType + 'Timeout';\n  var enabledPropName = 'transition' + transitionType;\n\n  return function (props) {\n    // If the transition is enabled\n    if (props[enabledPropName]) {\n      // If no timeout duration is provided\n      if (props[timeoutPropName] == null) {\n        return new Error(timeoutPropName + ' wasn\\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');\n\n        // If the duration isn't a number\n      } else if (typeof props[timeoutPropName] !== 'number') {\n        return new Error(timeoutPropName + ' must be a number (in milliseconds)');\n      }\n    }\n\n    return null;\n  };\n}\n\nvar nameShape = exports.nameShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  leave: _propTypes2.default.string,\n  active: _propTypes2.default.string\n}), _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  enterActive: _propTypes2.default.string,\n  leave: _propTypes2.default.string,\n  leaveActive: _propTypes2.default.string,\n  appear: _propTypes2.default.string,\n  appearActive: _propTypes2.default.string\n})]);","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _addClass = require('dom-helpers/class/addClass');\n\nvar _addClass2 = _interopRequireDefault(_addClass);\n\nvar _removeClass = require('dom-helpers/class/removeClass');\n\nvar _removeClass2 = _interopRequireDefault(_removeClass);\n\nvar _requestAnimationFrame = require('dom-helpers/util/requestAnimationFrame');\n\nvar _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);\n\nvar _properties = require('dom-helpers/transition/properties');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _PropTypes = require('./utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar events = [];\nif (_properties.transitionEnd) events.push(_properties.transitionEnd);\nif (_properties.animationEnd) events.push(_properties.animationEnd);\n\nfunction addEndListener(node, listener) {\n  if (events.length) {\n    events.forEach(function (e) {\n      return node.addEventListener(e, listener, false);\n    });\n  } else {\n    setTimeout(listener, 0);\n  }\n\n  return function () {\n    if (!events.length) return;\n    events.forEach(function (e) {\n      return node.removeEventListener(e, listener, false);\n    });\n  };\n}\n\nvar propTypes = {\n  children: _propTypes2.default.node,\n  name: _PropTypes.nameShape.isRequired,\n\n  // Once we require timeouts to be specified, we can remove the\n  // boolean flags (appear etc.) and just accept a number\n  // or a bool for the timeout flags (appearTimeout etc.)\n  appear: _propTypes2.default.bool,\n  enter: _propTypes2.default.bool,\n  leave: _propTypes2.default.bool,\n  appearTimeout: _propTypes2.default.number,\n  enterTimeout: _propTypes2.default.number,\n  leaveTimeout: _propTypes2.default.number\n};\n\nvar CSSTransitionGroupChild = function (_React$Component) {\n  _inherits(CSSTransitionGroupChild, _React$Component);\n\n  function CSSTransitionGroupChild() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransitionGroupChild);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.componentWillAppear = function (done) {\n      if (_this.props.appear) {\n        _this.transition('appear', done, _this.props.appearTimeout);\n      } else {\n        done();\n      }\n    }, _this.componentWillEnter = function (done) {\n      if (_this.props.enter) {\n        _this.transition('enter', done, _this.props.enterTimeout);\n      } else {\n        done();\n      }\n    }, _this.componentWillLeave = function (done) {\n      if (_this.props.leave) {\n        _this.transition('leave', done, _this.props.leaveTimeout);\n      } else {\n        done();\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  CSSTransitionGroupChild.prototype.componentWillMount = function componentWillMount() {\n    this.classNameAndNodeQueue = [];\n    this.transitionTimeouts = [];\n  };\n\n  CSSTransitionGroupChild.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unmounted = true;\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    this.transitionTimeouts.forEach(function (timeout) {\n      clearTimeout(timeout);\n    });\n\n    this.classNameAndNodeQueue.length = 0;\n  };\n\n  CSSTransitionGroupChild.prototype.transition = function transition(animationType, finishCallback, timeout) {\n    var node = (0, _reactDom.findDOMNode)(this);\n\n    if (!node) {\n      if (finishCallback) {\n        finishCallback();\n      }\n      return;\n    }\n\n    var className = this.props.name[animationType] || this.props.name + '-' + animationType;\n    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';\n    var timer = null;\n    var removeListeners = void 0;\n\n    (0, _addClass2.default)(node, className);\n\n    // Need to do this to actually trigger a transition.\n    this.queueClassAndNode(activeClassName, node);\n\n    // Clean-up the animation after the specified delay\n    var finish = function finish(e) {\n      if (e && e.target !== node) {\n        return;\n      }\n\n      clearTimeout(timer);\n      if (removeListeners) removeListeners();\n\n      (0, _removeClass2.default)(node, className);\n      (0, _removeClass2.default)(node, activeClassName);\n\n      if (removeListeners) removeListeners();\n\n      // Usually this optional callback is used for informing an owner of\n      // a leave animation and telling it to remove the child.\n      if (finishCallback) {\n        finishCallback();\n      }\n    };\n\n    if (timeout) {\n      timer = setTimeout(finish, timeout);\n      this.transitionTimeouts.push(timer);\n    } else if (_properties.transitionEnd) {\n      removeListeners = addEndListener(node, finish);\n    }\n  };\n\n  CSSTransitionGroupChild.prototype.queueClassAndNode = function queueClassAndNode(className, node) {\n    var _this2 = this;\n\n    this.classNameAndNodeQueue.push({\n      className: className,\n      node: node\n    });\n\n    if (!this.rafHandle) {\n      this.rafHandle = (0, _requestAnimationFrame2.default)(function () {\n        return _this2.flushClassNameAndNodeQueue();\n      });\n    }\n  };\n\n  CSSTransitionGroupChild.prototype.flushClassNameAndNodeQueue = function flushClassNameAndNodeQueue() {\n    if (!this.unmounted) {\n      this.classNameAndNodeQueue.forEach(function (obj) {\n        // This is for to force a repaint,\n        // which is necessary in order to transition styles when adding a class name.\n        /* eslint-disable no-unused-expressions */\n        obj.node.scrollTop;\n        /* eslint-enable no-unused-expressions */\n        (0, _addClass2.default)(obj.node, obj.className);\n      });\n    }\n    this.classNameAndNodeQueue.length = 0;\n    this.rafHandle = null;\n  };\n\n  CSSTransitionGroupChild.prototype.render = function render() {\n    var props = _extends({}, this.props);\n    delete props.name;\n    delete props.appear;\n    delete props.enter;\n    delete props.leave;\n    delete props.appearTimeout;\n    delete props.enterTimeout;\n    delete props.leaveTimeout;\n    delete props.children;\n    return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), props);\n  };\n\n  return CSSTransitionGroupChild;\n}(_react2.default.Component);\n\nCSSTransitionGroupChild.displayName = 'CSSTransitionGroupChild';\n\n\nCSSTransitionGroupChild.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\n\nexports.default = CSSTransitionGroupChild;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _TransitionGroup = require('./TransitionGroup');\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nvar _CSSTransitionGroupChild = require('./CSSTransitionGroupChild');\n\nvar _CSSTransitionGroupChild2 = _interopRequireDefault(_CSSTransitionGroupChild);\n\nvar _PropTypes = require('./utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  transitionName: _PropTypes.nameShape.isRequired,\n\n  transitionAppear: _propTypes2.default.bool,\n  transitionEnter: _propTypes2.default.bool,\n  transitionLeave: _propTypes2.default.bool,\n  transitionAppearTimeout: (0, _PropTypes.transitionTimeout)('Appear'),\n  transitionEnterTimeout: (0, _PropTypes.transitionTimeout)('Enter'),\n  transitionLeaveTimeout: (0, _PropTypes.transitionTimeout)('Leave')\n};\n\nvar defaultProps = {\n  transitionAppear: false,\n  transitionEnter: true,\n  transitionLeave: true\n};\n\nvar CSSTransitionGroup = function (_React$Component) {\n  _inherits(CSSTransitionGroup, _React$Component);\n\n  function CSSTransitionGroup() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransitionGroup);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._wrapChild = function (child) {\n      return _react2.default.createElement(_CSSTransitionGroupChild2.default, {\n        name: _this.props.transitionName,\n        appear: _this.props.transitionAppear,\n        enter: _this.props.transitionEnter,\n        leave: _this.props.transitionLeave,\n        appearTimeout: _this.props.transitionAppearTimeout,\n        enterTimeout: _this.props.transitionEnterTimeout,\n        leaveTimeout: _this.props.transitionLeaveTimeout\n      }, child);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  // We need to provide this childFactory so that\n  // ReactCSSTransitionGroupChild can receive updates to name, enter, and\n  // leave while it is leaving.\n\n\n  CSSTransitionGroup.prototype.render = function render() {\n    return _react2.default.createElement(_TransitionGroup2.default, _extends({}, this.props, { childFactory: this._wrapChild }));\n  };\n\n  return CSSTransitionGroup;\n}(_react2.default.Component);\n\nCSSTransitionGroup.displayName = 'CSSTransitionGroup';\n\n\nCSSTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nCSSTransitionGroup.defaultProps = defaultProps;\n\nexports.default = CSSTransitionGroup;\nmodule.exports = exports['default'];","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export const LEFT_MOUSE = 0;\nexport const RIGHT_MOUSE = 2;\n\nexport const TAB = 9;\nexport const ENTER = 13;\nexport const ESC = 27;\nexport const SPACE = 32;\nexport const PAGE_UP = 33;\nexport const PAGE_DOWN = 34;\nexport const END = 35;\nexport const HOME = 36;\nexport const LEFT = 37;\nexport const UP = 38;\nexport const RIGHT = 39;\nexport const DOWN = 40;\n\nexport const ZERO = 48;\nexport const NINE = 57;\nexport const KEYPAD_ZERO = 96;\nexport const KEYPAD_NINE = 105;\n","/** @module Helpers/HorizontalAnchors */\n\n/**\n * An enum for all the different types of horizontal anchors on a layover.\n *\n * @readonly\n * @enum {string}\n */\nconst HorizontalAnchors = {\n  /**\n   * Positions the layover to the outside left on the toggle component\n   * so that it does not overlap.\n   */\n  LEFT: 'left',\n\n  /**\n   * Positions the layover to the inner left of the toggle component so\n   * that it will overlap.\n   */\n  INNER_LEFT: 'inner left',\n\n  /**\n   * Positions the layover so that it overlaps the toggle component\n   * by positioning itself in the cetner of the toggle component's width.\n   */\n  CENTER: 'center',\n\n  /**\n   * Positions the layover to the outside right on the toggle component\n   * so that it does not overlap.\n   */\n  RIGHT: 'right',\n\n  /**\n   * Positions the layover to the outside right on the toggle component\n   * so that it will overlap.\n   */\n  INNER_RIGHT: 'inner right',\n};\n\nexport default HorizontalAnchors;\n","/** @module Helpers/VerticalAnchors */\n\n/**\n * An enum for all the different types of horizontal anchors on a layover.\n *\n * @readonly\n * @enum {string}\n */\nconst VerticalAnchors = {\n  /**\n   * Positions the layover to be placed over the toggle component so that\n   * it will never overlay the toggle component.\n   */\n  TOP: 'top',\n\n  /**\n   * Positions the layover so that it will be centered over the toggle component\n   * based on the layover's height.\n   */\n  CENTER: 'center',\n\n  /**\n   * Positions the layover so that it will overlap the toggle component by\n   * fixing to the top of the toggle.\n   */\n  OVERLAP: 'overlap',\n\n  /**\n   * Positions the layover to be placed below the toggle component so that\n   * it will never overlay the toggle component.\n   */\n  BOTTOM: 'bottom',\n};\n\nexport default VerticalAnchors;\n","import PropTypes from 'prop-types';\nimport HorizontalAnchors from './HorizontalAnchors';\nimport VerticalAnchors from './VerticalAnchors';\n\nexport default PropTypes.shape({\n  x: PropTypes.oneOf([\n    HorizontalAnchors.LEFT,\n    HorizontalAnchors.INNER_LEFT,\n    HorizontalAnchors.CENTER,\n    HorizontalAnchors.RIGHT,\n    HorizontalAnchors.INNER_RIGHT,\n  ]).isRequired,\n  y: PropTypes.oneOf([\n    VerticalAnchors.TOP,\n    VerticalAnchors.CENTER,\n    VerticalAnchors.OVERLAP,\n    VerticalAnchors.BOTTOM,\n  ]).isRequired,\n});\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.oneOfType([\n  PropTypes.object,\n  PropTypes.shape({\n    x: PropTypes.object,\n    y: PropTypes.object,\n  }),\n]);\n","/** @module Helpers/Positions */\n\n/**\n * An enum for all the animation positions for a layover appearing.\n *\n * @readonly\n * @enum {string}\n */\nconst Positions = {\n  /**\n   * The layover will appear by transitioning from the top left and expand\n   * down right.\n   */\n  TOP_LEFT: 'tl',\n\n  /**\n   * The layover will appear by transitioning from the top right and expand\n   * down left.\n   */\n  TOP_RIGHT: 'tr',\n\n  /**\n   * The layover will appear by transitioning from the bottom left and expand\n   * top right.\n   */\n  BOTTOM_LEFT: 'bl',\n\n  /**\n   * The layover will appear by transitioning from the bottom right and expand\n   * top left.\n   */\n  BOTTOM_RIGHT: 'br',\n\n  /**\n   * The layover will appear by just transitioning downwards from the bottom\n   * of the toggle component.\n   */\n  BELOW: 'below',\n};\n\nexport default Positions;\n","import PropTypes from 'prop-types';\nimport Positions from './Positions';\n\nexport default PropTypes.oneOfType([\n  PropTypes.oneOf([\n    Positions.TOP_LEFT,\n    Positions.TOP_RIGHT,\n    Positions.BOTTOM_LEFT,\n    Positions.BOTTOM_RIGHT,\n    Positions.BELOW,\n  ]),\n  PropTypes.string,\n]);\n","'use strict';\n\nexports.__esModule = true;\nexports.default = deprecated;\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar warned = {};\n\nfunction deprecated(validator, reason) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] != null) {\n      var messageKey = componentName + '.' + propName;\n\n      (0, _warning2.default)(warned[messageKey], 'The ' + location + ' `' + propFullNameSafe + '` of ' + ('`' + componentNameSafe + '` is deprecated. ' + reason + '.'));\n\n      warned[messageKey] = true;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n  };\n}\n\n/* eslint-disable no-underscore-dangle */\nfunction _resetWarned() {\n  warned = {};\n}\n\ndeprecated._resetWarned = _resetWarned;\n/* eslint-enable no-underscore-dangle */","import React, { PureComponent, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport { TAB } from '../constants/keyCodes';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\n\n/**\n * The `AccessibleFakeButton` is a generic component that can be used to render\n * a `div` or any other non `button` components as a button. This should not be\n * used often.\n *\n * The `AccessibleFakeButton` allows the user to tab focus the element, use the\n * space or enter key to trigger the `onClick` event, and toggles the `aria-pressed`\n * attribute.\n */\nexport default class AccessibleFakeButton extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional function to call only when the button has been focused with the tab key.\n     */\n    tabbedClassName: PropTypes.string,\n\n    /**\n     * Any children to display in the Accessible Fake Button.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional onClick function to call when the user clicks the\n     * button or presses space || enter.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional onKeyDown function to call.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional onBlur function to call.\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * An optional onKeyUp function to call.\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the element is focused with the tab key.\n     */\n    onTabFocus: PropTypes.func,\n\n    /**\n     * The component to render the Fake button as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * Boolean if the default outline should be removed the when the fake button has been focused.\n     *\n     * @see {@link #tabbedClassName}\n     */\n    noFocusOutline: PropTypes.bool,\n\n    /**\n     * The tab index to use for the Fake button so it is keyboard focusable.\n     */\n    tabIndex: PropTypes.number,\n\n    /**\n     * Boolean if the Button is disabled. This will prevent tab focus.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * The role for the accessible fake button. It is recommended to keep it\n     * the default of `button` unless you are rendering it as an `a` tag.\n     */\n    role: PropTypes.string,\n\n    /**\n     * The ink when coming from the AccessibleFakeInkedButton\n     * @access private\n     */\n    ink: PropTypes.node,\n\n    /**\n     * Boolean if the spacebar should be used to trigger the click event. This _should_ be `true`\n     * is almost all cases.\n     */\n    listenToSpace: PropTypes.bool,\n\n    /**\n     * Boolean if the enter key should be used to trigger the click event. This _should_ be `true`\n     * in most cases. By default, the param will be ignored if the `role` attribute is for a `checkbox`\n     * or `radio`. When it is a checkbox or radio, it will attempt to submit the form on the enter\n     * keypress instead like the native elements.\n     */\n    listenToEnter: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    component: 'div',\n    tabIndex: 0,\n    role: 'button',\n    noFocusOutline: true,\n    listenToEnter: true,\n    listenToSpace: true,\n  };\n\n  state = { pressed: false, tabFocused: false };\n\n  /**\n   * Focuses the button.\n   */\n  focus = () => {\n    if (this._node) {\n      this._node.focus();\n    }\n  };\n\n  /**\n   * Blurs the button.\n   */\n  blur = () => {\n    if (this._node) {\n      this._node.blur();\n    }\n  };\n\n  _setNode = (node) => {\n    if (node) {\n      this._node = findDOMNode(node);\n    }\n  };\n\n  _handleClick = (e) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    this._node.focus();\n    this.setState({ pressed: !this.state.pressed });\n  };\n\n  _handleKeyDown = (e) => {\n    const { disabled, onKeyDown, listenToEnter, listenToSpace } = this.props;\n    if (disabled) {\n      return;\n    }\n\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    handleKeyboardAccessibility(e, this._handleClick, listenToEnter, listenToSpace);\n  };\n\n  _handleKeyUp = (e) => {\n    const { onKeyUp, onTabFocus } = this.props;\n    if (onKeyUp) {\n      onKeyUp(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      if (onTabFocus) {\n        onTabFocus(e);\n      }\n\n      this.setState({ tabFocused: true });\n    }\n  };\n\n  _handleBlur = (e) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n\n    if (this.state.tabFocused) {\n      this.setState({ tabFocused: false });\n    }\n  };\n\n  render() {\n    const {\n      component: Component,\n      children,\n      className,\n      tabbedClassName,\n      disabled,\n      tabIndex,\n      ink,\n      noFocusOutline,\n      /* eslint-disable no-unused-vars */\n      onBlur,\n      onClick,\n      onKeyUp,\n      onKeyDown,\n      onTabFocus,\n      listenToEnter,\n      listenToSpace,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let childElements = children;\n    if (ink) {\n      childElements = Children.toArray(children);\n      childElements.unshift(ink);\n    }\n\n    return (\n      <Component\n        {...props}\n        ref={this._setNode}\n        className={cn('md-fake-btn', {\n          'md-pointer--hover': !disabled,\n          'md-fake-btn--no-outline': noFocusOutline,\n          [tabbedClassName]: tabbedClassName && this.state.tabFocused,\n        }, className)}\n        disabled={disabled}\n        tabIndex={disabled ? null : tabIndex}\n        onBlur={this._handleBlur}\n        onClick={this._handleClick}\n        onKeyUp={this._handleKeyUp}\n        onKeyDown={this._handleKeyDown}\n        aria-pressed={this.state.pressed}\n      >\n        {childElements}\n      </Component>\n    );\n  }\n}\n","// This will need to keep in sync with the `ReactCSSTransitionGroupChild` `TICK` const.\n// https://github.com/facebook/react/blob/master/src/addons/transitions/ReactCSSTransitionGroupChild.js#L22\n\nexport default 17;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\n\nexport default class Ink extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    aborted: PropTypes.bool,\n    onRemove: PropTypes.func,\n    left: PropTypes.number.isRequired,\n    top: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    transitionOverlap: PropTypes.number.isRequired,\n    transitionEnterTimeout: PropTypes.number.isRequired,\n    transitionLeaveTimeout: PropTypes.number.isRequired,\n    pulse: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: false,\n      expanded: false,\n      pulsing: false,\n      leaving: false,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.props.aborted && nextProps.aborted) {\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n      }\n\n      if (this._abort) {\n        this._abort();\n      }\n\n      this.setState({ active: false, expanding: false, pulsing: false, leaving: false });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  componentWillEnter(cb) {\n    if (this.props.aborted) {\n      cb();\n      return;\n    }\n\n    const { transitionOverlap, transitionEnterTimeout } = this.props;\n    this._abort = cb;\n\n    this._timeout = setTimeout(() => {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n        this._abort = null;\n\n        cb();\n      }, transitionEnterTimeout - transitionOverlap);\n\n      this.setState({ expanded: true });\n    }, TICK);\n\n    this.setState({ active: true });\n  }\n\n  componentDidEnter() {\n    if (this.props.pulse) {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        this.setState({ pulsing: true });\n      }, this.props.transitionEnterTimeout);\n    }\n  }\n\n  componentWillLeave(cb) {\n    if (this.props.aborted) {\n      cb();\n      return;\n    }\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._abort = cb;\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n\n      cb();\n    }, this.props.transitionLeaveTimeout);\n\n\n    this.setState({ pulsing: false, leaving: true });\n  }\n\n  componentDidLeave() {\n    if (!this.props.aborted && this.props.onRemove) {\n      this.props.onRemove();\n    }\n  }\n\n  render() {\n    const {\n      style,\n      className,\n      left,\n      top,\n      size,\n    } = this.props;\n    const { active, expanded, pulsing, leaving } = this.state;\n\n    return (\n      <span\n        style={Object.assign({}, style, {\n          left,\n          top,\n          height: size,\n          width: size,\n        })}\n        className={cn('md-ink', {\n          'md-ink--active': active,\n          'md-ink--expanded': expanded,\n          'md-ink--pulsing': pulsing,\n          'md-ink--leaving': leaving,\n        }, className)}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport TransitionGroup from 'react-transition-group/TransitionGroup';\nimport cn from 'classnames';\n\nimport { ENTER, SPACE } from '../constants/keyCodes';\nimport isFormPartRole from '../utils/isFormPartRole';\nimport calcPageOffset from '../utils/Positioning/calcPageOffset';\nimport isValidClick from '../utils/EventUtils/isValidClick';\nimport { setTouchEvent, addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport calculateHypotenuse from '../utils/NumberUtils/calculateHypotenuse';\n\nimport Ink from './Ink';\n\n\n/**\n * The `InkContainer` is used for holding the list of inks that get created by touch,\n * click, or keyboard focus.\n *\n * If the container element has the `type=\"submit\"` attribute, the ink will also be\n * triggered when the user presses enter anywhere in the form.\n */\nexport default class InkContainer extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    inkStyle: PropTypes.object,\n    inkClassName: PropTypes.string,\n    waitForInkTransition: PropTypes.bool,\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'mouse', 'touch'])),\n    transitionOverlap: PropTypes.number.isRequired,\n    transitionEnterTimeout: PropTypes.number.isRequired,\n    transitionLeaveTimeout: PropTypes.number.isRequired,\n    pulse: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    transitionOverlap: 150,\n    transitionEnterTimeout: 450,\n    transitionLeaveTimeout: 300,\n  };\n\n  state = { inks: [] };\n\n  componentWillReceiveProps(nextProps) {\n    const { disabledInteractions: di } = this.props;\n    const { disabledInteractions: ndi } = nextProps;\n    if (di === ndi || !this._container) {\n      return;\n    }\n\n    const mouseDisabledDiff = this._isListenerDisabledDiff('mouse', di, ndi);\n    const touchDisabledDiff = this._isListenerDisabledDiff('touch', di, ndi);\n    const keyboardDisabledDiff = this._isListenerDisabledDiff('keyboard', di, ndi);\n    this._initOrRemoveEvents(nextProps, keyboardDisabledDiff, mouseDisabledDiff, touchDisabledDiff);\n  }\n\n  componentWillUnmount() {\n    if (this._removeTimeout) {\n      clearTimeout(this._removeTimeout);\n    }\n\n    if (this._container) {\n      this._initOrRemoveEvents({ disabledInteractions: ['keyboard', 'mouse', 'touch'] });\n      this._getKeyboardContainer().removeEventListener('blur', this._handleBlur);\n    }\n  }\n\n\n  /**\n   * Creates an ink from pageX and pageY coordinates. These values should either come\n   * from the `changedTouches` or just the base event (if clicked). These coordinates\n   * are used to position the ink correctly in the container from touch/click point.\n   * If either value is undefined, an ink will be created from the center of the\n   * container.\n   *\n   * It will also automatically remove the ink.\n   *\n   * @param {number} pageX - The page x coordinate of the click or touch event.\n   * @param {number} pageY - The page y coordinate of the click or touch event.\n   */\n  createInk = (pageX, pageY) => {\n    this._createInk(pageX, pageY);\n    this._removeTimeout = setTimeout(() => {\n      this._removeTimeout = null;\n      this._removeInk();\n    }, this.props.transitionOverlap);\n  };\n\n  /**\n   * Focuses the main element.\n   */\n  focus = () => {\n    this._getKeyboardContainer().focus();\n  };\n\n  _isListenerDisabledDiff(interaction, disabledInteractions, nextDisabledInteractions) {\n    const i = disabledInteractions.indexOf(interaction);\n    const ni = nextDisabledInteractions.indexOf(interaction);\n\n    return (i < 0 && ni >= 0) || (i >= 0 && ni < 0);\n  }\n\n  _isListenerDisabled(interaction, disabledInteractions) {\n    return disabledInteractions && disabledInteractions.indexOf(interaction) !== -1;\n  }\n\n  /**\n   * Creates an ink from pageX and pageY coordinates. These values should either come\n   * from the `changedTouches` or just the base event (if clicked). These coordinates\n   * are used to position the ink correctly in the container from touch/click point.\n   * If either value is undefined, an ink will be created from the center of the\n   * container.\n   *\n   * @param {number} pageX - The page x coordinate of the click or touch event.\n   * @param {number} pageY - The page y coordinate of the click or touch event.\n   */\n  _createInk = (pageX, pageY) => {\n    const { offsetWidth, offsetHeight } = this._inkContainer;\n\n    let x;\n    let y;\n    if (typeof pageX !== 'undefined' && typeof pageY !== 'undefined') {\n      const pageOffset = calcPageOffset(this._inkContainer);\n\n      x = pageX - pageOffset.left;\n      y = pageY - pageOffset.top;\n    } else {\n      x = offsetWidth / 2;\n      y = offsetHeight / 2;\n    }\n\n    const r = Math.max(\n      calculateHypotenuse(x, y),\n      calculateHypotenuse(offsetWidth - x, y),\n      calculateHypotenuse(offsetWidth - x, offsetHeight - y),\n      calculateHypotenuse(x, offsetHeight - y)\n    );\n\n    const ink = {\n      left: x - r,\n      top: y - r,\n      size: r * 2,\n      key: Date.now(),\n    };\n\n    const inks = this.state.inks.slice();\n    inks.push(ink);\n    this.setState({ inks });\n  };\n\n  /**\n   * Removes an ink from the container.\n   */\n  _removeInk = () => {\n    const inks = this.state.inks.slice();\n    inks.pop();\n\n    this.setState({ inks });\n  };\n\n  /**\n   * Gets the container for any keyboard events. This will almost always be the main element,\n   * but text fields will need to be the input itself.\n   */\n  _getKeyboardContainer = () => {\n    if (this._container.classList.contains('md-text-field-container')) {\n      return this._container.querySelector('.md-text-field');\n    }\n\n    return this._container;\n  };\n\n  /**\n   * Sets the ink container and the main container from the ref callback. When the component\n   * is mounting, the keyboard, mouse, and keyboard events will be initialized.\n   */\n  _setContainers = (group) => {\n    if (group !== null) {\n      this._inkContainer = findDOMNode(group);\n      this._container = this._inkContainer.parentElement;\n\n      if (this._container) {\n        this._initOrRemoveEvents(this.props);\n      }\n    }\n  };\n\n  /**\n   * This function will either add or remove the event listeners for creating inks.\n   *\n   * @param {Object} props - The current props to use for figuring out if the events should\n   *    be added or removed.\n   * @param {bool=} keyboardDiff - Boolean if there was a difference between the current props and either\n   *    the previous or next props for the keyboard interactions being disabled.\n   * @param {bool=} mouseDiff - Boolean if there was a difference between the current props and either\n   *    the previous or next props for the mouse interactions being disabled.\n   * @param {bool=} touchDiff - Boolean if there was a difference between the current props and either\n   *    the previous or next props for the touch interactions being disabled.\n   */\n  _initOrRemoveEvents = (props, keyboardDiff = true, mouseDiff = true, touchDiff = true) => {\n    const mouseDisabled = this._isListenerDisabled('mouse', props.disabledInteractions);\n    const touchDisabled = this._isListenerDisabled('touch', props.disabledInteractions);\n    const keyboardDisabled = this._isListenerDisabled('keyboard', props.disabledInteractions);\n\n    if (keyboardDiff) {\n      const fn = `${keyboardDisabled ? 'remove' : 'add'}EventListener`;\n      this._getKeyboardContainer()[fn]('focus', this._handleFocus);\n      this._getKeyboardContainer()[fn]('keydown', this._handleKeyDown);\n\n      if (this._container.getAttribute('type') === 'submit') {\n        window[fn]('submit', this._handleSubmit);\n      }\n\n      if (mouseDiff) {\n        this._container[`${!mouseDisabled ? 'add' : 'remove'}EventListener`]('mousedown', this._stopPropagationToFocus);\n      }\n\n      if (touchDiff) {\n        setTouchEvent(!touchDisabled, this._container, 'start', this._stopPropagationToFocus);\n      }\n    }\n\n    if (mouseDiff) {\n      const fn = `${mouseDisabled ? 'remove' : 'add'}EventListener`;\n      this._container[fn]('mousedown', this._handleMouseDown);\n      this._container[fn]('mouseup', this._handleMouseUp);\n    }\n\n    if (touchDiff) {\n      setTouchEvent(!touchDisabled, this._container, 'start', this._handleTouchStart);\n      setTouchEvent(!touchDisabled, this._container, 'end', this._handleTouchEnd);\n    }\n  };\n\n  _maybeDelayClick = () => {\n    if (!this.props.waitForInkTransition) {\n      return;\n    }\n\n    captureNextEvent('click', this._container);\n  };\n\n  _handleRemove = () => {\n    if (this._clicked && this.props.waitForInkTransition) {\n      // For some reason if the click event will make the ink unmount, it will no longer\n      // have a debug id in the TransitionGroup and it displays a warning. Adding a 1ms timeout\n      // fixes that issue... It only happens on an actual click instead of an enter click.\n      setTimeout(() => {\n        this._container.click();\n      }, 1);\n    }\n\n    this._clicked = false;\n  };\n\n  _handleKeyDown = (e) => {\n    const key = e.which || e.keyCode;\n    const enter = key === ENTER;\n    const space = key === SPACE;\n    // Don't trigger ink when enter key is pressed and the target has an input inside of it (SelectField)\n    if (space || (enter && !isFormPartRole(e.target) && !e.target.querySelector('input'))) {\n      this._clicked = true;\n      this.createInk();\n      this._maybeDelayClick();\n    }\n  };\n\n  _handleFocus = () => {\n    if (this._clicked) {\n      return;\n    }\n\n    this._createInk();\n    this._getKeyboardContainer().addEventListener('blur', this._handleBlur);\n  };\n\n  _handleBlur = () => {\n    this._getKeyboardContainer().removeEventListener('blur', this._handleBlur);\n    this._removeInk();\n  };\n\n  _handleMouseDown = (e) => {\n    this._clicked = true;\n    if (!isValidClick(e) || this._skipNextMouse) {\n      this._skipNextMouse = false;\n      return;\n    }\n\n    this._mouseLeave = false;\n    this._container.addEventListener('mouseleave', this._handleMouseLeave);\n    this._createInk(e.pageX, e.pageY);\n  };\n\n  _handleMouseLeave = () => {\n    this._container.removeEventListener('mouseleave', this._handleMouseLeave);\n    this._mouseLeave = true;\n    this._removeInk();\n  };\n\n  _handleMouseUp = () => {\n    if (this._mouseLeave) {\n      return;\n    }\n\n    this._maybeDelayClick();\n    this._container.removeEventListener('mouseleave', this._handleMouseLeave);\n    this._removeInk();\n  };\n\n  _handleTouchStart = (e) => {\n    this._aborted = false;\n    this._clicked = true;\n    this._skipNextMouse = true;\n    addTouchEvent(window, 'move', this._handleTouchMove);\n\n    const { pageX, pageY } = e.changedTouches[0];\n    this._createInk(pageX, pageY);\n  };\n\n  _handleTouchMove = () => {\n    removeTouchEvent(window, 'move', this._handleTouchMove);\n    const lastInk = this.state.inks[this.state.inks.length - 1];\n    if (!lastInk || Date.now() > (lastInk.key + 200)) {\n      this._aborted = false;\n      return;\n    }\n\n    const inks = this.state.inks.slice();\n    const index = inks.length - 1;\n\n    const abortedInk = Object.assign({}, lastInk, { aborted: true });\n    inks.splice(index, 1, abortedInk);\n\n    this._aborted = true;\n    this.setState({ inks }, this._removeInk);\n  };\n\n  _handleTouchEnd = () => {\n    this._skipNextMouse = true;\n\n    if (this._aborted) {\n      return;\n    } else {\n      removeTouchEvent(window, 'move', this._handleTouchMove);\n    }\n\n    this._removeInk();\n  };\n\n  /**\n   * If a form was submitted that contains the container of the ink and the current focus element\n   * is not the container, trigger an ink effect.\n   *\n   * The current focus check is added so that two inks are not created.\n   */\n  _handleSubmit = (e) => {\n    if (document.activeElement === this._container || !e.target.contains(this._container)) {\n      return;\n    }\n\n    this._maybeDelayClick();\n    this.createInk();\n  };\n\n  _stopPropagationToFocus = (e) => {\n    switch (e.type) {\n      case 'touchstart':\n        addTouchEvent(window, 'end', this._stopPropagationToFocus, { capture: true });\n        break;\n      case 'touchend':\n        removeTouchEvent(window, 'end', this._stopPropagationToFocus, { capture: true });\n        break;\n      case 'mousedown':\n        window.addEventListener('mouseup', this._stopPropagationToFocus, true);\n        break;\n      case 'mouseup':\n        window.removeEventListener('mouseup', this._stopPropagationToFocus, true);\n        break;\n      default:\n    }\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      inkStyle,\n      inkClassName,\n      transitionOverlap,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      pulse,\n    } = this.props;\n    const inks = this.state.inks.map(props => (\n      <Ink\n        {...props}\n        pulse={pulse}\n        style={inkStyle}\n        className={inkClassName}\n        onRemove={this._handleRemove}\n        transitionOverlap={transitionOverlap}\n        transitionEnterTimeout={transitionEnterTimeout}\n        transitionLeaveTimeout={transitionLeaveTimeout}\n      />\n    ));\n\n    return (\n      <TransitionGroup\n        component=\"div\"\n        style={style}\n        className={cn('md-ink-container', className)}\n        ref={this._setContainers}\n      >\n        {inks}\n      </TransitionGroup>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport default {\n  inkDisabled: PropTypes.bool,\n  inkDisabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'mouse', 'touch'])),\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport getField from '../utils/getField';\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\n\nimport InkContainer from './InkContainer';\nimport inkContextTypes from './inkContextTypes';\n\n/**\n * Takes any component and injects an ink container for having the Material Design Ink effect.\n *\n * The default triggers for an ink are:\n * - mouse down event\n * - touch start event\n * - keyboard focus\n * - form submit\n *\n * The form submit ink will only be triggered if the `ComposedComponent` has the attribute\n * `type=\"submit\"`, the `ComposedComponent` is in a form, and the user hits the `enter` key\n * while not actively focusing the `ComposedComponent`.\n *\n * ```js\n * @param {function} ComposedComponent - The React Component to inject an `ink` prop into.\n * @return {function} a new React class rendering the `ComposedComponent` and adding an\n *    `ink` pop.\n * ```\n */\nexport default ComposedComponent => class InkedComponent extends PureComponent {\n  static displayName = getDisplayName(ComposedComponent, 'Ink');\n  static propTypes = {\n    /**\n     * An optional style to apply to each ink that gets generated.\n     */\n    inkStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to each ink that gets generated.\n     */\n    inkClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the ink's container.\n     */\n    inkContainerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the ink's container.\n     */\n    inkContainerClassName: PropTypes.string,\n\n    /**\n     * Boolean if the composed component or the ink is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if only the ink is disabled for the composed component.\n     */\n    inkDisabled: PropTypes.bool,\n\n    /**\n     * The time (in ms) that the enter and leave transitions for the ink should overlap.\n     * This really just allows for a more _fluid_ looking ink when something is quickly\n     * touched or clicked by having it fade out while growing.\n     */\n    inkTransitionOverlap: PropTypes.number.isRequired,\n\n    /**\n     * The transition time for the ink to be considered fully entered. This should really\n     * map up to whatever value you set for `$md-ink-enter-transition-time`.\n     */\n    inkTransitionEnterTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The transition time for the ink to be considered fully leaved (left?). This should really\n     * map up to whatever value you set for `$md-ink-leave-transition-time`.\n     */\n    inkTransitionLeaveTimeout: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the `ComposedComponent`'s click event only after the ink has finished transitioning\n     * in and out. This is really only to get a more _fluid_ looking click event when clicking on\n     * the `ComposedComponent` ends up taking it out of the view. (ex: Closing a Dialog).\n     */\n    waitForInkTransition: PropTypes.bool,\n\n    /**\n     * An optional array of interactions that can be disabled for the ink. This is a *very* limited\n     * use case where `Switches` needed the ink disabled only when using a mouse.\n     */\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'mouse', 'touch'])),\n\n    /**\n     * Boolean if the ink should do a pulse animation while focused. This was enabled by default in\n     * previous versions.\n     */\n    pulse: PropTypes.bool,\n\n    /**\n     * When using inked components in a `TransitionGroup`, the ref callback is not actually invoked.\n     * This is a little _hack_ to get it to work by not using `ref`, but this name.\n     */\n    __SUPER_SECRET_REF__: PropTypes.func,\n  };\n\n  static defaultProps = {\n    inkTransitionOverlap: 150,\n    inkTransitionEnterTimeout: 450,\n    inkTransitionLeaveTimeout: 300,\n  };\n\n  static contextTypes = inkContextTypes;\n\n  componentDidMount() {\n    const { __SUPER_SECRET_REF__: ref } = this.props;\n    // Emulate the ref callback...\n    if (ref) {\n      ref(this);\n    }\n  }\n\n  componentWillUnmount() {\n    const { __SUPER_SECRET_REF__: ref } = this.props;\n    // Emulate the ref callback...\n    if (ref) {\n      ref(null);\n    }\n  }\n\n  /**\n   * A publicly accessible way to manually create an ink. This can be used with the `refs`.\n   * The ink can either be created by using the `pageX` and `pageY` from a click/touch event\n   * or it will be created in the center of the `ComposedComponent`.\n   *\n   * ```js\n   * <SomeInkedComponent ref={inkHOC => inkHOC.createInk()} />\n   * ```\n   *\n   * @param {number=} pageX - An optional pageX of the click or touch event.\n   * @param {number=} pageY - An optional pageY of the click or touch event.\n   */\n  createInk = (pageX, pageY) => {\n    if (this._inkContainer && !this.props.disabled && !this.props.inkDisabled) {\n      this._inkContainer.createInk(pageX, pageY);\n    }\n  };\n\n  /**\n   * This will attempt to focus the composed component. If the component is disabled, nothing\n   * will happen. If the `disabled` and `inkDisabled` props are not set to `true`, an ink will\n   * also be created.\n   *\n   * ```js\n   * <SomeInkedComponent ref={inkHOC => inkHOC.focus()} />\n   * ```\n   */\n  focus = () => {\n    if (this._inkContainer) {\n      this._inkContainer.focus();\n    }\n  };\n\n  /**\n   * Gets the composed component as a ref. This is useful if you need to access the ref of the\n   * composed component instead of the `injectInk` HOC to use some publicly accessible methods.\n   *\n   * ```js\n   * <SomeInkedComponent\n   *   ref={inkHOC => {\n   *     inkHOC.getComposedComponent().focus();\n   *   }}\n   * />\n   * ```\n   */\n  getComposedComponent = () => this._composed;\n\n  _setInkRef= (inkContainer) => {\n    if (inkContainer) {\n      this._inkContainer = inkContainer;\n    }\n  };\n\n  _setComposedComponent = (component) => {\n    this._composed = component;\n  };\n\n  render() {\n    const {\n      inkTransitionOverlap: transitionOverlap,\n      inkTransitionEnterTimeout: transitionEnterTimeout,\n      inkTransitionLeaveTimeout: transitionLeaveTimeout,\n      inkStyle,\n      inkClassName,\n      inkContainerStyle,\n      inkContainerClassName,\n      waitForInkTransition,\n      disabledInteractions,\n      pulse,\n      inkDisabled: propInkDisabled, // eslint-disable-line no-unused-vars\n      __SUPER_SECRET_REF__, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    const inkDisabled = getField(this.props, this.context, 'inkDisabled');\n    const inkDisabledInteractions = typeof disabledInteractions !== 'undefined'\n      ? disabledInteractions\n      : this.context.inkDisabledInteractions;\n\n    if (!(props.disabled || inkDisabled)) {\n      props.ink = (\n        <InkContainer\n          ref={this._setInkRef}\n          key=\"ink-container\"\n          pulse={pulse}\n          style={inkContainerStyle}\n          className={inkContainerClassName}\n          inkStyle={inkStyle}\n          inkClassName={inkClassName}\n          disabledInteractions={inkDisabledInteractions}\n          transitionOverlap={transitionOverlap}\n          transitionEnterTimeout={transitionEnterTimeout}\n          transitionLeaveTimeout={transitionLeaveTimeout}\n          waitForInkTransition={waitForInkTransition}\n        />\n      );\n    }\n\n    props.ref = this._setComposedComponent;\n\n    return <ComposedComponent {...props} />;\n  }\n};\n","import AccessibleFakeButton from './AccessibleFakeButton';\nimport injectInk from '../Inks/injectInk';\n\nexport default injectInk(AccessibleFakeButton);\n","\n\n// currently used to initiate the velocity style object to 0\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = mapToZero;\n\nfunction mapToZero(obj) {\n  var ret = {};\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ret[key] = 0;\n    }\n  }\n  return ret;\n}\n\nmodule.exports = exports['default'];","\n// turn {x: {val: 1, stiffness: 1, damping: 2}, y: 2} generated by\n// `{x: spring(1, {stiffness: 1, damping: 2}), y: 2}` into {x: 1, y: 2}\n\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = stripStyle;\n\nfunction stripStyle(style) {\n  var ret = {};\n  for (var key in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\n      continue;\n    }\n    ret[key] = typeof style[key] === 'number' ? style[key] : style[key].val;\n  }\n  return ret;\n}\n\nmodule.exports = exports['default'];","\n\n// stepper is used a lot. Saves allocation to return the same array wrapper.\n// This is fine and danger-free against mutations because the callsite\n// immediately destructures it and gets the numbers inside without passing the\n\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = stepper;\n\nvar reusedTuple = [0, 0];\n\nfunction stepper(secondPerFrame, x, v, destX, k, b, precision) {\n  // Spring stiffness, in kg / s^2\n\n  // for animations, destX is really spring length (spring at rest). initial\n  // position is considered as the stretched/compressed position of a spring\n  var Fspring = -k * (x - destX);\n\n  // Damping, in kg / s\n  var Fdamper = -b * v;\n\n  // usually we put mass here, but for animation purposes, specifying mass is a\n  // bit redundant. you could simply adjust k and b accordingly\n  // let a = (Fspring + Fdamper) / mass;\n  var a = Fspring + Fdamper;\n\n  var newV = v + a * secondPerFrame;\n  var newX = x + newV * secondPerFrame;\n\n  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {\n    reusedTuple[0] = destX;\n    reusedTuple[1] = 0;\n    return reusedTuple;\n  }\n\n  reusedTuple[0] = newX;\n  reusedTuple[1] = newV;\n  return reusedTuple;\n}\n\nmodule.exports = exports[\"default\"];\n// array reference around.","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function() {\n  root.requestAnimationFrame = raf\n  root.cancelAnimationFrame = caf\n}\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","\n\n// usage assumption: currentStyle values have already been rendered but it says\n// nothing of whether currentStyle is stale (see unreadPropStyle)\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = shouldStopAnimation;\n\nfunction shouldStopAnimation(currentStyle, style, currentVelocity) {\n  for (var key in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\n      continue;\n    }\n\n    if (currentVelocity[key] !== 0) {\n      return false;\n    }\n\n    var styleValue = typeof style[key] === 'number' ? style[key] : style[key].val;\n    // stepper will have already taken care of rounding precision errors, so\n    // won't have such thing as 0.9999 !=== 1\n    if (currentStyle[key] !== styleValue) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = exports['default'];","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _mapToZero = require('./mapToZero');\n\nvar _mapToZero2 = _interopRequireDefault(_mapToZero);\n\nvar _stripStyle = require('./stripStyle');\n\nvar _stripStyle2 = _interopRequireDefault(_stripStyle);\n\nvar _stepper3 = require('./stepper');\n\nvar _stepper4 = _interopRequireDefault(_stepper3);\n\nvar _performanceNow = require('performance-now');\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldStopAnimation = require('./shouldStopAnimation');\n\nvar _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar msPerFrame = 1000 / 60;\n\nvar Motion = (function (_React$Component) {\n  _inherits(Motion, _React$Component);\n\n  _createClass(Motion, null, [{\n    key: 'propTypes',\n    value: {\n      // TOOD: warn against putting a config in here\n      defaultStyle: _propTypes2['default'].objectOf(_propTypes2['default'].number),\n      style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired,\n      children: _propTypes2['default'].func.isRequired,\n      onRest: _propTypes2['default'].func\n    },\n    enumerable: true\n  }]);\n\n  function Motion(props) {\n    var _this = this;\n\n    _classCallCheck(this, Motion);\n\n    _React$Component.call(this, props);\n    this.wasAnimating = false;\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyle = null;\n\n    this.clearUnreadPropStyle = function (destStyle) {\n      var dirty = false;\n      var _state = _this.state;\n      var currentStyle = _state.currentStyle;\n      var currentVelocity = _state.currentVelocity;\n      var lastIdealStyle = _state.lastIdealStyle;\n      var lastIdealVelocity = _state.lastIdealVelocity;\n\n      for (var key in destStyle) {\n        if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {\n          continue;\n        }\n\n        var styleValue = destStyle[key];\n        if (typeof styleValue === 'number') {\n          if (!dirty) {\n            dirty = true;\n            currentStyle = _extends({}, currentStyle);\n            currentVelocity = _extends({}, currentVelocity);\n            lastIdealStyle = _extends({}, lastIdealStyle);\n            lastIdealVelocity = _extends({}, lastIdealVelocity);\n          }\n\n          currentStyle[key] = styleValue;\n          currentVelocity[key] = 0;\n          lastIdealStyle[key] = styleValue;\n          lastIdealVelocity[key] = 0;\n        }\n      }\n\n      if (dirty) {\n        _this.setState({ currentStyle: currentStyle, currentVelocity: currentVelocity, lastIdealStyle: lastIdealStyle, lastIdealVelocity: lastIdealVelocity });\n      }\n    };\n\n    this.startAnimationIfNecessary = function () {\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        // check if we need to animate in the first place\n        var propsStyle = _this.props.style;\n        if (_shouldStopAnimation2['default'](_this.state.currentStyle, propsStyle, _this.state.currentVelocity)) {\n          if (_this.wasAnimating && _this.props.onRest) {\n            _this.props.onRest();\n          }\n\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.wasAnimating = false;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        _this.wasAnimating = true;\n\n        var currentTime = timestamp || _performanceNow2['default']();\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta;\n        // more than 10 frames? prolly switched browser tab. Restart\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.startAnimationIfNecessary();\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var newLastIdealStyle = {};\n        var newLastIdealVelocity = {};\n        var newCurrentStyle = {};\n        var newCurrentVelocity = {};\n\n        for (var key in propsStyle) {\n          if (!Object.prototype.hasOwnProperty.call(propsStyle, key)) {\n            continue;\n          }\n\n          var styleValue = propsStyle[key];\n          if (typeof styleValue === 'number') {\n            newCurrentStyle[key] = styleValue;\n            newCurrentVelocity[key] = 0;\n            newLastIdealStyle[key] = styleValue;\n            newLastIdealVelocity[key] = 0;\n          } else {\n            var newLastIdealStyleValue = _this.state.lastIdealStyle[key];\n            var newLastIdealVelocityValue = _this.state.lastIdealVelocity[key];\n            for (var i = 0; i < framesToCatchUp; i++) {\n              var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              newLastIdealStyleValue = _stepper[0];\n              newLastIdealVelocityValue = _stepper[1];\n            }\n\n            var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n            var nextIdealX = _stepper2[0];\n            var nextIdealV = _stepper2[1];\n\n            newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n            newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n            newLastIdealStyle[key] = newLastIdealStyleValue;\n            newLastIdealVelocity[key] = newLastIdealVelocityValue;\n          }\n        }\n\n        _this.animationID = null;\n        // the amount we're looped over above\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyle: newCurrentStyle,\n          currentVelocity: newCurrentVelocity,\n          lastIdealStyle: newLastIdealStyle,\n          lastIdealVelocity: newLastIdealVelocity\n        });\n\n        _this.unreadPropStyle = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  Motion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyle = _props.defaultStyle;\n    var style = _props.style;\n\n    var currentStyle = defaultStyle || _stripStyle2['default'](style);\n    var currentVelocity = _mapToZero2['default'](currentStyle);\n    return {\n      currentStyle: currentStyle,\n      currentVelocity: currentVelocity,\n      lastIdealStyle: currentStyle,\n      lastIdealVelocity: currentVelocity\n    };\n  };\n\n  // it's possible that currentStyle's value is stale: if props is immediately\n  // changed from 0 to 400 to spring(0) again, the async currentStyle is still\n  // at 0 (didn't have time to tick and interpolate even once). If we naively\n  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n  // In reality currentStyle should be 400\n\n  Motion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  Motion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyle != null) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyle);\n    }\n\n    this.unreadPropStyle = props.style;\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  Motion.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n      this.animationID = null;\n    }\n  };\n\n  Motion.prototype.render = function render() {\n    var renderedChildren = this.props.children(this.state.currentStyle);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return Motion;\n})(_react2['default'].Component);\n\nexports['default'] = Motion;\nmodule.exports = exports['default'];\n\n// after checking for unreadPropStyle != null, we manually go set the\n// non-interpolating values (those that are a number, without a spring\n// config)","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _mapToZero = require('./mapToZero');\n\nvar _mapToZero2 = _interopRequireDefault(_mapToZero);\n\nvar _stripStyle = require('./stripStyle');\n\nvar _stripStyle2 = _interopRequireDefault(_stripStyle);\n\nvar _stepper3 = require('./stepper');\n\nvar _stepper4 = _interopRequireDefault(_stepper3);\n\nvar _performanceNow = require('performance-now');\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldStopAnimation = require('./shouldStopAnimation');\n\nvar _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar msPerFrame = 1000 / 60;\n\nfunction shouldStopAnimationAll(currentStyles, styles, currentVelocities) {\n  for (var i = 0; i < currentStyles.length; i++) {\n    if (!_shouldStopAnimation2['default'](currentStyles[i], styles[i], currentVelocities[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar StaggeredMotion = (function (_React$Component) {\n  _inherits(StaggeredMotion, _React$Component);\n\n  _createClass(StaggeredMotion, null, [{\n    key: 'propTypes',\n    value: {\n      // TOOD: warn against putting a config in here\n      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].objectOf(_propTypes2['default'].number)),\n      styles: _propTypes2['default'].func.isRequired,\n      children: _propTypes2['default'].func.isRequired\n    },\n    enumerable: true\n  }]);\n\n  function StaggeredMotion(props) {\n    var _this = this;\n\n    _classCallCheck(this, StaggeredMotion);\n\n    _React$Component.call(this, props);\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyles = null;\n\n    this.clearUnreadPropStyle = function (unreadPropStyles) {\n      var _state = _this.state;\n      var currentStyles = _state.currentStyles;\n      var currentVelocities = _state.currentVelocities;\n      var lastIdealStyles = _state.lastIdealStyles;\n      var lastIdealVelocities = _state.lastIdealVelocities;\n\n      var someDirty = false;\n      for (var i = 0; i < unreadPropStyles.length; i++) {\n        var unreadPropStyle = unreadPropStyles[i];\n        var dirty = false;\n\n        for (var key in unreadPropStyle) {\n          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {\n            continue;\n          }\n\n          var styleValue = unreadPropStyle[key];\n          if (typeof styleValue === 'number') {\n            if (!dirty) {\n              dirty = true;\n              someDirty = true;\n              currentStyles[i] = _extends({}, currentStyles[i]);\n              currentVelocities[i] = _extends({}, currentVelocities[i]);\n              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);\n              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);\n            }\n            currentStyles[i][key] = styleValue;\n            currentVelocities[i][key] = 0;\n            lastIdealStyles[i][key] = styleValue;\n            lastIdealVelocities[i][key] = 0;\n          }\n        }\n      }\n\n      if (someDirty) {\n        _this.setState({ currentStyles: currentStyles, currentVelocities: currentVelocities, lastIdealStyles: lastIdealStyles, lastIdealVelocities: lastIdealVelocities });\n      }\n    };\n\n    this.startAnimationIfNecessary = function () {\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        var destStyles = _this.props.styles(_this.state.lastIdealStyles);\n\n        // check if we need to animate in the first place\n        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities)) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        var currentTime = timestamp || _performanceNow2['default']();\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta;\n        // more than 10 frames? prolly switched browser tab. Restart\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.startAnimationIfNecessary();\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var newLastIdealStyles = [];\n        var newLastIdealVelocities = [];\n        var newCurrentStyles = [];\n        var newCurrentVelocities = [];\n\n        for (var i = 0; i < destStyles.length; i++) {\n          var destStyle = destStyles[i];\n          var newCurrentStyle = {};\n          var newCurrentVelocity = {};\n          var newLastIdealStyle = {};\n          var newLastIdealVelocity = {};\n\n          for (var key in destStyle) {\n            if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {\n              continue;\n            }\n\n            var styleValue = destStyle[key];\n            if (typeof styleValue === 'number') {\n              newCurrentStyle[key] = styleValue;\n              newCurrentVelocity[key] = 0;\n              newLastIdealStyle[key] = styleValue;\n              newLastIdealVelocity[key] = 0;\n            } else {\n              var newLastIdealStyleValue = _this.state.lastIdealStyles[i][key];\n              var newLastIdealVelocityValue = _this.state.lastIdealVelocities[i][key];\n              for (var j = 0; j < framesToCatchUp; j++) {\n                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n                newLastIdealStyleValue = _stepper[0];\n                newLastIdealVelocityValue = _stepper[1];\n              }\n\n              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              var nextIdealX = _stepper2[0];\n              var nextIdealV = _stepper2[1];\n\n              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n              newLastIdealStyle[key] = newLastIdealStyleValue;\n              newLastIdealVelocity[key] = newLastIdealVelocityValue;\n            }\n          }\n\n          newCurrentStyles[i] = newCurrentStyle;\n          newCurrentVelocities[i] = newCurrentVelocity;\n          newLastIdealStyles[i] = newLastIdealStyle;\n          newLastIdealVelocities[i] = newLastIdealVelocity;\n        }\n\n        _this.animationID = null;\n        // the amount we're looped over above\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyles: newCurrentStyles,\n          currentVelocities: newCurrentVelocities,\n          lastIdealStyles: newLastIdealStyles,\n          lastIdealVelocities: newLastIdealVelocities\n        });\n\n        _this.unreadPropStyles = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  StaggeredMotion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyles = _props.defaultStyles;\n    var styles = _props.styles;\n\n    var currentStyles = defaultStyles || styles().map(_stripStyle2['default']);\n    var currentVelocities = currentStyles.map(function (currentStyle) {\n      return _mapToZero2['default'](currentStyle);\n    });\n    return {\n      currentStyles: currentStyles,\n      currentVelocities: currentVelocities,\n      lastIdealStyles: currentStyles,\n      lastIdealVelocities: currentVelocities\n    };\n  };\n\n  StaggeredMotion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  StaggeredMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyles != null) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyles);\n    }\n\n    this.unreadPropStyles = props.styles(this.state.lastIdealStyles);\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  StaggeredMotion.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n      this.animationID = null;\n    }\n  };\n\n  StaggeredMotion.prototype.render = function render() {\n    var renderedChildren = this.props.children(this.state.currentStyles);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return StaggeredMotion;\n})(_react2['default'].Component);\n\nexports['default'] = StaggeredMotion;\nmodule.exports = exports['default'];\n\n// it's possible that currentStyle's value is stale: if props is immediately\n// changed from 0 to 400 to spring(0) again, the async currentStyle is still\n// at 0 (didn't have time to tick and interpolate even once). If we naively\n// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n// In reality currentStyle should be 400\n\n// after checking for unreadPropStyles != null, we manually go set the\n// non-interpolating values (those that are a number, without a spring\n// config)","\n\n// core keys merging algorithm. If previous render's keys are [a, b], and the\n// next render's [c, b, d], what's the final merged keys and ordering?\n\n// - c and a must both be before b\n// - b before d\n// - ordering between a and c ambiguous\n\n// this reduces to merging two partially ordered lists (e.g. lists where not\n// every item has a definite ordering, like comparing a and c above). For the\n// ambiguous ordering we deterministically choose to place the next render's\n// item after the previous'; so c after a\n\n// this is called a topological sorting. Except the existing algorithms don't\n// work well with js bc of the amount of allocation, and isn't optimized for our\n// current use-case bc the runtime is linear in terms of edges (see wiki for\n// meaning), which is huge when two lists have many common elements\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = mergeDiff;\n\nfunction mergeDiff(prev, next, onRemove) {\n  // bookkeeping for easier access of a key's index below. This is 2 allocations +\n  // potentially triggering chrome hash map mode for objs (so it might be faster\n\n  var prevKeyIndex = {};\n  for (var i = 0; i < prev.length; i++) {\n    prevKeyIndex[prev[i].key] = i;\n  }\n  var nextKeyIndex = {};\n  for (var i = 0; i < next.length; i++) {\n    nextKeyIndex[next[i].key] = i;\n  }\n\n  // first, an overly elaborate way of merging prev and next, eliminating\n  // duplicates (in terms of keys). If there's dupe, keep the item in next).\n  // This way of writing it saves allocations\n  var ret = [];\n  for (var i = 0; i < next.length; i++) {\n    ret[i] = next[i];\n  }\n  for (var i = 0; i < prev.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(nextKeyIndex, prev[i].key)) {\n      // this is called my TM's `mergeAndSync`, which calls willLeave. We don't\n      // merge in keys that the user desires to kill\n      var fill = onRemove(i, prev[i]);\n      if (fill != null) {\n        ret.push(fill);\n      }\n    }\n  }\n\n  // now all the items all present. Core sorting logic to have the right order\n  return ret.sort(function (a, b) {\n    var nextOrderA = nextKeyIndex[a.key];\n    var nextOrderB = nextKeyIndex[b.key];\n    var prevOrderA = prevKeyIndex[a.key];\n    var prevOrderB = prevKeyIndex[b.key];\n\n    if (nextOrderA != null && nextOrderB != null) {\n      // both keys in next\n      return nextKeyIndex[a.key] - nextKeyIndex[b.key];\n    } else if (prevOrderA != null && prevOrderB != null) {\n      // both keys in prev\n      return prevKeyIndex[a.key] - prevKeyIndex[b.key];\n    } else if (nextOrderA != null) {\n      // key a in next, key b in prev\n\n      // how to determine the order between a and b? We find a \"pivot\" (term\n      // abuse), a key present in both prev and next, that is sandwiched between\n      // a and b. In the context of our above example, if we're comparing a and\n      // d, b's (the only) pivot\n      for (var i = 0; i < next.length; i++) {\n        var pivot = next[i].key;\n        if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {\n          continue;\n        }\n\n        if (nextOrderA < nextKeyIndex[pivot] && prevOrderB > prevKeyIndex[pivot]) {\n          return -1;\n        } else if (nextOrderA > nextKeyIndex[pivot] && prevOrderB < prevKeyIndex[pivot]) {\n          return 1;\n        }\n      }\n      // pluggable. default to: next bigger than prev\n      return 1;\n    }\n    // prevOrderA, nextOrderB\n    for (var i = 0; i < next.length; i++) {\n      var pivot = next[i].key;\n      if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {\n        continue;\n      }\n      if (nextOrderB < nextKeyIndex[pivot] && prevOrderA > prevKeyIndex[pivot]) {\n        return 1;\n      } else if (nextOrderB > nextKeyIndex[pivot] && prevOrderA < prevKeyIndex[pivot]) {\n        return -1;\n      }\n    }\n    // pluggable. default to: next bigger than prev\n    return -1;\n  });\n}\n\nmodule.exports = exports['default'];\n// to loop through and find a key's index each time), but I no longer care","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _mapToZero = require('./mapToZero');\n\nvar _mapToZero2 = _interopRequireDefault(_mapToZero);\n\nvar _stripStyle = require('./stripStyle');\n\nvar _stripStyle2 = _interopRequireDefault(_stripStyle);\n\nvar _stepper3 = require('./stepper');\n\nvar _stepper4 = _interopRequireDefault(_stepper3);\n\nvar _mergeDiff = require('./mergeDiff');\n\nvar _mergeDiff2 = _interopRequireDefault(_mergeDiff);\n\nvar _performanceNow = require('performance-now');\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldStopAnimation = require('./shouldStopAnimation');\n\nvar _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar msPerFrame = 1000 / 60;\n\n// the children function & (potential) styles function asks as param an\n// Array<TransitionPlainStyle>, where each TransitionPlainStyle is of the format\n// {key: string, data?: any, style: PlainStyle}. However, the way we keep\n// internal states doesn't contain such a data structure (check the state and\n// TransitionMotionState). So when children function and others ask for such\n// data we need to generate them on the fly by combining mergedPropsStyles and\n// currentStyles/lastIdealStyles\nfunction rehydrateStyles(mergedPropsStyles, unreadPropStyles, plainStyles) {\n  // Copy the value to a `const` so that Flow understands that the const won't\n  // change and will be non-nullable in the callback below.\n  var cUnreadPropStyles = unreadPropStyles;\n  if (cUnreadPropStyles == null) {\n    return mergedPropsStyles.map(function (mergedPropsStyle, i) {\n      return {\n        key: mergedPropsStyle.key,\n        data: mergedPropsStyle.data,\n        style: plainStyles[i]\n      };\n    });\n  }\n  return mergedPropsStyles.map(function (mergedPropsStyle, i) {\n    for (var j = 0; j < cUnreadPropStyles.length; j++) {\n      if (cUnreadPropStyles[j].key === mergedPropsStyle.key) {\n        return {\n          key: cUnreadPropStyles[j].key,\n          data: cUnreadPropStyles[j].data,\n          style: plainStyles[i]\n        };\n      }\n    }\n    return { key: mergedPropsStyle.key, data: mergedPropsStyle.data, style: plainStyles[i] };\n  });\n}\n\nfunction shouldStopAnimationAll(currentStyles, destStyles, currentVelocities, mergedPropsStyles) {\n  if (mergedPropsStyles.length !== destStyles.length) {\n    return false;\n  }\n\n  for (var i = 0; i < mergedPropsStyles.length; i++) {\n    if (mergedPropsStyles[i].key !== destStyles[i].key) {\n      return false;\n    }\n  }\n\n  // we have the invariant that mergedPropsStyles and\n  // currentStyles/currentVelocities/last* are synced in terms of cells, see\n  // mergeAndSync comment for more info\n  for (var i = 0; i < mergedPropsStyles.length; i++) {\n    if (!_shouldStopAnimation2['default'](currentStyles[i], destStyles[i].style, currentVelocities[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n// core key merging logic\n\n// things to do: say previously merged style is {a, b}, dest style (prop) is {b,\n// c}, previous current (interpolating) style is {a, b}\n// **invariant**: current[i] corresponds to merged[i] in terms of key\n\n// steps:\n// turn merged style into {a?, b, c}\n//    add c, value of c is destStyles.c\n//    maybe remove a, aka call willLeave(a), then merged is either {b, c} or {a, b, c}\n// turn current (interpolating) style from {a, b} into {a?, b, c}\n//    maybe remove a\n//    certainly add c, value of c is willEnter(c)\n// loop over merged and construct new current\n// dest doesn't change, that's owner's\nfunction mergeAndSync(willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldLastIdealStyles, oldLastIdealVelocities) {\n  var newMergedPropsStyles = _mergeDiff2['default'](oldMergedPropsStyles, destStyles, function (oldIndex, oldMergedPropsStyle) {\n    var leavingStyle = willLeave(oldMergedPropsStyle);\n    if (leavingStyle == null) {\n      didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });\n      return null;\n    }\n    if (_shouldStopAnimation2['default'](oldCurrentStyles[oldIndex], leavingStyle, oldCurrentVelocities[oldIndex])) {\n      didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });\n      return null;\n    }\n    return { key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data, style: leavingStyle };\n  });\n\n  var newCurrentStyles = [];\n  var newCurrentVelocities = [];\n  var newLastIdealStyles = [];\n  var newLastIdealVelocities = [];\n  for (var i = 0; i < newMergedPropsStyles.length; i++) {\n    var newMergedPropsStyleCell = newMergedPropsStyles[i];\n    var foundOldIndex = null;\n    for (var j = 0; j < oldMergedPropsStyles.length; j++) {\n      if (oldMergedPropsStyles[j].key === newMergedPropsStyleCell.key) {\n        foundOldIndex = j;\n        break;\n      }\n    }\n    // TODO: key search code\n    if (foundOldIndex == null) {\n      var plainStyle = willEnter(newMergedPropsStyleCell);\n      newCurrentStyles[i] = plainStyle;\n      newLastIdealStyles[i] = plainStyle;\n\n      var velocity = _mapToZero2['default'](newMergedPropsStyleCell.style);\n      newCurrentVelocities[i] = velocity;\n      newLastIdealVelocities[i] = velocity;\n    } else {\n      newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];\n      newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];\n      newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];\n      newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];\n    }\n  }\n\n  return [newMergedPropsStyles, newCurrentStyles, newCurrentVelocities, newLastIdealStyles, newLastIdealVelocities];\n}\n\nvar TransitionMotion = (function (_React$Component) {\n  _inherits(TransitionMotion, _React$Component);\n\n  _createClass(TransitionMotion, null, [{\n    key: 'propTypes',\n    value: {\n      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].shape({\n        key: _propTypes2['default'].string.isRequired,\n        data: _propTypes2['default'].any,\n        style: _propTypes2['default'].objectOf(_propTypes2['default'].number).isRequired\n      })),\n      styles: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].arrayOf(_propTypes2['default'].shape({\n        key: _propTypes2['default'].string.isRequired,\n        data: _propTypes2['default'].any,\n        style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired\n      }))]).isRequired,\n      children: _propTypes2['default'].func.isRequired,\n      willEnter: _propTypes2['default'].func,\n      willLeave: _propTypes2['default'].func,\n      didLeave: _propTypes2['default'].func\n    },\n    enumerable: true\n  }, {\n    key: 'defaultProps',\n    value: {\n      willEnter: function willEnter(styleThatEntered) {\n        return _stripStyle2['default'](styleThatEntered.style);\n      },\n      // recall: returning null makes the current unmounting TransitionStyle\n      // disappear immediately\n      willLeave: function willLeave() {\n        return null;\n      },\n      didLeave: function didLeave() {}\n    },\n    enumerable: true\n  }]);\n\n  function TransitionMotion(props) {\n    var _this = this;\n\n    _classCallCheck(this, TransitionMotion);\n\n    _React$Component.call(this, props);\n    this.unmounting = false;\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyles = null;\n\n    this.clearUnreadPropStyle = function (unreadPropStyles) {\n      var _mergeAndSync = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, unreadPropStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);\n\n      var mergedPropsStyles = _mergeAndSync[0];\n      var currentStyles = _mergeAndSync[1];\n      var currentVelocities = _mergeAndSync[2];\n      var lastIdealStyles = _mergeAndSync[3];\n      var lastIdealVelocities = _mergeAndSync[4];\n\n      for (var i = 0; i < unreadPropStyles.length; i++) {\n        var unreadPropStyle = unreadPropStyles[i].style;\n        var dirty = false;\n\n        for (var key in unreadPropStyle) {\n          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {\n            continue;\n          }\n\n          var styleValue = unreadPropStyle[key];\n          if (typeof styleValue === 'number') {\n            if (!dirty) {\n              dirty = true;\n              currentStyles[i] = _extends({}, currentStyles[i]);\n              currentVelocities[i] = _extends({}, currentVelocities[i]);\n              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);\n              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);\n              mergedPropsStyles[i] = {\n                key: mergedPropsStyles[i].key,\n                data: mergedPropsStyles[i].data,\n                style: _extends({}, mergedPropsStyles[i].style)\n              };\n            }\n            currentStyles[i][key] = styleValue;\n            currentVelocities[i][key] = 0;\n            lastIdealStyles[i][key] = styleValue;\n            lastIdealVelocities[i][key] = 0;\n            mergedPropsStyles[i].style[key] = styleValue;\n          }\n        }\n      }\n\n      // unlike the other 2 components, we can't detect staleness and optionally\n      // opt out of setState here. each style object's data might contain new\n      // stuff we're not/cannot compare\n      _this.setState({\n        currentStyles: currentStyles,\n        currentVelocities: currentVelocities,\n        mergedPropsStyles: mergedPropsStyles,\n        lastIdealStyles: lastIdealStyles,\n        lastIdealVelocities: lastIdealVelocities\n      });\n    };\n\n    this.startAnimationIfNecessary = function () {\n      if (_this.unmounting) {\n        return;\n      }\n\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        // https://github.com/chenglou/react-motion/pull/420\n        // > if execution passes the conditional if (this.unmounting), then\n        // executes async defaultRaf and after that component unmounts and after\n        // that the callback of defaultRaf is called, then setState will be called\n        // on unmounted component.\n        if (_this.unmounting) {\n          return;\n        }\n\n        var propStyles = _this.props.styles;\n        var destStyles = typeof propStyles === 'function' ? propStyles(rehydrateStyles(_this.state.mergedPropsStyles, _this.unreadPropStyles, _this.state.lastIdealStyles)) : propStyles;\n\n        // check if we need to animate in the first place\n        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities, _this.state.mergedPropsStyles)) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        var currentTime = timestamp || _performanceNow2['default']();\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta;\n        // more than 10 frames? prolly switched browser tab. Restart\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.startAnimationIfNecessary();\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var _mergeAndSync2 = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, destStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);\n\n        var newMergedPropsStyles = _mergeAndSync2[0];\n        var newCurrentStyles = _mergeAndSync2[1];\n        var newCurrentVelocities = _mergeAndSync2[2];\n        var newLastIdealStyles = _mergeAndSync2[3];\n        var newLastIdealVelocities = _mergeAndSync2[4];\n\n        for (var i = 0; i < newMergedPropsStyles.length; i++) {\n          var newMergedPropsStyle = newMergedPropsStyles[i].style;\n          var newCurrentStyle = {};\n          var newCurrentVelocity = {};\n          var newLastIdealStyle = {};\n          var newLastIdealVelocity = {};\n\n          for (var key in newMergedPropsStyle) {\n            if (!Object.prototype.hasOwnProperty.call(newMergedPropsStyle, key)) {\n              continue;\n            }\n\n            var styleValue = newMergedPropsStyle[key];\n            if (typeof styleValue === 'number') {\n              newCurrentStyle[key] = styleValue;\n              newCurrentVelocity[key] = 0;\n              newLastIdealStyle[key] = styleValue;\n              newLastIdealVelocity[key] = 0;\n            } else {\n              var newLastIdealStyleValue = newLastIdealStyles[i][key];\n              var newLastIdealVelocityValue = newLastIdealVelocities[i][key];\n              for (var j = 0; j < framesToCatchUp; j++) {\n                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n                newLastIdealStyleValue = _stepper[0];\n                newLastIdealVelocityValue = _stepper[1];\n              }\n\n              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              var nextIdealX = _stepper2[0];\n              var nextIdealV = _stepper2[1];\n\n              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n              newLastIdealStyle[key] = newLastIdealStyleValue;\n              newLastIdealVelocity[key] = newLastIdealVelocityValue;\n            }\n          }\n\n          newLastIdealStyles[i] = newLastIdealStyle;\n          newLastIdealVelocities[i] = newLastIdealVelocity;\n          newCurrentStyles[i] = newCurrentStyle;\n          newCurrentVelocities[i] = newCurrentVelocity;\n        }\n\n        _this.animationID = null;\n        // the amount we're looped over above\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyles: newCurrentStyles,\n          currentVelocities: newCurrentVelocities,\n          lastIdealStyles: newLastIdealStyles,\n          lastIdealVelocities: newLastIdealVelocities,\n          mergedPropsStyles: newMergedPropsStyles\n        });\n\n        _this.unreadPropStyles = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  TransitionMotion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyles = _props.defaultStyles;\n    var styles = _props.styles;\n    var willEnter = _props.willEnter;\n    var willLeave = _props.willLeave;\n    var didLeave = _props.didLeave;\n\n    var destStyles = typeof styles === 'function' ? styles(defaultStyles) : styles;\n\n    // this is special. for the first time around, we don't have a comparison\n    // between last (no last) and current merged props. we'll compute last so:\n    // say default is {a, b} and styles (dest style) is {b, c}, we'll\n    // fabricate last as {a, b}\n    var oldMergedPropsStyles = undefined;\n    if (defaultStyles == null) {\n      oldMergedPropsStyles = destStyles;\n    } else {\n      oldMergedPropsStyles = defaultStyles.map(function (defaultStyleCell) {\n        // TODO: key search code\n        for (var i = 0; i < destStyles.length; i++) {\n          if (destStyles[i].key === defaultStyleCell.key) {\n            return destStyles[i];\n          }\n        }\n        return defaultStyleCell;\n      });\n    }\n    var oldCurrentStyles = defaultStyles == null ? destStyles.map(function (s) {\n      return _stripStyle2['default'](s.style);\n    }) : defaultStyles.map(function (s) {\n      return _stripStyle2['default'](s.style);\n    });\n    var oldCurrentVelocities = defaultStyles == null ? destStyles.map(function (s) {\n      return _mapToZero2['default'](s.style);\n    }) : defaultStyles.map(function (s) {\n      return _mapToZero2['default'](s.style);\n    });\n\n    var _mergeAndSync3 = mergeAndSync(\n    // Because this is an old-style createReactClass component, Flow doesn't\n    // understand that the willEnter and willLeave props have default values\n    // and will always be present.\n    willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldCurrentStyles, // oldLastIdealStyles really\n    oldCurrentVelocities);\n\n    var mergedPropsStyles = _mergeAndSync3[0];\n    var currentStyles = _mergeAndSync3[1];\n    var currentVelocities = _mergeAndSync3[2];\n    var lastIdealStyles = _mergeAndSync3[3];\n    var lastIdealVelocities = _mergeAndSync3[4];\n    // oldLastIdealVelocities really\n\n    return {\n      currentStyles: currentStyles,\n      currentVelocities: currentVelocities,\n      lastIdealStyles: lastIdealStyles,\n      lastIdealVelocities: lastIdealVelocities,\n      mergedPropsStyles: mergedPropsStyles\n    };\n  };\n\n  // after checking for unreadPropStyles != null, we manually go set the\n  // non-interpolating values (those that are a number, without a spring\n  // config)\n\n  TransitionMotion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  TransitionMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyles) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyles);\n    }\n\n    var styles = props.styles;\n    if (typeof styles === 'function') {\n      this.unreadPropStyles = styles(rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.lastIdealStyles));\n    } else {\n      this.unreadPropStyles = styles;\n    }\n\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  TransitionMotion.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unmounting = true;\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n      this.animationID = null;\n    }\n  };\n\n  TransitionMotion.prototype.render = function render() {\n    var hydratedStyles = rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.currentStyles);\n    var renderedChildren = this.props.children(hydratedStyles);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return TransitionMotion;\n})(_react2['default'].Component);\n\nexports['default'] = TransitionMotion;\nmodule.exports = exports['default'];\n\n// list of styles, each containing interpolating values. Part of what's passed\n// to children function. Notice that this is\n// Array<ActualInterpolatingStyleObject>, without the wrapper that is {key: ...,\n// data: ... style: ActualInterpolatingStyleObject}. Only mergedPropsStyles\n// contains the key & data info (so that we only have a single source of truth\n// for these, and to save space). Check the comment for `rehydrateStyles` to\n// see how we regenerate the entirety of what's passed to children function\n\n// the array that keeps track of currently rendered stuff! Including stuff\n// that you've unmounted but that's still animating. This is where it lives\n\n// it's possible that currentStyle's value is stale: if props is immediately\n// changed from 0 to 400 to spring(0) again, the async currentStyle is still\n// at 0 (didn't have time to tick and interpolate even once). If we naively\n// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n// In reality currentStyle should be 400","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = {\n  noWobble: { stiffness: 170, damping: 26 }, // the default, if nothing provided\n  gentle: { stiffness: 120, damping: 14 },\n  wobbly: { stiffness: 180, damping: 12 },\n  stiff: { stiffness: 210, damping: 20 }\n};\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports['default'] = spring;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _presets = require('./presets');\n\nvar _presets2 = _interopRequireDefault(_presets);\n\nvar defaultConfig = _extends({}, _presets2['default'].noWobble, {\n  precision: 0.01\n});\n\nfunction spring(val, config) {\n  return _extends({}, defaultConfig, config, { val: val });\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports['default'] = reorderKeys;\n\nvar hasWarned = false;\n\nfunction reorderKeys() {\n  if (process.env.NODE_ENV === 'development') {\n    if (!hasWarned) {\n      hasWarned = true;\n      console.error('`reorderKeys` has been removed, since it is no longer needed for TransitionMotion\\'s new styles array API.');\n    }\n  }\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequire(obj) { return obj && obj.__esModule ? obj['default'] : obj; }\n\nvar _Motion = require('./Motion');\n\nexports.Motion = _interopRequire(_Motion);\n\nvar _StaggeredMotion = require('./StaggeredMotion');\n\nexports.StaggeredMotion = _interopRequire(_StaggeredMotion);\n\nvar _TransitionMotion = require('./TransitionMotion');\n\nexports.TransitionMotion = _interopRequire(_TransitionMotion);\n\nvar _spring = require('./spring');\n\nexports.spring = _interopRequire(_spring);\n\nvar _presets = require('./presets');\n\nexports.presets = _interopRequire(_presets);\n\nvar _stripStyle = require('./stripStyle');\n\nexports.stripStyle = _interopRequire(_stripStyle);\n\n// deprecated, dummy warning function\n\nvar _reorderKeys = require('./reorderKeys');\n\nexports.reorderKeys = _interopRequire(_reorderKeys);","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { Motion, spring } from 'react-motion';\n\n/**\n * The `Collapse` component is used to animate a single child entering\n * or leaving. This uses the `react-motion` library to animate the height,\n * padding-top, and padding-bottom of an element when the `collapsed` prop\n * changes.\n */\nexport default class Collapse extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to merge with the `Motion` style.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional default style to merge with the `Motion` default style.\n     */\n    defaultStyle: PropTypes.object,\n\n    /**\n     * Boolean if the children are currently collapsed.\n     */\n    collapsed: PropTypes.bool.isRequired,\n\n    /**\n     * A single child to collapse or expand.\n     */\n    children: PropTypes.element.isRequired,\n\n    /**\n     * The spring config to use for the animation.\n     */\n    springConfig: PropTypes.object.isRequired,\n\n    /**\n     * Boolean if the single child entering or leaving should be animated.\n     */\n    animate: PropTypes.bool,\n\n    /**\n     * The min height to apply for the collapse div.\n     */\n    minHeight: PropTypes.number.isRequired,\n  };\n\n  static defaultProps = {\n    animate: true,\n    springConfig: {\n      precision: 0.5,\n    },\n    minHeight: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (!props.collapsed) {\n      this.state = { initialOpen: true };\n    } else {\n      this.state = {\n        height: props.minHeight,\n        paddingTop: 0,\n        paddingBottom: 0,\n      };\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.initialOpen && nextProps.collapsed) {\n      this.setState({ initialOpen: false });\n    }\n  }\n\n  _spring(collapsed, initialOpen, value, config, min = 0) {\n    const nextValue = !collapsed ? Math.max(min, value) : min;\n    if (initialOpen && !collapsed) {\n      return nextValue;\n    }\n\n    return spring(nextValue, config);\n  }\n\n  _setHeight = (child) => {\n    if (this._child && typeof this._child.ref === 'function') {\n      this._child.ref(child);\n    }\n\n    let height = 0;\n    let paddingTop = 0;\n    let paddingBottom = 0;\n    if (child !== null) {\n      const node = findDOMNode(child);\n      const cs = window.getComputedStyle(node);\n      height = node.offsetHeight;\n      paddingTop = parseInt(cs.getPropertyValue('padding-top'), 10);\n      paddingBottom = parseInt(cs.getPropertyValue('padding-bottom'), 10);\n    }\n\n    height = Math.max(this.props.minHeight, height);\n\n    this.setState({ height, paddingTop, paddingBottom });\n  };\n\n  render() {\n    const { height, paddingTop, paddingBottom, initialOpen } = this.state;\n    const {\n      children,\n      collapsed,\n      defaultStyle,\n      style: motionStyle,\n      springConfig,\n      animate,\n      minHeight,\n    } = this.props;\n\n    if (!animate) {\n      return collapsed ? null : children;\n    }\n\n    return (\n      <Motion\n        style={{\n          ...motionStyle,\n          height: this._spring(collapsed, initialOpen, height, springConfig, minHeight),\n          paddingTop: this._spring(collapsed, initialOpen, paddingTop, springConfig),\n          paddingBottom: this._spring(collapsed, initialOpen, paddingBottom, springConfig),\n        }}\n        defaultStyle={{\n          ...defaultStyle,\n          height,\n          paddingTop,\n          paddingBottom,\n        }}\n      >\n        {style => {\n          if (collapsed && !style.height) {\n            return null;\n          }\n\n          const child = Children.only(children);\n          this._child = child;\n          let nextStyle = child.props.style;\n          if ((collapsed && (!minHeight || style.height !== minHeight)) || style.height !== height) {\n            nextStyle = {\n              ...child.props.style,\n              ...style,\n              overflow: 'hidden',\n            };\n          }\n          return cloneElement(child, {\n            ref: !collapsed && this._setHeight,\n            style: nextStyle,\n          });\n        }}\n      </Motion>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\nconst ICON_SIZE = 24;\n\n/**\n * The \\`FontIcon\\` component is used for rendering a font-icon library's\n * icon. The default is to use the `material-icons` library, but others\n * can be used as well.\n *\n * If you are using another font-icon library that does not always create\n * icons with a perfect 1:1 scale (such as font-awesome), it is recommended\n * to update the `.md-icon` styles to set the width and height to `$md-font-icon-size`.\n * However, this will prevent different sided icons.\n *\n * ```scss\n * .md-icon.fa {\n *   height: $md-font-icon-size;\n *   width: $md-font-icon-size;\n * }\n * ```\n */\nexport default class FontIcon extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `FontIcon`.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The icon font library className to use to display the icon.\n     */\n    iconClassName: PropTypes.string.isRequired,\n\n    /**\n     * Boolean if the primary theme color should be applied.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the secondary theme color should be applied.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the icon is considered disabled and should inherit the\n     * disabled color.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the error color should be applied to the icon.\n     */\n    error: PropTypes.bool,\n\n    /**\n     * Boolean if the color of the icon should be inherited by parent elements.\n     */\n    inherit: PropTypes.bool,\n\n    /**\n     * Either a boolean that will enforce the 24x24 size of the font icon or a number of the size\n     * to enforce. This is useful when using other font icon libraries that do not have a consistent\n     * size.\n     */\n    forceSize: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n    ]),\n\n    /**\n     * Boolean if the `forceSize` prop should also force the `font-size` instead of only `width` and `height`.\n     */\n    forceFontSize: (props, propName, component, ...args) => {\n      let error = PropTypes.bool(props, propName, component, ...args);\n      if (!error && typeof props.forceSize === 'undefined' && props[propName]) {\n        error = new Error(\n          `You provided a \\`forceFontSize\\` prop to the ${component} component, without specifying the \\`forceSize\\` ` +\n          `prop. Either set the \\`forceSize\\` prop to a boolean or a number, or disable \\`${propName}\\`.`\n        );\n      }\n\n      return error;\n    },\n\n    /**\n     * Any children required to display the icon with the font library.\n     */\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    iconClassName: 'material-icons',\n  };\n\n  constructor(props) {\n    super();\n\n    this.state = { styles: this._mergeStyles(props) };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { style, forceSize, forceFontSize } = this.props;\n    if (style !== nextProps.style || forceSize !== nextProps.forceSize || forceFontSize !== nextProps.forceFontSize) {\n      this.setState({ styles: this._mergeStyles(nextProps) });\n    }\n  }\n\n  _mergeStyles = ({ style, forceSize, forceFontSize }) => {\n    let styles = style;\n    if (typeof forceSize === 'boolean') {\n      styles = {\n        height: ICON_SIZE,\n        width: ICON_SIZE,\n        fontSize: forceFontSize ? ICON_SIZE : undefined,\n        ...style,\n      };\n    } else if (typeof forceSize === 'number') {\n      styles = {\n        height: forceSize,\n        width: forceSize,\n        fontSize: forceFontSize ? forceSize : undefined,\n        ...style,\n      };\n    }\n\n    return styles;\n  };\n\n  render() {\n    const { styles } = this.state;\n    const {\n      iconClassName,\n      className,\n      children,\n      disabled,\n      primary,\n      secondary,\n      error,\n      inherit,\n      /* eslint-disable no-unused-vars */\n      style,\n      forceSize,\n      forceFontSize,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const classes = cn('md-icon', iconClassName, themeColors({\n      disabled,\n      error,\n      inherit,\n      primary,\n      secondary,\n    }), className);\n\n    return (\n      <i {...props} style={styles} className={classes}>\n        {children}\n      </i>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `TileAddon` component is used to render either a `FontIcon` or an `Avatar`\n * next to the `ListTileText` for a `ListItem`.\n */\nexport default class TileAddon extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    active: PropTypes.bool,\n    activeClassName: PropTypes.string,\n    icon: PropTypes.node,\n    avatar: PropTypes.node,\n  };\n\n  render() {\n    const { icon, avatar, active, activeClassName, style, className } = this.props;\n    if (!icon && !avatar) {\n      return null;\n    }\n\n    let avatarIcon = false;\n    if (avatar) {\n      const avatarChild = React.Children.only(avatar);\n      if (avatarChild.props.iconSized) {\n        avatarIcon = true;\n      }\n    }\n    return (\n      <div\n        style={style}\n        className={cn('md-tile-addon', {\n          'md-tile-addon--icon': icon || avatarIcon,\n          'md-tile-addon--avatar': avatar && !avatarIcon,\n          [activeClassName]: active,\n        }, className)}\n      >\n        {icon || avatar}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The `ListItemText` component is used to render the `primaryText` and an optional\n * `secondaryText` for a `ListItem`.\n */\nexport default class ListItemText extends PureComponent {\n  static propTypes = {\n    active: PropTypes.bool,\n    activeClassName: PropTypes.string,\n    disabled: PropTypes.bool,\n    primaryText: PropTypes.node.isRequired,\n    primaryTextStyle: PropTypes.object,\n    primaryTextClassName: PropTypes.string,\n    secondaryText: PropTypes.node,\n    secondaryTextStyle: PropTypes.object,\n    secondaryTextClassName: PropTypes.string,\n    className: PropTypes.string,\n    threeLines: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      active,\n      activeClassName,\n      disabled,\n      primaryText,\n      primaryTextStyle,\n      primaryTextClassName,\n      secondaryText,\n      secondaryTextStyle,\n      secondaryTextClassName,\n      className,\n      threeLines,\n      ...props\n    } = this.props;\n\n    let secondaryTextNode;\n    if (secondaryText) {\n      secondaryTextNode = (\n        <div\n          style={secondaryTextStyle}\n          className={cn('md-tile-text--secondary', {\n            'md-tile-text--three-lines': threeLines,\n          }, themeColors({ disabled, hint: !disabled }), secondaryTextClassName)}\n        >\n          {secondaryText}\n        </div>\n      );\n    }\n\n    return (\n      <div {...props} className={cn('md-tile-content', className)}>\n        <div\n          style={primaryTextStyle}\n          className={cn('md-tile-text--primary', {\n            [activeClassName]: !disabled && active,\n          }, themeColors({ disabled, text: !active }), primaryTextClassName)}\n        >\n          {primaryText}\n        </div>\n        {secondaryTextNode}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The `Subheader` component is generally used inside of lists or menus.\n */\nexport default class Subheader extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the subheader.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the subheader.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if the subheader should be styled with the primary color.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the subheader is inset in the list. This will add additional\n     * spacing to align the subheader.\n     */\n    inset: PropTypes.bool,\n\n    /**\n     * The primary text to use in the subheader.\n     */\n    primaryText: PropTypes.node.isRequired,\n\n    /**\n     * Any optional children to display after the `primaryText`. This prop is\n     * not recommended.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The component to render the Subheader as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    component: 'li',\n  };\n\n  render() {\n    const {\n      component: Component,\n      inset,\n      primary,\n      primaryText,\n      className,\n      children,\n      ...props\n    } = this.props;\n\n    return (\n      <Component\n        {...props}\n        className={cn('md-subheader', {\n          'md-list-item--inset': inset,\n        }, themeColors({ primary, hint: !primary }), className)}\n      >\n        {primaryText}\n        {children}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport Subheader from '../Subheaders';\n\n/**\n * Lists present multiple line items vertically as a single continuous element.\n */\nexport default class List extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the list.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the list.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if this should be an ordered list (`<ol>`) component. Otherwise, it will\n     * be rendered as `<ul>`.\n     */\n    ordered: PropTypes.bool,\n\n    /**\n     * This *should* be a list of `ListItem`, `ListItemControl`, `Divider`, or\n     * `Subheader`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the list should appear horizontally instead of vertically.\n     */\n    inline: PropTypes.bool,\n    subheader: deprecated(PropTypes.string, 'Use the `Subheader` component as a child instead'),\n    primarySubheader: deprecated(PropTypes.bool, 'Use the `Subheader` component as a child instead'),\n  };\n\n  static childContextTypes = {\n    listLevel: PropTypes.number,\n    cascadingMenu: PropTypes.bool,\n    cascadingFixedTo: fixedToShape,\n    cascadingZDepth: PropTypes.number,\n  };\n\n  static contextTypes = {\n    listLevel: PropTypes.number,\n    cascadingMenu: PropTypes.bool,\n    cascadingFixedTo: fixedToShape,\n    cascadingZDepth: PropTypes.number,\n  };\n\n  state = {};\n\n  getChildContext() {\n    const { listLevel, ...context } = this.context;\n    const cascadingFixedTo = getField(this.state, this.context, 'cascadingFixedTo');\n    return {\n      ...context,\n      cascadingFixedTo,\n      listLevel: typeof listLevel === 'undefined'\n        ? 1\n        : listLevel + 1,\n    };\n  }\n\n  componentDidMount() {\n    if (this.context.cascadingMenu) {\n      const list = findDOMNode(this);\n      if (list.offsetHeight < list.scrollHeight) {\n        const cascadingFixedTo = { y: findDOMNode(this) };\n        this.setState({ cascadingFixedTo }); // eslint-disable-line react/no-did-mount-set-state\n      }\n    }\n  }\n\n  render() {\n    const {\n      className,\n      ordered,\n      children,\n      subheader,\n      inline,\n      primarySubheader,\n      ...props\n    } = this.props;\n    const { cascadingMenu, cascadingZDepth, listLevel } = this.context;\n\n    let subheaderEl;\n    if (subheader) {\n      subheaderEl = <Subheader key=\"subheader\" primaryText={subheader} primary={primarySubheader} />;\n    }\n\n    const Component = ordered ? 'ol' : 'ul';\n    return (\n      <Component\n        {...props}\n        className={cn('md-list', {\n          'md-list--inline': inline,\n          'md-list--menu-cascading': cascadingMenu,\n          [`md-paper md-paper--${cascadingZDepth}`]: cascadingZDepth && cascadingMenu && listLevel > 0,\n          [`md-list--nested-${listLevel}`]: listLevel && !cascadingMenu,\n        }, className)}\n      >\n        {subheaderEl}\n        {children}\n      </Component>\n    );\n  }\n}\n","'use strict';\n\nexports.__esModule = true;\nexports.default = isRequiredForA11y;\nfunction isRequiredForA11y(validator) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      return new Error('The ' + location + ' `' + propFullNameSafe + '` is required to make ' + ('`' + componentNameSafe + '` accessible for users of assistive ') + 'technologies such as screen readers.');\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n  };\n}","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ResizeObserverAPI from 'resize-observer-polyfill';\n\n/**\n * The `ResizeObserver` component is a component hook for the\n * [ResizeObserver](http://rawgit.com/WICG/ResizeObserver/master/index.html)\n * using the [resize-observer-polyfill](https://github.com/que-etc/resize-observer-polyfill)\n * for browsers that don't support it yet.\n *\n * This component displays an empty `span` with `aria-hidden` to allow access to the DOM. By\n * default it will attempt to watch changes on its parent component, but it can be configured\n * to watch any element by using the `target` prop.\n */\nexport default class ResizeObserver extends PureComponent {\n  static propTypes = {\n    /**\n     * Boolean if the height should be watched for the resize target.\n     */\n    watchHeight: PropTypes.bool,\n\n    /**\n     * Boolean if the width should be watched for the resize target.\n     */\n    watchWidth: PropTypes.bool,\n\n    /**\n     * An optional target that should be used for detecting resize events. This can either\n     * be a HTMLDOMNode or a string to use with `document.getElementById` or `document.querySelector`.\n     *\n     * If this prop is not provided and not null, it will default to the parent node of this component.\n     * If the provided `target={null}`, the observer will not begin until the `target` is `undefined` or\n     * it has been correctly passed a target string or object.\n     */\n    target: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.string,\n    ]),\n\n    /**\n     * The component to be rendered as. This should normally just be the default `span`, but there are cases\n     * where the component should be switched to something else for valid html.\n     */\n    component: PropTypes.string,\n\n    /**\n     * A function to call when the height or width has been changed and that attribute is being watched.\n     * The callback will include the current height, width, scrollHeight and scrollWidth of the target.\n     *\n     * ```js\n     * onResize({\n     *   height: nextHeight,\n     *   width: nextWidth,\n     *   scrollHeight: nextScrollHeight,\n     *   scrollWidth: nextScrollWidth,\n     *   el: resizeTarget,\n     * });\n     * ```\n     */\n    onResize: PropTypes.func.isRequired,\n\n    /**\n     * An optional ref callback that will include the `target` or the parent node of the resize observer. Just\n     * like other refs, this will provide null when it unmounts.\n     *\n     * This is really only helpful if you'd like the DOM node for a parent Component without needing to use\n     * `ReactDOM.findDOMNode(this)`.\n     */\n    elRef: PropTypes.func,\n  };\n\n  static defaultProps = {\n    watchHeight: false,\n    watchWidth: false,\n    component: 'span',\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { target } = this.props;\n    const nextTarget = nextProps.target;\n    if (target === nextTarget) {\n      return;\n    } else if (nextTarget) {\n      if (this._target) {\n        this._observer.unobserve(this._target);\n      }\n      this._target = this._getTarget(this._container, nextTarget);\n      this._observer.observe(this._target);\n    }\n  }\n\n  _container = null;\n  _target = null;\n  _observer = null;\n  _height = null;\n  _width = null;\n  _scrollHeight = null;\n  _scrollWidth = null;\n\n  _getTarget(container, target) {\n    if (target === null || (target && typeof target !== 'string')) {\n      return target;\n    }\n\n    let t = null;\n    if (target) {\n      t = document.getElementById(target) || document.querySelector(target);\n    } else {\n      t = container.parentNode;\n    }\n\n    if (!t) {\n      throw new Error(\n        'An HTMLDOMNode is required as the `ResizeObserver`\\'s watch target but none were provided/found. ' +\n        `Please update the target prop to find a valid node since the provided target is invalid. \\`${target}\\`.`\n      );\n    }\n\n    return t;\n  }\n\n  _measure = (entries) => {\n    if (!this._observer || !this._target) {\n      return;\n    }\n\n    for (const entry of entries) {\n      if (!entry) {\n        return;\n      }\n\n      const { height, width } = entry.contentRect;\n      const { scrollHeight, scrollWidth } = entry.target;\n      if (this._isHeightChange(height, scrollHeight) || this._isWidthChange(width, scrollWidth)) {\n        this._height = height;\n        this._width = width;\n        this._scrollHeight = scrollHeight;\n        this._scrollWidth = scrollWidth;\n        this.props.onResize({ height, width, scrollHeight, scrollWidth, el: entry.target });\n      }\n    }\n  };\n\n  _isHeightChange = (height, scrollHeight) => this.props.watchHeight\n    && (height !== this._height || scrollHeight !== this._scrollHeight);\n  _isWidthChange = (width, scrollWidth) => this.props.watchWidth\n    && (width !== this._width || scrollWidth !== this._scrollWidth);\n\n  _handleRef = (container) => {\n    if (container) {\n      this._container = container;\n      this._target = this._getTarget(container, this.props.target);\n      this._observer = new ResizeObserverAPI(this._measure);\n\n      if (this._target) {\n        this._observer.observe(this._target);\n      }\n    } else {\n      if (this._observer) {\n        this._observer.disconnect();\n      }\n\n      this._container = null;\n      this._target = null;\n      this._observer = null;\n      this._height = null;\n      this._width = null;\n      this._scrollHeight = null;\n      this._scrollWidth = null;\n    }\n\n    if (this.props.elRef) {\n      this.props.elRef(this._target);\n    }\n  };\n\n  render() {\n    const { component: Component } = this.props;\n    return <Component ref={this._handleRef} aria-hidden />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\n\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\nimport getSelectedTextPosition from '../utils/Positioning/getSelectedTextPosition';\nimport getScroll from '../utils/Positioning/getScroll';\nimport viewport from '../utils/Positioning/viewport';\nimport isOutOfBounds from '../utils/Positioning/isOutOfBounds';\nimport anchorShape from './anchorShape';\nimport fixedToShape from './fixedToShape';\nimport positionShape from './positionShape';\nimport HorizontalAnchors from './HorizontalAnchors';\nimport VerticalAnchors from './VerticalAnchors';\nimport Positions from './Positions';\nimport ResizeObserver from './ResizeObserver';\n\n/**\n * The Layover component is used to keep a component fixed to another component\n * while the page is scrolling or a container is scrolling. When the fixed component\n * is considered out of view, it will be closed.\n *\n * > NOTE: Don't look at source code. Plz.\n */\nexport default class Layover extends PureComponent {\n  static HorizontalAnchors = HorizontalAnchors;\n  static VerticalAnchors = VerticalAnchors;\n  static Positions = Positions;\n\n  static propTypes = {\n    /**\n     * A id to give the layover itself. This is generally recommended for accessibility. If the\n     * child does not have an id, the child will automatically be updated to be `${id}-layover`.\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the layover.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the layover.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if the layover's child is currently visible.\n     */\n    visible: PropTypes.bool.isRequired,\n\n    /**\n     * This should either be a single element or two elements that the layover recalculates\n     * its fixed position when scrolling for horizontal and vertical.\n     *\n     * When it is a single element, it will recalculate for both horizontal and vertical\n     * scrolling. Otherwise, you can specify the element for horizontal scrolling and a\n     * separate element for vertical scrolling. If one is omitted, it will default to `window`.\n     *\n     * If the component is no longer considered to be in view after scrolling, the `onClose`\n     * prop will be called.\n     */\n    fixedTo: fixedToShape.isRequired,\n\n    /**\n     * The renderable item that causes the Layover to become visible. This _should_\n     * most likely be an `element` or `arrayOf(element)`, but anything is allowed.\n     */\n    toggle: PropTypes.node,\n\n    /**\n     * Since the `toggle` prop can be anything, I need a way to be able to find an\n     * element to base all the calculations on. This can either be a string that\n     * gets passed to `layover.querySelector`, a DOM Element, or a function that\n     * returns a DOM Element.\n     */\n    toggleQuery: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * A single child that should be fixed to the toggle element.\n     */\n    children: PropTypes.element.isRequired,\n\n    /**\n     * Boolean if the Layover should be displayed as a block instead of as an inline block.\n     */\n    block: PropTypes.bool,\n\n    /**\n     * Boolean if the `children` should be centered horizontally and vertically while keeping\n     * its height in mind as well. This is *only* valid if both the x and y `anchor` targets\n     * are `CENTER`.\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the layover should gain the `md-full-width` class name.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the width of the children should be updated automatically to be the width\n     * of the toggle element.\n     */\n    sameWidth: PropTypes.bool,\n\n    /**\n     * The minimum value the `left` style can be for the child component. This is really just used\n     * to make sure it doesn't scroll off the left of the page. It can also be used to make\n     * full screen layovers on devices when when the `fillViewportWidth` prop is enabled.\n     *\n     * This can either be a number of pixels or a string for percentages. If this value is a string\n     * **it will always be used over the calculated values** so it is preferred to use a number.\n     *\n     * @see {@link #minRight}\n     * @see {@link #fillViewportWidth}\n     */\n    minLeft: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * The minimum value the `right` style can be for the child component. This is really just used\n     * to make sure it doesn't scroll off the right of the page when the `fillViewportWidth` prop is\n     * enabled.\n     *\n     * This can either be a number of pixels or a string for percentages. If this value is a string\n     * **it will always be used over the calculated values** so it is preferred to use a number.\n     *\n     * @see {@link #minLeft}\n     * @see {@link #fillViewportWidth}\n     */\n    minRight: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * The minimum value that can be used for the `bottom` prop when the `fillViewportHeight` prop is enabled.\n     * It is generally recommended to keep this value at `0` to keep it stretched to the bottom of the viewport\n     * or setting it to a small positive number to add some padding.\n     *\n     * This can either be a number of pixels or a string for percentages. If this value is a string\n     * **it will always be used over the calculated values** so it is preferred to use a number.\n     *\n     * @see {@link #fillViewportHeight}\n     */\n    minBottom: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the layover should make the child fill the entire viewport's width. This will just\n     * style the child element with:\n     *\n     * ```js\n     * childStyle = {\n     *   left: this.props.minLeft,\n     *   right: this.props.minRight,\n     * };\n     * ```\n     *\n     * If you add any additional constraints such as `width` or `max-width`, it will not span the entire viewport's\n     * width. This prop should generally really only be used on mobile devices. Using this prop along with\n     * `fillViewportHeight` for Autocompletes can create great Android mobile searches. See the `fillViewportHeight`\n     * for more information about why it is *only Android*.\n     *\n     * @see {@link #minLeft}\n     * @see {@link #minRight}\n     * @see {@link #fillViewportHeight}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the layover should fill the height of the viewport from the current calculated `top`. This will just\n     * style the child element with:\n     *\n     * ```js\n     * childStyle = {\n     *   top: currentCalculatedTop,\n     *   bottom: this.props.minBottom,\n     *   maxHeight: 'none',\n     * };\n     * ```\n     *\n     * This is *super* nice on Android devices since it will allow you to create nice toolbar search autocompletes\n     * in your app and the list of items will grow until it reaches the soft keyboard. It isn't as nice on iOS since\n     * iOS does not subtract the soft keyboard from the viewport's size so the list will still extend to the bottom\n     * of the page.\n     *\n     * @see {@link #minBottom}\n     * @see {@link #fillViewportWidth}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    /**\n     * A function used to hide the visibility of the children when the children are no longer\n     * visible or an element outside of the layover is clicked.\n     */\n    onClose: PropTypes.func.isRequired,\n\n    /**\n     * The component to render the Layover as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * The transition name to use for the children appearing/disappearing.\n     */\n    transitionName: PropTypes.string.isRequired,\n\n    /**\n     * The transition duration for the enter animation. The animation can be disabled by setting\n     * this value to 0.\n     */\n    transitionEnterTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The transition duration for the leave animation. The animation can be disabled by setting\n     * this value to 0.\n     */\n    transitionLeaveTimeout: PropTypes.number.isRequired,\n\n    /**\n     * This is a threshold that is used to calculate if the `children` is still in\n     * view by applying this multiplier to the `children`'s width.\n     */\n    xThreshold: PropTypes.number.isRequired,\n\n    /**\n     * This is a threshold that is used to calculate if the `children` is still in\n     * view by applying this multiplier to the `toggle`'s height.\n     */\n    yThreshold: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the `children` should be hidden when an element outside\n     * of the `Layout` component has been clicked.\n     */\n    closeOnOutsideClick: PropTypes.bool.isRequired,\n\n    /**\n     * This is how the children get \"anchored\" to the `toggle` element and how the\n     * auto-fix attempts will be made. Right now, the auto fixes will only be handled\n     * on viewport boundaries instead of `fixedTo` boundaries. It was too hard for\n     * first attempt.\n     *\n     * The general behavior will be that an equal-opposite of an anchor will be chosen\n     * when that direction is out of viewport. So for example, the children are out\n     * of viewport for the right of the screen, and the `anchor.x` value is\n     * `Layover.HorizontalPositions.RIGHT`, the children will be swapped to be the `LEFT`\n     * of the `toggle` component now.\n     *\n     * So a full list:\n     * - `LEFT` / `RIGHT`\n     * - `INNER_LEFT` / `INNER_RIGHT`\n     * - `TOP` / `BOTTOM`\n     *\n     * The `CENTER` and `OVERLAP` positions can not be automatically adjusted.\n     *\n     * > To be safe, you should use the enum values for the `x` and `y` values.\n     * @see {@link #VerticalAnchors}\n     * @see {@link #HorizontalAnchors}\n     */\n    anchor: anchorShape.isRequired,\n\n    /**\n     * This is how the children get \"anchored\" when the `animationPositions` is set to `Layover.Positions.BELOW`.\n     * Set this to `null` to continue using the base `anchor` prop instead of switching to this anchor.\n     *\n     * @see {@link #anchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is the position that the children should animate from. It directly ties into\n     * the `$md-layover-child-positions` Sass variable.\n     */\n    animationPosition: positionShape.isRequired,\n\n    /**\n     * If you would like the layover to interact as a context menu, provide this prop. It will\n     * make the children appear relative to the context menu origin automatically.\n     *\n     * @see {@link #preventContextMenu}\n     */\n    onContextMenu: PropTypes.func,\n\n    /**\n     * Boolean if the default behavior of the context menu should be prevented when using the\n     * `onContextMenu` prop.\n     *\n     * @see {@link #onContextMenu}\n     */\n    preventContextMenu: PropTypes.bool,\n\n    /**\n     * Boolean if the layover should attempt to automatically adjust the position of the element to\n     * keep it within the viewport. If this value is set to `false`, the `onClose` prop will be called\n     * instead.\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the layover should attempt to automatically adjust the position of the element to\n     * keep it within the viewport. If this value is set to `false`, the `onClose` prop will be called\n     * instead.\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the layover should become \"simplified\". This basically disables all the logic for\n     * keeping the child within the viewport and allows you to manage all the positioning via CSS.\n     *\n     * When this is enabled, it updates the `Layover` to have `position: relative` while the child will\n     * have `position: absolute` which will allow for simple `top`, `right`, `bottom`, and/or `left` CSS\n     * to position as wanted.\n     *\n     * This is really only helpful in cases where the layover can't calculate things correctly due to\n     * being in fixed containers somewhere in the page or some other weird stuff. Hopefully this won't\n     * really need to be used much.\n     */\n    simplified: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    anchor: {\n      x: Layover.HorizontalAnchors.INNER_LEFT,\n      y: Layover.VerticalAnchors.OVERLAP,\n    },\n    belowAnchor: {\n      x: Layover.HorizontalAnchors.CENTER,\n      y: Layover.VerticalAnchors.BOTTOM,\n    },\n    animationPosition: Layover.Positions.BELOW,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n    component: 'div',\n    fixedTo: typeof window !== 'undefined' ? window : {},\n    toggleQuery: '.md-text-field-container,button,*[role=\"button\"],*[role=\"listbox\"]',\n    transitionName: 'md-layover',\n    transitionEnterTimeout: 200,\n    transitionLeaveTimeout: 200,\n    yThreshold: 0.38,\n    xThreshold: 0.38,\n    closeOnOutsideClick: true,\n    preventContextMenu: true,\n    simplified: false,\n    minLeft: 0,\n    minRight: 0,\n    minBottom: 0,\n    fillViewportWidth: false,\n    fillViewportHeight: false,\n  };\n\n  constructor(props) {\n    super();\n\n    const child = React.Children.only(props.children);\n    this.state = {\n      below: false,\n      right: false,\n      styles: child.props.style,\n    };\n\n    this._lastXFix = null;\n    this._lastYFix = null;\n    this._initialX = null;\n    this._initialY = null;\n    this._initialTop = null;\n    this._initialLeft = null;\n    this._child = null;\n    this._toggle = null;\n  }\n\n  componentDidMount() {\n    if (process.env.NODE_ENV === 'development') {\n      window.addEventListener('load', () => {\n        this._setContainer(this._container);\n      });\n    }\n\n    const { visible, fixedTo, sameWidth, centered, simplified } = this.props;\n    const anchor = this._getAnchor(this.props);\n    if (visible) {\n      handleWindowClickListeners(this._handleOutsideClick, true);\n\n      // Don't worry about any of the other logic for a \"simple\" layover\n      if (simplified) {\n        return;\n      }\n\n      const rect = this._contextRect || this._toggle.getBoundingClientRect();\n      if (this._dialog) {\n        this._manageFixedToListener(this._dialog, true);\n      } else if (!this._inFixed) {\n        this._manageFixedToListener(fixedTo, true);\n      }\n\n      this._init(fixedTo, anchor, sameWidth, centered, rect);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { fixedTo, visible, children, sameWidth, centered, simplified } = nextProps;\n    if (simplified) {\n      if (this.props.simplified !== simplified) {\n        this._reset();\n      }\n      return;\n    }\n\n    const anchor = this._getAnchor(nextProps);\n    const visibileDiff = visible !== this.props.visible;\n    const childStyle = React.Children.only(children).props.style;\n\n    if (visibileDiff) {\n      if (!visible) {\n        this._reset();\n      } else {\n        // Initialize the layover logic\n        const rect = this._contextRect || this._toggle.getBoundingClientRect();\n        if (this._dialog) {\n          this._manageFixedToListener(this._dialog, true);\n        } else if (!this._inFixed) {\n          this._manageFixedToListener(fixedTo, true);\n        }\n\n        this._init(fixedTo, anchor, sameWidth, centered, rect);\n      }\n    } else if (fixedTo !== this.props.fixedTo && visible) {\n      // swap the fixedTo listeners\n      this._manageFixedToListener(this.props.fixedTo, false);\n      this._manageFixedToListener(fixedTo, true);\n    } else if (childStyle !== React.Children.only(this.props.children).props.style) {\n      // Re-merge styles... This is only required if all the others fail since all the other\n      // logic always merges styles with the children styles\n      this.setState({ styles: { ...this.state.styles, ...childStyle } });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { visible, closeOnOutsideClick } = this.props;\n    const enabled = visible && closeOnOutsideClick;\n    const prevEnabled = prevProps.visible && prevProps.closeOnOutsideClick;\n    if (enabled !== prevEnabled) {\n      if (this._clickTimeout) {\n        clearTimeout(this._clickTimeout);\n        this._clickTimeout = null;\n      }\n\n      // This is really an arbitrary timeout time, but firefox needs to have a timeout\n      // so the context menu doesn't close automatically due to an \"outside click\" being\n      // triggered\n      this._clickTimeout = setTimeout(() => {\n        this._clickTimeout = null;\n        handleWindowClickListeners(this._handleOutsideClick, enabled);\n      }, enabled ? 300 : 0);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._clickTimeout) {\n      clearTimeout(this._clickTimeout);\n      this._clickTimeout = null;\n    }\n    handleWindowClickListeners(this._handleOutsideClick, false);\n\n    if (!this.props.simplified) {\n      this._manageFixedToListener(this.props.fixedTo, false);\n      this._manageWindowResizeListener(false);\n    }\n  }\n\n  _getAnchor({ anchor, belowAnchor, animationPosition }) {\n    return animationPosition === Layover.Positions.BELOW && belowAnchor || anchor;\n  }\n\n  _isCenteredDialog = () => this._dialog && this._dialog.classList.contains('md-dialog--centered');\n\n  _createStyles = (anchor, centered, child, rect) => {\n    const { x, y } = anchor;\n    const { offsetWidth, offsetHeight } = child;\n\n    let left;\n    let top;\n    if (x === HorizontalAnchors.CENTER) {\n      left = rect.left + (rect.width / 2) - (offsetWidth / 2);\n    } else if (x === HorizontalAnchors.INNER_RIGHT) {\n      left = rect.right - offsetWidth;\n    } else if (x === HorizontalAnchors.LEFT) {\n      left = rect.left - offsetWidth;\n    } else if (x === HorizontalAnchors.RIGHT) {\n      left = rect.right;\n    }\n\n    if (centered && x === HorizontalAnchors.CENTER && y === VerticalAnchors.CENTER) {\n      top = rect.top - (offsetHeight / 2) + (rect.height / 2);\n    } else if (y === VerticalAnchors.TOP) {\n      top = rect.top - offsetHeight;\n    } else if (y === VerticalAnchors.CENTER) {\n      top = rect.top + rect.height / 2;\n    } else if (y === VerticalAnchors.BOTTOM) {\n      top = rect.bottom;\n    }\n\n    if (this._isCenteredDialog()) {\n      const dialogRect = this._dialog.getBoundingClientRect();\n      left -= dialogRect.left;\n      top -= dialogRect.top;\n    }\n\n    const style = {};\n    if (top) {\n      style.top = top;\n    }\n\n    if (left) {\n      style.left = left;\n    }\n\n    return style;\n  };\n\n  /**\n   * Whew. Ok. So since the fixedTo prop can either be two elements or a single item,\n   * this utility function is used to add/remove the scrolling event listeners for\n   * this prop.\n   *\n   * When the fixedTo prop has a horizontal and/or vertical attribute, the `window`\n   * will be the fallback option. If both the horizontal and vertical attributes are\n   * defined, the `window` still needs to have a scroll listener to make sure it\n   * doesn't go off screen.\n   */\n  _manageFixedToListener = (fixedTo, add) => {\n    const listener = `${add ? 'add' : 'remove'}EventListener`;\n    if (fixedTo !== window && (fixedTo.x || fixedTo.y)) {\n      const { x, y } = fixedTo;\n      if (x) {\n        x[listener]('scroll', this._handleScroll);\n      } else {\n        window[listener]('scroll', this._handleScroll);\n      }\n\n      if (y) {\n        y[listener]('scroll', this._handleScroll);\n      } else if (!x) {\n        // Only add the window event listener once\n        window[listener]('scroll', this._handleScroll);\n      }\n\n      if (y && y !== window && x && x !== window) {\n        window[listener]('scroll', this._handleScroll);\n      }\n    } else {\n      fixedTo[listener]('scroll', this._handleScroll);\n\n      if (fixedTo !== window) {\n        window[listener]('scroll', this._handleScroll);\n      }\n    }\n  };\n\n  _manageWindowResizeListener = (enabled) => {\n    if (this._windowResizeTimeout) {\n      clearTimeout(this._windowResizeTimeout);\n      this._windowResizeTimeout = null;\n    }\n\n    if (enabled) {\n      // add a 2 second delay before watching resize events since Android soft keyboards trigger a resize event.\n      this._windowResizeTimeout = setTimeout(() => {\n        this._windowResizeTimeout = null;\n        window.addEventListener('resize', this._handleWindowResize);\n      }, 2000);\n    } else {\n      window.removeEventListener('resize', this._handleWindowResize);\n    }\n  };\n\n  /**\n   * This is just a simple utility function to merge the existing state styles,\n   * any new styles, and the children's styles (with most precedence).\n   */\n  _mergeStyles = (style) => {\n    const {\n      minLeft,\n      minRight,\n      minBottom,\n      fillViewportWidth,\n      fillViewportHeight,\n    } = this.props;\n    if (fillViewportWidth) {\n      style.left = minLeft;\n      style.right = minRight;\n    } else {\n      if (style.left) {\n        style.left = Math.max(minLeft, style.left);\n      }\n\n      if (style.right) {\n        style.right = Math.max(minRight, style.right);\n      }\n    }\n\n    if (fillViewportHeight) {\n      style.bottom = minBottom;\n      style.maxHeight = 'none';\n    } else {\n      // These styles are only created when filling the viewport height, so clear\n      // them out again\n      style.bottom = null;\n      style.maxHeight = null;\n    }\n\n    return {\n      ...this.state.styles,\n      ...style,\n      ...React.Children.only(this.props.children).props.style,\n    };\n  };\n\n  /**\n   * This initializes the popover with the default styles, and the initial bookkeeping\n   * variables to update while it is open.\n   */\n  _init = (fixedTo, anchor, sameWidth, centered, rect) => {\n    if (this._child) {\n      // The init function can be called again if the user quickly toggles the layover. If that\n      // is the case, we want the styles that were set after the _positionChild _attemptFix.\n      return;\n    }\n\n    const { height, width } = rect;\n    let { top, left, right } = rect;\n    let x;\n    let y;\n    if (this._dialog) {\n      const scroll = getScroll(this._dialog);\n      x = scroll.x;\n      y = scroll.y;\n\n      if (this._isCenteredDialog()) {\n        const dialogRect = this._dialog.getBoundingClientRect();\n        left -= dialogRect.left;\n        top -= dialogRect.top;\n        right -= dialogRect.right;\n      }\n    } else if (fixedTo !== window && (fixedTo.y || fixedTo.x)) {\n      x = getScroll(fixedTo.x || window).x;\n      y = getScroll(fixedTo.y || window).y;\n    } else {\n      const scroll = getScroll(fixedTo);\n      x = scroll.x;\n      y = scroll.y;\n    }\n\n    this._initialX = x;\n    this._initialY = y;\n    this._initialLeft = left;\n    this._initialTop = top;\n\n    if (anchor.x === HorizontalAnchors.INNER_RIGHT) {\n      this._initialLeft = left + width;\n    } else if (anchor.x === HorizontalAnchors.RIGHT) {\n      this._initialLeft = right;\n    }\n\n    if (!centered) {\n      this._lastYFix = anchor.y === VerticalAnchors.TOP ? 'bottom' : 'top';\n    } else {\n      // Centered is not fixable\n      this._lastYFix = null;\n    }\n    if (anchor.x === HorizontalAnchors.LEFT || anchor.x === HorizontalAnchors.INNER_LEFT) {\n      this._lastXFix = 'right';\n    } else if (anchor.x === HorizontalAnchors.RIGHT || anchor.x === HorizontalAnchors.INNER_RIGHT) {\n      this._lastXFix = 'left';\n    } else {\n      // Can't fix others\n      this._lastXFix = null;\n    }\n\n    if (anchor.y === VerticalAnchors.BOTTOM) {\n      this._initialTop = top + height;\n    }\n\n    if (fixedTo !== window && !fixedTo.y && !fixedTo.x) {\n      const scroll = getScroll(window);\n      this._initialWinX = scroll.x;\n      this._initialWinY = scroll.y;\n    }\n\n    const styles = this._mergeStyles({\n      left: this._initialLeft,\n      top: this._initialTop,\n      transformOrigin: undefined,\n      width: sameWidth ? width : undefined,\n    });\n\n    this.setState({ styles });\n  };\n\n  _reset = ({ fixedTo } = this.props) => {\n    // Reset all the bookkeeping variables for a fresh start on re-visible\n    this._lastXFix = null;\n    this._lastYFix = null;\n    this._initialX = null;\n    this._initialY = null;\n    this._initialTop = null;\n    this._initialLeft = null;\n\n    if (!this._inFixed) {\n      if (this._dialog) {\n        this._manageFixedToListener(this._dialog, false);\n      }\n\n      this._manageFixedToListener(fixedTo, false);\n    }\n  };\n\n  _setContainer = (container) => {\n    this._container = findDOMNode(container);\n    this._toggle = null;\n    if (!this._container) {\n      return;\n    }\n\n    const { toggleQuery, onContextMenu } = this.props;\n    if (typeof toggleQuery === 'function') {\n      this._toggle = toggleQuery();\n    } else if (typeof toggleQuery === 'string') {\n      this._toggle = this._container.querySelector(toggleQuery);\n    } else {\n      this._toggle = toggleQuery;\n    }\n\n    if (!this._toggle && !onContextMenu && process.env.NODE_ENV !== 'production') {\n      const error = new Error(\n        'Unable to find a toggle component with the provided `toggleQuery` and `toggle` element. \\n' +\n        `\\`toggleQuery\\`: \\`${toggleQuery}\\``\n      );\n      error.toggleQuery = toggleQuery;\n      error.toggle = this.props.toggle;\n\n      throw error;\n    }\n\n    let node = this._container;\n    while (node) {\n      const fixed = window.getComputedStyle(node).position === 'fixed';\n      if (fixed && node.className.match(/md-dialog--(full-page|centered)/)) {\n        this._dialog = node;\n        return;\n      } else if (fixed && !node.classList.contains('md-layover-child')) {\n        this._inFixed = true;\n        return;\n      }\n\n      node = node.offsetParent;\n    }\n  };\n\n  /**\n   * Attempts to fix the child by setting it's location ONLY for the entire\n   * page viewport. I didn't bother attempting to fix it for additional fixedTo\n   * stuff.\n   */\n  _initialFix = () => {\n    // Need to make a clone that disables any transitions to calculate positioning stuff\n    const clone = this._child.cloneNode(true);\n    clone.style.webkitTransform = 'none';\n    clone.style.transfrom = 'none';\n    clone.style.webkitTransition = 'none';\n    clone.style.transition = 'none';\n\n    this._child.parentNode.appendChild(clone);\n    const vp = viewport(clone);\n    const { offsetHeight: childHeight, offsetWidth: childWidth } = clone;\n    this._child.parentNode.removeChild(clone);\n\n    if (vp === true || !this._toggle || !this._child) {\n      return;\n    }\n\n    const { x, y } = this._getAnchor(this.props);\n    let toggleHeight;\n    let toggleWidth;\n    if (this._contextRect) {\n      toggleHeight = this._contextRect.height;\n      toggleWidth = this._contextRect.width;\n    } else {\n      toggleHeight = this._toggle.offsetHeight;\n      toggleWidth = this._toggle.offsetWidth;\n    }\n\n    let addToTop = 0;\n    let addToLeft = 0;\n\n    // Android devices will never get this far because they consider the keyboard as part\n    // of the viewport, iOS will and cause it to be a giant negative number. *sigh*\n    // Prevent any additional vertical positioning for iOS\n    if (!this.props.fillViewportHeight && (!vp.top || !vp.bottom)) {\n      const multiplier = vp.top ? -1 : 1;\n      if (!vp.bottom && y === VerticalAnchors.OVERLAP) {\n        addToTop += toggleHeight;\n      } else if (y === VerticalAnchors.TOP || y === VerticalAnchors.BOTTOM) {\n        addToTop += (multiplier * toggleHeight);\n      }\n\n      addToTop += (multiplier * childHeight);\n\n      this._lastYFix = vp.top ? 'bottom' : 'top';\n    }\n\n    if (!this.props.fillViewportWidth && x !== HorizontalAnchors.CENTER && (!vp.left || !vp.right)) {\n      if (!vp.left && x === HorizontalAnchors.LEFT) {\n        addToLeft += toggleWidth + childWidth;\n        this._lastXFix = 'left';\n      } else if (!vp.left && x === HorizontalAnchors.INNER_LEFT) {\n        addToLeft += toggleWidth;\n        this._lastXFix = 'left';\n      } else if (!vp.right && x === HorizontalAnchors.RIGHT) {\n        addToLeft -= (toggleWidth + childWidth);\n        this._lastXFix = 'right';\n      } else if (!vp.right && x === HorizontalAnchors.INNER_RIGHT) {\n        addToLeft -= toggleWidth;\n        this._lastXFix = 'right';\n      }\n    }\n\n    if (addToTop !== 0 || addToLeft !== 0) {\n      this._initialTop += addToTop;\n      this._initialLeft += addToLeft;\n\n      this.setState({ styles: this._mergeStyles({ top: this._initialTop, left: this._initialLeft }) });\n    }\n  };\n\n  /**\n   * When the child is initially mounted, it will update the styles for centering\n   * the element (if enabled) and then attempt to fix any viewport issues.\n   */\n  _fixateChild = (child) => {\n    this._child = findDOMNode(child);\n\n    if (this._child !== null) {\n      this._childComponent = React.Children.only(this.props.children);\n\n      // If child also has a ref callback, simulate the same thing\n      if (typeof this._childComponent.ref === 'function') {\n        this._childComponent.ref(child);\n      }\n\n      if (this.props.simplified || !this._child || (!this._toggle && !this._contextRect)) {\n        return;\n      }\n\n      if (this._dialog && this._dialog.classList.contains('md-dialog--centered')) {\n        return;\n      }\n\n      this._manageWindowResizeListener(true);\n      this._positionChild();\n    } else if (this._childComponent && typeof this._childComponent.ref === 'function') {\n      this._childComponent.ref(child);\n    }\n  };\n\n  _positionChild = () => {\n    const { centered } = this.props;\n    const anchor = this._getAnchor(this.props);\n    const rect = this._contextRect || this._toggle.getBoundingClientRect();\n    this._height = rect.height;\n    this._width = rect.width;\n    const styles = this._createStyles(anchor, centered, this._child, rect);\n    if (styles.top || styles.left) {\n      this._initialLeft = styles.left || this._initialLeft;\n      this._initialTop = styles.top || this._initialTop;\n      this.setState({ styles: this._mergeStyles(styles) }, this._initialFix);\n    } else {\n      this._initialFix();\n    }\n  };\n\n  _handleResize = () => {\n    if (this.props.visible) {\n      this._positionChild();\n    }\n  };\n\n  _handleScroll = (e) => {\n    if (!this.props.repositionOnScroll) {\n      this._manageFixedToListener(this.props.fixedTo, false);\n      this.props.onClose(e);\n    }\n\n    if (!this._ticking) {\n      requestAnimationFrame(() => this._handleTick(e));\n    }\n\n    this._ticking = true;\n  };\n\n  /**\n   * This is the meat of the stuff. Do lots of viewport / container checks to make sure\n   * the element should still be visible. If it is still visible, it will update its\n   * x and y position for the new scroll position.\n   */\n  _handleTick = (e) => {\n    const { fixedTo, xThreshold, yThreshold } = this.props;\n    const vp = viewport(this._child);\n    if (vp !== true && vp.left && vp.right) {\n      const fixed = !this._contextRect && this._attemptFix(vp);\n      if (!fixed) {\n        this.props.onClose(e);\n        this._ticking = false;\n      }\n\n      return;\n    } else if (\n      isOutOfBounds(fixedTo, this._child, this._toggle, yThreshold, xThreshold)\n    ) {\n      this.props.onClose(e);\n      this._ticking = false;\n      return;\n    }\n\n    let x;\n    let y;\n    if (this._dialog) {\n      const scroll = getScroll(this._dialog);\n      x = scroll.x;\n      y = scroll.y;\n    } else if (fixedTo !== window && (fixedTo.x || fixedTo.y)) {\n      x = getScroll(fixedTo.x || window).x;\n      y = getScroll(fixedTo.y || window).y;\n    } else {\n      const scroll = getScroll(fixedTo);\n      x = scroll.x;\n      y = scroll.y;\n    }\n\n    let winX;\n    let winY;\n    // When using the additional fixedTo stuff, need to also keep track of the entire\n    // window's scrolling..\n    if (fixedTo !== window && !fixedTo.x && !fixedTo.y) {\n      const scroll = getScroll(window);\n      winX = scroll.x;\n      winY = scroll.y;\n    }\n\n    const { styles } = this.state;\n    let { left, top } = styles;\n    if (this._initialX !== x) {\n      left = (this._initialX - x) + this._initialLeft;\n    }\n\n    if (winX && this._initialWinX !== winX) {\n      left = (this._initialWinX - winX) + this._initialX;\n    }\n\n    if (this._initialY !== y) {\n      top = (this._initialY - y) + this._initialTop;\n    }\n\n    if (winY && this._initialWinY !== winY) {\n      top = (this._initialWinY - winY) + this._initialTop + (this._initialY - y);\n    }\n\n    if (styles.top !== top || styles.left !== left) {\n      this.setState({ styles: this._mergeStyles({ left, top }) }, () => {\n        this._ticking = false;\n      });\n    } else {\n      this._ticking = false;\n    }\n  };\n\n  _handleOutsideClick = (e) => {\n    if (\n      (this._contextRect && this._child && !this._child.contains(e.target)) ||\n      (this._container && !this._container.contains(e.target))\n    ) {\n      this.props.onClose(e);\n    }\n  };\n\n  _handleWindowResize = (e) => {\n    const { onClose, repositionOnResize } = this.props;\n    if (repositionOnResize) {\n      this._handleResize();\n    } else {\n      onClose(e);\n      this._manageWindowResizeListener(false);\n    }\n  };\n\n  /**\n   * Attempts to fix a viewport problem by swapping the positioning. This only does\n   * vertical switching right now.\n   *\n   * @param {Object} vp - The result of the viewport function\n   * @return {boolean} true if the fix was able to be done and successful.\n   */\n  _attemptFix = (vp) => {\n    const { x, y } = this._getAnchor(this.props);\n    const centered = x === HorizontalAnchors.CENTER && y === VerticalAnchors.CENTER && this.props.centered;\n    if (centered || (this._lastYFix === 'top' && !vp.top) || (this._lastYFix === 'bottom' && !vp.bottom)) {\n      return false;\n    }\n\n    const toggleTop = this._toggle.getBoundingClientRect().top;\n    const { offsetHeight: toggleHeight } = this._toggle;\n    const { offsetHeight: childHeight } = this._child;\n\n    // Can;t fix if the child can't fit on the page based on the toggle's position\n    if (toggleTop + toggleHeight + childHeight > window.innerHeight) {\n      return false;\n    }\n\n    const { top } = this._child.getBoundingClientRect();\n    let newTop = this._initialTop;\n    let addToTop = childHeight * (vp.top ? -1 : 1);\n    if (y === VerticalAnchors.OVERLAP) {\n      addToTop += ((vp.top ? 1 : -1) * toggleHeight);\n    } else if (y === VerticalAnchors.TOP || y === VerticalAnchors.BOTTOM) {\n      addToTop += ((this._lastYFix === 'top' ? -1 : 1) * toggleHeight);\n    }\n\n    if (addToTop !== 0) {\n      newTop = top + addToTop;\n      this._lastYFix = vp.top ? 'bottom' : 'top';\n    }\n\n    if (newTop !== this._initialTop) {\n      this._initialTop = newTop;\n      const { fixedTo } = this.props;\n      let scrollEl = fixedTo;\n      if (fixedTo !== window && (fixedTo.y || fixedTo.x)) {\n        scrollEl = fixedTo.y || window;\n      }\n\n      this._initialY = getScroll(scrollEl).y;\n\n      this.setState({ styles: this._mergeStyles({ top: this._initialTop }) }, () => {\n        this._ticking = false;\n      });\n      return true;\n    }\n\n    return false;\n  };\n\n  _handleContextMenu = (e) => {\n    const anchor = this._getAnchor(this.props);\n    const { onContextMenu, preventContextMenu, fixedTo, sameWidth, centered, visible } = this.props;\n    if (!onContextMenu) {\n      return;\n    }\n\n    this._contextRect = getSelectedTextPosition(e);\n    if (preventContextMenu && (!this._child || !this._child.contains(e.target))) {\n      e.preventDefault();\n    }\n\n    onContextMenu(e);\n    if (visible) {\n      this._init(fixedTo, anchor, sameWidth, centered, this._contextRect);\n    }\n  };\n\n  render() {\n    const {\n      className,\n      block,\n      toggle,\n      visible,\n      children,\n      fullWidth,\n      animationPosition,\n      simplified,\n      fillViewportWidth,\n      fillViewportHeight,\n      /* eslint-disable no-unused-vars */\n      anchor,\n      belowAnchor,\n      onClose,\n      repositionOnScroll,\n      repositionOnResize,\n      sameWidth,\n      centered,\n      fixedTo,\n      toggleQuery,\n      yThreshold,\n      xThreshold,\n      onContextMenu,\n      preventContextMenu,\n      closeOnOutsideClick,\n      minLeft,\n      minRight,\n      minBottom,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let child;\n    let childId;\n    if (visible) {\n      child = React.Children.only(children);\n      if (child.props.id) {\n        childId = child.props.id;\n      } else if (props.id) {\n        childId = `${props.id}-layover`;\n      }\n\n      child = React.cloneElement(children, {\n        ref: this._fixateChild,\n        id: childId,\n        style: simplified ? child.props.style : this.state.styles,\n        className: cn(`md-layover-child md-layover-child--${animationPosition}`, {\n          'md-layover-child--simplified': simplified,\n        }, child.props.className),\n      });\n    }\n\n    let observer = null;\n    if (!simplified && (!fillViewportWidth && !fillViewportHeight)) {\n      observer = (\n        <ResizeObserver\n          watchWidth={!fillViewportWidth}\n          watchHeight={!fillViewportHeight}\n          target={this._child}\n          onResize={this._handleResize}\n        />\n      );\n    }\n\n    return (\n      <CSSTransitionGroup\n        {...props}\n        className={cn('md-layover', {\n          'md-layover--simplified': simplified,\n          'md-inline-block': !block && !fullWidth,\n          'md-full-width': fullWidth,\n        }, className)}\n        ref={this._setContainer}\n        aria-haspopup\n        aria-owns={childId}\n        aria-expanded={visible}\n        transitionEnter={props.transitionEnterTimeout !== 0}\n        transitionLeave={props.transitionLeaveTimeout !== 0}\n        onContextMenu={this._handleContextMenu}\n      >\n        {observer}\n        {toggle}\n        {child}\n      </CSSTransitionGroup>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getField from '../utils/getField';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Layover from '../Helpers/Layover';\nimport List from '../Lists/List';\n\n/**\n * The `Menu` controlled component is used to display a list of children in the `List`\n * component once the `visible` prop is true.\n */\nexport default class Menu extends PureComponent {\n  static HorizontalAnchors = Layover.HorizontalAnchors;\n  static VerticalAnchors = Layover.VerticalAnchors;\n  static Positions = {\n    // Can't do ...Layover.Positions since it triggers the get for CONTEXT\n    TOP_LEFT: Layover.Positions.TOP_LEFT,\n    TOP_RIGHT: Layover.Positions.TOP_RIGHT,\n    BOTTOM_LEFT: Layover.Positions.BOTTOM_LEFT,\n    BOTTOM_RIGHT: Layover.Positions.BOTTOM_RIGHT,\n    BELOW: Layover.Positions.BELOW,\n    _warned: false,\n    get CONTEXT() {\n      if (!this._warned) {\n        /* eslint-disable no-console */\n        console.error(\n          'The `Menu.Positions.CONTEXT` position has been deprecated and will be removed ' +\n          'in the next major release. To make the `Menu` behave as a context menu, provide ' +\n          'the `onContextMenu` prop instead.'\n        );\n        /* eslint-enable no-console */\n      }\n\n      this._warned = true;\n      return 'context';\n    },\n  };\n\n  static propTypes = {\n    /**\n     * An id to provide to the menu's container. This is required for accessibility as it generates\n     * the `aria-` attributes for dynamic content.\n     *\n     * @see {@link #listId}\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional id to provide to the menu's list. If this prop is omitted, the list's id will be\n     * `\\`${id}-list\\``\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the main container for the menu.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the main container for the menu.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the list once the menu has opened.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the list once the menu has opened.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * The component to render the main container as.\n     *\n     * @see {@link Helpers/Layover#component}\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]),\n\n    /**\n     * This is how the menu's `List` gets anchored to the `toggle` element.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the optional anchor to use when the `position` is set to `Menu.Positions.BELOW`.\n     * Set this to `null` to use the default `anchor` prop.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is the animation position for the list that appears.\n     *\n     * @see {@link Helpers/Layover#animationPosition}\n     */\n    position: positionShape,\n\n    /**\n     * This is the component/element that should toggle the menu open.\n     *\n     * @see {@link Helpers/Layover#toggle}\n     */\n    toggle: PropTypes.node,\n\n    /**\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * Any additional props that should be applied to the list in the menu. This is really used\n     * when additional `aria-` tags need to be applied.\n     */\n    listProps: PropTypes.object,\n\n    /**\n     * Boolean if the menu's list should appear horizontally instead of vertically.\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\n     */\n    listZDepth: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\n     * `$md-menu-desktop-max-height` values.\n     *\n     * @see [md-menu-mobile-max-height](/components/menus?tab=2#variable-md-menu-mobile-max-height)\n     * @see [md-menu-desktop-max-height](/components/menus?tab=2#variable-md-menu-desktop-max-height)\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list is visible.\n     */\n    visible: PropTypes.bool.isRequired,\n\n    /**\n     * Any children to render in the menu's list. This _should_ normally be `ListItem`, or\n     * `ListItemControl`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional function to call when en element in the menu has been clicked.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when a key is pressed anywhere in the menu.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * A function to call to close the menu. This is used for closing on outside clicks,\n     * closing when a list item has been clicked, or the user presses escape.\n     */\n    onClose: PropTypes.func.isRequired,\n\n    /**\n     * Boolean if the menu should be cascading. This means that the menu will pop the additional\n     * `nestedItems` on any `ListItem` to be appear either to the right or left of the visible list.\n     */\n    cascading: PropTypes.bool,\n\n    /**\n     * This is how the cascading lists get anchored to the list item.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    cascadingAnchor: Layover.propTypes.anchor,\n\n    /**\n     * This is the z-depth the list should gain for a cascading menu. This only gets applied on\n     * items that are more than 1 level deep.\n     */\n    cascadingZDepth: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the `md-full-width` class name should get applied to the menu's container.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should be displayed as a block instead of as an inline block.\n     *\n     * @see {@link #fullWidth}\n     */\n    block: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#centered}\n     */\n    centered: Layover.propTypes.centered,\n\n    /**\n     * @see {@link Helpers/Layover#sameWidth}\n     */\n    sameWidth: Layover.propTypes.sameWidth,\n\n    /**\n     * If you would like the menu to interact as a context menu, provide this prop.\n     *\n     * @see {@link Helpers/Layover#onContextMenu}\n     */\n    onContextMenu: Layover.propTypes.onContextMenu,\n\n    /**\n     * Boolean if the default behavior of the context menu should be prevented when using the\n     * `onContextMenu` prop.\n     *\n     * @see {@link Helpers/Layover#preventContextMenu}\n     */\n    preventContextMenu: Layover.propTypes.preventContextMenu,\n\n    /**\n     * @see {@link Helpers/Layover#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#toggleQuery}\n     */\n    toggleQuery: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional transition name to use for the list appearing/disappearing.\n     *\n     * @see {@link Helpers/Layover#transitionName}\n     */\n    transitionName: PropTypes.string,\n\n    /**\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplified: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    close: deprecated(PropTypes.func, 'Use `onClose` instead'),\n    autoclose: deprecated(PropTypes.bool, 'The menus will always autoclose as according to the specs'),\n    contained: deprecated(PropTypes.bool, 'Use `sameWidth` instead'),\n    limitHeight: deprecated(PropTypes.bool, 'The menus will always be limited in height as according to the specs'),\n    expanderIconClassName: deprecated(\n      PropTypes.node,\n      'The expander for cascading menus will now just be a simple rotate of the existing `ListItem` ' +\n      'expander icon'\n    ),\n    expanderIconChildren: deprecated(\n      PropTypes.node,\n      'The expander for cascading menus will now just be a simple rotate of the existing `ListItem` ' +\n      'expander icon'\n    ),\n  };\n\n  static defaultProps = {\n    anchor: {\n      x: Layover.HorizontalAnchors.INNER_RIGHT,\n      y: Layover.VerticalAnchors.OVERLAP,\n    },\n    cascadingAnchor: {\n      x: Layover.HorizontalAnchors.RIGHT,\n      y: Layover.VerticalAnchors.OVERLAP,\n    },\n    position: Layover.Positions.TOP_RIGHT,\n    fixedTo: typeof window !== 'undefined' ? window : {},\n    listZDepth: 2,\n    listHeightRestricted: true,\n    cascadingZDepth: 3,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n    simplified: true,\n  };\n\n  static contextTypes = {\n    listLevel: PropTypes.number,\n    cascadingId: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    cascadingMenu: PropTypes.bool,\n    cascadingAnchor: anchorShape,\n    cascadingZDepth: PropTypes.number,\n  };\n\n  static childContextTypes = {\n    listLevel: PropTypes.number,\n    cascadingId: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    cascadingMenu: PropTypes.bool,\n    cascadingFixedTo: fixedToShape,\n    cascadingAnchor: anchorShape,\n    cascadingZDepth: PropTypes.number,\n  };\n\n  getChildContext() {\n    const { cascading, id, fixedTo, cascadingAnchor } = this.props;\n    const listLevel = this.context.listLevel || 0;\n    const cascadingMenu = typeof cascading !== 'undefined' ? cascading : this.context.cascadingMenu;\n    const cascadingZDepth = getField(this.context, this.props, 'cascadingZDepth');\n    const cascadingFixedTo = typeof fixedTo !== 'undefined' ? fixedTo : this.context.cascadingFixedTo;\n\n    return {\n      listLevel,\n      cascadingId: `${id}-level-${listLevel + 1}`,\n      cascadingMenu,\n      cascadingAnchor,\n      cascadingZDepth,\n      cascadingFixedTo,\n    };\n  }\n\n  componentDidMount() {\n    this._container = findDOMNode(this);\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  _handleClose = (e) => {\n    const { close, onClose } = this.props;\n    if (close || onClose) {\n      (close || onClose)(e);\n    }\n  };\n\n  /**\n   * Checks if a provided event target or HTML Element is considered a menu click target.\n   * This normally is just a ListItem.\n   */\n  _isCloseTarget(target) {\n    return target.classList.contains('md-list-item')\n      && !target.classList.contains('md-list-item--nested-container');\n  }\n\n  /**\n   * Checks if a provided event target or HTML Element is something that should shortcut/break\n   * out of the click event loop because it **should not** close menus when clicked.\n   */\n  _isIgnoreTarget(target) {\n    return target.getAttribute('disabled') !== null\n      || target.classList.contains('md-list-control');\n  }\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    let node = e.target;\n    while (this._container && this._container.contains(node)) {\n      if (this._isIgnoreTarget(node)) {\n        return;\n      } else if (this._isCloseTarget(node)) {\n        e.persist();\n        // set a timeout so item click events still trigger, and then close\n        this._timeout = setTimeout(() => {\n          this._timeout = null;\n          this._handleClose(e);\n        }, TICK);\n\n        return;\n      }\n\n      node = node.parentNode;\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    handleKeyboardAccessibility(e, this._handleClick, true, true);\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      listStyle,\n      listClassName,\n      visible,\n      children,\n      listProps,\n      listZDepth,\n      listInline,\n      listHeightRestricted,\n      cascading,\n      sameWidth,\n      simplified,\n      contained, // deprecated\n      isOpen, // deprecated\n      /* eslint-disable no-unused-vars */\n      fixedTo: propFixedTo,\n      listId: propListId,\n      cascadingAnchor,\n      cascadingZDepth,\n      onClose,\n      position: propPosition,\n\n      // deprecated\n      close,\n      autoclose,\n      limitHeight,\n      expanderIconChildren,\n      expanderIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { listId, position } = this.props;\n    if (!listId) {\n      listId = `${id}-list`;\n    }\n\n    // can't have a simplified menu for cascading and context menus\n    const simple = !cascading && !props.onContextMenu && position !== 'context' && simplified;\n    if (position === 'context') {\n      position = Menu.Positions.BELOW;\n    }\n\n    const below = position === Menu.Positions.BELOW;\n    const fixedTo = typeof propFixedTo !== 'undefined' ? propFixedTo : this.context.cascadingFixedTo;\n    const listVisible = typeof isOpen !== 'undefined' ? isOpen : visible;\n    return (\n      <Layover\n        {...props}\n        id={id}\n        className={cn('md-menu-container', {\n          'md-menu-container--menu-below': simplified && below,\n        }, className)}\n        simplified={simple}\n        sameWidth={contained || sameWidth}\n        fixedTo={fixedTo}\n        onClick={this._handleClick}\n        onKeyDown={this._handleKeyDown}\n        onClose={this._handleClose}\n        animationPosition={position}\n        visible={listVisible}\n        aria-haspopup\n        aria-expanded={listVisible}\n        aria-owns={listId}\n      >\n        <List\n          {...listProps}\n          id={listId}\n          key=\"menu-list\"\n          style={listStyle}\n          className={cn('md-list--menu', {\n            'md-list--menu-restricted': listHeightRestricted,\n            'md-list--menu-contained': simplified && (sameWidth || contained),\n            [`md-list--menu-${position}`]: simplified,\n            [`md-paper md-paper--${listZDepth}`]: listZDepth,\n          }, listClassName)}\n          inline={listInline}\n        >\n          {children}\n        </List>\n      </Layover>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport themeColors from '../utils/themeColors';\nimport getCollapserStyles from '../utils/getCollapserStyles';\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport { TAB } from '../constants/keyCodes';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport Collapse from '../Helpers/Collapse';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport TileAddon from './TileAddon';\nimport ListItemText from './ListItemText';\nimport List from './List';\nimport Menu from '../Menus/Menu';\n\n/**\n * The `ListItem` component is used for rendering a `li` tag with text and optional\n * icons/avatars.\n */\nexport default class ListItem extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the `li` tag.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `li` tag.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `.md-list-tile`.\n     *\n     * @see {@link #component}\n     */\n    tileStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `.md-list-tile`.\n     *\n     * @see {@link #component}\n     */\n    tileClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the div that surrounds the `primaryText` and `secondaryText`\n     * nodes.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the div that surrounds the `primaryText` and `secondaryText`\n     * nodes.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the element that is rendered before content node.\n     */\n    leftNodeStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the element that is rendered before content node.\n     */\n    leftNodeClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the element that is rendered after content node.\n     */\n    rightNodeStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the element that is rendered after content node.\n     */\n    rightNodeClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the div surrounding the `primaryText`.\n     */\n    primaryTextStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the div surrounding the `primaryText`.\n     */\n    primaryTextClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the div surrounding the `secondaryText`.\n     */\n    secondaryTextStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the div surrounding the `secondaryText`.\n     */\n    secondaryTextClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the nested `List` that gets created when using `nestedItems`.\n     */\n    nestedListStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the nested `List` that gets created when using `nestedItems`.\n     */\n    nestedListClassName: PropTypes.string,\n\n    /**\n     * Boolean if the nested `List` in a cascading menu should be restricted.\n     */\n    nestedListHeightRestricted: PropTypes.bool,\n\n    /**\n     * Any additional children to display in the `.md-list-tile`. If you use this prop,\n     * you will most likely need to override the `height` for the `.md-list-tile--icon`,\n     * `.md-list-tile--avatar`, `.md-list-tile--two-lines`, and/or `.md-list-tile--three-lines`\n     * to get it to display correctly unless the children are positioned `absolute`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the `ListItem` is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional tab index for the `.md-list-tile`. If omitted, it will default to the\n     * `AccessibleFakeButton`'s `tabIndex` default prop value.\n     */\n    tabIndex: PropTypes.number,\n\n    /**\n     * The primary text to display. This will only be rendered as a single line. Any overflown\n     * text will be converted to ellipsis.\n     */\n    primaryText: PropTypes.node.isRequired,\n\n    /**\n     * An optional secondary text to display below the `primaryText`. This can be an additional\n     * one or two lines. Like the `primaryText`, and overflown text will be converted to ellipsis.\n     *\n     * You must set the `threeLines` prop to `true` if you want this to be displayed as two lines.\n     */\n    secondaryText: PropTypes.node,\n\n    /**\n     * An optional `FontIcon` to display to the left of the text.\n     */\n    leftIcon: PropTypes.node,\n\n    /**\n     * An optional `Avatar` to display to the left of the text. If you have a mixed `List` of\n     * `FontIcon` and `Avatar`, it is recommended to set the `iconSized` prop on the `Avatar` to\n     * `true` so that the `Avatar` will be scaled down to the `FontIcon` size.\n     */\n    leftAvatar: PropTypes.node,\n\n    /**\n     * An optional `FontIcon` to display to the right of the text.\n     */\n    rightIcon: PropTypes.node,\n\n    /**\n     * An optional `Avatar` to display to the right of the text. If you have a mixed `List` of\n     * `FontIcon` and `Avatar`, it is recommended to set the `iconSized` prop on the `Avatar` to\n     * `true` so that the `Avatar` will be scaled down to the `FontIcon` size.\n     */\n    rightAvatar: PropTypes.node,\n\n    /**\n     * Boolean if the list item should be inset as if there is a `leftIcon` or a `leftAvatar`.\n     * This is used for some lists where only a parent contains the icon.\n     */\n    inset: PropTypes.bool,\n\n    /**\n     * Boolean if the `secondaryText` should span two lines instead of one. This will include\n     * three lines of text in total when including the `primaryText`.\n     */\n    threeLines: PropTypes.bool,\n\n    /**\n     * The component to render the `.md-list-tile` as. This is mostly useful if you\n     * want to use the `ListItem` for navigation and working with the `react-router`'s `Link`\n     * component.\n     *\n     * This prop is **not** the top-most element of the `ListItem` component. To change the\n     * top-most element, see the `itemComponent` prop.\n     *\n     * @see {@link #itemComponent}\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * The component to render the top-most element of the `ListItem` component. This is the\n     * `.md-list-item` and defaults to the `<li>` element.\n     *\n     * @see {@link #component}\n     * @see {@link #itemProps}\n     */\n    itemComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * An optional ref callback to get reference to the top-most element of the `ListItem` component.\n     * Just like other refs, this will provide null when it unmounts.\n     */\n    itemRef: PropTypes.func,\n\n    /**\n     * An optional list of `ListItem`, `ListItemControl`, `Divider`, or `Subheader` components\n     * to render in a nested list. This will inject an expander icon to the right of the text\n     * in the `.md-list-tile` that rotates 180 degrees when open.\n     *\n     * The nested items will be visible once the user clicks on the `ListItem`.\n     *\n     * @see {@link #visible}\n     */\n    nestedItems: PropTypes.arrayOf(PropTypes.node),\n\n    /**\n     * An optional parameter determining whether `nestedItems` should be placed before or after `ListItemText`\n     */\n    prependNested: PropTypes.bool,\n\n    /**\n     * Boolean if the `nestedItems` are visible by default.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * Boolean if the `nestedItems` are visible. This will make the `nestedItems` controlled\n     * and require the `onClick` function to be defined.\n     *\n     * @see {@link #defaultVisible}\n     */\n    visible: controlled(PropTypes.bool, 'onClick', 'defaultVisible'),\n\n    /**\n     * An icon to use for the expander icon when there are nested items.\n     */\n    expanderIcon: PropTypes.element,\n\n    /**\n     * Boolean if the expander icon should appear as the left icon instead of the right.\n     */\n    expanderLeft: PropTypes.bool,\n\n    /**\n     * An optional function to call when the `.md-list-tile` is clicked. This is required if the\n     * `visible` prop is defined.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `mouseover` event.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `mouseleave` event.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `touchstart` event.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `touchend` event.\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `keydown` event.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `keyup` event.\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * Boolean if the `ListItem` is currently active. This will apply the `activeClassName` prop\n     * to the `leftIcon`, `rightIcon`, and the `primaryText`.\n     */\n    active: PropTypes.bool,\n\n    /**\n     * The className to apply to the `leftIcon`, `rightIcon`, and `primaryText` when the `active`\n     * prop is `true`.\n     */\n    activeClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the top-most element of the `ListItem` component (`.md-list-item`)\n     * when the `active` prop is `true`.\n     */\n    activeBoxStyle: PropTypes.object,\n\n    /**\n     * The className to apply to the top-most element of the `ListItem` component (`.md-list-item`)\n     * when the `active` prop is `true`.\n     */\n    activeBoxClassName: PropTypes.string,\n\n    /**\n     * Boolean if the nested items should animate when they appear or disappear.\n     */\n    animateNestedItems: PropTypes.bool,\n\n    /**\n     * Defines the number of items in the list. This is only required when all items in the\n     * list are not present in the DOM.\n     *\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-setsize\n     */\n    'aria-setsize': PropTypes.number,\n\n    /**\n     * Defines the items position in the list. This is only required when all items in the list\n     * are not present in the DOM. The custom validation just requires this prop if the `aria-setsize`\n     * prop is defined as a helpful reminder.\n     *\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-posinset\n     */\n    'aria-posinset': (props, propName, ...args) => {\n      let validator = PropTypes.number;\n      if (typeof props['aria-setsize'] !== 'undefined') {\n        validator = validator.isRequired;\n      }\n\n      return validator(props, propName, ...args);\n    },\n\n    /**\n     * Any additional props you would like to supply to the surrounding `<li>` tag for the `ListItem`.\n     * By default, all props will be provided to the inner `AccessibleFakeButton`. If the `passPropsToItem`\n     * prop is enabled, the remaining props will be provided to the `<li>` tag instead and this prop\n     * is probably useless.\n     */\n    itemProps: PropTypes.object,\n\n    /**\n     * Any additional props you would like to add to the inner `AccessibleFakeButton`. By default, all the\n     * remaining props will be provided to the `AccessibleFakeButton`, so this prop is probably useless.\n     * Enabling the `passPropsToItem` prop will change the default behavior so that the remaining props\n     * are provided to the surrounding `<li>` node instead and this prop becomes useful.\n     */\n    tileProps: PropTypes.object,\n\n    /**\n     * All the remaining props should be passed to the surrounding `<li>` node instead of the `AccessibleFakeButton`.\n     *\n     * > NOTE: This will most likely become the default in the next *major* release. Migration warnings will be added\n     * if that is the case.\n     */\n    passPropsToItem: PropTypes.bool,\n    expanderIconChildren: deprecated(PropTypes.node, 'Use `expanderIcon` instead'),\n    expanderIconClassName: deprecated(PropTypes.string, 'Use `expanderIcon` instead'),\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n  };\n\n  static defaultProps = {\n    animateNestedItems: true,\n    activeClassName: 'md-text--theme-primary',\n    component: 'div',\n    itemComponent: 'li',\n    expanderIcon: <FontIcon>keyboard_arrow_down</FontIcon>,\n  };\n\n  static contextTypes = {\n    cascadingId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    cascadingMenu: PropTypes.bool,\n    cascadingAnchor: anchorShape,\n    cascadingFixedTo: fixedToShape,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { active: false };\n\n    if (typeof props.isOpen === 'undefined' && typeof props.visible === 'undefined') {\n      const defined = v => typeof v !== 'undefined';\n      const { initiallyOpen, defaultOpen, defaultVisible } = this.props;\n      let visible = defined(initiallyOpen) ? initiallyOpen : defaultVisible;\n      visible = defined(defaultOpen) ? defaultOpen : visible;\n      visible = !!visible;\n\n      this.state.visible = visible;\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.active) {\n      window.removeEventListener('click', this._handleOutsideClick);\n    }\n\n    if (this._touchTimeout) {\n      clearTimeout(this._touchTimeout);\n    }\n  }\n\n  /**\n   * A utility function to focus the `AccessibleFakeInkedButton` in the `ListItem` and also\n   * inject an ink to indicate focus.\n   */\n  focus = () => {\n    if (this._tile) {\n      this._tile.focus();\n    }\n  };\n\n  /**\n   * A utility function to blur the `AccessibleFakeInkedButton` in the `ListItem`.\n   */\n  blur = () => {\n    if (this._tile) {\n      this._tile.blur();\n    }\n  };\n\n  _setTile = (tile) => {\n    if (tile) {\n      this._tile = tile;\n      this._tileNode = findDOMNode(tile);\n    }\n  };\n\n  _setContainer = (container) => {\n    const { itemRef } = this.props;\n    if (container) {\n      this._container = findDOMNode(container);\n    }\n    if (itemRef) {\n      itemRef(container ? this._container : null);\n    }\n  };\n\n  _handleOutsideClick = (e) => {\n    if (this._container && !this._container.contains(e.target)) {\n      window.removeEventListener('click', this._handleOutsideClick);\n      this.setState({ active: false });\n    }\n  };\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    if (typeof this.state.visible !== 'undefined') {\n      this.setState({ visible: !this.state.visible });\n    }\n  };\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ active: true });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ active: false });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    this._touched = true;\n\n    this.setState({ active: true, touchedAt: Date.now() });\n  };\n\n  _handleTouchEnd = (e) => {\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(e);\n    }\n\n    const time = Date.now() - this.state.touchedAt;\n    this._touchTimeout = setTimeout(() => {\n      this._touchTimeout = null;\n\n      this.setState({ active: false });\n    }, time > 450 ? 0 : 450 - time);\n  };\n\n  _handleKeyUp = (e) => {\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.addEventListener('click', this._handleOutsideClick);\n      this.setState({ active: true });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.removeEventListener('click', this._handleOutsideClick);\n      this.setState({ active: false });\n    }\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      tileStyle,\n      tileClassName,\n      contentStyle,\n      contentClassName,\n      leftNodeStyle,\n      leftNodeClassName,\n      rightNodeStyle,\n      rightNodeClassName,\n      primaryTextStyle,\n      primaryTextClassName,\n      secondaryTextStyle,\n      secondaryTextClassName,\n      nestedListStyle,\n      nestedListClassName,\n      nestedListHeightRestricted,\n      disabled,\n      leftIcon,\n      leftAvatar,\n      inset,\n      rightIcon,\n      rightAvatar,\n      primaryText,\n      secondaryText,\n      threeLines,\n      children,\n      nestedItems,\n      prependNested,\n      active,\n      activeClassName,\n      activeBoxStyle,\n      activeBoxClassName,\n      animateNestedItems,\n      expanderIcon,\n      expanderLeft,\n      component,\n      itemComponent: ItemComponent,\n      itemProps,\n      tileProps,\n      passPropsToItem,\n      'aria-setsize': ariaSize,\n      'aria-posinset': ariaPos,\n\n      // deprecated\n      isOpen,\n      expanderIconChildren,\n      expanderIconClassName,\n      /* eslint-disable no-unused-vars */\n      visible: propVisible,\n      defaultVisible,\n      itemRef,\n\n      // deprecated\n      defaultOpen,\n      initiallyOpen,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const { cascadingId, cascadingMenu, cascadingAnchor, cascadingFixedTo } = this.context;\n    let visible = getField(this.props, this.state, 'visible');\n    if (typeof isOpen !== 'undefined') {\n      visible = isOpen;\n    }\n\n    let leftNode = (\n      <TileAddon\n        key=\"left-addon\"\n        style={leftNodeStyle}\n        className={leftNodeClassName}\n        active={active}\n        activeClassName={activeClassName}\n        icon={leftIcon}\n        avatar={leftAvatar}\n      />\n    );\n\n    let rightNode = (\n      <TileAddon\n        key=\"right-addon\"\n        style={rightNodeStyle}\n        className={rightNodeClassName}\n        active={active}\n        activeClassName={activeClassName}\n        icon={rightIcon}\n        avatar={rightAvatar}\n      />\n    );\n\n    let nestedList;\n    if (nestedItems) {\n      if (!cascadingMenu) {\n        nestedList = (\n          <Collapse collapsed={!visible} animate={animateNestedItems}>\n            <List style={nestedListStyle} className={nestedListClassName}>{nestedItems}</List>\n          </Collapse>\n        );\n      }\n\n      const icon = React.Children.only(getDeprecatedIcon(expanderIconClassName, expanderIconChildren, expanderIcon));\n      const collapser = (\n        <TileAddon\n          key=\"expander-addon\"\n          icon={React.cloneElement(icon, {\n            className: getCollapserStyles({ flipped: visible }, icon.props.className),\n          })}\n          avatar={null}\n        />\n      );\n\n      if (expanderLeft) {\n        if (!leftIcon && !leftAvatar) {\n          leftNode = collapser;\n        }\n      } else if (!rightIcon && !rightAvatar) {\n        rightNode = collapser;\n      }\n    }\n\n    const icond = !!leftIcon || !!rightIcon || !!nestedItems;\n    const avatard = !!leftAvatar || !!rightAvatar;\n\n    const tile = (\n      <AccessibleFakeInkedButton\n        {...tileProps}\n        {...(passPropsToItem ? undefined : props)}\n        component={component}\n        __SUPER_SECRET_REF__={this._setTile}\n        key=\"tile\"\n        onClick={this._handleClick}\n        onMouseOver={this._handleMouseOver}\n        onMouseLeave={this._handleMouseLeave}\n        onTouchStart={this._handleTouchStart}\n        onTouchEnd={this._handleTouchEnd}\n        onKeyDown={this._handleKeyDown}\n        onKeyUp={this._handleKeyUp}\n        disabled={disabled}\n        style={tileStyle}\n        className={cn('md-list-tile', {\n          'md-list-tile--active': this.state.active && !this._touched,\n          'md-list-tile--icon': !secondaryText && icond && !avatard,\n          'md-list-tile--avatar': !secondaryText && avatard,\n          'md-list-tile--two-lines': secondaryText && !threeLines,\n          'md-list-tile--three-lines': secondaryText && threeLines,\n          'md-list-item--inset': inset && !leftIcon && !leftAvatar,\n        }, themeColors({ disabled, text: true }), tileClassName)}\n        aria-expanded={nestedList && !cascadingMenu ? visible : null}\n      >\n        {leftNode}\n        <ListItemText\n          active={active}\n          activeClassName={activeClassName}\n          disabled={disabled}\n          primaryText={primaryText}\n          secondaryText={secondaryText}\n          threeLines={threeLines}\n          style={contentStyle}\n          className={cn({\n            'md-tile-content--left-icon': leftIcon || expanderLeft && nestedItems,\n            'md-tile-content--left-avatar': leftAvatar,\n            'md-tile-content--right-padding': rightIcon || rightAvatar,\n          }, contentClassName)}\n          primaryTextStyle={primaryTextStyle}\n          primaryTextClassName={primaryTextClassName}\n          secondaryTextStyle={secondaryTextStyle}\n          secondaryTextClassName={secondaryTextClassName}\n        />\n        {rightNode}\n        {children}\n      </AccessibleFakeInkedButton>\n    );\n\n    const sharedProps = {\n      ...itemProps,\n      ...(passPropsToItem ? props : undefined),\n      style: Object.assign({}, style, active ? activeBoxStyle : null),\n      className: cn('md-list-item', {\n        'md-list-item--nested-container': nestedItems,\n        [activeBoxClassName]: active,\n      }, className),\n      'aria-setsize': ariaSize,\n      'aria-posinset': ariaPos,\n      ref: this._setContainer,\n    };\n    if (cascadingMenu && nestedItems) {\n      return (\n        <Menu\n          id={cascadingId}\n          visible={visible}\n          onClose={this._handleClick}\n          toggle={tile}\n          block\n          simplified={false}\n          anchor={cascadingAnchor}\n          belowAnchor={null}\n          position={Menu.Positions.BELOW}\n          component={ItemComponent}\n          listStyle={nestedListStyle}\n          listClassName={nestedListClassName}\n          listHeightRestricted={nestedListHeightRestricted}\n          {...sharedProps}\n          fixedTo={cascadingFixedTo}\n        >\n          {nestedItems}\n        </Menu>\n      );\n    }\n\n    return (\n      <ItemComponent {...sharedProps}>\n        {prependNested ? nestedList : null}\n        {tile}\n        {prependNested ? null : nestedList}\n      </ItemComponent>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\nexport default class FloatingLabel extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    label: PropTypes.node,\n    floating: PropTypes.bool,\n    error: PropTypes.bool,\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    iconOffset: PropTypes.bool,\n    customSize: PropTypes.string,\n    htmlFor: PropTypes.string,\n  };\n\n  render() {\n    const {\n      label,\n      htmlFor,\n      className,\n      floating,\n      active,\n      error,\n      disabled,\n      iconOffset,\n      customSize,\n      ...props\n    } = this.props;\n\n    if (!label) {\n      return null;\n    }\n\n    return (\n      <label\n        {...props}\n        htmlFor={htmlFor}\n        className={cn('md-floating-label', {\n          'md-floating-label--inactive': !floating,\n          'md-floating-label--inactive-sized': !floating && !customSize,\n          [`md-floating-label--${customSize}`]: customSize,\n          [`md-floating-label--inactive-${customSize}`]: customSize && !floating,\n          'md-floating-label--floating': floating,\n          'md-floating-label--icon-offset': iconOffset,\n        }, themeColors({\n          disabled,\n          error,\n          hint: !active,\n          primary: active,\n        }, className))}\n      >\n        {label}\n      </label>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport default class Message extends PureComponent {\n  static propTypes = {\n    active: PropTypes.bool,\n    className: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  render() {\n    const { active, children, className } = this.props;\n\n    if (!children) {\n      return null;\n    }\n\n    return (\n      <div\n        aria-hidden={!active}\n        className={cn(\n          'md-text-field-message',\n          `md-text-field-message--${active ? '' : 'in'}active`,\n          className\n        )}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport Message from './Message';\n\nexport default class TextFieldMessage extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    error: PropTypes.bool,\n    helpText: PropTypes.node,\n    errorText: PropTypes.node,\n    active: PropTypes.bool,\n    helpOnFocus: PropTypes.bool,\n    maxLength: PropTypes.number,\n    currentLength: PropTypes.number,\n    leftIcon: PropTypes.bool,\n    rightIcon: PropTypes.bool,\n    block: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      message: (props.error && props.errorText) || props.helpText || props.errorText,\n      isMessageVisible: this._isMessageVisible(props),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const keys = ['active', 'error', 'helpOnFocus', 'helpText', 'errorText'];\n    if (this._anyChanges(keys, this.props, nextProps)) {\n      this.setState({\n        isMessageVisible: this._isMessageVisible(nextProps),\n        message: (nextProps.error && nextProps.errorText) || nextProps.helpText || nextProps.errorText,\n      });\n    }\n  }\n\n  _anyChanges(keys, p1, p2) {\n    let changed = false;\n    keys.some(key => {\n      if (p1[key] !== p2[key]) {\n        changed = true;\n      }\n\n      return changed;\n    });\n\n    return changed;\n  }\n\n  _isMessageVisible(props) {\n    const { error, errorText, helpText, helpOnFocus, active } = props;\n    if (error && errorText) {\n      return true;\n    }\n\n    return !!(helpText && (!helpOnFocus || active));\n  }\n\n  render() {\n    const {\n      maxLength,\n      error,\n      className,\n      errorText,\n      helpText,\n      currentLength,\n      leftIcon,\n      rightIcon,\n      block,\n      active,\n    } = this.props;\n    const { isMessageVisible, message } = this.state;\n\n    if (currentLength === 'undefined' || (!helpText && !errorText && !maxLength)) {\n      return null;\n    }\n\n    return (\n      <div\n        className={cn('md-text-field-message-container', {\n          'md-text-field-message-container--count-only': !message || !isMessageVisible,\n          'md-text-field-message-container--left-icon-offset': leftIcon,\n          'md-text-field-message-container--right-icon-offset': rightIcon,\n          'md-full-width': !block,\n        }, themeColors({ error, disabled: !error }), className)}\n      >\n        <Message key=\"message\" active={isMessageVisible}>{message}</Message>\n        <Message key=\"counter\" className=\"md-text-field-message--counter\" active={active}>\n          {maxLength ? `${currentLength} / ${maxLength}` : null}\n        </Message>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { TAB } from '../constants/keyCodes';\nimport themeColors from '../utils/themeColors';\n\nexport default class PasswordButton extends PureComponent {\n  static propTypes = {\n    active: PropTypes.bool,\n    passwordVisible: PropTypes.bool,\n    icon: PropTypes.element,\n    block: PropTypes.bool,\n    floating: PropTypes.bool,\n  };\n\n  state = { keyboardFocus: false };\n\n  _handleOutsideClick = (e) => {\n    if (this._button && !this._button.contains(e.target)) {\n      window.removeEventListener('click', this._handleOutsideClick);\n      this.setState({ keyboardFocus: false });\n    }\n  };\n\n  _handleBlur = () => {\n    if (this.state.keyboardFocus) {\n      this.setState({ keyboardFocus: false });\n    }\n  };\n\n  _handleKeyUp = (e) => {\n    const key = e.which || e.keyCode;\n    if (key === TAB) {\n      this.setState({ keyboardFocus: true });\n    }\n  };\n\n  render() {\n    const { keyboardFocus } = this.state;\n    const {\n      active,\n      passwordVisible,\n      block,\n      floating,\n      icon,\n      ...props\n    } = this.props;\n\n    return (\n      <button\n        {...props}\n        onBlur={this._handleBlur}\n        onKeyUp={this._handleKeyUp}\n        type=\"button\"\n        className={cn('md-text-field-inline-indicator md-password-btn md-pointer--hover', {\n          'md-password-btn--focus': keyboardFocus,\n          'md-password-btn--invisible': active && !passwordVisible,\n          'md-text-field-inline-indicator--floating': floating,\n          'md-text-field-inline-indicator--block': block,\n        }, themeColors({ disabled: !active, hint: active }))}\n      >\n        {icon}\n      </button>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport ResizeObserver from '../Helpers/ResizeObserver';\n\n/**\n * The `TextArea` component is used to allow a dynamic height for the\n * `textarea`. The height will keep on changing until the maxRows prop\n * is met or infinitely if it does not exist, or is 0.\n */\nexport default class TextArea extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    maxRows: PropTypes.number,\n    onChange: PropTypes.func,\n    defaultValue: PropTypes.string,\n    floatingLabel: PropTypes.bool,\n    value: PropTypes.string,\n    block: PropTypes.bool,\n    label: PropTypes.node,\n  };\n\n  state = { height: null };\n\n  componentDidMount() {\n    this._rowHeight = this._calcRowHeight();\n    this._syncHeightWithMask();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.rows !== nextProps.rows) {\n      this._rowHeight = this._calcRowHeight(nextProps);\n    }\n\n    if (this.props.value !== nextProps.value || this.props.maxRows !== nextProps.maxRows) {\n      this._syncHeightWithMask(nextProps.value);\n    }\n  }\n\n  getField = () => this._field;\n\n  getValue = () => this._field.value;\n\n  focus = () => {\n    this._field.focus();\n  };\n\n  blur = () => {\n    this._field.blur();\n  };\n\n  _calcRowHeight = ({ rows } = this.props) => {\n    if (!this._field) {\n      return 19;\n    }\n\n    const height = this._field.style.height;\n    this._field.style.height = 'auto';\n    const rowHeight = this._field.offsetHeight / rows;\n    this._field.style.height = height;\n    return rowHeight;\n  };\n\n  _setMask = (mask) => {\n    this._mask = mask;\n  };\n\n  _setField = (field) => {\n    this._field = field;\n  };\n\n  _handleResize = () => {\n    this._rowHeight = this._calcRowHeight();\n    this._syncHeightWithMask();\n  };\n\n  _syncHeightWithMask = (value) => {\n    // The mask is always null in snapshot teseting\n    if (!this._mask) {\n      return;\n    }\n\n    if (value !== undefined) {\n      this._mask.value = value;\n    }\n\n    let height = this._mask.scrollHeight;\n    if (height === undefined) {\n      return;\n    }\n\n    const { rows, maxRows } = this.props;\n    if (maxRows && maxRows > 0) {\n      height = Math.min(height, this._rowHeight * maxRows);\n    }\n\n    height = Math.max(this._rowHeight * rows, height);\n    this.setState({ height });\n  };\n\n  _handleChange = (e) => {\n    this._syncHeightWithMask(e.target.value, e);\n\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  };\n\n  render() {\n    const { height } = this.state;\n\n    const {\n      style,\n      defaultValue,\n      value,\n      className,\n      label,\n      block,\n      /* eslint-disable no-unused-vars */\n      maxRows,\n      onChange,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    return (\n      <div\n        style={{ height: height && height + 5 }}\n        className={cn('md-text-field-multiline-container', {\n          'md-text-field--margin': !label && !block,\n          'md-text-field--floating-margin': label && !block,\n        })}\n      >\n        <ResizeObserver watchWidth onResize={this._handleResize} />\n        <textarea\n          ref={this._setMask}\n          className={cn(className, 'md-text-field--multiline-mask')}\n          readOnly\n          rows={props.rows}\n          tabIndex={-1}\n          style={style}\n          defaultValue={defaultValue}\n          aria-hidden\n          value={value}\n        />\n        <textarea\n          {...props}\n          ref={this._setField}\n          style={Object.assign({}, style, { height })}\n          className={className}\n          defaultValue={defaultValue}\n          value={value}\n          onChange={this._handleChange}\n        />\n      </div>\n    );\n  }\n}\n","import { PureComponent, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport TextArea from './TextArea';\n\n/**\n * This component either renders a base `input` tag or the `TextArea` component.\n */\nexport default class InputField extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    type: PropTypes.string,\n    placeholder: PropTypes.string,\n    block: PropTypes.bool,\n    disabled: PropTypes.bool,\n    rows: PropTypes.number,\n    maxRows: PropTypes.number,\n    label: PropTypes.node,\n    fullWidth: PropTypes.bool,\n    customSize: PropTypes.string,\n    passwordVisible: PropTypes.bool,\n    inlineIndicator: PropTypes.bool,\n  };\n\n  getField = () => { // eslint-disable-line arrow-body-style\n    return typeof this.props.rows === 'undefined'\n      ? this._field\n      : this._field.getField();\n  };\n\n  getValue = () => {\n    if (typeof this.props.rows === 'undefined') {\n      return this._field.value;\n    }\n\n    return this._field.getValue();\n  };\n\n  focus = () => {\n    this._field.focus();\n  };\n\n  blur = () => {\n    this._field.blur();\n  };\n\n  _setField = (field) => {\n    this._field = field;\n  };\n\n  render() {\n    const {\n      className,\n      rows,\n      label,\n      customSize,\n      fullWidth,\n      type,\n      passwordVisible,\n      block,\n      inlineIndicator,\n      maxRows,\n      ...props\n    } = this.props;\n\n    const multiline = typeof rows !== 'undefined';\n    const Component = multiline ? TextArea : 'input';\n    if (!multiline) {\n      props.type = passwordVisible ? 'text' : type;\n    } else {\n      props.label = label;\n      props.block = block;\n      props.maxRows = maxRows;\n    }\n\n    return createElement(Component, {\n      ...props,\n      rows,\n      ref: this._setField,\n      className: cn('md-text-field', {\n        'md-text-field--inline-indicator': inlineIndicator || (!multiline && type === 'password'),\n        'md-text-field--multiline': multiline,\n        'md-text-field--margin': !block && !multiline && !label,\n        'md-text-field--floating-margin': !block && !multiline && label,\n        [`md-text-field--${customSize}`]: customSize,\n        'md-full-width': fullWidth,\n      }, themeColors({ disabled: props.disabled, text: !props.disabled }, className)),\n    });\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The divider component will pass all other props such as style or\n * event listeners on to the component.\n */\nexport default class Divider extends PureComponent {\n  static propTypes = {\n    /*\n     * An optional style to apply to the divider.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the divider.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if this divider should be inset relative to it's container\n     * component. This means that if it is in a `List` with `Avatar`, it\n     * will start the divider  to the left of the main text in the list.\n     */\n    inset: PropTypes.bool,\n\n    /**\n     * Boolean if the divider should be vertical instead of horizontal.\n     */\n    vertical: PropTypes.bool,\n  };\n\n  render() {\n    const { className, inset, vertical, ...props } = this.props;\n\n    const Component = vertical ? 'div' : 'hr';\n\n    return (\n      <Component\n        {...props}\n        className={cn('md-divider', {\n          'md-divider--vertical': vertical,\n          'md-divider--inset': inset,\n        }, className)}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport Divider from '../Dividers/Divider';\n\nexport default class TextFieldDivider extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    active: PropTypes.bool,\n    error: PropTypes.bool,\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\n  };\n\n  render() {\n    const { active, error, lineDirection, className, ...props } = this.props;\n    return (\n      <Divider\n        {...props}\n        className={cn(`md-divider--text-field md-divider--expand-from-${lineDirection}`, {\n          'md-divider--text-field-expanded': active,\n          'md-divider--text-field-active': !error && active,\n          'md-divider--text-field-error': error,\n        }, className)}\n      />\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport isValued from '../utils/isValued';\nimport getField from '../utils/getField';\nimport getTextWidth from '../utils/Positioning/getTextWidth';\nimport controlled from '../utils/PropTypes/controlled';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport minNumber from '../utils/PropTypes/minNumber';\nimport addSuffix from '../utils/StringUtils/addSuffix';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport FloatingLabel from './FloatingLabel';\nimport TextFieldMessage from './TextFieldMessage';\nimport PasswordButton from './PasswordButton';\nimport InputField from './InputField';\nimport TextFieldDivider from './TextFieldDivider';\n\nconst DEFAULT_TEXT_FIELD_SIZE = 180;\n\nconst WILL_RECEIVE_KEYS = ['style', 'value', 'resize'];\nconst DID_UPDATE_KEYS = ['leftIcon', 'rightIcon', 'passwordIcon', 'inlineIndicator'];\n\n/**\n * The `TextField` component can either be a single line `input` field or a multiline\n * `textarea` field. `FontIcon`s, messages, and password indicators can also be added\n * to this field.\n *\n * The optional mouse and touch events will be added to the entire container while the\n * text specific events will be added to the `input` or `textarea` tags.\n */\nexport default class TextField extends PureComponent {\n  static propTypes = {\n    /**\n     * The id for a text field. This is required when using the `label` prop for accessibility,\n     * but normally a good idea to include one anyways.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional style to apply to the text field's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the text field's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `input` or `textarea` tag.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `input` or `textarea` tag.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * An optional value to apply to the text field. This will make the component\n     * controlled and require the `onChange` prop.\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]), 'onChange'),\n\n    /**\n     * An optional default value for the text field.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n\n    /**\n     * Boolean if the text field should be displayed as a `block`. This is equivalent to\n     * the `full width` text field in the Material Design specs. This view will disable\n     * floating labels and remove the text divider from the component.\n     */\n    block: PropTypes.bool,\n\n    /**\n     * Boolean if the `block` text field should include padding to the left and right of\n     * the text field.\n     */\n    paddedBlock: PropTypes.bool,\n\n    /**\n     * Boolean if the text field is currently disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional label to display with the text field. This will convert the text field\n     * into a floating label text field. You can make it single line by only using the\n     * `placeholder` prop.\n     */\n    label: invalidIf(PropTypes.node, 'block'),\n\n    /**\n     * An optional placeholder text to display in the text field. If there is no `label` prop,\n     * the text field will be displayed as a single line text field. If there is a `label` prop,\n     * this will only be visible when there is no value and the user focused the text field.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * The type for the text field. This is one of the most import props for mobile accessibility\n     * as it will update the keyboard for the text type. This does not get applied on multiline\n     * text fields.\n     */\n    type: PropTypes.oneOf([\n      'text',\n      'number',\n      'email',\n      'search',\n      'tel',\n      'url',\n      'password',\n    ]).isRequired,\n\n    /**\n     * An optional function to call when the text field's container triggers the `click` event.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `doubleclick`\n     * event.\n     */\n    onDoubleClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `touchstart`\n     * event.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `touchmove`\n     * event.\n     */\n    onTouchMove: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `touchcancel`\n     * event.\n     */\n    onTouchCancel: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `touchend`\n     * event.\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `mousedown`\n     * event.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `mouseup`\n     * event.\n     */\n    onMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `mouseover`\n     * event.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `mouseleave`\n     * event.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional onChange function to call. If the `value` prop is defined, this is\n     * required.\n     *\n     * When the value changes in the text field, this will be called with the new text\n     * field's value and the change event.\n     *\n     * ```js\n     * onChange(e.target.value, e);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field is blurred.\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field is focused.\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * An optional boolean if the `active` state of the text field can be externally\n     * modified as well. The text field is usually considered active when it gains focus.\n     *\n     * If this prop is set, it will check both the active prop and the active state to\n     * determine if one is true.\n     */\n    active: PropTypes.bool,\n\n    /**\n     * An optional boolean if the `error` state of the text field can be externally\n     * modified as well. The text field is usually considered errored when it is required\n     * and there is no value or the current length of the text field's value is greater\n     * than the `maxLength` prop.\n     *\n     * If this prop is set, it will check both the error prop and the error state to\n     * determine if one is true.\n     */\n    error: PropTypes.bool,\n\n    /**\n     * An optional boolean if the `floating` state of the text field's floating label can be\n     * externally modified as well. The floating state is true when the text field gains focus\n     * or there is a value in the text field.\n     *\n     * If this prop is set, it will check both the floating prop and the floating state to\n     * determine if one is true.\n     */\n    floating: PropTypes.bool,\n\n    /**\n     * Boolean if the text field is required. If the user blurs the text field while there is\n     * no value and it is required, the `error` state will be set to true.\n     */\n    required: PropTypes.bool,\n\n    /**\n     * The direction that the underline should appear from.\n     */\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\n\n    /**\n     * An optional icon to place to the left of the text field.\n     */\n    leftIcon: PropTypes.element,\n\n    /**\n     * Boolean if the left icon should be stateful. This means that the icon will\n     * gain the active or error colors with the text field.\n     */\n    leftIconStateful: PropTypes.bool,\n\n    /**\n     * An optional icon to place to the right of the text field.\n     */\n    rightIcon: PropTypes.element,\n\n    /**\n     * Boolean if the right icon should be stateful. This means that the icon will\n     * gain the active or error colors with the text field.\n     */\n    rightIconStateful: PropTypes.bool,\n\n    /**\n     * The icon to use for a password text field.\n     */\n    passwordIcon: PropTypes.element,\n\n    /**\n     * Boolean if the password is initially visible.\n     */\n    passwordInitiallyVisible: PropTypes.bool,\n\n    /**\n     * Boolean if the text field should be displayed as full width.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * The number of rows for the `multiline` text field. This value must be greater than\n     * or equal to 1. When this value is set, the text field will be converted to a multiline\n     * field.\n     */\n    rows: minNumber(1, false),\n\n    /**\n     * The maximum number of rows for a `multiline` text field. If this value is\n     * `undefined`, `0`, or a number less than `0`, the multiline text field will\n     * infinitely expand.\n     */\n    maxRows: PropTypes.number,\n\n    /**\n     * An optional custom size to apply to the text field. This is used along with\n     * the `$md-text-field-custom-sizes` variable. It basically applies a className of\n     * `md-text-field--NAME`.\n     */\n    customSize: PropTypes.string,\n\n    /**\n     * An optional error text to display below the text field. This will only appear when\n     * the text field has the `error` state through the `error` prop, the current length\n     * of the text field's value is greater than the `maxLength` prop, or the field is\n     * required and the user blurs the text field with no value.\n     */\n    errorText: PropTypes.node,\n\n    /**\n     * An optional help text to display below the text field. This will always be visible\n     * unless the `helpOnFocus` prop is set to true. Otherwise it will appear on focus.\n     */\n    helpText: PropTypes.node,\n\n    /**\n     * Boolean if the help text should display on focus only.\n     */\n    helpOnFocus: PropTypes.bool,\n\n    /**\n     * An optional max length for the text field. This will insert a counter underneath the\n     * text field that appears on focus.\n     */\n    maxLength: PropTypes.number,\n\n    /**\n     * The ink when there is an injectInk above the text field. Used from the SelectField.\n     *\n     * @access private\n     */\n    ink: PropTypes.node,\n\n    /**\n     * An optional element to display inside of the `TextField` to the farthest right. This will\n     * position the indicator absolutely and add some additional padding to the `TextField`.\n     */\n    inlineIndicator: PropTypes.element,\n\n    /**\n     * This prop allows the text field to resize its width to stay between the min and max sizes provided. By\n     * default, the field will expand and collapse based on the amount of text provided. The collapsing can\n     * be disabled by providing `disableShrink` to the configuration object.\n     *\n     * If the `min` prop is not provided, it will default to `180` which is about the same size as a default\n     * text field.\n     */\n    resize: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number.isRequired,\n      disableShrink: PropTypes.bool,\n    }),\n\n    /**\n     * Boolean if the TextField is in a toolbar and acting as a title. This will apply additional styles to the\n     * text field to make it look like the toolbar's title.\n     */\n    toolbar: PropTypes.bool,\n\n    passwordIconChildren: deprecated(PropTypes.node, 'Use the `passwordIcon` prop instead'),\n    passwordIconClassName: deprecated(PropTypes.string, 'Use the `passwordIcon` prop instead'),\n    icon: deprecated(PropTypes.node, 'Use the `leftIcon` or `rightIcon` prop instead'),\n    floatingLabel: deprecated(\n      PropTypes.bool,\n      'The `label` prop is now always floating. To create a non-floating text field, only use the `placeholder` prop'\n    ),\n    adjustMinWidth: deprecated(PropTypes.bool, 'Manually add a min width style instead'),\n  };\n\n  static defaultProps = {\n    type: 'text',\n    lineDirection: 'left',\n    passwordIcon: <FontIcon>remove_red_eye</FontIcon>,\n    leftIconStateful: true,\n    rightIconStateful: true,\n    fullWidth: true,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const currentLength = this._getLength(typeof props.value !== 'undefined' ? props.value : props.defaultValue);\n\n    this._canvas = null;\n    let width = null;\n    if (typeof props.resize !== 'undefined') {\n      width = typeof props.resize.min === 'number' ? props.resize.min : DEFAULT_TEXT_FIELD_SIZE;\n    }\n\n    this.state = {\n      active: false,\n      error: props.maxLength ? props.maxLength < currentLength : false,\n      floating: isValued(props.defaultValue) || isValued(props.value),\n      passwordVisible: props.passwordInitiallyVisible,\n      currentLength,\n      styles: width ? { width, ...props.style } : props.style,\n    };\n  }\n\n  componentDidMount() {\n    const { value, defaultValue, resize } = this.props;\n    const v = typeof value !== 'undefined' ? value : defaultValue;\n    if (resize) { // always want to set width on mount\n      this.setState({ width: this._calcWidth(v) }); // eslint-disable-line react/no-did-mount-set-state\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value, resize, style } = nextProps;\n    const nextState = {};\n    if (value !== this.props.value) {\n      nextState.error = this._isErrored(nextProps);\n      nextState.floating = isValued(value);\n      nextState.currentLength = this._getLength(value);\n    }\n\n    if (WILL_RECEIVE_KEYS.some(key => this.props[key] !== nextProps[key])) {\n      if (!resize) {\n        nextState.styles = style;\n      } else {\n        const width = this._calcWidth(value, nextProps);\n        nextState.styles = { width, ...style };\n      }\n    }\n\n    this.setState(nextState);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { resize, value, style } = this.props;\n    if (resize && DID_UPDATE_KEYS.some(key => this.props[key] !== prevProps[key])) {\n      const width = this._calcWidth(value, this.props);\n      this.setState({ styles: { width, ...style } }); // eslint-disable-line react/no-did-update-set-state\n    }\n  }\n\n  /**\n   * A helper function for getting the specific `input` field or the `textarea` in the `TextField`.\n   * This is accessible if you use `refs`.\n   *\n   * Example:\n   *\n   * ```js\n   * <TextField ref={field => this._field = field;} label=\"Hello\" />;\n   *\n   * this._field.getField(); // `input` node\n   * ```\n   */\n  getField = () => this._field.getField();\n\n  /**\n   * A helper function for focusing the `input` field or the `textarea` in the `TextField`.\n   * This is accessibile if you use `refs`.\n   * Example:\n   *\n   * ```js\n   * <TextField ref={field => this._field = field;} label=\"Hello\" />;\n   *\n   * this._field.focus();\n   * ```\n   */\n  focus = () => {\n    this._field.focus();\n  };\n\n  /**\n   * Gets the current value from the text field. This is used when you have an uncontrolled\n   * text field and simply need the value from a ref callback.\n   *\n   * @return {String} the text field's value\n   */\n  get value() {\n    return this.getField().value;\n  }\n\n\n  /**\n   * A helper function for blurring the `input` field or the `textarea` in the `TextField`.\n   * This is accessible if you use `refs`.\n   * Example:\n   *\n   * ```js\n   * <TextField ref={field => this._field = field;} label=\"Hello\" />;\n   *\n   * this._field.blur();\n   * ```\n   */\n  blur() {\n    this._field.blur();\n  }\n\n  _cloneIcon(icon, active, error, disabled, stateful, block, dir) {\n    if (!icon) {\n      return icon;\n    }\n\n    try {\n      const iconEl = Children.only(icon);\n      return cloneElement(iconEl, {\n        key: iconEl.key || `icon-${dir}`,\n        disabled: stateful ? disabled : undefined,\n        primary: stateful ? !error && active : undefined,\n        error: stateful ? error : undefined,\n        className: cn('md-text-field-icon', {\n          'md-text-field-icon--positioned': !block,\n        }, iconEl.props.className),\n      });\n    } catch (e) {\n      return icon;\n    }\n  }\n\n  _getLength = (v) => {\n    if (isValued(v)) {\n      return String(v).length;\n    }\n\n    return 0;\n  };\n\n  _setContainer = (div) => {\n    this._container = div;\n  };\n\n  _setField = (field) => {\n    if (field !== null) {\n      this._field = field;\n    }\n  };\n\n  /**\n   * A small utility function for calculating an inline-icon's width keeping the SVG Icons\n   * in mind and any margin that gets applied for spacing.\n   */\n  _calcIconWidth = (icon) => {\n    const style = window.getComputedStyle(icon);\n\n    return icon.getBoundingClientRect().width\n      + parseInt(style.marginLeft, 10);\n  };\n\n  _calcWidth = (value, props = this.props) => {\n    let text = value;\n    // if it is a password, use the bullet unicode instead\n    if (props.type === 'password') {\n      text = [...new Array(value.length)].reduce(s => `${s}\\u2022`, '');\n    }\n\n    const field = this._field && this._field.getField();\n    if (!isValued(text) && field) {\n      text = field.value;\n    }\n\n    let width = getTextWidth(text, field);\n    if (width === null || !field) {\n      // some error happened, don't do other logic\n      return width;\n    }\n\n    const { max } = props.resize;\n    const min = getField(props.resize, { min: DEFAULT_TEXT_FIELD_SIZE }, 'min');\n\n    if (this._container) {\n      const indicator = this._container.querySelector('.md-text-field-inline-indicator');\n      if (indicator) {\n        width += indicator.getBoundingClientRect().width;\n      }\n\n      const iconContainer = this._container.querySelector('.md-text-field-icon-container');\n      if (iconContainer) {\n        // There is conditionally an icon before and after the text field, or only an icon before/after\n        // There is never a third icon if the indicator is defined\n        const [first, second, third] = iconContainer.children;\n        if (first.classList.contains('md-icon')) {\n          width += first.getBoundingClientRect().width;\n          width += parseInt(window.getComputedStyle(second).marginLeft, 10);\n\n          if (third) {\n            width += this._calcIconWidth(third);\n          }\n        } else if (second) {\n          width += this._calcIconWidth(second);\n        }\n      }\n    }\n\n    return Math.ceil(Math.min(max, Math.max(min, width)));\n  };\n\n  _isErrored = ({ value, maxLength, required } = this.props) => {\n    let { error } = this.state;\n    const currentLength = this._getLength(value);\n    if (required && error) {\n      error = !isValued(value);\n    }\n\n    if (maxLength) {\n      error = error || currentLength > maxLength;\n    }\n\n    return error;\n  };\n\n  _handleContainerClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    if (!this.props.disabled) {\n      this.focus();\n    }\n  };\n\n  _handleBlur = (e) => {\n    const { required, maxLength, onBlur } = this.props;\n    if (onBlur) {\n      onBlur(e);\n    }\n\n    const { value } = e.target;\n    const state = {\n      active: false,\n      error: (required && !isValued(value)) || (maxLength && String(value).length > maxLength),\n    };\n\n    if (!this.props.block) {\n      state.floating = isValued(value);\n    }\n\n    this.setState(state);\n  };\n\n  _handleFocus = (e) => {\n    const { onFocus, block } = this.props;\n    if (onFocus) {\n      onFocus(e);\n    }\n\n    const state = { active: true };\n    if (!block) {\n      state.floating = true;\n    }\n\n    this.setState(state);\n  };\n\n  _handleChange = (e) => {\n    const { onChange, maxLength, required, resize } = this.props;\n    const { value } = e.target;\n    if (onChange) {\n      onChange(e.target.value, e);\n    }\n\n    const currentLength = value.length;\n    let state;\n    if (typeof maxLength !== 'undefined') {\n      state = { currentLength, error: currentLength > maxLength };\n    } else if (required && this.state.error) {\n      state = { error: !currentLength };\n    }\n\n    if (typeof this.props.value === 'undefined' && resize) {\n      const width = this._calcWidth(value);\n      if (!resize.disableShrink || !this.state.styles || width > this.state.styles.width) {\n        state = state || {};\n        state.styles = { ...this.state.styles, width };\n      }\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _togglePasswordField = () => {\n    this.setState({ passwordVisible: !this.state.passwordVisible }, this.focus);\n  };\n\n  render() {\n    const { currentLength, passwordVisible, styles } = this.state;\n    const {\n      id,\n      type,\n      className,\n      inputStyle,\n      inputClassName,\n      block,\n      fullWidth,\n      required,\n      customSize,\n      maxLength,\n      errorText,\n      helpText,\n      helpOnFocus,\n      disabled,\n      leftIconStateful,\n      rightIconStateful,\n      passwordIcon,\n      lineDirection,\n      paddedBlock,\n      onDoubleClick,\n      onTouchStart,\n      onTouchMove,\n      onTouchCancel,\n      onTouchEnd,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onMouseLeave,\n      ink,\n      inlineIndicator,\n      toolbar,\n\n      // deprecated\n      icon,\n      passwordIconChildren,\n      passwordIconClassName,\n      /* eslint-disable no-unused-vars */\n      style,\n      label: propLabel,\n      placeholder: propPlaceholder,\n      error: propError,\n      active: propActive,\n      floating: propFloating,\n      leftIcon: propLeftIcon,\n      rightIcon: propRightIcon,\n      onClick,\n      onChange,\n      onBlur,\n      onFocus,\n      resize,\n\n      // deprecated\n      adjustMinWidth,\n      floatingLabel: propFloatingLabel,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let {\n      label,\n      placeholder,\n      error,\n      active,\n      floating,\n      leftIcon,\n      rightIcon,\n    } = this.props;\n    active = active || this.state.active;\n    error = error || this.state.error;\n    floating = floating || this.state.floating;\n\n    if (required) {\n      if (label) {\n        label = addSuffix(label, '*');\n      }\n\n      if (placeholder && !label) {\n        placeholder = addSuffix(placeholder, '*');\n      }\n    }\n\n    if (label && !floating) {\n      placeholder = null;\n    }\n\n    leftIcon = this._cloneIcon(icon || leftIcon, active, error, disabled, leftIconStateful, block, 'left');\n    if (type === 'password' && !disabled) {\n      rightIcon = (\n        <PasswordButton\n          key=\"password-btn\"\n          onClick={this._togglePasswordField}\n          active={active}\n          passwordVisible={passwordVisible}\n          icon={getDeprecatedIcon(passwordIconClassName, passwordIconChildren, passwordIcon)}\n          block={block}\n          floating={!!label}\n        />\n      );\n    } else if (inlineIndicator) {\n      const el = Children.only(inlineIndicator);\n      rightIcon = cloneElement(inlineIndicator, {\n        key: 'icon-right',\n        className: cn('md-text-field-inline-indicator', {\n          'md-text-field-inline-indicator--floating': label,\n          'md-text-field-inline-indicator--block': block,\n        }, el.props.className),\n      });\n    } else {\n      rightIcon = this._cloneIcon(rightIcon, active, error, disabled, rightIconStateful, block, 'right');\n    }\n    const rightIconed = !!rightIcon && type !== 'password' && !inlineIndicator;\n\n    const floatingLabel = (\n      <FloatingLabel\n        key=\"label\"\n        label={label}\n        htmlFor={id}\n        active={active}\n        error={error}\n        floating={floating}\n        customSize={customSize}\n        disabled={disabled}\n        iconOffset={!!leftIcon}\n      />\n    );\n\n    const message = (\n      <TextFieldMessage\n        key=\"message\"\n        active={active}\n        error={error}\n        errorText={errorText}\n        helpText={helpText}\n        helpOnFocus={helpOnFocus}\n        block={block}\n        maxLength={maxLength}\n        leftIcon={!!leftIcon}\n        rightIcon={!!rightIcon}\n        currentLength={currentLength}\n      />\n    );\n\n    const field = (\n      <InputField\n        {...props}\n        key=\"field\"\n        ref={this._setField}\n        id={id}\n        type={type}\n        label={label}\n        style={inputStyle}\n        className={cn({ 'md-text-field--toolbar': toolbar }, inputClassName)}\n        disabled={disabled}\n        customSize={customSize}\n        fullWidth={fullWidth}\n        passwordVisible={passwordVisible}\n        placeholder={placeholder}\n        block={block}\n        onFocus={this._handleFocus}\n        onBlur={this._handleBlur}\n        onChange={this._handleChange}\n        inlineIndicator={!!inlineIndicator}\n      />\n    );\n\n    let divider;\n    if (!block) {\n      divider = (\n        <TextFieldDivider\n          key=\"text-divider\"\n          active={active}\n          error={error}\n          lineDirection={lineDirection}\n        />\n      );\n    }\n\n    let children;\n    if (leftIcon || rightIconed) {\n      children = (\n        <div key=\"icon-divider\" className=\"md-text-field-icon-container\">\n          {leftIcon}\n          <div\n            key=\"divider-container\"\n            className={cn('md-text-field-divider-container', {\n              'md-text-field-divider-container--grow': fullWidth,\n            })}\n          >\n            {field}\n            {divider}\n          </div>\n          {rightIcon}\n        </div>\n      );\n    } else {\n      children = [leftIcon, field, divider, rightIcon];\n    }\n\n    children = [floatingLabel, children, message];\n\n    const multiline = typeof props.rows !== 'undefined';\n    return (\n      <div\n        style={styles}\n        className={cn('md-text-field-container', {\n          'md-inline-block': !fullWidth && !block,\n          'md-full-width': block || fullWidth,\n          'md-text-field-container--disabled': disabled,\n          'md-text-field-container--input': !multiline,\n          'md-text-field-container--input-block': block && !multiline,\n          'md-text-field-container--multiline': multiline,\n          'md-text-field-container--multiline-block': multiline && block,\n          'md-text-field-container--padded-block': block && paddedBlock,\n        }, className)}\n        onClick={this._handleContainerClick}\n        onDoubleClick={onDoubleClick}\n        onMouseOver={onMouseOver}\n        onMouseLeave={onMouseLeave}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onTouchStart={onTouchStart}\n        onTouchEnd={onTouchEnd}\n        onTouchCancel={onTouchCancel}\n        onTouchMove={onTouchMove}\n        ref={this._setContainer}\n      >\n        {ink}\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\n\nimport getField from '../utils/getField';\nimport omit from '../utils/omit';\nimport findIgnoreCase from '../utils/findIgnoreCase';\nimport fuzzyFilter from '../utils/fuzzyFilter';\nimport caseInsensitiveFilter from '../utils/caseInsensitiveFilter';\nimport getTextWidth from '../utils/Positioning/getTextWidth';\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport controlled from '../utils/PropTypes/controlled';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport { UP, DOWN, TAB } from '../constants/keyCodes';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\n\nimport ListItem from '../Lists/ListItem';\nimport Menu from '../Menus/Menu';\nimport TextField from '../TextFields/TextField';\n\n/**\n * The `Autocomplete` component is useful for presenting real-time suggestions, completions,\n * or filtering.\n */\nexport default class Autocomplete extends PureComponent {\n  static HorizontalAnchors = Menu.HorizontalAnchors;\n  static VerticalAnchors = Menu.VerticalAnchors;\n  static Positions = Menu.Positions;\n  static fuzzyFilter = fuzzyFilter;\n  static caseInsensitiveFilter = caseInsensitiveFilter;\n  static findIgnoreCase = findIgnoreCase;\n  static propTypes = {\n    /**\n     * An id to give the autocomplete. Either this or the `menuId` is required for accessibility.\n     *\n     * @see {@link #menuId}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * The menu id to provide to the autocomplete. Either this prop or the `id` prop is required. If\n     * this props is omitted, the menuId will become: `${id}-menu`\n     */\n    menuId: oneRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'id'),\n\n    /**\n     * An optional id to provide to the menu's list.\n     *\n     * @see {@link Menus/Menu#listId}\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the menu that contains the autocomplete.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the menu that contains the autocomplete.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the autocomplete's text field.\n     */\n    textFieldStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the autocomplete's text field.\n     */\n    textFieldClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the autocomplete's text field input itself.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the autocomplete's input field itself.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * The optional style to apply to the opened menu List if the\n     * `Autocomplete` is not using `inline` suggestions.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * The optional className to apply to the opened menu List if the\n     * `Autocomplete` is not using `inline` suggestions.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the inline suggestion when using `inline` mode.\n     */\n    inlineSuggestionStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the inline suggestion when using `inline` mode.\n     */\n    inlineSuggestionClassName: PropTypes.string,\n\n    /**\n     * Boolean if the autocomplete is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * A label to display with the autocomplete.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional value to use for the text field. This will force this component\n     * to be controlled and require the `onChange` function.\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]), 'onChange'),\n\n    /**\n     * The default value for the autocomplete's text field.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n\n    /**\n     * An object key to use to extract the text to be compared for filtering.\n     * This will only be applied if the given `data` prop is an array of objects.\n     */\n    dataLabel: PropTypes.string.isRequired,\n\n    /**\n     * An optional object key to use to extract the `value` of the given `data` prop.\n     * This is really only used with generating a unique react key. The unique react\n     * key with either be:\n     * - the datum if it is a string or number\n     * - the `key` attribute of the datum object\n     * - the `datum[dataValue]`\n     * - or the `datum[dataLabel]`\n     */\n    dataValue: PropTypes.string,\n\n    /**\n     * A single key or an array of keys to delete from your data object before passing\n     * to the `ListItem` component.\n     */\n    deleteKeys: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n\n    /**\n     * The data that will be used for autocomplete suggestions. This can either be\n     * an array of string, number, or object. If it is an array of objects, the key\n     * `dataLabel` is required.\n     *\n     * ```docgen\n     * PropTypes.arrayOf(PropTypes.oneOfType([\n     *   PropTypes.element,\n     *   PropTypes.string,\n     *   PropTypes.number,\n     *   PropTypes.shape({\n     *     [dataLabel]: PropTypes.oneOfType([\n     *       PropTypes.string,\n     *       PropTypes.number,\n     *       PropTypes.node,\n     *     ]).isRequired,\n     *   }),\n     * ])).isRequired\n     * ```\n     */\n    data: (props, propName, component, ...others) => {\n      const { dataLabel } = props;\n      return PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.shape({\n          [dataLabel]: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.node,\n          ]).isRequired,\n        }),\n      ])).isRequired(props, propName, component, ...others);\n    },\n\n    /**\n     * An optional number representing the total number of results in the `data` prop.\n     * This should really only be used when the data is paginated. When this is set,\n     * each item in the suggestion menu will be updated with the `aria-setsize` and\n     * `aria-posinset`.\n     *\n     * @see {@link #offset}\n     */\n    total: invalidIf(PropTypes.number, 'inline'),\n\n    /**\n     * An optional number representing the data's offset if the results were paginated.\n     * This is used for accessibility with the `aria-posinset` attribute.\n     *\n     * @see {@link #total}\n     */\n    offset: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to use to filter the `data`. If you have a sexy backend\n     * using solr or some other search/indexer, it is recommended to set this prop to\n     * `null`.\n     */\n    filter: PropTypes.func,\n\n    /**\n     * An optional function to call when the `Autocomplete`'s text field has a `keydown` event.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `Autocomplete`'s text field has a `mousedown` event.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `Autocomplete`'s text field value changes.\n     * The callback will be given the new value and the change event.\n     *\n     * `onChange(textFeldValue, event)`\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional function to call when the `Autocomplete`'s text field is focused.\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when the entire `Autocomplete` component is blurred.\n     * This will be triggered when the window is clicked or when a user tabs away from\n     * the autocomplete.\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * Boolean if this text field should be styled as a full width text field.\n     * Floating labels and the text field indicator will be removed automatically.\n     */\n    block: PropTypes.bool,\n\n    /**\n     * Boolean if the autocomplete should span the entire width.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the `Autocomplete` should display suggestions inline instead\n     * of in a `Menu`.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * The amount of padding to use between the current text and the inline suggestion text.\n     */\n    inlineSuggestionPadding: PropTypes.number.isRequired,\n\n    /**\n     * The function to call to find a suggestion for an inline autocomplete. This function\n     * expects to return a single result of a number or a string.\n     *\n     * ```js\n     * @param {Array<Object|String|Number>} data - The data prop to search.\n     * @param {String} value - The current value to use for searching.\n     * @param {String} dataLabel - The `dataLabel` prop to use if a datum is an object.\n     * @return {String|Number} the found suggestion or false-ish\n     * ```\n     */\n    findInlineSuggestion: PropTypes.func,\n\n    /**\n     * An optional function to call when an autocomplete suggestion is clicked either\n     * by using the mouse, the enter/space key, or touch. The match index and current\n     * `dataLabel` will be given back.\n     *\n     * `onAutocomplete(suggestion, suggestionIndex, matches);`\n     *\n     * @see {@link #autocompleteWithLabel}\n     */\n    onAutocomplete: PropTypes.func,\n\n    /**\n     * Boolean if the `onAutocomplete` should attempt send the `suggestion[dataLabel]` instead\n     * of `suggestion[dataValue]` when the data is an object.\n     *\n     * @see {@link #onAutocomplete}\n     */\n    autocompleteWithLabel: PropTypes.bool,\n\n    /**\n     * A boolean if the text field's value should be reset to the empty string when\n     * an item is auto-completed. This is useful if you do not want a fully controlled\n     * component and the values are stored outside of the `TextField`. (like `Chips`).\n     */\n    clearOnAutocomplete: PropTypes.bool,\n\n    /**\n     * An optional function to call when the `Autocomplete` suggestion menu opens.\n     */\n    onMenuOpen: PropTypes.func,\n\n    /**\n     * An optional function to call when the `Autocomplete` suggestion menu closes.\n     */\n    onMenuClose: PropTypes.func,\n\n    /**\n     * This prop is used for disabling the browser's default autocomplete suggestions\n     * of previously typed values in the text field. By default, this is disabled.\n     */\n    autoComplete: PropTypes.oneOf(['on', 'off']),\n\n    /**\n     * Boolean if the `input` should be focused again after a suggestion was clicked.\n     *\n     * This is really only added for keyboard support and the fact that each of suggestions\n     * are focusable.\n     */\n    focusInputOnAutocomplete: PropTypes.bool,\n\n    /**\n     * This is how the menu's `List` gets anchored to the `toggle` element.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is the animation position for the list that appears.\n     *\n     * @see {@link Helpers/Layover#animationPosition}\n     */\n    position: positionShape,\n\n    /**\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * Boolean if the menu's list should appear horizontally instead of vertically.\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\n     */\n    listZDepth: PropTypes.number,\n\n    /**\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\n     * `$md-menu-desktop-max-height` values.\n     *\n     * @see [md-menu-mobile-max-height](/components/menus?tab=2#variable-md-menu-mobile-max-height)\n     * @see [md-menu-desktop-max-height](/components/menus?tab=2#variable-md-menu-desktop-max-height)\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * An optional transition name to use for the list appearing/disappearing.\n     *\n     * @see {@link Helpers/Layover#transitionName}\n     */\n    transitionName: PropTypes.string,\n\n    /**\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#centered}\n     */\n    centered: Menu.propTypes.centered,\n\n    /**\n     * @see {@link Helpers/Layover#sameWidth}\n     */\n    sameWidth: Menu.propTypes.sameWidth,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    /**\n     * @see {@link TextFields#toolbar}\n     */\n    toolbar: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    autocompleteWithLabel: false,\n    position: Menu.Positions.BELOW,\n    sameWidth: true,\n    offset: 0,\n    fullWidth: true,\n    defaultValue: '',\n    dataLabel: 'primaryText',\n    filter: Autocomplete.fuzzyFilter,\n    findInlineSuggestion: Autocomplete.findIgnoreCase,\n    autoComplete: 'off',\n    repositionOnScroll: true,\n    repositionOnResize: true,\n    inlineSuggestionPadding: 6,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const {\n      defaultValue,\n      data,\n      dataLabel,\n      filter,\n    } = props;\n\n    let matches = [];\n    if (defaultValue && filter) {\n      matches = filter(data, defaultValue, dataLabel);\n    } else if (!filter) {\n      matches = data;\n    }\n\n    this.state = {\n      value: defaultValue,\n      matches,\n      visible: false,\n      matchIndex: -1,\n      manualFocus: false,\n      suggestion: '',\n      suggestionIndex: -1,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value: nextValue, data, filter, dataLabel } = nextProps;\n    const dataDiff = data !== this.props.data;\n    if (nextValue !== this.props.value || dataDiff) {\n      let { visible, matches } = this.state;\n      const value = getField(nextProps, this.state, 'value');\n\n      if (filter) {\n        matches = filter(data, value, dataLabel);\n      } else if (dataDiff) {\n        matches = data;\n      }\n\n      if (this.state.focus) {\n        visible = !!matches.length;\n      }\n\n      this.setState({ matches, visible });\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.visible !== nextState.visible) {\n      const menuFn = nextProps[`onMenu${nextState.visible ? 'Open' : 'Close'}`];\n      if (menuFn) {\n        menuFn();\n      }\n    }\n  }\n\n  /**\n   * Gets the current value from the text field. This is used when you have an uncontrolled\n   * text field and simply need the value from a ref callback.\n   *\n   * @return {String} the text field's value\n   */\n  get value() {\n    return getField(this.props, this.state, 'value');\n  }\n\n  _close = (e) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n\n    this.setState({ visible: false });\n  };\n\n  _handleChange = (value, event) => {\n    const { onChange, filter, findInlineSuggestion, data, dataLabel, inline } = this.props;\n\n    if (onChange) {\n      onChange(value, event);\n    }\n\n    if (inline) {\n      // If findInlineSuggestion does not exist, assume that `onChange` will handle it.\n      return findInlineSuggestion ? this._findInlineSuggestions(value) : null;\n    }\n\n    let { visible } = this.state;\n    let matches = value || !filter ? this.state.matches : [];\n    if (value && filter) {\n      matches = filter(data, value, dataLabel);\n    }\n\n    if (filter) {\n      visible = !!matches.length;\n    }\n\n    return this.setState({ matches, visible, value });\n  }\n\n  _handleFocus = (e) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n\n    const { value } = e.target;\n    if (this.props.inline && value) {\n      if (this.props.findInlineSuggestion) {\n        this._findInlineSuggestions(value);\n      }\n\n      return;\n    }\n\n    this.setState({\n      matchIndex: -1,\n      visible: !this.state.manualFocus && !!value && !!this.state.matches.length,\n      manualFocus: false,\n      focus: true,\n    });\n  };\n\n  _handleBlur = (e) => {\n    if (this.props.inline || !this.state.matches.length) {\n      if (this.props.onBlur) {\n        this.props.onBlur(e);\n      }\n    }\n\n    this.setState({ focus: false });\n  };\n\n  _handleInlineAutocomplete = () => {\n    const { suggestionIndex, matches } = this.state;\n    if (suggestionIndex === -1) {\n      return;\n    }\n\n    const {\n      data,\n      dataLabel,\n      dataValue,\n      autocompleteWithLabel: label,\n      onAutocomplete,\n    } = this.props;\n\n    let value = data[suggestionIndex];\n    if (onAutocomplete) {\n      let v = value;\n      if (typeof value === 'object') {\n        if (!label) {\n          v = value[dataValue];\n        } else {\n          v = value[dataLabel];\n        }\n      }\n\n      onAutocomplete(v, suggestionIndex, matches);\n    }\n\n    if (typeof value === 'object') {\n      value = value[dataLabel];\n    }\n\n    this.setState({\n      value,\n      suggestion: '',\n      suggestionIndex: -1,\n      tabbed: true,\n    });\n  };\n\n  _handleTextFieldKeyDown = (e) => {\n    const { inline, onKeyDown } = this.props;\n    const { suggestionIndex } = this.state;\n\n    const key = e.which || e.keyCode;\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    if (inline && key === TAB && suggestionIndex !== -1) { // Autocomplete the text field\n      e.preventDefault();\n      this._handleInlineAutocomplete();\n    }\n  };\n\n  _handleMenuKeyDown = (e) => {\n    const key = e.which || e.keyCode;\n    if (key === TAB) {\n      if (this.props.onBlur) {\n        this.props.onBlur(e);\n      }\n\n      this.setState({ visible: false });\n    } else if (key === UP || key === DOWN) {\n      this._focusSuggestion(key === UP, e);\n    }\n  };\n\n  /**\n   * Just check if the click target is in a list item.. if it is, autocomplete the text field\n   * with that item.\n   */\n  _handleClick = (e) => {\n    let target = e.target;\n    while (this._menu && this._menu.contains(target)) {\n      if (target.classList.contains('md-list-item')) {\n        let items = target.parentNode.querySelectorAll('.md-list-item');\n        items = Array.prototype.slice.call(items);\n\n        return this._handleItemClick(items.indexOf(target));\n      }\n\n      target = target.parentNode;\n    }\n\n    return null;\n  };\n\n  _handleItemClick = (index) => {\n    if (index === -1) { return; }\n\n    const { matches } = this.state;\n    const {\n      data,\n      dataLabel,\n      dataValue,\n      filter,\n      onAutocomplete,\n      clearOnAutocomplete,\n      focusInputOnAutocomplete,\n      autocompleteWithLabel: label,\n    } = this.props;\n\n    let value = matches.filter(m => !React.isValidElement(m))[index];\n    if (onAutocomplete) {\n      let v = value;\n      if (typeof v === 'object') {\n        if (!label) {\n          v = value[dataValue];\n        } else {\n          v = value[dataLabel];\n        }\n      }\n\n      onAutocomplete(v, index, matches);\n    }\n\n    if (typeof value === 'object') {\n      value = value[dataLabel];\n    }\n\n    value = clearOnAutocomplete ? '' : value;\n    let callback;\n    if (focusInputOnAutocomplete) {\n      callback = () => {\n        this._field.focus();\n      };\n    }\n\n    this.setState({\n      visible: false,\n      manualFocus: focusInputOnAutocomplete,\n      matches: filter ? filter(data, value, dataLabel) : matches,\n      value,\n    }, callback);\n  };\n\n  _focusSuggestion = (negative, e) => {\n    e.preventDefault();\n    const { matchIndex, matches } = this.state;\n    const l = matches.length;\n\n    let index;\n    if (negative && matchIndex === -1 || !negative && matchIndex >= l) {\n      return;\n    } else if (negative) {\n      index = matchIndex - 1;\n      if (index === -1) {\n        this._field.focus();\n      }\n    } else {\n      index = Math.min(l, matchIndex + 1);\n    }\n\n    if (index !== -1 && index !== matchIndex) {\n      const item = this._menu.querySelectorAll('.md-list-tile')[index];\n      if (item) {\n        item.focus();\n      }\n    }\n\n    this.setState({ matchIndex: index });\n  };\n\n  _findInlineSuggestions = (value) => {\n    const { data, dataLabel, findInlineSuggestion, inlineSuggestionPadding } = this.props;\n\n    let suggestion = findInlineSuggestion(data, value, dataLabel);\n    if (typeof suggestion === 'object') {\n      throw new Error(\n        '`findInlineSuggestion` should return a string or a number, but got an object.',\n        suggestion\n      );\n    }\n\n    let { suggestionStyle } = this.state;\n    let suggestionIndex = -1;\n    if (suggestion) {\n      // Find index of suggestion\n      data.some((datum, i) => {\n        const d = typeof dataum === 'object' ? datum[dataLabel] : datum;\n        if (d === suggestion) {\n          suggestionIndex = i;\n        }\n\n        return suggestionIndex !== -1;\n      });\n\n      // Strip already used letters\n      suggestion = suggestion.toString().substring(value.length, suggestion.length);\n\n      // Position the inline suggestion next to the text\n      let width = getTextWidth(value, this._field);\n      if (width !== null) {\n        width += inlineSuggestionPadding;\n      }\n\n      if (width !== null && (!suggestionStyle || suggestionStyle.left !== width)) {\n        suggestionStyle = { left: width };\n      }\n    }\n\n    this.setState({\n      value,\n      suggestion,\n      suggestionIndex,\n      suggestionStyle,\n      tabbed: false,\n      focus: true,\n    });\n  };\n\n  _mapToListItem = (match, i) => {\n    if (React.isValidElement(match)) { return match; }\n\n    const { dataLabel, dataValue, deleteKeys, total, offset, data } = this.props;\n    let props;\n    switch (typeof match) {\n      case 'string':\n      case 'number':\n        props = {\n          key: match,\n          primaryText: match,\n        };\n        break;\n      default:\n        if (deleteKeys) {\n          props = omit(match, typeof deleteKeys === 'string' ? [deleteKeys] : deleteKeys);\n        } else {\n          props = match;\n        }\n\n        props = {\n          ...props,\n          key: match.key || (dataValue && match[dataValue]) || match[dataLabel],\n          primaryText: match[dataLabel],\n        };\n    }\n\n    if (typeof total !== 'undefined' && data.length < total) {\n      props['aria-setsize'] = total;\n      props['aria-posinset'] = i + 1 + offset;\n    }\n\n    // Allows focus, but does not let tab focus. This is so up and down keys work.\n    return <ListItem tabIndex={-1} {...props} />;\n  };\n\n  /**\n   * The `mousedown` event is used instead of `click` because of the order\n   * of the `mousedown`, `focus`, and `click` events.\n   */\n  _toggleMenu = (e) => {\n    if (this.props.onMouseDown) {\n      this.props.onMouseDown(e);\n    }\n\n    if (!this.props.inline && this.state.matches.length && getField(this.props, this.state, 'value')) {\n      this.setState({ visible: !this.state.visible });\n    }\n  };\n\n  /**\n   * Allows touch devices to autocomplete the inline view by tapping:\n   * - the suggestion text\n   * - the text field IF there is a suggestion visible\n   */\n  _handleTouchStart = (e) => {\n    const { target } = e;\n    const { suggestion } = this.state;\n    if (target.classList.contains('md-autocomplete-suggestion') && suggestion) {\n      this._handleInlineAutocomplete();\n    }\n  };\n\n  _setField = (field) => {\n    if (field) {\n      this._field = field.getField();\n    }\n  };\n\n  _setMenu = (menu) => {\n    this._menu = findDOMNode(menu);\n  };\n\n  render() {\n    const { visible, matches, tabbed, focus, suggestionStyle } = this.state;\n    const {\n      fullWidth,\n      block,\n      style,\n      className,\n      listStyle,\n      listClassName,\n      textFieldStyle,\n      textFieldClassName,\n      inlineSuggestionStyle,\n      inlineSuggestionClassName,\n      menuId,\n      inline,\n      anchor,\n      belowAnchor,\n      position,\n      fixedTo,\n      listId,\n      listInline,\n      listZDepth,\n      listHeightRestricted,\n      xThreshold,\n      yThreshold,\n      closeOnOutsideClick,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      centered,\n      sameWidth,\n      repositionOnScroll,\n      repositionOnResize,\n      simplifiedMenu,\n      minLeft,\n      minRight,\n      minBottom,\n      fillViewportWidth,\n      fillViewportHeight,\n      /* eslint-disable no-unused-vars */\n      value: propValue,\n      total,\n      offset,\n      filter,\n      data,\n      dataLabel,\n      dataValue,\n      deleteKeys,\n      defaultValue,\n      clearOnAutocomplete,\n      autocompleteWithLabel,\n      findInlineSuggestion,\n      inlineSuggestionPadding,\n      onAutocomplete,\n      onMenuOpen,\n      onMenuClose,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onMouseDown,\n      onChange,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    delete props.focusInputOnAutocomplete;\n\n    const value = getField(this.props, this.state, 'value');\n\n    const autocomplete = (\n      <TextField\n        {...props}\n        aria-autocomplete={inline ? 'inline' : 'list'}\n        style={textFieldStyle}\n        className={cn('md-autocomplete', textFieldClassName)}\n        key=\"autocomplete\"\n        ref={this._setField}\n        value={value}\n        onKeyDown={this._handleTextFieldKeyDown}\n        onMouseDown={this._toggleMenu}\n        onChange={this._handleChange}\n        onFocus={this._handleFocus}\n        onBlur={this._handleBlur}\n        fullWidth={fullWidth}\n        block={block}\n      />\n    );\n\n    if (inline) {\n      let suggestion;\n      if (focus && this.state.suggestion) {\n        suggestion = (\n          <span\n            key=\"suggestion\"\n            style={{ ...suggestionStyle, ...inlineSuggestionStyle }}\n            className={cn('md-autocomplete-suggestion', {\n              'md-autocomplete-suggestion--floating': props.label,\n              'md-autocomplete-suggestion--block': block,\n            }, inlineSuggestionClassName)}\n          >\n            {this.state.suggestion}\n          </span>\n        );\n      }\n\n      return (\n        <CSSTransitionGroup\n          component=\"div\"\n          style={style}\n          className={cn('md-menu-container md-autocomplete-container', className, {\n            'md-full-width': fullWidth || block,\n          })}\n          transitionName=\"opacity\"\n          transitionEnterTimeout={150}\n          transitionLeave={!tabbed}\n          transitionLeaveTimeout={150}\n          onTouchStart={this._handleTouchStart}\n        >\n          {autocomplete}\n          {suggestion}\n        </CSSTransitionGroup>\n      );\n    }\n\n    return (\n      <Menu\n        id={menuId || `${props.id}-menu`}\n        listId={listId}\n        ref={this._setMenu}\n        toggle={autocomplete}\n        visible={visible}\n        onClick={this._handleClick}\n        onClose={this._close}\n        onKeyDown={this._handleMenuKeyDown}\n        simplified={simplifiedMenu}\n        sameWidth={sameWidth}\n        centered={centered}\n        anchor={anchor}\n        belowAnchor={belowAnchor}\n        position={position}\n        fixedTo={fixedTo}\n        listInline={listInline}\n        listZDepth={listZDepth}\n        listHeightRestricted={listHeightRestricted}\n        xThreshold={xThreshold}\n        yThreshold={yThreshold}\n        closeOnOutsideClick={closeOnOutsideClick}\n        transitionName={transitionName}\n        transitionEnterTimeout={transitionEnterTimeout}\n        transitionLeaveTimeout={transitionLeaveTimeout}\n        fullWidth={fullWidth || block}\n        style={style}\n        className={cn('md-autocomplete-container', className)}\n        listStyle={listStyle}\n        listClassName={cn('md-autocomplete-list', listClassName)}\n        repositionOnScroll={repositionOnScroll}\n        repositionOnResize={repositionOnResize}\n        minLeft={minLeft}\n        minRight={minRight}\n        minBottom={minBottom}\n        fillViewportWidth={fillViewportWidth}\n        fillViewportHeight={fillViewportHeight}\n      >\n        {matches.map(this._mapToListItem)}\n      </Menu>\n    );\n  }\n}\n","/** @module utils/fuzzyFilter */\nimport React from 'react';\n\n/**\n * This function does a simple fuzzy search of some `needle` for every\n * item in a `haystack`. It will only include items that are:\n *  - not null or undefined\n *  - valid React Components\n *  - a number or string that contains each letter/number in order ignoring case\n *  - an object's `dataLabel` value that contains each letter/number in order ignoring case.\n *\n * Example:\n * ```js\n * const haystack = ['Apple', 'Banana', 'Orange'];\n * fuzzyFilter(haystack, 'An') // ['Banana', 'Orange'];\n * fuzzyFilter(haystack, 'ae') // ['Apple']\n * ```\n *\n * @param {Array.<string|number|Object|function>} haystack - the haystack to search\n * @param {string} needle - the filter text to use.\n * @param {string=} dataLabel - the data label to use if the element is an object.\n *\n * @return {Array.<string|number|Object|function>} a filtered list.\n */\nexport default function fuzzyFilter(haystack, needle, dataLabel) {\n  // Create an amazing regex that matches the letters in order\n  // and escapes any strings that could be part of a regex.\n  const reg = new RegExp(\n    `${needle}`.split('')\n      .join('\\\\w*')\n      .replace(/(\\(|\\||\\)|\\\\(?!w\\*)|\\[|\\|-|\\.|\\^|\\+|\\$|\\?|^(?!w)\\*)/g, '\\\\$1')\n      // Couldn't get the matching of two '*' working, so replace them here..\n      .replace(/\\*\\*/g, '*\\\\*'),\n    'i'\n  );\n\n  return haystack.filter(hay => {\n    if (hay === null || typeof hay === 'undefined') {\n      return false;\n    } else if (React.isValidElement(hay)) {\n      return true;\n    }\n\n    let value;\n    switch (typeof hay) {\n      case 'string':\n      case 'number':\n        value = hay.toString();\n        break;\n      default:\n        value = hay[dataLabel];\n    }\n\n    return value && value.match(reg);\n  });\n}\n","/** @module utils/caseInsensitiveFilter */\nimport React from 'react';\n\n/**\n * This function does a simple ignore case search of some `filterText` for every\n * item in a `haystack`. It will only include items that are:\n *  - not null or undefined\n *  - valid React Components\n *  - a number or string that contains each letter/number in exact order ignoring case\n *  - an object's `dataLabel` value that contains each letter/number in exact order ignoring case.\n *\n * Example:\n *\n * ```js\n * const haystack = ['Apple', 'Banana', 'Orange'];\n * caseInsensitiveFilter(haystack, 'An') // ['Banana', 'Orange'];\n * caseInsensitiveFilter(haystack, 'ae') // []\n * ```\n *\n * @param {Array.<string|number|Object|function>} haystack - the haystack to search\n * @param {string} filterText - the filter text to use.\n * @param {string=} dataLabel - the data label to use if the element is an object.\n *\n * @return {Array.<string|number|Object|function>} a filtered list.\n */\nexport default function caseInsensitiveFilter(haystack, filterText, dataLabel) {\n  const needle = filterText.toLowerCase();\n\n  return haystack.filter(hay => {\n    if (hay === null || typeof hay === 'undefined') {\n      return false;\n    } else if (React.isValidElement(hay)) {\n      return true;\n    }\n\n    let value;\n    switch (typeof hay) {\n      case 'string':\n      case 'number':\n        value = hay.toString();\n        break;\n      default:\n        value = hay[dataLabel];\n    }\n\n    return value && value.toLowerCase().indexOf(needle) !== -1;\n  });\n}\n","/** @module utils/findIgnoreCase */\nimport React from 'react';\n\n/**\n * This function finds the first item in a `haystack` that starts with every\n * letter of the `value` in order. It will ignore:\n *  - null or undefined\n *  - valid React components\n *\n * @param {Array.<string|number|Object|function>} haystack - the haystack to search.\n * @param {string} value - the current value to use.\n * @param {string=} dataLabel - the object key to use to extract the comparing value.\n *\n * @return {string} the found element or the empty string.\n */\nexport default function findIgnoreCase(haystack, value, dataLabel) {\n  const needle = value ? value.toLowerCase() : '';\n\n  if (!needle) { return needle; }\n\n  let suggestion = '';\n  haystack.some(hay => {\n    if (hay === null || typeof hay === 'undefined' || React.isValidElement(hay)) {\n      return false;\n    }\n\n    const hayStr = typeof hay === 'object' ? hay[dataLabel] : hay.toString();\n\n    if (hayStr.toLowerCase().indexOf(needle) === 0) {\n      suggestion = hayStr;\n    }\n\n    return suggestion;\n  });\n\n  return suggestion;\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport oneRequiredForA11yIf from '../utils/PropTypes/oneRequiredForA11yIf';\n\n/**\n * The avatar component is used to convert a `FontIcon`, an image, or\n * a letter into an avatar.\n *\n * Any other props given to the Avatar component such as event listeners\n * or styles will also be applied.\n */\nexport default class Avatar extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional className to apply to the avatar.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to either the `<img>` or `<div>` surrounding the content. The `<img>` tag\n     * will be used with the `src` prop is defined.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to either the `<img>` or `<div>` surrounding the content. The `<img>` tag\n     * will be used with the `src` prop is defined.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * An optional image source to use for the avatar.\n     */\n    src: oneRequiredForA11yIf(PropTypes.string, 'role', 'alt'),\n\n    /**\n     * An optional image alt to use for the avatar if it is\n     * an image.\n     */\n    alt: PropTypes.string,\n\n    /**\n     * An optional `FontIcon` to convert into an avatar.\n     */\n    icon: PropTypes.node,\n\n    /**\n     * An optional letter to display in the avatar.\n     */\n    children: PropTypes.node,\n\n    /**\n     * A boolean if a random color should be applied to the avatar.\n     * This will be one of the `suffixes`.\n     */\n    random: PropTypes.bool,\n\n    /**\n     * A list of available suffixes to use when generating a random\n     * color for the avatar.\n     */\n    suffixes: PropTypes.arrayOf(PropTypes.string),\n\n    /**\n     * The suffix to use for a color. This can be any value but\n     * *should* be one of the available `suffixes`.\n     */\n    suffix: PropTypes.string,\n\n    /**\n     * Boolean if the `Avatar` should be sized to a `FontIcon` size. This\n     * will just set the width and height to the `$md-font-icon-size`.\n     */\n    iconSized: PropTypes.bool,\n\n    /**\n     * A role for the avatar's image. When the `src` prop is set, either a `role` of `presentation`\n     * or the `alt` prop must be defined for a11y.\n     */\n    role: PropTypes.oneOf(['presentation']),\n  };\n\n  static defaultProps = {\n    suffixes: [\n      'red',\n      'pink',\n      'purple',\n      'deep-purple',\n      'indigo',\n      'blue',\n      'light-blue',\n      'cyan',\n      'teal',\n      'green',\n      'light-green',\n      'lime',\n      'yellow',\n      'amber',\n      'orange',\n      'deep-orange',\n      'brown',\n      'grey',\n      'blue-grey',\n    ],\n  };\n\n  state = { color: null };\n\n  componentWillMount() {\n    if (this.props.random) {\n      this._setRandomColor();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.random && (this.props.src !== nextProps.src || this.props.icon !== nextProps.icon)) {\n      this._setRandomColor();\n    } else if (this.props.random && !nextProps.random) {\n      this.setState({ color: null });\n    }\n  }\n\n  _setRandomColor = () => {\n    const { suffixes } = this.props;\n\n    const i = (Math.floor(Math.random() * (suffixes.length - 1)) + 1);\n    this.setState({ color: suffixes[i] });\n  };\n\n  _getColor(suffix, suffixes, color) {\n    if (suffix) {\n      return `md-avatar--${suffix}`;\n    } else if (!!suffixes && !color) {\n      return 'md-avatar--default';\n    }\n\n    return `md-avatar--${color}`;\n  }\n\n  render() {\n    const {\n      className,\n      contentStyle,\n      contentClassName,\n      src,\n      alt,\n      icon,\n      children,\n      suffix,\n      suffixes,\n      iconSized,\n      role,\n      random, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    let content;\n    if (src) {\n      content = (\n        <img\n          src={src}\n          alt={alt}\n          role={role}\n          style={contentStyle}\n          className={cn('md-avatar-img', contentClassName)}\n        />\n      );\n    } else {\n      content = (\n        <div\n          style={contentStyle}\n          className={cn('md-avatar-content', contentClassName)}\n        >\n          {icon || children}\n        </div>\n      );\n    }\n    return (\n      <div\n        {...props}\n        className={cn('md-inline-block md-avatar', this._getColor(suffix, suffixes, this.state.color), {\n          'md-avatar--icon-sized': iconSized,\n        }, className)}\n      >\n        {content}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The main use case of the `Badge` component is for notifications. It can\n * however also place any content floating to whatever children are supplied.\n */\nexport default class Badge extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the badge's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the badge's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the badge.\n     */\n    badgeStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the badge.\n     */\n    badgeClassName: PropTypes.string,\n\n    /**\n     * The id to give the badge's content. This is required to help with the\n     * `aria-describedby` attribute that should be applied to one of the children.\n     *\n     * If there is only one child that is a valid React element, the `aria-describedby`\n     * will automatically be cloned into that child (so make sure your component passes\n     * that prop correctly).\n     *\n     * If there is only one child, but it is a string or number, the badge's container\n     * will be updated to include the `aria-describedby`.\n     *\n     * If there is more than child, you are required to add it to a child yourself.\n     */\n    badgeId: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * The content to display with the badge's content. The size of this\n     * element is determinate of the location of the content. You might have\n     * to update the positioning yourself.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * The component to render the badge as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * The content to display in the badge. If the content is a number or a number string,\n     * the number will be normalized if `normalizeContent` is enabled.\n     */\n    badgeContent: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.node,\n    ]).isRequired,\n\n    /**\n     * This will basically update the display value of the content to only be 2 digits. If\n     * a number is greater than 99, 99+ will be displayed instead. This is really just to\n     * keep the count inside the circular bubble.\n     */\n    max: PropTypes.number,\n\n    /**\n     * Boolean if the primary color background should get applied to the badge's content.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the secondary color background should get applied to the badge's content.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the default styles should be applied.\n     */\n    default: PropTypes.bool,\n\n    /**\n     * Boolean if the badge's content should appear in a circular container. If this is\n     * undefined, the content will be in a circular container if the badgeContent is a number.\n     */\n    circular: PropTypes.bool,\n\n    /**\n     * Boolean if the badge's notification should be invisible when the count is 0.\n     */\n    invisibleOnZero: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    max: 99,\n    component: 'div',\n  };\n\n  constructor(props) {\n    super(props);\n\n    const single = this._isSingleChild(props);\n    this.state = {\n      single,\n      element: single && isValidElement(props.children),\n      count: this._normalizeCount(props),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { badgeContent, max, children } = this.props;\n    let nextState;\n    if (badgeContent !== nextProps.badgeContent || max !== nextProps.max) {\n      nextState = { count: this._normalizeCount(nextProps) };\n    }\n\n    if (children !== nextProps.children) {\n      nextState = nextState || {};\n      nextState.single = this._isSingleChild(nextProps);\n      nextState.element = nextState.single && isValidElement(nextProps.children);\n    }\n\n    if (nextState) {\n      this.setState(nextState);\n    }\n  }\n\n  _isSingleChild({ children }) {\n    return Children.count(children) === 1;\n  }\n\n  _normalizeCount({ badgeContent, max }) {\n    let count;\n    if (max) {\n      const n = parseInt(badgeContent, 10);\n      if (!Number.isNaN(n) && n.toString() === badgeContent.toString()) {\n        count = n > max ? `${max}+` : n;\n      }\n    }\n\n    return count;\n  }\n\n  render() {\n    const { count, single, element } = this.state;\n    const {\n      className,\n      badgeStyle,\n      badgeClassName,\n      badgeContent,\n      component: Component,\n      children,\n      primary,\n      secondary,\n      default: defaultTheme,\n      circular,\n      badgeId,\n      invisibleOnZero,\n      max, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    const useCircular = typeof circular !== 'undefined' ? circular : typeof count !== 'undefined';\n    let content = children;\n    if (single && element) {\n      const c = Children.only(content);\n      if (!c.props['aria-describedby']) {\n        content = cloneElement(c, { 'aria-describedby': badgeId });\n      }\n    } else if (single && !element && !props['aria-describedby']) {\n      props['aria-describedby'] = badgeId;\n    }\n\n    const badge = (\n      <span\n        id={badgeId}\n        key=\"badge\"\n        role=\"status\"\n        style={badgeStyle}\n        className={cn('md-badge', {\n          'md-badge--circular': useCircular,\n          'md-badge--default': defaultTheme,\n        }, themeColors({\n          primary,\n          secondary,\n          text: useCircular,\n          themeText: !primary && !secondary,\n        }, badgeClassName))}\n      >\n        {count || badgeContent}\n      </span>\n    );\n\n    return (\n      <Component\n        {...props}\n        className={cn('md-badge-container md-inline-block', className)}\n      >\n        {content}\n        {invisibleOnZero && count === 0 ? null : badge}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  createPortal,\n  unmountComponentAtNode as unmount,\n  unstable_renderSubtreeIntoContainer as render,\n} from 'react-dom';\n\nconst isReact16 = typeof createPortal === 'function';\n\n/**\n * Creates a \"Portal\" for the children to be rendered in. Basically it will render the\n * children only when the `visible` prop is `true`. When it is visible, a new `component`\n * will be rendered as the first child in the body with the children inside.\n *\n * Unlike all the other components, `style` will not be applied for the `Portal`.\n */\nexport default class Portal extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional className to apply to the newly created `component` when visible.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if the children are visible.\n     */\n    visible: PropTypes.bool.isRequired,\n\n    /**\n     * The children to render when visible.\n     */\n    children: PropTypes.element,\n\n    /**\n     * The component to render as. This should be a valid DOM element.\n     */\n    component: PropTypes.string.isRequired,\n\n    /**\n     * An optional function to call when the portal is opened.\n     */\n    onOpen: PropTypes.func,\n\n    /**\n     * An optional function to call when the portal is closed\n     */\n    onClose: PropTypes.func,\n\n    /**\n     * An optional DOM Node to render the portal into. The default is to render as\n     * the first child in the `body`.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the portal should render the children as the last child of the `renderNode`\n     * or `body` instead of the first.\n     */\n    lastChild: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    component: 'span',\n  };\n\n  componentDidMount() {\n    if (this.props.visible) {\n      this._renderPortal(this.props);\n\n      if (isReact16) {\n        // Need to update after the renderPortal created the DOM element.\n        this.forceUpdate();\n      }\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { visible, onOpen } = nextProps;\n    if (this.props.visible === visible) {\n      if (visible && !isReact16) {\n        // Need to just re-render the subtree\n        this._renderPortal(nextProps);\n      }\n\n      return;\n    }\n\n    if (visible) {\n      if (onOpen) {\n        onOpen();\n      }\n\n      this._renderPortal(nextProps);\n    } else {\n      this._removePortal();\n    }\n  }\n\n  componentWillUnmount() {\n    this._removePortal();\n  }\n\n  _container = null;\n  _portal = null;\n\n  _applyStyles = (props) => {\n    if (props.className) {\n      this._container.className = props.className;\n    }\n  };\n\n  _renderPortal = (props) => {\n    if (!this._container) {\n      this._container = document.createElement(props.component);\n\n      this._applyStyles(props);\n      const node = (props.renderNode || document.body);\n      if (props.lastChild) {\n        node.appendChild(this._container);\n      } else {\n        node.insertBefore(this._container, node.firstChild);\n      }\n    } else {\n      this._applyStyles(props);\n    }\n\n    if (!isReact16) {\n      this._portal = render(this, props.children, this._container);\n    }\n  };\n\n  _removePortal = () => {\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n\n    if (this._container) {\n      if (!isReact16) {\n        unmount(this._container);\n      }\n\n      (this.props.renderNode || document.body).removeChild(this._container);\n    }\n\n    this._portal = null;\n    this._container = null;\n  };\n\n  render() {\n    const { component: Component, className, children, visible } = this.props;\n\n    // When doing server side rendering, actually render the component as a direct child of its parent.\n    // Once it has been rendered and working client side, it will be removed correctly.\n    if (typeof window === 'undefined' && visible) {\n      return <Component className={className}>{children}</Component>;\n    } else if (isReact16 && visible && this._container && typeof window !== 'undefined') {\n      return createPortal(children, this._container);\n    }\n\n    return null;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport between from '../utils/PropTypes/between';\n\n/**\n * The `Paper` component is a simple wrapper that adds box-shadow.\n *\n * You can also use the SCSS mixin instead of paper.\n *\n * ```scss\n * @include md-box-shadow(5);\n * ```\n */\nexport default class Paper extends PureComponent {\n  static propTypes = {\n    /**\n     * The component to render the paper as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The depth of the paper. This should be a number between 0 - 5. If\n     * the depth is 0, it will raise to a depth of 3 on hover.\n     */\n    zDepth: between(PropTypes.number.isRequired, 0, 5),\n\n    /**\n     * Any children to display in the paper.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the paper should raise to the `zDepth` of `3` on hover when the initial\n     * `zDepth` is `0`.\n     */\n    raiseOnHover: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    zDepth: 1,\n    component: 'div',\n  };\n\n  render() {\n    const { component: Component, zDepth, className, raiseOnHover, ...props } = this.props;\n\n    return (\n      <Component\n        {...props}\n        className={cn(`md-paper md-paper--${zDepth}`, {\n          'md-paper--0-hover': zDepth === 0 && raiseOnHover,\n        }, className)}\n      />\n    );\n  }\n}\n","import React, { PureComponent, Children, isValidElement, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport Collapse from '../Helpers/Collapse';\nimport FontIcon from '../FontIcons';\n\n/**\n * The `BottomNav` component is used for rendering the navigation tab/link in the `BottomNavigation`\n * component.\n */\nexport default class BottomNav extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]),\n    active: PropTypes.bool,\n    fixed: PropTypes.bool,\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    label: PropTypes.node.isRequired,\n    colored: PropTypes.bool,\n    iconChildren: PropTypes.node,\n    iconClassName: PropTypes.string,\n    onClick: PropTypes.func,\n    onNavChange: PropTypes.func,\n    role: PropTypes.string,\n    animate: PropTypes.bool,\n    icon: PropTypes.element,\n  };\n\n  static defaultProps = {\n    component: 'a',\n    role: null,\n  };\n\n  _handleClick = (e) => {\n    const { onClick, onNavChange, index } = this.props;\n    if (onClick) {\n      onClick(index, e);\n    }\n\n    if (onNavChange) {\n      onNavChange(index, e);\n    }\n  };\n\n  render() {\n    const {\n      active,\n      fixed,\n      className,\n      colored,\n      animate,\n\n      // deprecated\n      iconClassName,\n      iconChildren,\n      /* eslint-disable no-unused-vars */\n      index,\n      icon: propIcon,\n      label: propLabel,\n      onClick,\n      onNavChange,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { label, icon } = this.props;\n    const labelClassName = cn('md-bottom-nav-label', { 'md-bottom-nav-label--shifting-inactive': !active && !fixed });\n    if (Children.count(label) === 1 && isValidElement(label)) {\n      const labelEl = Children.only(label);\n      label = cloneElement(label, {\n        className: cn(labelClassName, labelEl.props.className),\n      });\n    } else {\n      label = <div className={labelClassName}>{label}</div>;\n    }\n\n    if (!icon && (iconClassName || iconChildren)) {\n      // Deprecated\n      icon = <FontIcon iconClassName={iconClassName} inherit>{iconChildren}</FontIcon>;\n    } else if (icon) {\n      icon = React.cloneElement(icon, { inherit: true });\n    }\n\n    return (\n      <AccessibleFakeInkedButton\n        {...props}\n        onClick={this._handleClick}\n        className={cn('md-bottom-nav', {\n          'md-bottom-nav--active': active,\n          'md-bottom-nav--fixed': fixed,\n          'md-bottom-nav--shifting': !fixed,\n          'md-bottom-nav--shifting-active': !fixed && active,\n          'md-bottom-nav--shifting-inactive': !fixed && !active,\n        }, themeColors({ primary: !colored && active, text: !active && !colored }, className))}\n      >\n        {icon}\n        <Collapse collapsed={!fixed && !active} animate={animate}>\n          {label}\n        </Collapse>\n      </AccessibleFakeInkedButton>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport Portal from '../Helpers/Portal';\nimport Paper from '../Papers/Paper';\nimport BottomNav from './BottomNav';\n\n/**\n * The `BottomNavigation` component is an alternative to the `NavigationDrawer` for handling navigation\n * only on mobile devices.\n */\nexport default class BottomNavigation extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A list of objects to generate a bottom navigation link. There must be at least 3 and no more\n     * than 5 links. A link gets rendered as the `AccessibleFakeButton` component, so any additional\n     * props in the link's shape will be passed along.\n     *\n     * ```docgen\n     * PropTypes.arrayOf(PropTypes.shape({\n     *   label: PropTypes.node.isRequired,\n     *   icon: PropTypes.element,\n     *   component: PropTypes.oneOfType([\n     *      PropTypes.func,\n     *      PropTypes.string,\n     *   ]),\n     * }).isRequired\n     * ```\n     */\n    links: (props, propName, component, ...args) => {\n      const links = props[propName] || props.actions;\n      const len = links.length;\n\n      if (len < 3) {\n        return new Error(\n          `Only ${len} \\`${propName}\\` were given to the ${component}. At least 3 are required.`\n        );\n      } else if (len > 5) {\n        return new Error(\n          `${len} \\`${propName}\\` were given to the ${component}. No more than 5 may be given.`\n        );\n      }\n\n      return PropTypes.arrayOf(PropTypes.shape({\n        label: PropTypes.node.isRequired,\n        icon: PropTypes.element,\n        iconChildren: deprecated(PropTypes.node, 'Use `icon` instead'),\n        iconClassName: deprecated(PropTypes.string, 'Use `icon` instead'),\n        component: PropTypes.oneOfType([\n          PropTypes.func,\n          PropTypes.string,\n        ]),\n      })).isRequired(props, propName, component, ...args);\n    },\n\n    /**\n     * Boolean if the bottom navigation should be colored with the primary color or whatever color\n     * was a result of the `react-md-theme-bottom-navigations-colored` mixin.\n     */\n    colored: PropTypes.bool,\n\n    /**\n     * Boolean if the bottom navigation should dynamically appear based on scrolling. When the user\n     * scrolls the `dynamicThreshold` amount, this component will either disappear (scrolling down)\n     * or appear (scrolling up).\n     */\n    dynamic: PropTypes.bool,\n\n    /**\n     * The distance a user must scroll before the bottom navigation appears or disappears when it is `dynamic`.\n     */\n    dynamicThreshold: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to call when a link has been clicked. The callback will\n     * include the new active index and the click event.\n     *\n     * ```js\n     * onNavChange(newActiveIndex, event);\n     * ```\n     */\n    onNavChange: PropTypes.func,\n\n    /**\n     * An optional active index to use. This will make the component controlled and require the\n     * `onNavChange` prop to be defined.\n     */\n    activeIndex: controlled(PropTypes.number, 'onNavChange', 'defaultActiveIndex'),\n\n    /**\n     * The index for the link that is active by default.\n     */\n    defaultActiveIndex: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the bottom navigation is visible by default. This *should* probably always\n     * be true.\n     */\n    defaultVisible: PropTypes.bool.isRequired,\n\n    /**\n     * The component to render the bottom navigation as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the bottom navigation.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * Since the `BottomNavigation` component uses the `Portal` component, you can pass an optional\n     * HTML Node to render in.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the bottom navigation should render as the last child in the `renderNode` or `body`\n     * instead of as the first.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * The transition duration for the dynamic bottom navigation to appear or disappear. This should\n     * match the `$md-bottom-navigation-transition-time` variable.\n     */\n    transitionDuration: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to call when the visibility of the bottom navigation changes. The callback\n     * will include the new visibility.\n     *\n     * ```js\n     * onVisibilityChange(!visible);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * Boolean if the label on a shifting navigation should animate in and out.\n     */\n    animate: PropTypes.bool,\n\n    onChange: deprecated(PropTypes.func, 'Use `onNavChange` instead'),\n    initiallyVisible: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    initialActiveIndex: deprecated(PropTypes.number, 'Use `defaultActiveIndex` instead'),\n    containerStyle: deprecated(PropTypes.object, 'Use `style` instead'),\n    containerClassName: deprecated(PropTypes.string, 'Use `className` instead'),\n    transitionName: deprecated(PropTypes.string, 'There is no CSSTransitionGroup used anymore'),\n    transitionEnterTimeout: deprecated(PropTypes.number, 'Use `transitionDuration` instead'),\n    transitionLeaveTimeout: deprecated(PropTypes.number, 'Use `transitionDuration` instead'),\n    actions: deprecated(PropTypes.array, 'Use `links` instead'),\n  };\n\n  static defaultProps = {\n    animate: true,\n    defaultActiveIndex: 0,\n    component: 'footer',\n    defaultVisible: true,\n    transitionDuration: 300,\n    portal: false,\n    dynamicThreshold: 5,\n  };\n\n  static contextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const visible = typeof props.initiallyVisible === 'boolean' ? props.initiallyVisible : props.defaultVisible;\n    this.state = {\n      visible,\n      portalVisible: visible,\n    };\n\n    if (typeof props.activeIndex === 'undefined') {\n      this.state.activeIndex = props.defaultActiveIndex;\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.dynamic) {\n      this._addTouchEvents();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { dynamic } = nextProps;\n    if (this.props.dynamic === dynamic) {\n      return;\n    }\n\n    if (dynamic) {\n      this._addTouchEvents();\n    } else {\n      this._removeTouchEvents();\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.visible !== nextState.visible && nextProps.onVisibilityChange) {\n      nextProps.onVisibilityChange(nextState.visible);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.dynamic) {\n      this._removeTouchEvents();\n    }\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  _addTouchEvents = () => {\n    addTouchEvent(window, 'start', this._handleTouchStart);\n    addTouchEvent(window, 'move', this._handleTouchMove);\n    addTouchEvent(window, 'end', this._handleTouchEnd);\n  };\n\n  _removeTouchEvents = () => {\n    removeTouchEvent(window, 'start', this._handleTouchStart);\n    removeTouchEvent(window, 'move', this._handleTouchMove);\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\n  };\n\n  _animateIn = () => {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n      this.setState({ visible: true });\n    }, 17);\n\n    this.setState({ portalVisible: true });\n  };\n\n  _animateOut = () => {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n      this.setState({ portalVisible: false });\n    }, this.props.transitionDuration);\n\n    this.setState({ visible: false });\n  };\n\n  _handleTouchStart = (e) => {\n    const { pageY } = e.changedTouches[0];\n\n    this._pageY = pageY;\n    this._scrolling = true;\n  };\n\n  _handleTouchMove = (e) => {\n    const { visible } = this.state;\n    if (!this._scrolling) {\n      return;\n    }\n\n    const touchY = e.changedTouches[0].pageY;\n    const { dynamicThreshold } = this.props;\n    const passedThreshold = Math.abs(this._pageY - touchY) >= dynamicThreshold;\n    if (this._pageY > touchY && visible && passedThreshold) {\n      this._pageY = touchY;\n      this._animateOut();\n    } else if (this._pageY < touchY && !visible && passedThreshold) {\n      this._pageY = touchY;\n      this._animateIn();\n    }\n  };\n\n  _handleTouchEnd = () => {\n    this._scrolling = false;\n  };\n\n  _handleNavChange = (index, e) => {\n    if (this.props.onNavChange || this.props.onChange) {\n      (this.props.onNavChange || this.props.onChange)(index, e);\n    }\n\n    if (typeof this.props.activeIndex === 'undefined') {\n      this.setState({ activeIndex: index });\n    }\n  };\n\n  render() {\n    const { visible, portalVisible } = this.state;\n    const {\n      className,\n      actions,\n      colored,\n      dynamic,\n      lastChild,\n      animate,\n      portal,\n      /* eslint-disable no-unused-vars */\n      links: propLinks,\n      activeIndex: propActiveIndex,\n      renderNode: propRenderNode,\n      onNavChange,\n      onVisibilityChange,\n      defaultVisible,\n      defaultActiveIndex,\n      dynamicThreshold,\n      transitionDuration,\n\n      // deprecated\n      onChange,\n      initiallyVisible,\n      containerStyle,\n      containerClassName,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { links } = this.props;\n    if (actions) {\n      links = actions;\n    }\n\n    const fixed = links.length === 3;\n    const activeIndex = getField(this.props, this.state, 'activeIndex');\n    const renderNode = getField(this.props, this.context, 'renderNode');\n    const navigation = (\n      <Paper\n        {...props}\n        key=\"navigation\"\n        className={cn('md-bottom-navigation', {\n          'md-background--card': !colored,\n          'md-background--primary': colored,\n          'md-bottom-navigation--dynamic': dynamic,\n          'md-bottom-navigation--dynamic-inactive': dynamic && !visible,\n        }, className)}\n        role=\"navigation\"\n      >\n        {links.map((action, index) => (\n          <BottomNav\n            {...action}\n            animate={animate}\n            key={action.key || index}\n            index={index}\n            onNavChange={this._handleNavChange}\n            active={activeIndex === index}\n            colored={colored}\n            fixed={fixed}\n          />\n        ))}\n      </Paper>\n    );\n\n    if (!portal) {\n      return portalVisible ? navigation : null;\n    }\n\n    return (\n      <Portal renderNode={renderNode} visible={portalVisible} lastChild={lastChild}>\n        {navigation}\n      </Portal>\n    );\n  }\n}\n","import React, { PureComponent, cloneElement, isValidElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `IconSeparator` component is a simple helper component to render some text and\n * an icon with some space between them while centering the text. The icon can either\n * come before or after the text.\n */\nexport default class IconSeparator extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the label.\n     */\n    labelStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the label.\n     */\n    labelClassName: PropTypes.string,\n\n    /**\n     * The label to display.\n     */\n    label: PropTypes.node.isRequired,\n\n    /**\n     * The icon to display.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the icon should appear before or after the text\n     */\n    iconBefore: PropTypes.bool,\n\n    /**\n     * The component to be rendered as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    component: 'div',\n  };\n\n  render() {\n    const {\n      className,\n      labelStyle,\n      labelClassName,\n      component,\n      label,\n      iconBefore,\n      children,\n      ...props\n    } = this.props;\n\n    let text;\n    if (isValidElement(label)) {\n      const labelProps = Children.only(label).props;\n      text = cloneElement(label, {\n        className: cn('md-icon-text', labelClassName, labelProps.className),\n        style: { ...labelStyle, ...labelProps.style },\n      });\n    } else {\n      text = <span style={labelStyle} className={cn('md-icon-text', labelClassName)}>{label}</span>;\n    }\n\n    const Component = component;\n\n    return (\n      <Component {...props} className={cn('md-icon-separator', className)}>\n        {iconBefore && children}\n        {text}\n        {!iconBefore && children}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\n\nexport default class Tooltip extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    position: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n    children: PropTypes.node.isRequired,\n    enterTimeout: PropTypes.number,\n    leaveTimeout: PropTypes.number,\n  };\n\n  static defaultProps = {\n    position: 'bottom',\n    enterTimeout: 150,\n    leaveTimeout: 150,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      entering: false,\n      leaving: false,\n      active: false,\n      visible: false,\n    };\n\n    this._timeout = null;\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  componentWillEnter(cb) {\n    this._timeout = setTimeout(() => {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        cb();\n      }, this.props.enterTimeout);\n      this.setState({ active: true });\n    }, TICK);\n\n    this.setState({ entering: true });\n  }\n\n  componentDidEnter() {\n    this.setState({ entering: false, active: false, visible: true });\n  }\n\n  componentWillLeave(cb) {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        cb();\n      }, this.props.leaveTimeout);\n\n      this.setState({ active: true, visible: false });\n    }, TICK);\n\n    this.setState({ leaving: true });\n  }\n\n  render() {\n    const { active, entering, leaving, visible } = this.state;\n    const { style, className, children, position } = this.props;\n\n    const direction = position === 'top' || position === 'bottom' ? 'horizontal' : 'vertical';\n    return (\n      <span\n        style={style}\n        className={cn(`md-tooltip md-tooltip--${position} md-tooltip--${direction}`, {\n          'md-tooltip--active': active,\n          'md-tooltip--enter': entering,\n          'md-tooltip--enter-active': entering && active,\n          'md-tooltip--leave': leaving,\n          'md-tooltip--leave-active': leaving && active,\n          [`md-tooltip--${position}-active`]: visible || (entering && active),\n        }, className)}\n      >\n        {children}\n      </span>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport TransitionGroup from 'react-transition-group/TransitionGroup';\nimport cn from 'classnames';\n\nimport { TAB } from '../constants/keyCodes';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport Tooltip from './Tooltip';\n\n\nfunction getContainer(tooltip) {\n  return tooltip.parentNode;\n}\n\nexport default class TooltipContainer extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    tooltipStyle: PropTypes.object,\n    tooltipClassName: PropTypes.string,\n    label: PropTypes.node.isRequired,\n    position: Tooltip.propTypes.position,\n    delay: PropTypes.number,\n    enterTimeout: Tooltip.propTypes.enterTimeout,\n    leaveTimeout: Tooltip.propTypes.leaveTimeout,\n    /**\n     * A function that returns a DOM element that will be used as the tooltip's container.\n     * A ref to the tooltip's DOM element will be passed into the function.\n     */\n    container: PropTypes.func,\n    /**\n     * A component/element the tooltip should be linked to,\n     * or a function that returns such a component/element.\n     * A ref to the tooltip's container will be passed into the function.\n     *\n     * By default the tooltip's container will be used as the target.\n     */\n    target: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n    ]),\n  };\n\n  static defaultProps = {\n    container: getContainer,\n    delay: 0,\n  };\n\n  state = { visible: false };\n\n  componentDidMount() {\n    this._setTarget();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.target !== prevProps.target) {\n      this._setTarget();\n    }\n  }\n\n  componentWillUnmount() {\n    this._unlinkTarget();\n    this._target = null;\n\n    if (this._delayedTimeout) {\n      clearTimeout(this._delayedTimeout);\n    }\n  }\n\n  _delayedTimeout = null;\n\n  _unlinkTarget = () => {\n    const target = this._target;\n    if (target) {\n      removeTouchEvent(target, 'start', this._showTooltip);\n      removeTouchEvent(target, 'end', this._hideTooltip);\n      target.removeEventListener('mouseover', this._showTooltip);\n      target.removeEventListener('mouseleave', this._hideTooltip);\n      target.removeEventListener('keyup', this._handleKeyUp);\n      target.removeEventListener('blur', this._hideTooltip);\n    }\n  };\n\n  _setTarget = () => {\n    const container = this._container;\n    let { target } = this.props;\n\n    this._unlinkTarget();\n\n    if (typeof target === 'function') {\n      target = target(container, this);\n    }\n    target = target ? findDOMNode(target) : container;\n    this._target = target || null;\n\n    if (target) {\n      addTouchEvent(target, 'start', this._showTooltip);\n      addTouchEvent(target, 'end', this._hideTooltip);\n      target.addEventListener('mouseover', this._showTooltip);\n      target.addEventListener('mouseleave', this._hideTooltip);\n      target.addEventListener('keyup', this._handleKeyUp);\n      target.addEventListener('blur', this._hideTooltip);\n    }\n  };\n\n  _setContainers = (span) => {\n    if (span) {\n      this._container = this.props.container(span.parentNode, this);\n    }\n  };\n\n  _stopContextMenu = (e) => {\n    e.preventDefault();\n    window.removeEventListener('contextmenu', this._stopContextMenu, true);\n    captureNextEvent('click');\n    this.setState({ visible: true });\n  };\n\n  _showTooltip = (e) => {\n    if (e.type === 'mouseover' && this._touched) {\n      return;\n    }\n\n    if (e.type === 'touchstart') {\n      this._touched = true;\n\n      window.addEventListener('contextmenu', this._stopContextMenu, true);\n      return;\n    }\n\n\n    const { delay } = this.props;\n    if (this._delayedTimeout) {\n      clearTimeout(this._delayedTimeout);\n    }\n\n    if (delay) {\n      this._delayedTimeout = setTimeout(() => {\n        this._delayedTimeout = null;\n\n        this.setState({ visible: true });\n      }, delay);\n    } else {\n      this.setState({ visible: true });\n    }\n  };\n\n  _hideTooltip = (e) => {\n    if (this._delayedTimeout) {\n      clearTimeout(this._delayedTimeout);\n    }\n\n    if (e.type === 'mouseover' && this._touched) {\n      return;\n    }\n\n    this.setState({ visible: false });\n  };\n\n  _handleKeyUp = (e) => {\n    if ((e.which || e.keyCode) === TAB) {\n      this._showTooltip(e);\n    }\n  };\n\n  render() {\n    const { visible } = this.state;\n    const {\n      style,\n      className,\n      tooltipStyle,\n      tooltipClassName,\n      label,\n      position,\n      enterTimeout,\n      leaveTimeout,\n    } = this.props;\n\n    const tooltip = (\n      <Tooltip\n        key=\"tooltip\"\n        style={tooltipStyle}\n        className={tooltipClassName}\n        position={position}\n        enterTimeout={enterTimeout}\n        leaveTimeout={leaveTimeout}\n      >\n        {label}\n      </Tooltip>\n    );\n\n    return (\n      <TransitionGroup\n        style={style}\n        className={cn('md-tooltip-container', className)}\n        component=\"div\"\n      >\n        <span ref={this._setContainers} aria-hidden />\n        {visible ? tooltip : null}\n      </TransitionGroup>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\nimport TooltipContainer from './TooltipContainer';\n\n\n/**\n * Takes any component and injects a tooltip container as a prop. The tooltip container\n * will add event listeners for touch, mouse, and keyboard events so that a tooltip will appear\n * in the ComposedComponent.\n *\n * If the `tooltipLabel` prop is omitted, the tooltip and event listeners will not\n * be included.\n *\n * ```js\n * @param {function} ComposedComponent the component to compose with the tooltip functionality.\n * @return {function} the ComposedComponent with a tooltip.\n * ```\n */\nexport default ComposedComponent => class TooltipedComponent extends PureComponent {\n  static displayName = getDisplayName(ComposedComponent, 'Tooltip');\n  static propTypes = {\n    /**\n     * An optional style to apply to the tooltip container.\n     */\n    tooltipContainerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the tooltip container.\n     */\n    tooltipContainerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the tooltip itself.\n     */\n    tooltipStyle: PropTypes.object,\n\n    /**\n     * An optional className to the tooltip itself.\n     */\n    tooltipClassName: PropTypes.string,\n\n    /**\n     * The tooltip to display. If omitted, the `tooltip` prop will not be injected.\n     */\n    tooltipLabel: PropTypes.node,\n\n    /**\n     * The amount of delay before the tooltip will appear on hover, touch, or keyboard focus.\n     */\n    tooltipDelay: TooltipContainer.propTypes.delay,\n\n    /**\n     * The position that the tooltip should appear related to the composed component.\n     */\n    tooltipPosition: TooltipContainer.propTypes.position,\n\n    /**\n     * The transition time for the tooltip appearing.\n     */\n    tooltipTransitionEnterTimeout: TooltipContainer.propTypes.enterTimeout,\n\n    /**\n     * The transition time for the tooltip disappearing.\n     */\n    tooltipTransitionLeaveTimeout: TooltipContainer.propTypes.leaveTimeout,\n  };\n\n  _composed = null;\n\n  /**\n   * Gets the composed component as a ref. This is useful if you need to access the ref of the\n   * composed component instead of the `injectTooltip` HOC to use some publicly accessible methods.\n   *\n   * ```js\n   * <SomeTooltippedComponent\n   *   ref={tooltipHOC => {\n   *     tooltipHOC.getComposedComponent().focus();\n   *   }}\n   * />\n   * ```\n   *\n   * > NOTE: This can be `null`, so make sure to do a null check before using.\n   */\n  getComposedComponent = () => this._composed;\n\n  _setComposedComponent = (component) => {\n    this._composed = component;\n  };\n\n  render() {\n    const {\n      tooltipLabel,\n      tooltipDelay,\n      tooltipPosition,\n      tooltipStyle,\n      tooltipClassName,\n      tooltipContainerStyle,\n      tooltipContainerClassName,\n      tooltipTransitionEnterTimeout,\n      tooltipTransitionLeaveTimeout,\n      ...props\n    } = this.props;\n\n    if (tooltipLabel) {\n      props.tooltip = (\n        <TooltipContainer\n          key=\"tooltipContainer\"\n          label={tooltipLabel}\n          delay={tooltipDelay}\n          position={tooltipPosition}\n          enterTimeout={tooltipTransitionEnterTimeout}\n          leaveTimeout={tooltipTransitionLeaveTimeout}\n          style={tooltipContainerStyle}\n          className={tooltipContainerClassName}\n          tooltipStyle={tooltipStyle}\n          tooltipClassName={tooltipClassName}\n        />\n      );\n    }\n\n    props.ref = this._setComposedComponent;\n\n    return <ComposedComponent {...props} />;\n  }\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { TAB } from '../constants/keyCodes';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getBtnStyles from './getBtnStyles';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport FontIcon from '../FontIcons/FontIcon';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport injectInk from '../Inks/injectInk';\nimport injectTooltip from '../Tooltips/injectTooltip';\n\n/**\n * The `Button` component can either be a `FlatButton`, `RaisedButton`, `IconButton`, or a\n * `FloatingButton`.\n *\n * A `FlatButton` is a button with no depth on the screen that is ideally used in `Dialog`s\n * or `CardActions`. The text can be optionally styled with the `primary` or `secondary` colors.\n *\n * A `RaisedButton` is a button with some depth to help actions have more prominent in flat\n * layouts or layouts with varying content. The background can be styled by the light/dark theme,\n * or optionally the `primary` or `secondary` color.\n *\n * An `IconButton` is a button that just displays a `FontIcon` as the child in a circle.\n * The `FontIcon` can be optionally styled with the `primary` or `secondary` color.\n *\n * A `FloatingButton` is a special case. Woop\n */\nclass Button extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the button.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the button.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A boolean if the icon should appear before or after the text for a `FlatButton` or\n     * a `RaisedButton`.\n     */\n    iconBefore: PropTypes.bool,\n\n    /**\n     * Any children used to display the button. When the button type is `icon` or `floating`,\n     * this can be used to render the `FontIcon` instead of the `iconChildren` prop.\n     *\n     * When the button type is `raised` or `flat`, this will be the label or any other elements\n     * you'd like to display in the button. This can work hand-in-hand with the `iconClassName`\n     * and `iconChildren` to make a button with an icon and text.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An icon className to use in an optional `FontIcon` in any version of the button. This will\n     * be used with the `children` prop. If the `floating` or `icon` props are set to true, this or\n     * the children are required.\n     *\n     * @see {@link #iconEl}\n     */\n    iconClassName: PropTypes.string,\n\n    /**\n     * Any children to use to display an icon in the button.\n     *\n     * @see {@link #iconEl}\n     */\n    iconChildren: PropTypes.node,\n\n    /**\n     * An optional icon to display. This prop is recommended over the `iconClassName` and `iconChildren`\n     * props since it allows more control for you. There is also better SVG support since it won't wrap\n     * the SVG with the `FontIcon` element.\n     */\n    iconEl: PropTypes.element,\n\n    /**\n     * The type for the button. This is required when the `component` prop is not\n     * the 'a' tag, a `function`, or when the `href` prop is defined.\n     */\n    type: (props, propName, component, ...args) => {\n      const c = props.component;\n      let validator = PropTypes.oneOf(['button', 'submit', 'reset']);\n      if (!props.href && c !== 'a' && typeof c !== 'function') {\n        validator = validator.isRequired;\n      }\n\n      return validator(props, propName, component, ...args);\n    },\n\n    /**\n     * Boolean if the button should be styled with the primary color.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the button should be styled with the secondary color.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the button is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional href for the button. This will style the `a` tag as a button.\n     */\n    href: PropTypes.string,\n\n    /**\n     * An optional component to render the button as. This allows you to get all the styles and functionality\n     * of the Button, but as a custom React component.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]),\n\n    /**\n     * An optional function to call when the `click` event is triggered.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchstart` event is triggered.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchend` event is triggered.\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mousedown` event is triggered.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseup` event is triggered.\n     */\n    onMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keyup` event is triggered.\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keydown` event is triggered.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseenter` event is triggered.\n     */\n    onMouseEnter: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseleave` event is triggered.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * Boolean if the `FloatingButton` should be fixed to the page. This prop can\n     * only be enabled if the `floating` prop is true.\n     */\n    fixed: invalidIf(PropTypes.bool, 'flat', 'raised', 'icon'),\n\n    /**\n     * The position that the `FloatingButton` should be fixed to the page. It will\n     * either be fixed to the top right, top left, bottom right, or bottom left of\n     * the page. This prop is only used if the `floating` prop and `fixed` prop are\n     * `true`.\n     */\n    fixedPosition: PropTypes.oneOf(['tr', 'tl', 'br', 'bl']).isRequired,\n\n    /**\n     * Boolean if the `FloatingButton` should be `mini`. This prop can only be used\n     * when the `floating` prop is true.\n     */\n    mini: invalidIf(PropTypes.bool, 'flat', 'raised', 'icon'),\n\n    /**\n     * Boolean if the `Button` should be styled as a `FlatButton`.\n     */\n    flat: PropTypes.bool,\n\n    /**\n     * Boolean if the `Button` should be styled as a `RaisedButton`.\n     */\n    raised: PropTypes.bool,\n\n    /**\n     * Boolean if the `Button` should be styled as a `IconButton`.\n     *\n     * @see {@link #svg}\n     */\n    icon: PropTypes.bool,\n\n    /**\n     * Boolean if the `Button` should be styled as a `FloatingButton`.\n     *\n     * @see {@link #svg}\n     */\n    floating: PropTypes.bool,\n\n    /**\n     * Boolean if the theming of `primary` or `secondary` should be swapped. By default,\n     * only flat and icon buttons can gain the theme colors as text color while the raised\n     * and floating buttons can gain the theme colors as background color.\n     *\n     * If this prop is enabled, the flat and icon buttons will gain the theme background colors\n     * while the raised and icon will gain the theme text colors instead.\n     *\n     * @see {@link #primary}\n     * @see {@link #secondary}\n     */\n    swapTheming: PropTypes.bool,\n\n    /**\n     * An optional label to use for the tooltip. This is normally only used for\n     * `IconButton`s or `FloatingButton`s, but can be used on `FlatButton`s and\n     * `RaisedButton`s if you wish. Knock yourself out!\n     *\n     * If this prop is omitted, no tooltip will be included.\n     */\n    tooltipLabel: PropTypes.node,\n\n    /**\n     * An optional delay before the tooltip appears on mouse over.\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position for the tooltip.\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * An ink from `injectInk`.\n     * @access private\n     */\n    ink: PropTypes.node,\n\n    /**\n     * A tooltip from `injectTooltip`\n     * @access private\n     */\n    tooltip: PropTypes.node,\n\n    /**\n     * Custom validator for verifying that only one type is defined and that\n     * at one type is defined.\n     */\n    _typeValidator: (props, propName, component) => {\n      const { flat, raised, icon, floating } = props;\n\n      const defined = [raised, flat, icon, floating].filter(d => d);\n      const len = defined.length;\n      if (len === 0) {\n        return new Error(\n          `A material design button type must be specified in the \\`${component}\\` but none were ` +\n          'given. Valid types are `flat`, `raised`, `icon`, or `floating`.'\n        );\n      } else if (len !== 1) {\n        return new Error(\n          `Only one material design button type may be specified in the \\`${component}\\` but \\`${len}\\` ` +\n          'were given. Select only one of `flat`, `raised`, `icon`, or `floating`.'\n        );\n      }\n\n      return null;\n    },\n\n    /**\n     * Either a boolean that will enforce the 24x24 size of the font icon or a number of the size\n     * to enforce. This is useful when using other font icon libraries that do not have a consistent\n     * size.\n     */\n    forceIconSize: FontIcon.propTypes.forceSize,\n\n    /**\n     * Boolean if the `forceIconSize` prop should also force the `font-size` instead of only `width` and `height`.\n     */\n    forceIconFontSize: PropTypes.bool,\n\n    /**\n     * Boolean if the child is an SVGIcon or FontIcon when using the `icon` or `floating` props. This is only needed\n     * until the next release when the `label` migration can be removed.\n     */\n    svg: PropTypes.bool,\n\n    label: deprecated(PropTypes.node, 'Use the `children` prop instead'),\n    noIcon: deprecated(\n      PropTypes.bool,\n      'This has been removed during the alpha release. Children will always attempt to be rendered outside of an ' +\n      'icon by default for flat and raised buttons.'\n    ),\n  };\n\n  static defaultProps = {\n    type: 'button',\n    iconBefore: true,\n    fixedPosition: 'br',\n  };\n\n  state = {\n    pressed: false,\n    snackbar: false,\n    snackbarType: null,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.disabled && !nextProps.disabled && this.state.hover) {\n      this.setState({ hover: false });\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (!this.state.pressed && nextState.pressed) {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n        if (this._attemptedBlur) {\n          this._attemptedBlur = false;\n\n          this.setState({ pressed: false });\n        }\n      }, 450);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    if (this._snackbarTimeout) {\n      clearTimeout(this._snackbarTimeout);\n    }\n\n    window.removeEventListener('click', this._blur);\n  }\n\n  _blur = () => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this._timeout) {\n      this._attemptedBlur = true;\n    } else {\n      this.setState({ pressed: false });\n    }\n  };\n\n  _handleMouseUp = (e) => {\n    if (this.props.onMouseUp) {\n      this.props.onMouseUp(e);\n    }\n\n    this._blur();\n  };\n\n  _handleMouseDown = (e) => {\n    if (this.props.onMouseDown) {\n      this.props.onMouseDown(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleTouchEnd = (e) => {\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(e);\n    }\n\n    this._blur();\n    captureNextEvent('mouseover');\n  };\n\n  _handleKeyUp = (e) => {\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(e);\n    }\n\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.addEventListener('click', this._blur);\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.removeEventListener('click', this._blur);\n      this.setState({ pressed: false });\n    }\n  };\n\n  _handleMouseEnter = (e) => {\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ hover: true });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ hover: false });\n    }\n  };\n\n  _animateForSnackbar = (multiline, leaveTimeout) => {\n    if (typeof leaveTimeout === 'number') {\n      this._snackbarTimeout = setTimeout(() => {\n        this._snackbarTimeout = setTimeout(() => {\n          this._snackbarTimeout = null;\n\n          this.setState({ snackbar: false });\n        }, leaveTimeout + 150);\n\n        this.setState({ snackbarType: null });\n      }, TICK);\n    } else {\n      this._snackbarTimeout = setTimeout(() => {\n        this._snackbarTimeout = null;\n\n        this.setState({ snackbar: true, snackbarType: multiline ? 'multiline-' : '' });\n      }, TICK);\n    }\n  };\n\n  render() {\n    const {\n      className,\n      iconClassName,\n      iconChildren,\n      iconBefore,\n      href,\n      primary,\n      secondary,\n      flat,\n      raised,\n      floating,\n      mini,\n      fixed,\n      fixedPosition,\n      disabled,\n      component,\n      ink,\n      tooltip,\n      icon,\n      forceIconSize,\n      forceIconFontSize,\n      type,\n      children,\n      swapTheming,\n      svg,\n      iconEl: propIconEl, // eslint-disable-line no-unused-vars\n      label, // deprecated\n      ...props\n    } = this.props;\n    let { iconEl } = this.props;\n\n    if (!href) {\n      props.type = type;\n    }\n\n    const { pressed, hover, snackbar, snackbarType } = this.state;\n    const iconBtnType = icon || floating;\n\n    let visibleChildren;\n    if (!iconEl && !svg && (iconClassName || iconChildren || iconBtnType || (label && children))) {\n      let resolvedIconChildren = iconChildren;\n      if (typeof iconChildren === 'undefined') {\n        resolvedIconChildren = iconBtnType || label ? children : null;\n      }\n\n      iconEl = (\n        <FontIcon iconClassName={iconClassName} forceSize={forceIconSize} forceFontSize={forceIconFontSize} inherit>\n          {resolvedIconChildren}\n        </FontIcon>\n      );\n    } else if (iconEl || svg) {\n      const el = React.Children.only(iconEl || children);\n      iconEl = React.cloneElement(el, { inherit: !el.props.error });\n    }\n\n    if (!iconBtnType) {\n      visibleChildren = label || children;\n      if (iconEl) {\n        visibleChildren = <IconSeparator label={visibleChildren} iconBefore={iconBefore}>{iconEl}</IconSeparator>;\n      }\n    } else {\n      visibleChildren = iconEl;\n    }\n\n    const Component = component || (href ? 'a' : 'button');\n    return (\n      <Component\n        {...props}\n        disabled={disabled}\n        onTouchStart={this._handleTouchStart}\n        onTouchEnd={this._handleTouchEnd}\n        onMouseDown={this._handleMouseDown}\n        onMouseUp={this._handleMouseUp}\n        onKeyDown={this._handleKeyDown}\n        onKeyUp={this._handleKeyUp}\n        onMouseEnter={this._handleMouseEnter}\n        onMouseLeave={this._handleMouseLeave}\n        href={href}\n        className={getBtnStyles({\n          flat,\n          raised,\n          icon,\n          floating,\n          disabled,\n          primary,\n          secondary,\n          hover,\n          swapTheming,\n          pressed,\n          mini,\n          fixed,\n          fixedPosition,\n        }, {\n          'md-btn--tooltip': tooltip,\n          'md-btn--snackbar-floating': snackbar,\n          [`md-btn--snackbar-floating-${snackbarType}adjust`]: snackbar && snackbarType !== null,\n        }, 'md-inline-block', className)}\n      >\n        {ink}\n        {tooltip}\n        {visibleChildren}\n      </Component>\n    );\n  }\n}\n\nexport default injectInk(injectTooltip(Button));\n","import PropTypes from 'prop-types';\n\nexport default {\n  onExpandClick: PropTypes.func,\n  expanded: PropTypes.bool,\n  icon: PropTypes.element,\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n  tooltipLabel: PropTypes.node,\n  tooltipDelay: PropTypes.number,\n};\n","import React, { PureComponent, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport getField from '../utils/getField';\nimport contextTypes from './contextTypes';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport FontIcon from '../FontIcons/FontIcon';\nimport Paper from '../Papers/Paper';\nimport Collapse from '../Helpers/Collapse';\n\nexport default class Card extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the card.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Any Card parts that should be rendered.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the card is expanded by default when there is an expander\n     * component.\n     */\n    defaultExpanded: PropTypes.bool,\n\n    /**\n     * Boolean if the card should raise on hover when on a desktop display.\n     */\n    raise: PropTypes.bool,\n\n    /**\n     * Boolean if the card is currently expanded. This will require the `onExpanderClick` function\n     * to toggle the state. The card will become controlled if this is not `undefined`.\n     */\n    expanded: controlled(PropTypes.bool, 'onExpanderClick', 'defaultExpanded'),\n\n    /**\n     * An optional function to call when the expander is clicked.\n     */\n    onExpanderClick: PropTypes.func,\n\n    /**\n     * The icon to use for the expander button. It is recommended to use this prop over\n     * the `expaderIconChildren` and `expanderIconClassName` since it provides more control.\n     */\n    expanderIcon: PropTypes.element,\n\n    /**\n     * The tooltip position for the expander icon.\n     */\n    expanderTooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * The optional tooltip to display for the expander icon.\n     */\n    expanderTooltipLabel: PropTypes.node,\n\n    /**\n     * An optional delay before the tooltip appears for the expander icon on hover.\n     */\n    expanderTooltipDelay: PropTypes.number,\n\n    /**\n     * Boolean if the card contains a table. It will update the styling accordingly.\n     * When using the `DataTable` component, do not wrap it in a `CardText` component.\n     *\n     * ```js\n     * <Card tableCard={true}>\n     *   <CardTitle title=\"Example />\n     *   <DataTable>\n     *     ...\n     *   </DataTable>\n     * </Card>\n     * ```\n     */\n    tableCard: PropTypes.bool,\n\n    /**\n     * An optional function to call when the mouseover event is triggered.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when the mouseleave event is triggered.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when the touchstart event is triggered.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * Boolean if the card expansion should be animated.\n     */\n    animate: PropTypes.bool,\n\n    expanderIconClassName: deprecated(PropTypes.string, 'Use `expanderIcon` instead'),\n    expanderIconChildren: deprecated(PropTypes.node, 'Use `expanderIcon` instead'),\n    initiallyExpanded: deprecated(PropTypes.bool, 'Use `defaultExpanded` instead'),\n    isExpanded: deprecated(PropTypes.bool, 'Use `expanded` instead'),\n    iconChildren: deprecated(PropTypes.node, 'Use the `expanderIconChildren` prop instead'),\n    iconClassName: deprecated(PropTypes.string, 'Use the `expanderIconClassName` prop instead'),\n  };\n\n  static defaultProps = {\n    animate: true,\n    expanderIcon: <FontIcon>keyboard_arrow_down</FontIcon>,\n    expanderTooltipPosition: 'left',\n  };\n\n  static childContextTypes = contextTypes;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      zDepth: 1,\n      expanded: typeof props.initiallyExpanded !== 'undefined' ? props.initiallyExpanded : !!props.defaultExpanded,\n    };\n  }\n\n  getChildContext() {\n    const {\n      expanderTooltipLabel,\n      expanderTooltipDelay,\n      expanderTooltipPosition,\n      expanderIcon,\n\n      // deprecated\n      iconClassName,\n      iconChildren,\n      expanderIconClassName,\n      expanderIconChildren,\n    } = this.props;\n\n    const expanded = typeof this.props.isExpanded !== 'undefined'\n      ? this.props.isExpanded\n      : getField(this.props, this.state, 'expanded');\n\n    return {\n      expanded,\n      onExpandClick: this._handleExpandClick,\n      icon: getDeprecatedIcon(\n        iconChildren || expanderIconChildren,\n        iconClassName || expanderIconClassName,\n        expanderIcon\n      ),\n      tooltipLabel: expanderTooltipLabel,\n      tooltipDelay: expanderTooltipDelay,\n      tooltipPosition: expanderTooltipPosition,\n    };\n  }\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (this.props.raise && !this._touched) {\n      this.setState({ zDepth: 4 });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n\n    this._touched = false;\n    if (this.props.raise && this.state.zDepth !== 1) {\n      this.setState({ zDepth: 1 });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    this._touched = true;\n  };\n\n  _handleExpandClick = (e) => {\n    const { onExpanderClick } = this.props;\n    const expanded = !getField(this.props, this.state, 'expanded');\n    if (onExpanderClick) {\n      onExpanderClick(expanded, e);\n    }\n\n    if (typeof this.props.expanded === 'undefined') {\n      this.setState({ expanded });\n    }\n  };\n\n  render() {\n    const { zDepth } = this.state;\n    const {\n      className,\n      raise,\n      tableCard,\n      children,\n      animate,\n      /* eslint-disable no-unused-vars */\n      expanded: propExpanded,\n      onExpanderClick,\n      defaultExpanded,\n      expanderIcon,\n      expanderIconChildren,\n      expanderIconClassName,\n      expanderTooltipLabel,\n      expanderTooltipDelay,\n      expanderTooltipPosition,\n\n      // deprecated\n      iconChildren,\n      iconClassName,\n      isExpanded,\n      initiallyExpanded,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const expanded = typeof this.props.isExpanded !== 'undefined'\n      ? this.props.isExpanded\n      : getField(this.props, this.state, 'expanded');\n    let expanderIndex = -1;\n    const parts = Children.map(Children.toArray(children), (child, i) => {\n      if (!child || !child.props) {\n        return child;\n      } else if (expanderIndex < 0 && (child.props.isExpander || child.props.expander)) {\n        expanderIndex = i;\n      }\n\n      if (!child.props.expandable) {\n        return child;\n      }\n\n      const collapsed = expanderIndex === -1 || expanderIndex === i || !expanded;\n      return <Collapse collapsed={collapsed} animate={animate}>{child}</Collapse>;\n    });\n\n    return (\n      <Paper\n        {...props}\n        zDepth={zDepth}\n        className={cn('md-card', {\n          'md-card--raise': raise,\n          'md-card--table': tableCard,\n        }, 'md-background--card', className)}\n        onMouseOver={this._handleMouseOver}\n        onMouseLeave={this._handleMouseLeave}\n        onTouchStart={this._handleTouchStart}\n      >\n        {parts}\n      </Paper>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport contextTypes from './contextTypes';\nimport Button from '../Buttons/Button';\nimport getCollapserStyles from '../utils/getCollapserStyles';\n\n/**\n * The CardExpander component is just a simple `IconButton` that\n * gets generated through the `Card`'s `contextTypes`. Props are not used\n * at all.\n *\n * Any component below a component that has this component inject into it\n * and has the prop `expandable={true}` will be toggleable when this is clicked.\n *\n * You can manually inject the `CardExpander` component yourself if you want to\n * use a component that is not a `CardActions` or a `CardTitle`.\n */\nexport default class CardExpander extends Component {\n  static contextTypes = contextTypes;\n\n  render() {\n    const {\n      expanded,\n      onExpandClick,\n      icon,\n      tooltipPosition,\n      tooltipLabel,\n      tooltipDelay,\n    } = this.context;\n\n    return (\n      <Button\n        icon\n        className={getCollapserStyles({ flipped: expanded }, 'md-collapser--card')}\n        onClick={onExpandClick}\n        tooltipLabel={tooltipLabel}\n        tooltipDelay={tooltipDelay}\n        tooltipPosition={tooltipPosition}\n        iconEl={icon}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport CardExpander from './CardExpander';\n\n/**\n * The `CardActions` component is used for adding actions on your card.\n * The actions should be `FlatButton`s or `IconButton`s.\n *\n * This component can act as a `CardExpander`.\n */\nexport default class CardActions extends Component {\n  static propTypes = {\n    /**\n     * Boolean if this component should act as an expander and inject the\n     * `CardExpander`.\n     */\n    expander: PropTypes.bool,\n\n    /**\n     * An optional className to apply to the actions container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An actions to display.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the actions should be centered.\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the actions should be stacked.\n     */\n    stacked: PropTypes.bool,\n\n    isExpander: deprecated(PropTypes.bool, 'Use `expander` instead'),\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      isExpander,\n      expander,\n      centered,\n      stacked,\n      ...props\n    } = this.props;\n    return (\n      <section\n        {...props}\n        className={cn('md-dialog-footer--card', {\n          'md-dialog-footer--inline': !stacked,\n          'md-dialog-footer--stacked': stacked,\n          'md-dialog-footer--card-centered': centered,\n        }, className)}\n      >\n        {children}\n        {isExpander || expander && <CardExpander />}\n      </section>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\nexport default class CardTitleBlock extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    title: PropTypes.node.isRequired,\n    subtitle: PropTypes.node,\n    avatar: PropTypes.bool,\n  };\n\n  render() {\n    const { id, subtitle, avatar } = this.props;\n    let { title } = this.props;\n    title = (\n      <h2\n        id={id}\n        className={cn('md-card-title--title', {\n          'md-card-title--large': !avatar,\n        }, themeColors({ text: true }))}\n        tabIndex={id ? -1 : null}\n      >\n        {title}\n      </h2>\n    );\n\n    if (!subtitle) {\n      return title;\n    }\n\n    return (\n      <div\n        className={cn('md-card-title--title-block', {\n          'md-card-title--one-line': avatar,\n        })}\n      >\n        {title}\n        <h3 className={`md-card-title--title ${themeColors({ hint: true })}`}>{subtitle}</h3>\n      </div>\n    );\n  }\n}\n","import React, { Component, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport CardTitleBlock from './CardTitleBlock';\nimport CardExpander from './CardExpander';\n\n/**\n * The `CardTitle` component is used to render a title in a Card along\n * with an optional subtitle or avatar.\n */\nexport default class CardTitle extends Component {\n  static propTypes = {\n    /**\n     * An optional id to add to the `title`.\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The title to display.\n     */\n    title: PropTypes.node.isRequired,\n\n    /**\n     * An optional subtitle to display.\n     */\n    subtitle: PropTypes.node,\n\n    /**\n     * Any additional children to display in the title block\n     * after the avatar, title, and subtitle.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional avatar to display before the title and subtitle.\n     */\n    avatar: PropTypes.element,\n\n    /**\n     * Boolean if the `CardTitle` component should inject a button\n     * for expanding all children below it.\n     */\n    expander: PropTypes.bool,\n\n    isExpander: deprecated(PropTypes.bool, 'Use `expander` instead'),\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      title,\n      subtitle,\n      expander,\n      isExpander,\n      children,\n      avatar: propAvatar, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    let { avatar } = this.props;\n    if (avatar) {\n      const { className: avatarClassName } = Children.only(avatar).props;\n      avatar = cloneElement(avatar, {\n        className: cn('md-avatar--card', avatarClassName),\n      });\n    }\n    return (\n      <div\n        {...props}\n        style={style}\n        className={cn('md-card-title', {\n          'md-card-title--primary': !avatar,\n        }, className)}\n      >\n        {avatar}\n        <CardTitleBlock id={id} title={title} subtitle={subtitle} avatar={!!avatar} />\n        {children}\n        {isExpander || expander && <CardExpander />}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `CardText` component is a simple wrapper for text or any content in a `Card`.\n * It really just adds correct padding and font color.\n */\nexport default class CardText extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The children to display.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The component to render as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * Boolean if this component should be expandable when there is a `CardExpander`\n     * above it in the `Card`.\n     */\n    expandable: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    component: 'section',\n  };\n\n  render() {\n    const {\n      component: Component,\n      className,\n      expandable, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    return <Component {...props} className={cn('md-card-text', className)} />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport FontIcon from '../FontIcons/FontIcon';\n\nexport default class Chip extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the chip's label.\n     */\n    labelStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the chip's label.\n     */\n    labelClassName: PropTypes.string,\n\n    /**\n     * Boolean if the `.md-chip-icon--rotate` style should be applied to the remove icon.\n     * The `.md-chip-icon--rotate` just rotates the icon 45 degrees.\n     */\n    rotateIcon: PropTypes.bool,\n\n    /**\n     * Any children used to display the remove icon when `removable`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The label to display on the chip.\n     */\n    label: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the chip is removable.\n     */\n    removable: PropTypes.bool,\n\n    /**\n     * An optional avatar to display on the chip.\n     */\n    avatar: PropTypes.element,\n\n    /**\n     * An optional function to call when the `click` event is triggered.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseenter` event is triggered.\n     */\n    onMouseEnter: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseleave` event is triggered.\n     */\n    onMouseLeave: PropTypes.func,\n\n    iconClassName: deprecated(PropTypes.string, 'Use the `children` prop as a single FontIcon or SVGIcon instead'),\n    remove: deprecated(PropTypes.func, 'Use `removable` and `onClick` instead'),\n    removeIconChildren: deprecated(PropTypes.node, 'Use `children` instead'),\n    removeIconClassName: deprecated(PropTypes.string, 'Use `children` prop as a single FontIcon or SVGIcon instead'),\n  };\n\n  static defaultProps = {\n    rotateIcon: true,\n    children: <FontIcon>add_circle</FontIcon>,\n  };\n\n  state = { hover: false };\n\n  _handleMouseEnter = (e) => {\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(e);\n    }\n\n    this.setState({ hover: true });\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    this.setState({ hover: false });\n  };\n\n  render() {\n    const { hover } = this.state;\n    const {\n      label,\n      className,\n      labelStyle,\n      labelClassName,\n      avatar,\n      children,\n      removable,\n      remove,\n      onClick,\n      rotateIcon,\n\n      /* eslint-disable no-unused-vars */\n      // deprecated\n      iconClassName,\n      removeIconChildren,\n      removeIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let icon;\n    if (removable || remove) {\n      const chipIconCN = cn('md-chip-icon', {\n        'md-chip-icon--rotate': rotateIcon,\n        'md-chip-text--hover': hover,\n      });\n\n      if (React.isValidElement(children)) {\n        icon = React.Children.only(children);\n        icon = React.cloneElement(icon, { className: cn(chipIconCN, icon.props.className) });\n      } else {\n        icon = (\n          <FontIcon className={chipIconCN} iconClassName={iconClassName}>\n            {children}\n          </FontIcon>\n        );\n      }\n    }\n\n    return (\n      <button\n        type=\"button\"\n        {...props}\n        className={cn('md-chip', {\n          'md-chip--avatar': avatar,\n          'md-chip--remove': removable,\n          'md-chip--hover': hover,\n        }, className)}\n        onClick={remove || onClick}\n        onMouseEnter={this._handleMouseEnter}\n        onMouseLeave={this._handleMouseLeave}\n      >\n        {avatar}\n        <span\n          style={labelStyle}\n          className={cn('md-chip-text', {\n            'md-chip-text--hover': hover,\n          }, labelClassName)}\n        >\n          {label}\n        </span>\n        {icon}\n      </button>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport default {\n  checkedIcon: PropTypes.element,\n  uncheckedIcon: PropTypes.element,\n  indeterminateIcon: PropTypes.element,\n  indeterminate: PropTypes.bool,\n  plain: PropTypes.bool,\n  selectableRows: PropTypes.bool.isRequired,\n  allSelected: PropTypes.bool.isRequired,\n  selectedRows: PropTypes.arrayOf(PropTypes.bool).isRequired,\n  createCheckbox: PropTypes.func.isRequired,\n  removeCheckbox: PropTypes.func.isRequired,\n  toggleSelectedRow: PropTypes.func.isRequired,\n  baseId: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  baseName: PropTypes.string,\n  checkboxHeaderLabel: PropTypes.string.isRequired,\n  checkboxLabelTemplate: PropTypes.string.isRequired,\n  fixedHeader: PropTypes.bool.isRequired,\n  fixedFooter: PropTypes.bool.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport requiredForA11yIfNot from '../utils/PropTypes/requiredForA11yIfNot';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport contextTypes from './contextTypes';\n\n/**\n * The `DataTable` component is used to manage the state of all rows.\n * This can either be a __plain__ table or a __data__ table.\n *\n * A __data__ table will include checkboxes on each row while a __plain__ table\n * will not.\n */\nexport default class DataTable extends PureComponent {\n  static propTypes = {\n    /**\n     * A base id to use for every checkbox or `EditDialogColumn` in the data table. This is\n     * required for a11y if the data table is not plain. It is recommended to always provide\n     * this prop if you are using any of the advanced table components to auto-generate unique\n     * ids for each element.\n     *\n     * @see {@link DataTables/EditDialogColumn}\n     * @see {@link DataTables/SelectFieldColumn}\n     * @see {@link DataTables/DropdownMenuColumn}\n     * @see {@link DataTables/MenuButtonColumn}\n     * @see {@link DataTables/TablePagination}\n     */\n    baseId: requiredForA11yIfNot(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'plain'),\n\n    /**\n     * Optional style to apply to the table. If the table is `responsive`, this will be applied to the surrounding `div`\n     * instead of the table itself. Use the `tableStyle` in this case.\n     *\n     * @see {@link #tableStyle}\n     * @see {@link #responsive}\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the table. If the table is `responsive`, this will be applied to the\n     * surrounding `div` instead of the table itself. Use the `tableClassName` in this case.\n     *\n     * @see {@link #tableClassName}\n     * @see {@link #responsive}\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `table` itself when the `responsive` prop is enabled. If the table is not\n     * `responsive`, use the `style` prop.\n     *\n     * @see {@link #style}\n     * @see {@link #responsive}\n     */\n    tableStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `table` itself when the `responsive` prop is enabled. If the table is not\n     * `responsive`, use the `className` prop.\n     *\n     * @see {@link #className}\n     * @see {@link #responsive}\n     */\n    tableClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the fixed table wrapper that appears when there is a fixed\n     * header or a fixed footer.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     * @see {@link #fixedWrapperClassName}\n     * @see {@link #fixedScrollWrapperStyle}\n     * @see {@link #fixedScrollWrapperClassName}\n     */\n    fixedWrapperStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the fixed table wrapper that appears when there is a fixed\n     * header or a fixed footer.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     * @see {@link #fixedWrapperStyle}\n     * @see {@link #fixedScrollWrapperStyle}\n     * @see {@link #fixedScrollWrapperClassName}\n     */\n    fixedWrapperClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the fixed table wrapper's scroll container that appears when there is a fixed\n     * header or a fixed footer.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     * @see {@link #fixedWrapperStyle}\n     * @see {@link #fixedWrapperClassName}\n     * @see {@link #fixedScrollWrapperStyle}\n     */\n    fixedScrollWrapperStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the fixed table wrapper's scroll container that appears when there is a fixed\n     * header or a fixed footer.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     * @see {@link #fixedWrapperStyle}\n     * @see {@link #fixedWrapperClassName}\n     * @see {@link #fixedScrollWrapperStyle}\n     */\n    fixedScrollWrapperClassName: PropTypes.string,\n\n    /**\n     * The table contents to display. This *should* be a list of `TableHeader` and `TableBody`\n     * components.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * An optional array of booleans denoting if a row is selected.\n     * This is an associative array so the index must match the row\n     * number in the `TableBody` component.\n     */\n    defaultSelectedRows: PropTypes.arrayOf(PropTypes.bool).isRequired,\n\n    /**\n     * Boolean if the table is responsive. This will wrap the table in a container\n     * that allows scrolling to the right if overflow exists.\n     */\n    responsive: PropTypes.bool.isRequired,\n\n    /**\n     * Boolean if this table should not include the checkboxes on each row.\n     * This really means that the entire table is unselectable and you wish\n     * to display as a normal table.\n     */\n    plain: PropTypes.bool,\n\n    /**\n     * The checked checkbox icon to display when a row is selected. This really defaults\n     * to the `checkedCheckboxIcon` prop from the `SelectionControl`.\n     *\n     * @see {@link SelectionControls/SelectionControl#checkedCheckboxIcon}\n     */\n    checkedIcon: PropTypes.element,\n\n    /**\n     * The unchecked checkbox icon to display when a row is selected. This really defaults\n     * to the `uncheckedCheckboxIcon` prop from the `SelectionControl`.\n     *\n     * @see {@link SelectionControls/SelectionControl#uncheckedCheckboxIcon}\n     */\n    uncheckedIcon: PropTypes.element,\n\n    /**\n     * An optional function to call when a non-plain data table has a row toggled. The callback\n     * will include:\n     * - the row id\n     * - boolean if the row is now checked\n     * - the total count of rows selected\n     * - the change event\n     *\n     * All rows will be toggled on or off when the row id is 0 and a `thead` exists in the table.\n     */\n    onRowToggle: invalidIf(PropTypes.func, 'plain'),\n\n    /**\n     * Boolean if the `DataTable` should inject checkboxes at the start of each row.\n     */\n    selectableRows: PropTypes.bool,\n\n    /**\n     * Boolean if the checkboxes in the table should also include an _indeterminate_ state.\n     * It will use the `indeterminateIconChildren` and `indeterminateIconClassName` when at least\n     * 1 row has been checked, but not all rows.\n     */\n    indeterminate: PropTypes.bool,\n\n    /**\n     * An optional icon to display when the selected state is indeterminate.\n     *\n     * @see {@link #indeterminate}\n     */\n    indeterminateIcon: PropTypes.element,\n\n    /**\n     * This is the aria-label to apply to the checkbox in the table's header. This\n     * is just used for accessibility since the checkboxes have no visible label.\n     */\n    checkboxHeaderLabel: PropTypes.string.isRequired,\n\n    /**\n     * This is the aria-label to apply to a checkbox in the table's body. This can either\n     * be a constant string that will replace `{{row}}` with the current row index, or\n     * a function that takes the row index and returns a string.\n     *\n     * ```js\n     * checkboxLabelTemplate={rowIndex => `Toggle row ${row}`}\n     * ```\n     */\n    checkboxLabelTemplate: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * Boolean if the table should include a fixed header. This will allow the `TableHeader` component\n     * to stay fixed to the top of the table while the `TableBody` scrolls horizontally.\n     *\n     * @see {@link #fixedFooter}\n     * @see [react-md-make-fixed-table](/components/data-tables?tab=2#mixin-react-md-make-fixed-table)\n     */\n    fixedHeader: PropTypes.bool,\n\n    /**\n     * Boolean if the table should include a fixed footer. This will allow the `TableFooter` component\n     * to stay fixed to the bottom of the table while the `TableBody` scrolls horizontally.\n     *\n     * @see {@link #fixedHeader}\n     * @see [react-md-make-fixed-table](/components/data-tables?tab=2#mixin-react-md-make-fixed-table)\n     */\n    fixedFooter: PropTypes.bool,\n\n    /**\n     * Either a boolean or a shape of booleans for if a divider should appear at the top or bottom of the table\n     * when there is a fixed header/footer. By default, this will automatically create dividers.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     */\n    fixedDividers: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.shape({\n        header: PropTypes.bool,\n        footer: PropTypes.bool,\n      }),\n    ]),\n\n    /**\n     * An optional height to set for a table with a fixed header and/or a fixed footer. It is recommended to use\n     * the related `react-md-make-fixed-table` mixin instead.\n     *\n     * @see {@link #headerHeight}\n     * @see {@link #footerHeight}\n     */\n    fixedHeight: PropTypes.number,\n\n    /**\n     * An optional width to set for a table with a fixed header and/or a fixed footer. It is recommended to use\n     * the related `react-md-make-fixed-table` mixin instead.\n     */\n    fixedWidth: PropTypes.number,\n\n    /**\n     * This is the height of the table's header columns. This should be equal to the `md-data-table-header-height`\n     * variable.\n     *\n     * @see [md-data-table-header-height](/components/data-tables?tab=2#variable-md-data-table-header-height)\n     * @see {@link #fixedHeight}\n     */\n    headerHeight: PropTypes.number.isRequired,\n\n    /**\n     * This is the height of the table's header columns. This should be equal to the `md-data-table-header-height`\n     * variable.\n     *\n     * @see [md-data-table-column-height](/components/data-tables?tab=2#variable-md-data-table-column-height)\n     * @see {@link #fixedHeight}\n     */\n    footerHeight: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the `<table>` element should always span the entire width of its container.\n     */\n    fullWidth: PropTypes.bool,\n\n    indeterminateIconChildren: deprecated(PropTypes.node, 'Use the `indeterminateIcon` prop instead'),\n    indeterminateIconClassName: deprecated(PropTypes.string, 'Use the `indeterminateIcon` prop instead'),\n    checkedIconClassName: deprecated(PropTypes.string, 'Use the `checkedIcon` prop instead'),\n    checkedIconChildren: deprecated(PropTypes.node, 'Use the `checkedIcon` prop instead'),\n    uncheckedIconClassName: deprecated(PropTypes.string, 'Use the `uncheckedIcon` prop instead'),\n    uncheckedIconChildren: deprecated(PropTypes.node, 'Use the `uncheckedIcon` prop instead'),\n  };\n\n  static defaultProps = {\n    indeterminateIcon: <FontIcon>indeterminate_check_box</FontIcon>,\n    defaultSelectedRows: [],\n    responsive: true,\n    selectableRows: true,\n    checkboxHeaderLabel: 'Toggle All Rows',\n    checkboxLabelTemplate: 'Toggle row {{row}}',\n    fixedHeader: false,\n    fixedFooter: false,\n    fixedDividers: true,\n    headerHeight: 56,\n    footerHeight: 48,\n    fullWidth: true,\n  };\n\n  static childContextTypes = contextTypes;\n\n  constructor(props) {\n    super();\n\n    const rows = props.defaultSelectedRows;\n    this.state = {\n      header: false,\n      indeterminate: props.indeterminate ? false : undefined,\n      allSelected: this._allSelected(rows),\n      selectedRows: rows,\n    };\n\n    this._removed = 0;\n    this._initial = true;\n  }\n\n  getChildContext() {\n    const {\n      checkedIcon,\n      uncheckedIcon,\n      indeterminateIcon,\n      plain,\n      baseId,\n      selectableRows,\n      checkboxHeaderLabel,\n      checkboxLabelTemplate,\n      fixedHeader,\n      fixedFooter,\n\n      // deprecated\n      checkedIconChildren,\n      checkedIconClassName,\n      uncheckedIconChildren,\n      uncheckedIconClassName,\n      indeterminateIconChildren,\n      indeterminateIconClassName,\n    } = this.props;\n\n    return {\n      checkedIcon: getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon),\n      uncheckedIcon: getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon),\n      indeterminateIcon: getDeprecatedIcon(indeterminateIconClassName, indeterminateIconChildren, indeterminateIcon),\n      indeterminate: this.state.indeterminate,\n      plain,\n      allSelected: this.state.allSelected,\n      selectedRows: this.state.selectedRows,\n      toggleSelectedRow: this._toggleSelectedRow,\n      createCheckbox: this._createCheckbox,\n      removeCheckbox: this._removeCheckbox,\n      baseId,\n      baseName: `${baseId}-control`,\n      selectableRows,\n      checkboxHeaderLabel,\n      checkboxLabelTemplate,\n      fixedHeader,\n      fixedFooter,\n    };\n  }\n\n  componentDidUpdate() {\n    this._removed = 0;\n    this._initial = false;\n  }\n\n  _allSelected(rows) {\n    let all = rows.length !== 0;\n    rows.some(checked => {\n      if (!checked) {\n        all = false;\n      }\n\n      return !all;\n    });\n\n    return all;\n  }\n\n  _setTable = (table) => {\n    this._table = table;\n  };\n\n  _createCheckbox = (index) => {\n    this.setState((state, props) => {\n      const selectedRows = state.selectedRows.slice();\n      // Only use the default selected rows prop on first mount. If other changes occur after,\n      // default to false.\n      const selected = this._initial && props.defaultSelectedRows[index] || false;\n      selectedRows.splice(index, 0, selected);\n      return { selectedRows, allSelected: this._allSelected(selectedRows) };\n    });\n  };\n\n  _removeCheckbox = (index) => {\n    this.setState((state) => {\n      // When multiple checkboxes are removed in a render cycle, they are removed in list order.\n      // So to keep the index correct while removing, need to keep subtract the provided index by\n      // the current number of removed elements. This value gets reset to 0 after a finished cycle.\n      const selectedRows = state.selectedRows.slice();\n\n      // This is really ugly. React 16 doesn't need to track all this while React 15 does\n      if (React.version && React.version.match(/^16\\./)) {\n        selectedRows.splice(index, 1);\n      } else {\n        selectedRows.splice(index - this._removed, 1);\n        this._removed += 1;\n      }\n      return { selectedRows, allSelected: this._allSelected(selectedRows) };\n    });\n  };\n\n  _toggleSelectedRow = (row, header, e) => {\n    let selectedRows;\n    let allSelected = this.state.allSelected;\n    let selectedCount = 0;\n    const i = this._table && this._table.querySelector('.md-table-header') ? row - 1 : row;\n    const { checked } = e.target;\n    if (header) {\n      selectedRows = this.state.selectedRows.map(() => checked);\n      allSelected = checked;\n      selectedCount = !checked ? 0 : selectedRows.length;\n    } else {\n      selectedRows = this.state.selectedRows.slice();\n      selectedRows[i] = !selectedRows[i];\n      selectedCount = selectedRows.filter(b => b).length;\n      allSelected = selectedCount === selectedRows.length;\n    }\n\n    if (this.props.onRowToggle) {\n      this.props.onRowToggle(row, checked, selectedCount, e);\n    }\n\n    const indeterminate = this.props.indeterminate && !allSelected && selectedCount > 0;\n\n    this.setState({ selectedRows, allSelected, indeterminate });\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      tableStyle,\n      tableClassName,\n      fixedWrapperStyle,\n      fixedWrapperClassName,\n      fixedScrollWrapperStyle,\n      fixedScrollWrapperClassName,\n      children,\n      plain,\n      responsive,\n      fixedHeader,\n      fixedFooter,\n      fixedDividers,\n      fixedHeight,\n      fixedWidth,\n      headerHeight,\n      footerHeight,\n      fullWidth,\n      /* eslint-disable no-unused-vars */\n      indeterminate,\n      indeterminateIcon,\n      checkedIcon,\n      uncheckedIcon,\n      defaultSelectedRows,\n      baseId,\n      onRowToggle,\n      selectableRows,\n      checkboxHeaderLabel,\n      checkboxLabelTemplate,\n\n      // deprecated\n      checkedIconChildren,\n      checkedIconClassName,\n      uncheckedIconChildren,\n      uncheckedIconClassName,\n      indeterminateIconChildren,\n      indeterminateIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const table = (\n      <table\n        {...props}\n        ref={this._setTable}\n        style={responsive ? tableStyle : style}\n        className={cn('md-data-table', {\n          'md-data-table--plain': plain,\n          'md-data-table--full-width': fullWidth,\n          [className]: !responsive && className,\n          [tableClassName]: responsive && tableClassName,\n        })}\n      >\n        {children}\n      </table>\n    );\n\n    if (!responsive) {\n      return table;\n    }\n\n    let content = table;\n    if (fixedHeader || fixedFooter) {\n      let height = fixedHeight;\n      if (fixedHeight) {\n        if (fixedHeader) {\n          height -= headerHeight;\n        }\n\n        if (fixedFooter) {\n          height -= footerHeight;\n        }\n      }\n\n      let borderTop = fixedHeader;\n      let borderBot = fixedFooter;\n      if (typeof fixedDividers === 'boolean') {\n        borderTop = borderTop && fixedDividers;\n        borderBot = borderBot && fixedDividers;\n      } else {\n        borderTop = borderTop && (typeof fixedDividers.header === 'undefined' || fixedDividers.header);\n        borderBot = borderBot && (typeof fixedDividers.footer === 'undefined' || fixedDividers.footer);\n      }\n\n      content = (\n        <div\n          style={fixedWrapperStyle}\n          className={cn('md-data-table__fixed-wrapper', {\n            'md-data-table__fixed-wrapper--header': fixedHeader,\n            'md-data-table__fixed-wrapper--footer': fixedFooter,\n          }, fixedWrapperClassName)}\n        >\n          <div\n            style={{ height, ...fixedScrollWrapperStyle }}\n            className={cn('md-data-table__scroll-wrapper', {\n              'md-divider-border': fixedDividers,\n              'md-divider-border--top': borderTop,\n              'md-divider-border--bottom': borderBot,\n            }, fixedScrollWrapperClassName)}\n          >\n            {table}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        style={{ width: fixedWidth, ...style }}\n        className={cn('md-data-table--responsive', {\n          'md-data-table--fixed': fixedHeader || fixedFooter,\n        }, className)}\n      >\n        {content}\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport contextTypes from './contextTypes';\n\nexport default { ...contextTypes, header: PropTypes.bool };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport contextTypes from './contextTypes';\nimport headerContextTypes from './headerContextTypes';\n\n/**\n * A `thead` component to use in the `DataTable` component. This\n * will automatically update the header row to check if it is selected\n * and inject a function to toggle all rows selected if the row is\n * uncontrolled. It will also automatically attempt to set the `TableColumn`\n * components to be the header type.\n */\nexport default class TableHeader extends Component {\n  static contextTypes = contextTypes;\n  static childContextTypes = headerContextTypes;\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the table header\n     */\n    className: PropTypes.string,\n\n    /**\n     * This should be a single `TableRow` component. The `custom` validation will\n     * warn you if there are more than one children given or none at all.\n     */\n    children: (props, propName, component) => {\n      try {\n        React.Children.only(props.children);\n        return null;\n      } catch (e) {\n        const amt = props.children ? props.children.length : 0;\n        return new Error(\n          `There must only be one child in a '${component}', but ${amt} were given.`\n        );\n      }\n    },\n  };\n\n  getChildContext() {\n    return {\n      ...this.context,\n      header: true,\n    };\n  }\n\n  render() {\n    const { className, children, ...props } = this.props;\n    const { allSelected } = this.context;\n    const header = React.Children.only(children);\n    const selected = typeof header.props.selected === 'undefined'\n      ? allSelected\n      : header.props.selected;\n\n    const row = React.cloneElement(header, { selected });\n\n    return (\n      <thead {...props} className={cn('md-table-header', className)}>\n        {row}\n      </thead>\n    );\n  }\n}\n","import React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport contextTypes from './contextTypes';\n\n/**\n * The `TableBody` component is used for managing the state of all\n * `TableRow` inside of it.\n */\nexport default class TableBody extends Component {\n  static propTypes = {\n    /**\n     * An optional style to apply to the tbody.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the tbody.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A list or a single item of `TableRow` components to render.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]),\n  };\n\n  static contextTypes = contextTypes;\n\n  render() {\n    const { children, className, ...props } = this.props;\n    const { selectedRows } = this.context;\n\n    const rows = children ? Children.map(Children.toArray(children), (row, i) => {\n      const uncontrolled = typeof row.props.selected === 'undefined';\n      return React.cloneElement(row, {\n        selected: uncontrolled ? selectedRows[i] : row.props.selected,\n      });\n    }) : null;\n\n    return (\n      <tbody {...props} className={cn('md-table-body', className)}>\n        {rows}\n      </tbody>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport headerContextTypes from './headerContextTypes';\nimport omit from '../utils/omit';\n\nconst rowContextTypes = omit({\n  ...headerContextTypes,\n  rowId: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n}, ['baseId']);\n\nexport default rowContextTypes;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\n\nconst DISABLED_INTERACTIONS = ['mouse'];\n\n/**\n * This is the `Thumb` for the switch. The `ink` in the Thumb is only active on touch and keyboard\n * interactions, so the `AccessibleFakeInkButton` does not work for this case.\n *\n * This component really just is used for custom inkage.\n */\nexport default class SwitchThumb extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'touch', 'mouse'])),\n  };\n\n  render() {\n    const { disabled, checked, className, disabledInteractions, ...props } = this.props;\n    return (\n      <AccessibleFakeInkedButton\n        {...props}\n        disabled={disabled}\n        disabledInteractions={disabledInteractions || DISABLED_INTERACTIONS}\n        inkContainerClassName=\"md-ink-container--2x\"\n        className={cn('md-switch-thumb', {\n          'md-switch-thumb--disabled': disabled,\n          'md-switch-thumb--on': checked,\n          'md-switch-thumb--off': !checked,\n        }, className)}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport SwitchThumb from './SwitchThumb';\n\nexport default class SwitchTrack extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    inkDisabled: PropTypes.bool,\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'touch', 'mouse'])),\n  };\n\n  render() {\n    const { disabled, checked, className, inkDisabled, disabledInteractions, ...props } = this.props;\n    return (\n      <div\n        {...props}\n        className={cn('md-switch-track', {\n          'md-pointer--hover': !disabled,\n          'md-switch-track--disabled': disabled,\n          'md-switch-track--on': checked,\n          'md-switch-track--off': !checked,\n        }, className)}\n      >\n        <SwitchThumb\n          disabled={disabled}\n          checked={checked}\n          onClick={props.onClick}\n          inkDisabled={inkDisabled}\n          disabledInteractions={disabledInteractions}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport { SPACE } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport themeColors from '../utils/themeColors';\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport capitalizeFirst from '../utils/StringUtils/capitalizeFirst';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport FontIcon from '../FontIcons/FontIcon';\nimport SwitchTrack from './SwitchTrack';\n\n/**\n * Prevents a second warning from appearing when using the deprecated or a11y required\n * props by using the `__superSecretProp`.... So secret!\n */\nfunction preventDouble(validator) {\n  return function validate(props, propName, ...others) {\n    let err = validator(props, propName, ...others);\n    if (err && props.__superSecreteProp) {\n      err = null;\n    }\n\n    return err;\n  };\n}\n\n/**\n * The `SelectionControl` component is used to render any of the `Radio`, `Checkbox`, or `Switch`\n * selection control type. This component might eventually replace all three since they use this\n * anyways. I am not sure yet though.\n */\nexport default class SelectionControl extends PureComponent {\n  static propTypes = {\n    /**\n     * An id to use with the selection control. This is used for accessibility and so that the label\n     * triggers the selection control toggle.\n     */\n    id: preventDouble(isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]))),\n\n    /**\n     * An optional label to apply to the checkbox when there is no visible label.\n     */\n    'aria-label': oneRequiredForA11y(PropTypes.string, 'label', 'aria-labelledby'),\n\n    /**\n     * An optional id that points to a label for the selection control when there is no visible label.\n     */\n    'aria-labelledby': PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the selection control's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the selection control's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The type of selection control to render.\n     */\n    type: PropTypes.oneOf(['checkbox', 'radio', 'switch']).isRequired,\n\n    /**\n     * A label to display with the selection control. This is required for accessibility and triggering\n     * the toggle.\n     */\n    label: PropTypes.node,\n\n    /**\n     * Boolean if the label should appear before the checkbox/radio icon or switch.\n     */\n    labelBefore: PropTypes.bool,\n\n    /**\n     * A name to use for the `SelectionControl`. This is required for accessibility. If the `type`\n     * is a `checkbox` and it is part of a group, it is recommended to make this a string ending\n     * in `[]` so that the value can be found from `document.querySelector('input[name=\"someName[]\"]').value`.\n     */\n    name: preventDouble(isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]))),\n\n    /**\n     * Boolean if the `Radio` is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * A function to call when the `SelectionControl` triggers the `change` event. The `onChange`\n     * callback will either include:\n     * - the currently changed radio's value\n     * - the next checked state for the `Switch` or `Checkbox`.\n     *\n     * as the first parameter followed by the change event.\n     *\n     * ```js\n     * // Radio\n     * onChange(changeEvent.target.value, changeEvent);\n     *\n     * // Checkbox or Switch\n     * onChange(changeEvent.target.checked, changeEvent);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keydown` event is triggered.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * The value for the `SelectionControl`. It is not required for `Checkbox` and `Switch`,\n     * but it is recommended.\n     */\n    value: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * A boolean if the `SelectionControl` is currently checked. This _really_ makes the `onChange`\n     * prop required, but since there are cases you might want to have the `onChange` listener on a\n     * `fieldset` or something above the component, it is never set to `required`. It will however\n     * prevent updates if there is no change listener.\n     */\n    checked: PropTypes.bool,\n\n    /**\n     * Boolean if the `Checkbox` or `Switch` are checked by default. This prop is invalid for a\n     * `Radio`.\n     */\n    defaultChecked: PropTypes.bool,\n\n    /**\n     * Boolean if the `SelectionControl` should be displayed inline instead of a block.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * The icon to use for a checked `checkbox` selection control.\n     */\n    checkedCheckboxIcon: PropTypes.element,\n\n    /**\n     * The icon to use for an unchecked `checkbox` selection control.\n     */\n    uncheckedCheckboxIcon: PropTypes.element,\n\n    /**\n     * The icon to use for a checked `radio` selection control.\n     */\n    checkedRadioIcon: PropTypes.element,\n\n    /**\n     * The icon to use for an unchecked `radio` selection control.\n     */\n    uncheckedRadioIcon: PropTypes.element,\n\n    /**\n     * An optional tooltip to render with the control. This is only used if you inject the\n     * tooltip manually yourself.\n     *\n     * `const TooltippedSelectionControl = injectTooltip(SelectionControl);`\n     */\n    tooltip: PropTypes.node,\n\n    /**\n     * Boolean if the ink should be disabled for radios or checkboxes.\n     *\n     * @see {@link Inks#inkDisabled}\n     */\n    inkDisabled: PropTypes.bool,\n\n    /**\n     * An optional list of ink interactions that should be disabled.\n     *\n     * @see {@link Inks#disabledInteractions}\n     */\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'touch', 'mouse'])),\n\n    /**\n     * An optional tab index to apply to the selection control.\n     */\n    tabIndex: PropTypes.number,\n\n    checkedIcon: preventDouble(deprecated(\n      PropTypes.node,\n      'Use the `checkedCheckboxIconChildren` and `checkedCheckboxIconClassName`  or the ' +\n      '`checkedRadioIconChildren` and `checkedRadioIconClassName` props instead'\n    )),\n    uncheckedIcon: preventDouble(deprecated(\n      PropTypes.node,\n      'Use the `uncheckedCheckboxIconChildren` and `uncheckedCheckboxIconClassName`  or the ' +\n      '`uncheckedRadioIconChildren` and `uncheckedRadioIconClassName` props instead'\n    )),\n    checkedCheckboxIconChildren: deprecated(PropTypes.node, 'Use the `checkedCheckboxIcon` prop instead'),\n    checkedCheckboxIconClassName: deprecated(PropTypes.string, 'Use the `checkedCheckboxIcon` prop instead'),\n    uncheckedCheckboxIconChildren: deprecated(PropTypes.node, 'Use the `uncheckedCheckboxIcon` prop instead'),\n    uncheckedCheckboxIconClassName: deprecated(PropTypes.string, 'Use the `uncheckedCheckboxIcon` prop instead'),\n    checkedRadioIconChildren: deprecated(PropTypes.node, 'Use the `checkedRadioIcon` prop instead'),\n    checkedRadioIconClassName: deprecated(PropTypes.string, 'Use the `checkedRadioIcon` prop instead'),\n    uncheckedRadioIconChildren: deprecated(PropTypes.node, 'Use the `uncheckedRadioIcon` prop instead'),\n    uncheckedRadioIconClassName: deprecated(PropTypes.string, 'Use the `uncheckedRadioIcon` prop instead'),\n\n    /* maybe removed once upgrade again? */\n    __superSecreteProp: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    checkedCheckboxIcon: <FontIcon>check_box</FontIcon>,\n    uncheckedCheckboxIcon: <FontIcon>check_box_outline_blank</FontIcon>,\n    checkedRadioIcon: <FontIcon>radio_button_checked</FontIcon>,\n    uncheckedRadioIcon: <FontIcon>radio_button_unchecked</FontIcon>,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    if (typeof props.checked === 'undefined') {\n      this.state.checked = !!props.defaultChecked;\n    }\n  }\n\n  /**\n   * Gets the current checked value from the selection control. This is used when you have\n   * an uncontrolled selection control and simply need the checked state from a ref callback.\n   *\n   * @return {boolean} the checked state for the selection control.\\\n   */\n  get checked() {\n    return getField(this.props, this.state, 'checked');\n  }\n\n  _setInput = (input) => {\n    this._input = input;\n  };\n\n  _setControl = (control) => {\n    this._control = control;\n  };\n\n  _setContainer = (container) => {\n    this._container = container;\n  };\n\n  _getIcon = () => {\n    const { checkedIcon, uncheckedIcon, type } = this.props;\n    const checked = getField(this.props, this.state, 'checked');\n    if (checkedIcon || uncheckedIcon) {\n      return checked ? checkedIcon : uncheckedIcon;\n    }\n\n    const prefix = `${checked ? '' : 'un'}checked${capitalizeFirst(type)}Icon`;\n    const iconClassName = this.props[`${prefix}ClassName`];\n    const children = this.props[`${prefix}Children`];\n\n    if (iconClassName || children) {\n      return <FontIcon iconClassName={iconClassName} inherit>{children}</FontIcon>;\n    }\n\n    const icon = this.props[prefix];\n    return icon ? React.cloneElement(icon, { inherit: true }) : null;\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    const key = e.which || e.keyCode;\n    if (key === SPACE) {\n      this._input.click();\n    }\n  }\n\n  _handleChange = (e) => {\n    const { type, onChange } = this.props;\n    const checked = !getField(this.props, this.state, 'checked');\n    if (onChange) {\n      onChange(type === 'radio' ? e.target.value : checked, e);\n    }\n\n    if (typeof this.props.checked === 'undefined') {\n      this.setState({ checked });\n    }\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      inline,\n      type,\n      name,\n      value,\n      disabled,\n      labelBefore,\n      tabIndex,\n      inkDisabled,\n      disabledInteractions,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      /* eslint-disable no-unused-vars */\n      label: propLabel,\n      checked: propChildren,\n      onChange,\n      tooltip,\n      checkedCheckboxIcon,\n      uncheckedCheckboxIcon,\n      checkedRadioIcon,\n      uncheckedRadioIcon,\n      __superSecreteProp,\n\n      // deprecated\n      checkedIcon,\n      uncheckedIcon,\n      checkedRadioIconChildren,\n      checkedRadioIconClassName,\n      uncheckedRadioIconChildren,\n      uncheckedRadioIconClassName,\n      checkedCheckboxIconChildren,\n      checkedCheckboxIconClassName,\n      uncheckedCheckboxIconChildren,\n      uncheckedCheckboxIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const checked = getField(this.props, this.state, 'checked');\n    const isSwitch = type === 'switch';\n    const label = this.props.label && <span>{this.props.label}</span>;\n\n    let control;\n    if (isSwitch) {\n      control = <SwitchTrack disabled={disabled} checked={checked} />;\n    } else {\n      control = (\n        <AccessibleFakeInkedButton\n          inkDisabled={inkDisabled}\n          disabledInteractions={disabledInteractions}\n          role={type}\n          className={cn('md-selection-control-toggle md-btn md-btn--icon', themeColors({\n            disabled,\n            hint: !checked,\n            secondary: checked,\n          }))}\n          aria-checked={checked}\n          tabIndex={tabIndex}\n          disabled={disabled}\n        >\n          {tooltip}\n          {this._getIcon()}\n        </AccessibleFakeInkedButton>\n      );\n    }\n\n\n    return (\n      <div\n        {...props}\n        style={style}\n        className={cn('md-selection-control-container', {\n          'md-selection-control-container--inline': inline,\n          'md-switch-container': isSwitch,\n        }, className)}\n        onKeyDown={this._handleKeyDown}\n      >\n        <input\n          ref={this._setInput}\n          id={id}\n          type={isSwitch ? 'checkbox' : type}\n          checked={checked}\n          onChange={this._handleChange}\n          disabled={disabled}\n          className=\"md-selection-control-input\"\n          name={name}\n          value={value}\n          aria-hidden\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n        />\n        <label\n          htmlFor={id}\n          className={cn('md-selection-control-label', {\n            'md-pointer--hover': !disabled,\n          }, themeColors({ disabled, text: !disabled }))}\n        >\n          {labelBefore && label}\n          {control}\n          {!labelBefore && label}\n        </label>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport SelectionControl from '../SelectionControls/SelectionControl';\n\nimport findTable from './findTable';\n\nexport default class TableCheckbox extends Component {\n  static propTypes = {\n    index: PropTypes.number,\n    checked: PropTypes.bool,\n  };\n\n  static contextTypes = {\n    rowId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    baseName: PropTypes.string.isRequired,\n    indeterminate: PropTypes.bool,\n    checkedIcon: PropTypes.element,\n    uncheckedIcon: PropTypes.element,\n    indeterminateIcon: PropTypes.element,\n    checkboxHeaderLabel: PropTypes.string.isRequired,\n    checkboxLabelTemplate: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n    createCheckbox: PropTypes.func.isRequired,\n    removeCheckbox: PropTypes.func.isRequired,\n    header: PropTypes.bool,\n    footer: PropTypes.bool,\n    fixedHeader: PropTypes.bool.isRequired,\n    fixedFooter: PropTypes.bool.isRequired,\n  };\n\n  _td = null;\n  _header = false;\n\n  _handleMount = (td) => {\n    if (td) {\n      const header = findTable(td).querySelector('thead');\n      const index = td.parentNode.rowIndex - (header ? 1 : 0);\n\n      if (td.parentNode.parentNode.tagName === 'TBODY') {\n        this.context.createCheckbox(index);\n      }\n      this._td = td;\n      this._header = header;\n    } else if (this._td) {\n      const index = this._td.parentNode.rowIndex;\n      this.context.removeCheckbox(index - (this._header ? 1 : 0));\n      this._td = null;\n      this._header = false;\n    }\n  };\n\n  render() {\n    const { checked, index, ...props } = this.props;\n    const {\n      checkedIcon,\n      uncheckedIcon,\n      indeterminateIcon,\n      indeterminate,\n      header,\n      footer,\n      rowId,\n      baseName,\n      checkboxHeaderLabel,\n      checkboxLabelTemplate,\n    } = this.context;\n\n    const Cell = header ? 'th' : 'td';\n    let label;\n    if (header) {\n      label = checkboxHeaderLabel;\n    } else if (typeof checkboxLabelTemplate === 'function') {\n      label = checkboxLabelTemplate(index);\n    } else {\n      label = checkboxLabelTemplate.replace(/{{row}}/g, index);\n    }\n\n    let content = (\n      <SelectionControl\n        {...props}\n        id={rowId}\n        name={`${baseName}-checkbox`}\n        type=\"checkbox\"\n        checked={checked}\n        checkedCheckboxIcon={checkedIcon}\n        uncheckedCheckboxIcon={header && indeterminate ? indeterminateIcon : uncheckedIcon}\n        aria-label={label}\n      />\n    );\n    const fixedHeader = header && this.context.fixedHeader;\n    const fixedFooter = footer && this.context.fixedFooter;\n\n    if (fixedHeader) {\n      content = (\n        <div\n          className={cn('md-table-column__fixed', {\n            'md-table-column__fixed--header': fixedHeader,\n            'md-table-column__fixed--footer': fixedFooter,\n          })}\n        >\n          {React.cloneElement(content, {\n            className: cn({\n              'md-table-checkbox--header': header,\n              'md-table-checkbox--footer': footer,\n            }),\n          })}\n        </div>\n      );\n    }\n\n\n    return (\n      <Cell\n        className={cn('md-table-checkbox', {\n          'md-table-column--fixed': fixedHeader,\n        })}\n        scope={header ? 'col' : undefined}\n        ref={this._handleMount}\n      >\n        {content}\n      </Cell>\n    );\n  }\n}\n","import React, { Component, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport cn from 'classnames';\n\nimport getField from '../utils/getField';\nimport headerContextTypes from './headerContextTypes';\nimport rowContextTypes from './rowContextTypes';\nimport TableCheckbox from './TableCheckbox';\n\n/**\n * A component for displaying a row in a `DataTable`. This will\n * automatically add a `Checkbox` component to the row if it is not\n * a `plain` table.\n */\nexport default class TableRow extends Component {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the row.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A single or list of `TableColumn` to display in the table.\n     *\n     * > The specs \"require\" at least 3 columns for a non-plain data table, but that isn't\n     * strictly enforced here.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]).isRequired,\n\n    /**\n     * An optional onClick function to call when a row is clicked.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * A function to call when the checkbox is clicked. This\n     * function will will be called with `(rowIndex, checked, event)`.\n     * The `TableBody` and `TableHeader` components will automatically\n     * merge in a function to toggle the checkbox.\n     */\n    onCheckboxClick: PropTypes.func,\n\n    /**\n     * An optional function to call onMouseOver.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call onMouseLeave.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * Boolean if the row is currently selected. If this value will be\n     * injected by the `TableHeader` or `TableBody` component.\n     */\n    selected: PropTypes.bool,\n\n    /**\n     * Boolean if the current row is selectable. This value will take precedence over anything inherited\n     * by the `DataTable`.\n     */\n    selectable: PropTypes.bool,\n\n    autoAdjust: deprecated(PropTypes.bool, 'Manually specify `grow` on one of the columns instead'),\n  };\n\n  static contextTypes = headerContextTypes;\n  static childContextTypes = rowContextTypes;\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = { hover: false };\n  }\n\n  getChildContext() {\n    const { baseId, ...context } = this.context;\n    const id = `${baseId}-${this._row ? this._row.rowIndex : null}`;\n    return {\n      ...context,\n      rowId: context.header ? `${baseId}-toggle-all` : id,\n    };\n  }\n\n  /**\n   * Need to ignore adding the hover state if the mouse is over a menu/menu item\n   * or the edit dialog is open.\n   *\n   * @param {Function} classList - the classList to use for checking cn\n   * @return {Boolean} true if the hover state should be ignored for this classList\n   */\n  _ignoreHoverState(classList) {\n    return classList.contains('md-list--menu') || classList.contains('md-edit-dialog');\n  }\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (this.context.header) {\n      return;\n    }\n\n    let target = e.target;\n    while (target && target.parentNode) {\n      if (target.classList && this._ignoreHoverState(target.classList)) {\n        this.setState({ hover: false });\n        return;\n      }\n\n      target = target.parentNode;\n    }\n\n    this.setState({ hover: true });\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (this.context.header) {\n      return;\n    }\n\n    this.setState({ hover: false });\n  };\n\n  _handleCheckboxClick = (checked, e) => {\n    const { rowIndex } = this._row;\n    if (this.props.onCheckboxClick) {\n      this.props.onCheckboxClick(rowIndex, checked, e);\n    }\n\n    this.context.toggleSelectedRow(rowIndex, this.context.header, e);\n  };\n\n  _setRow = (row) => {\n    this._row = row;\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      selected,\n      selectable,\n      /* eslint-disable no-unused-vars */\n      onCheckboxClick,\n      // deprecated\n      autoAdjust,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const { hover } = this.state;\n\n    let checkbox;\n    if (typeof selectable !== 'undefined' ? selectable : (!this.context.plain && this.context.selectableRows)) {\n      checkbox = (\n        <TableCheckbox\n          key=\"checkbox\"\n          checked={selected}\n          onChange={this._handleCheckboxClick}\n          index={this._row ? this._row.rowIndex : null}\n        />\n      );\n    }\n\n    const length = Children.count(children) - 1;\n    const columns = Children.map(Children.toArray(children), (col, i) => {\n      let adjusted = col.props.adjusted;\n      if (typeof adjusted === 'undefined') {\n        adjusted = i === length ? false : undefined;\n      }\n\n      return cloneElement(col, {\n        cellIndex: i + (checkbox ? 1 : 0),\n        header: getField(col.props, this.context, 'header'),\n        adjusted,\n      });\n    });\n\n    return (\n      <tr\n        {...props}\n        ref={this._setRow}\n        className={cn('md-table-row', className, {\n          'md-table-row--hover': hover,\n          'md-table-row--active': !this.context.header && selected,\n        })}\n        onMouseOver={this._handleMouseOver}\n        onMouseLeave={this._handleMouseLeave}\n      >\n        {checkbox}\n        {columns}\n      </tr>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport themeColors from '../utils/themeColors';\nimport getCollapserStyles from '../utils/getCollapserStyles';\nimport getField from '../utils/getField';\nimport injectTooltip from '../Tooltips/injectTooltip';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport IconSeparator from '../Helpers/IconSeparator';\n\nconst CELL_SCOPE = {\n  header: {\n    scope: 'col',\n  },\n  noop: {},\n};\n\n/**\n * A column in a table. This is either the `th` or `td` component.\n */\nclass TableColumn extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * The optional className for the table column\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the surrounding div when the DataTable has been\n     * set to include a fixed header or a fixed footer.\n     */\n    fixedStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the surrounding div when the DataTable has been\n     * set to include a fixed header or a fixed footer.\n     */\n    fixedClassName: PropTypes.string,\n\n    /**\n     * The children to display in the column.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the column is currently sorted. If this prop is not `undefined`,\n     * it will add the sort icon unto this column. You will also need to use the\n     * `onClick` function to toggle the `sorted` prop as well as handling the sorting\n     * of data.\n     *\n     * This value should really only be set in the `TableHeader` component.\n     */\n    sorted: PropTypes.bool,\n\n    /**\n     * The icon to show when a column is sortable.\n     */\n    sortIcon: PropTypes.element,\n\n    /**\n     * Boolean if the sortIcon should appear before the text in the column.\n     */\n    sortIconBefore: PropTypes.bool,\n\n    /**\n     * A boolean if the column has numeric data. It will right-align the data.\n     */\n    numeric: PropTypes.bool,\n\n    /**\n     * Boolean if the table column should gain the `.md-data-table--adjusted` class name. By default,\n     * every column will gain this class name unless it is an `EditDialogColumn`, a `SelectFieldColumn`,\n     * or the `grow` prop is enabled.\n     */\n    adjusted: PropTypes.bool,\n\n    /**\n     * Boolean if the column should expand to fill any remaining width in the container. There should\n     * really only be one column with the `grow` prop enabled. In addition, it should really only be\n     * applied to one of the columns in the TableHeader.\n     */\n    grow: PropTypes.bool,\n\n    /**\n     * Boolean if this column is the `th` for a column of `SelectFieldColumn`. This will apply\n     * additional styling to the column to position with the select field.\n     */\n    selectColumnHeader: PropTypes.bool,\n\n    /**\n     * Boolean if this is a `th` component. This value **should** be set\n     * automatically for you if it is in the `TableHeader` component.\n     */\n    header: PropTypes.bool.isRequired,\n\n    /**\n     * The optional tooltip to render on hover.\n     */\n    tooltipLabel: PropTypes.node,\n\n    /**\n     * An optional delay to apply to the tooltip before it appears.\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position of the tooltip.\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * The injected tooltip.\n     * @access private\n     */\n    tooltip: PropTypes.node,\n\n    /**\n     * Boolean if the `TableColumn` should gain the `plain` styles. This means that the text\n     * in the column can wrap and there is no height limit enforced with some additional padding.\n     */\n    plain: PropTypes.bool,\n\n    /**\n     * An optional scope to apply to the table column. If omitted, the scope will be set to\n     * `'col'` if inside of the `TableHeader` component. This is really only needed for\n     * header columns.\n     */\n    scope: PropTypes.oneOf(['row', 'col']),\n\n    /**\n     * This is injected by the `TableRow` component to help with generating ids\n     * @access private\n     */\n    cellIndex: PropTypes.number,\n    sortIconChildren: deprecated(PropTypes.node, 'Use the `sortIcon` prop instead'),\n    sortIconClassName: deprecated(PropTypes.string, 'Use the `sortIcon` prop instead'),\n  };\n\n  static defaultProps = {\n    header: false,\n    adjusted: true,\n    sortIcon: <FontIcon>arrow_upward</FontIcon>,\n    sortIconBefore: true,\n  };\n\n  static contextTypes = {\n    plain: PropTypes.bool,\n    footer: PropTypes.bool,\n    fixedHeader: PropTypes.bool,\n    fixedFooter: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      className,\n      fixedStyle,\n      fixedClassName,\n      numeric,\n      header,\n      children,\n      sorted,\n      sortIcon,\n      tooltip,\n      selectColumnHeader,\n      adjusted,\n      grow,\n      sortIconBefore,\n      /* eslint-disable no-unused-vars */\n      plain: propPlain,\n      scope: propScope,\n      cellIndex,\n\n      // deprecated\n      sortIconChildren,\n      sortIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const sortable = typeof sorted === 'boolean';\n    const plain = getField(this.props, this.context, 'plain');\n    const Component = header ? 'th' : 'td';\n    const scope = getField(this.props, CELL_SCOPE[header ? 'header' : 'noop'], 'scope');\n\n    let displayedChildren = children;\n    let ariaSort;\n    if (sortable) {\n      ariaSort = sorted ? 'ascending' : 'descending';\n      const icon = React.Children.only(getDeprecatedIcon(sortIconClassName, sortIconChildren, sortIcon));\n      displayedChildren = (\n        <IconSeparator label={children} iconBefore={sortIconBefore}>\n          {React.cloneElement(icon, { className: getCollapserStyles({ flipped: !sorted }, icon.props.className) })}\n        </IconSeparator>\n      );\n    }\n\n    const fixedHeader = header && this.context.fixedHeader;\n    const fixedFooter = this.context.footer && this.context.fixedFooter;\n    const fixed = fixedHeader || fixedFooter;\n    const baseClassNames = themeColors({ text: !header, hint: header }, {\n      'md-table-column--relative': tooltip,\n      'md-table-column--select-field': selectColumnHeader,\n    });\n\n    const mergedClassNames = cn({\n      'md-table-column--header': header,\n      'md-table-column--data': !header && !plain,\n      'md-table-column--plain': !header && plain,\n      'md-table-column--adjusted': adjusted && !grow && !selectColumnHeader,\n      'md-table-column--grow': grow,\n      'md-table-column--sortable md-pointer--hover': sortable,\n      [baseClassNames]: !fixed,\n    }, className);\n\n    if (fixed) {\n      displayedChildren = (\n        <div\n          className={cn('md-table-column__fixed', {\n            'md-table-column__fixed--header': fixedHeader,\n            'md-table-column__fixed--footer': fixedFooter,\n          })}\n        >\n          <div\n            style={fixedStyle}\n            className={cn(baseClassNames, mergedClassNames, 'md-table-column__fixed--flex', {\n              'md-table-column__fixed--flex-right': numeric,\n            }, fixedClassName)}\n          >\n            {tooltip}\n            {displayedChildren}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Component\n        aria-sort={ariaSort}\n        {...props}\n        scope={scope}\n        className={cn('md-table-column', {\n          'md-table-column--fixed': fixed,\n          'md-text-left': !numeric && !fixed,\n          'md-text-right': numeric && !fixed,\n        }, mergedClassNames)}\n      >\n        {!fixedHeader && !fixedFooter && tooltip}\n        {displayedChildren}\n      </Component>\n    );\n  }\n}\n\nexport default injectTooltip(TableColumn);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport themeColors from '../utils/themeColors';\nimport FontIcon from '../FontIcons/FontIcon';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport Paper from '../Papers/Paper';\nimport TextFieldDivider from '../TextFields/TextFieldDivider';\n\nexport default class SelectFieldInput extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    disabled: PropTypes.bool,\n    required: PropTypes.bool,\n    label: PropTypes.node,\n    placeholder: PropTypes.string,\n    active: PropTypes.bool,\n    activeLabel: PropTypes.node,\n    below: PropTypes.bool,\n    error: PropTypes.bool,\n    toolbar: PropTypes.bool,\n    dropdownIcon: PropTypes.element,\n    iconClassName: PropTypes.string,\n    iconChildren: PropTypes.node,\n    transitionName: PropTypes.string.isRequired,\n    transitionTime: PropTypes.number.isRequired,\n    lineDirection: TextFieldDivider.propTypes.lineDirection,\n  };\n\n  static defaultProps = {\n    transitionName: 'md-drop',\n    transitionTime: 300,\n  };\n\n  state = { transition: null };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value) {\n      this._transitionNewValue();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  _timeout = null;\n  _transitionNewValue = () => {\n    const { transitionTime, transitionName } = this.props;\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n        this.setState({ transition: null });\n      }, transitionTime);\n\n      this.setState({ transition: `${this.state.transition} ${transitionName}-enter-active` });\n    }, TICK);\n\n    this.setState({ transition: `${transitionName}-enter` });\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      name,\n      value,\n      label,\n      placeholder,\n      active,\n      activeLabel,\n      error,\n      disabled,\n      required,\n      toolbar,\n      below,\n      lineDirection,\n      dropdownIcon,\n\n      // deprecated\n      iconChildren,\n      iconClassName,\n      /* eslint-disable no-unused-vars */\n      transitionName,\n      transitionTime,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const { transition } = this.state;\n\n    let divider;\n    if (!below && !toolbar) {\n      divider = (\n        <TextFieldDivider\n          key=\"text-divider\"\n          active={active}\n          error={error}\n          lineDirection={lineDirection}\n          className=\"md-divider--select-field\"\n        />\n      );\n    }\n\n    let visibleLabel = activeLabel;\n    if (!activeLabel && activeLabel !== 0) {\n      visibleLabel = ((!label || active) && placeholder) || '';\n    }\n\n    const labelActive = !!activeLabel || activeLabel === 0;\n\n    let icon = dropdownIcon;\n    if (iconClassName || iconChildren) {\n      icon = <FontIcon iconClassName={iconClassName}>{iconChildren}</FontIcon>;\n    }\n    icon = React.cloneElement(icon, { disabled });\n\n    return (\n      <AccessibleFakeInkedButton\n        {...props}\n        id={`${id}-toggle`}\n        role=\"listbox\"\n        disabled={disabled}\n        component={Paper}\n        zDepth={below && active ? 1 : 0}\n        inkDisabled={!below}\n        className={cn('md-select-field', themeColors({\n          disabled,\n          hint: !labelActive && placeholder,\n          text: labelActive,\n        }), className)}\n      >\n        <IconSeparator\n          label={visibleLabel}\n          labelClassName={transition}\n          className={cn('md-text-field', {\n            'md-text-field--margin': !below && !label,\n            'md-text-field--floating-margin': label,\n            'md-text-field--toolbar': toolbar && !below,\n            'md-select-field--text-field': !below,\n            'md-select-field--btn': below,\n          })}\n        >\n          {icon}\n        </IconSeparator>\n        {divider}\n        <input\n          key=\"value\"\n          type=\"hidden\"\n          id={id}\n          name={name}\n          value={value}\n          required={required}\n          disabled={disabled}\n        />\n      </AccessibleFakeInkedButton>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport addSuffix from '../utils/StringUtils/addSuffix';\nimport isValued from '../utils/isValued';\nimport FloatingLabel from '../TextFields/FloatingLabel';\nimport TextFieldMessage from '../TextFields/TextFieldMessage';\n\nimport SelectFieldInput from './SelectFieldInput';\n\nexport default class SelectFieldToggle extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    inputStyle: PropTypes.object,\n    inputClassName: PropTypes.string,\n    activeLabel: PropTypes.node,\n    value: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    placeholder: PropTypes.string,\n    active: PropTypes.bool,\n    error: PropTypes.bool,\n    errorText: PropTypes.node,\n    helpText: PropTypes.node,\n    helpOnFocus: PropTypes.bool,\n    below: PropTypes.bool,\n    visible: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      inputStyle,\n      inputClassName,\n      required,\n      disabled,\n      active,\n      error,\n      errorText,\n      helpText,\n      helpOnFocus,\n      visible,\n      activeLabel,\n      /* eslint-disable no-unused-vars */\n      label: propLabel,\n      placeholder: propPlaceholder,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { label, placeholder } = this.props;\n    if (required) {\n      if (label) {\n        label = addSuffix(label, '*');\n      }\n\n      if (placeholder && !label) {\n        placeholder = addSuffix(placeholder, '*');\n      }\n    }\n\n    return (\n      <div style={style} className={cn('md-select-field__toggle', className)}>\n        <FloatingLabel\n          label={label}\n          htmlFor={id}\n          active={active || visible}\n          error={error}\n          floating={isValued(activeLabel) || active || visible}\n          disabled={disabled}\n        />\n        <SelectFieldInput\n          {...props}\n          id={id}\n          style={inputStyle}\n          className={inputClassName}\n          label={label}\n          placeholder={placeholder}\n          activeLabel={activeLabel}\n          active={active}\n          error={error}\n          disabled={disabled}\n        />\n        <TextFieldMessage\n          active={active || visible}\n          error={error}\n          errorText={errorText}\n          helpText={helpText}\n          helpOnFocus={helpOnFocus}\n          leftIcon={false}\n          rightIcon={false}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport { UP, DOWN, ESC, TAB, ZERO, NINE, KEYPAD_ZERO, KEYPAD_NINE } from '../constants/keyCodes';\nimport omit from '../utils/omit';\nimport isValued from '../utils/isValued';\nimport getField from '../utils/getField';\nimport isBetween from '../utils/NumberUtils/isBetween';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport controlled from '../utils/PropTypes/controlled';\nimport FontIcon from '../FontIcons/FontIcon';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Menu from '../Menus/Menu';\nimport ListItem from '../Lists/ListItem';\n\nimport SelectFieldToggle from './SelectFieldToggle';\n\nconst MOBILE_LIST_PADDING = 8;\nconst ARIA_ACTIVE = 'aria-activedescendant';\n\nexport default class SelectField extends PureComponent {\n  static HorizontalAnchors = Menu.HorizontalAnchors;\n  static VerticalAnchors = Menu.VerticalAnchors;\n  static Positions = Menu.Positions;\n\n  static propTypes = {\n    /**\n     * An id to give the select field. This is required for accessibility.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional name to give to the select field.\n     */\n    name: PropTypes.string,\n\n    /**\n     * An optional id to provide to the select field's menu. If this is omitted,\n     * it will default to `${id}-menu`.\n     */\n    menuId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the select field's list.\n     *\n     * @see {@link #menuId}\n     * @see {@link Menus/Menu#menuId}\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the select field's container (the menu).\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field's container (the menu).\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the menu's list.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the menu's list.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the select field's toggle.\n     */\n    toggleStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field's toggle.\n     */\n    toggleClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `AccessibleFakeInkedButton` that is the trigger\n     * for the select field.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `AccessibleFakeInkedButton` that is the trigger\n     * for the select field.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * Boolean if the select field should be have the menu's list visible by default.\n     */\n    defaultVisible: PropTypes.bool.isRequired,\n\n    /**\n     * Boolean if the select field should have the menu's list visible. This will make\n     * the select field controlled and require the `onVisibilityChange` prop to be defined,\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the select field's menu has it's visibility changed. The callback\n     * will include the next visible state and the event that triggered it.\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * A list of `number`, `string`, or `object` that should be used to create `ListItem`\n     * in the menu's list. When it is an `object`, it will use the `itemLabel` prop as the\n     * `primaryText` and use the value of `itemValue`.\n     *\n     * @see {@link #itemLabel}\n     * @see {@link #itemValue}\n     */\n    menuItems: PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.object,\n      PropTypes.element,\n    ])).isRequired,\n\n    /**\n     * The amount of time that a list of letters should be used when finding a menu item\n     * while typing. Since a user can select items by typing multiple letters in a row,\n     * this will be used as the timeout for clearing those letters.\n     *\n     * For example:\n     * - User types `g`\n     *\n     * Full match is now `'g'`.\n     *\n     * - User delays 200ms and types `u`\n     *\n     * Full match is now `'gu'`\n     *\n     * - User delays 1000ms and types `a`.\n     *\n     * Full match is now `'a'`\n     */\n    keyboardMatchingTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The key to use for extracting a menu item's label if the menu item is an object.\n     *\n     * Example:\n     *\n     * ```js\n     * const item = { something: 'My Label', somethingElse: 'value' };\n     * const itemLabel = 'something';\n     * const itemValue = 'somethingElse';\n     * ```\n     */\n    itemLabel: PropTypes.string.isRequired,\n\n    /**\n     * The key to use for extracting a menu item's value if the menu item is an object.\n     *\n     * Example:\n     *\n     * ```js\n     * const item = { something: 'My Label', somethingElse: 'value' };\n     * const itemLabel = 'something';\n     * const itemValue = 'somethingElse';\n     * ```\n     */\n    itemValue: PropTypes.string.isRequired,\n\n    /**\n     * The key to use for extracting a menu item's function\n     * to get additional `ListItem` props if the menu item is an object.\n     *\n     * Example:\n     *\n     * ```js\n     * const item = { something: 'My Label', addProps: ({active}) => active ? {secondaryText: 'some text'} : null };\n     * const itemLabel = 'something';\n     * const itemProps = 'addProps';\n     * ```\n     *\n     * @see {@link #getItemProps}\n     */\n    itemProps: PropTypes.string.isRequired,\n\n    /**\n     * An optional function to get additional `ListItem` props if the menu item is an object.\n     *\n     * An object with the following fields will be passed into the function:\n     * - `index` - item's index\n     * - `active` - whether item is active\n     * - `disabled` - whether item is disabled\n     * - `itemValue` - item's value\n     * - `value` - current list value\n     * - `props` - default `ListItem` props\n     * - `item` - source item's data\n     * - `field` - reference to the component instance\n     */\n    getItemProps: PropTypes.func,\n\n    /**\n     * The default value to use for the select field. If this is set, it should either match\n     * one of the `number` or `string` in your `menuItems` list or be the empty string. If\n     * the `menuItems` is a list of `object`, this value should match one of the menu item's\n     * `itemValue` or be the empty string.\n     *\n     * ```js\n     * const menuItems = [{ label: 'Something': value: 0 }, { label: 'Something else', value: 1 }];\n     *\n     * // both valid\n     * defaultValue={0}\n     * defaultValue=\"\"\n     * ```\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * The value to use for the select field. If this is defined, it becomes a controlled component\n     * and requires the `onChange` prop to be defined. See the `defaultValue` for more behavior info.\n     *\n     * @see {@link #defaultValue}\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'onChange', 'defaultValue'),\n\n    /**\n     * An optional function to call when the select field's value has been changed either when the user\n     * has click/touched/keyboard selected a value in the list, or the user has selected a value by typing\n     * in the select field while the menu's list is closed.\n     *\n     * The callback will include the next text field value, the selected item's index, the event that\n     * triggered the change, and the id, name, and value of the select field.\n     *\n     * ```js\n     * onChange(value, index, event, { id, name, value });\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional label to use with the select field. This will be a floating label as seen on the text field.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional placeholder to use in the select field. This will only appear when no value has been selected.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * Boolean if the select field should be disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the select field is required. This will update the label and placeholder to include a `*` suffix.\n     */\n    required: PropTypes.bool,\n\n    /**\n     * Boolean if the select field is considered to be in an `error` state.\n     *\n     * @see {@link TextFields/TextField#error}\n     */\n    error: PropTypes.bool,\n\n    /**\n     * An optional text to display when the text select field is in an error state.\n     *\n     * @see {@link TextFields/TextField#errorText}\n     */\n    errorText: PropTypes.node,\n\n    /**\n     * An optional text to display below the select field to provide input help to the user.\n     * This will only be displayed if the select field is not in an error state.\n     *\n     * @see {@link #helpOnFocus}\n     * @see {@link TextFields/TextField#errorText}\n     */\n    helpText: PropTypes.node,\n\n    /**\n     * Boolean if the `helpText` should only appear on focus.\n     *\n     * @see {@link #helpText}\n     * @see {@link TextFields/TextField#helpOnFocus}\n     */\n    helpOnFocus: PropTypes.bool,\n\n    /**\n     * An optional function to call when any element in the select field has been clicked.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keydown` event has been triggered anywhere in the\n     * select field.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the select field's toggle has gained focus.\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when the select field's toggle has been blurred. This\n     * will be triggered if the user hits the up or down arrow keys to traverse the list\n     * of items.\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * The icon to use to display the dropdown arrow.\n     */\n    dropdownIcon: PropTypes.element,\n\n    /**\n     * Boolean if the select field is in a toolbar. This should automatically be injected by the `Toolbar`\n     * component if being used as a `titleMenu` or one of the `actions`.\n     *\n     * @see {@link Toolbars/Toolbar#titleMenu}\n     * @see {@link Toolbars/Toolbar#actions}\n     */\n    toolbar: PropTypes.bool,\n\n    /**\n     * Boolean if the currently active item should be removed from the list of available `menuItems`.\n     * If this is `undefined`, it will strip out the active one only when the\n     * `position === SelectField.Positions.BELOW`.\n     */\n    stripActiveItem: PropTypes.bool,\n\n    /**\n     * The transition name to use when a new value has been selected. By default, it will have the\n     * new item _drop_ into the select field's input location.\n     */\n    transitionName: PropTypes.string.isRequired,\n\n    /**\n     * The transition time to use when a new value has been selected. If this value is `0`, there\n     * will be no transition.\n     */\n    transitionTime: PropTypes.number.isRequired,\n\n    /**\n     * This is how the menu's `List` gets anchored to the select field.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is the animation position for the list that appears.\n     *\n     * @see {@link Helpers/Layover#animationPosition}\n     */\n    position: positionShape,\n\n    /**\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * Boolean if the menu's list should appear horizontally instead of vertically.\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\n     */\n    listZDepth: PropTypes.number,\n\n    /**\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\n     * `$md-menu-desktop-max-height` values.\n     *\n     * @see [md-menu-mobile-max-height](/components/menus?tab=1#variable-md-menu-mobile-max-height)\n     * @see [md-menu-desktop-max-height](/components/menus?tab=1#variable-md-menu-desktop-max-height)\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * An optional transition name to use for the list appearing/disappearing.\n     *\n     * @see {@link Menus/Menu#transitionName}\n     */\n    menuTransitionName: PropTypes.string,\n\n    /**\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\n     */\n    menuTransitionEnterTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\n     */\n    menuTransitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Menus/Menu#block}\n     */\n    block: PropTypes.bool,\n\n    /**\n     * @see {@link Menus/Menu#fullWidth}\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#centered}\n     */\n    centered: Menu.propTypes.centered,\n\n    /**\n     * @see {@link Helpers/Layover#sameWidth}\n     */\n    sameWidth: Menu.propTypes.sameWidth,\n\n    /**\n     * Since the `menuItems` get mapped into `ListItem`, this prop is used to remove\n     * any unnecessary props from the `ListItem` itself. This is where you\n     * would remove parts of your object such as `description` or `__metadata__`.\n     */\n    deleteKeys: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ])),\n    ]),\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: Menu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: Menu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: Menu.propTypes.minBottom,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    /**\n     * The direction that the underline should appear from.\n     */\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\n\n    iconChildren: deprecated(PropTypes.node, 'Use `dropdownIcon` instead'),\n    iconClassName: deprecated(PropTypes.string, 'Use `dropdownIcon` instead'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    onMenuToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\n    stretchList: deprecated(\n      PropTypes.bool,\n      'No longer valid after the changes to the `Menu` component. Possibly use `sameWidth` instead'\n    ),\n    menuStyle: deprecated(PropTypes.object, 'Use `style` instead'),\n    menuClassName: deprecated(PropTypes.string, 'Use `className` instead'),\n    floatingLabel: deprecated(\n      PropTypes.bool,\n      'A select field can only have floating labels now. Only provide the `label` prop'\n    ),\n    noAutoAdjust: deprecated(PropTypes.bool, 'No longer valid to use since select fields are no longer text fields'),\n    adjustMinWidth: deprecated(PropTypes.bool, 'No longer valid to use since select fields are no longer text fields'),\n  };\n\n  static defaultProps = {\n    anchor: {\n      x: SelectField.HorizontalAnchors.INNER_LEFT,\n      y: SelectField.VerticalAnchors.OVERLAP,\n    },\n    fixedTo: Menu.defaultProps.fixedTo,\n    position: SelectField.Positions.TOP_LEFT,\n    itemLabel: 'label',\n    itemValue: 'value',\n    itemProps: 'getProps',\n    dropdownIcon: <FontIcon>arrow_drop_down</FontIcon>,\n    lineDirection: 'left',\n    menuItems: [],\n    defaultValue: '',\n    defaultVisible: false,\n    keyboardMatchingTimeout: 1000,\n    transitionName: 'md-drop',\n    transitionTime: 300,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: false,\n      active: false,\n      ...this._getActive(props, { value: props.defaultValue }),\n      listProps: {\n        role: 'listbox',\n        ref: this._scrollActiveIntoView,\n        [ARIA_ACTIVE]: null,\n      },\n      match: null,\n      lastSearch: null,\n      value: props.defaultValue,\n      visible: props.defaultVisible,\n    };\n\n    this._items = [];\n    this._activeItem = null;\n    this._deleteKeys = this._getDeleteKeys(props);\n  }\n\n  componentDidMount() {\n    this._container = findDOMNode(this);\n    this._field = this._container.querySelector('.md-select-field');\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { itemLabel, itemValue, deleteKeys } = this.props;\n    if (deleteKeys !== nextProps.deleteKeys || itemLabel !== nextProps.itemLabel || itemValue !== nextProps.itemValue) {\n      this._deleteKeys = this._getDeleteKeys(nextProps);\n    }\n\n    if (this.props.value !== nextProps.value || this.props.menuItems !== nextProps.menuItems) {\n      this.setState(this._getActive(nextProps, this.state));\n    }\n  }\n\n  /**\n   * Gets the current value from the select field. This is used when you have an uncontrolled\n   * text field and simply need the value from a ref callback.\n   *\n   * @return {String} the select field's value\n   */\n  get value() {\n    return getField(this.props, this.state, 'value');\n  }\n\n  _getItemPart(item, itemLabel, itemValue, preferLabel = false) {\n    const type = typeof item;\n    if (type === 'number' || type === 'string') {\n      return item;\n    } else if (type === 'object') {\n      const key1 = preferLabel ? itemLabel : itemValue;\n      const key2 = preferLabel ? itemValue : itemLabel;\n      return typeof item[key1] !== 'undefined' ? item[key1] : item[key2];\n    }\n\n    return '';\n  }\n\n  _getDeleteKeys({ itemLabel, itemValue, itemProps, deleteKeys }) {\n    const keys = [itemLabel, itemValue, itemProps];\n    if (deleteKeys) {\n      return keys.concat(Array.isArray(deleteKeys) ? deleteKeys : [deleteKeys]);\n    }\n\n    return keys;\n  }\n\n  _getActiveItemLabel = (item, value, itemLabel, itemValue) => {\n    const v = this._getItemPart(item, itemLabel, itemValue);\n    const label = this._getItemPart(item, itemLabel, itemValue, true);\n\n    return v === value || v === parseInt(value, 10) ? label : '';\n  };\n\n  _getActive = (props, state) => {\n    let activeLabel = '';\n    let activeIndex = -1;\n    const value = getField(props, state, 'value');\n    if (isValued(value)) {\n      const { menuItems, itemLabel, itemValue } = props;\n\n      menuItems.some((item, index) => {\n        activeLabel = this._getActiveItemLabel(item, value, itemLabel, itemValue);\n        const found = isValued(activeLabel);\n        if (found) {\n          activeIndex = index;\n        }\n\n        return found;\n      });\n    }\n\n    return { activeLabel, activeIndex };\n  };\n\n  _attemptItemFocus = (index) => {\n    if (index === -1) {\n      return;\n    }\n\n    const item = this._items[index];\n    if (item) {\n      item.focus();\n    }\n  };\n\n  _setListItem = (item) => {\n    if (!item) {\n      return;\n    }\n\n    if (item.props.active) {\n      this._activeItem = findDOMNode(item);\n      item.focus();\n\n      if (!this.state.listProps[ARIA_ACTIVE]) {\n        this.setState({ listProps: { ...this.state.listProps, [ARIA_ACTIVE]: `${this.props.id}-options-active` } });\n      }\n    }\n\n    this._items.push(item);\n  };\n\n  _scrollActiveIntoView = (listRef) => {\n    if (listRef === null) {\n      this._items = [];\n      return;\n    } else if (!this._activeItem) {\n      return;\n    }\n\n    const list = findDOMNode(listRef);\n    const { offsetTop } = this._activeItem;\n    list.scrollTop = offsetTop > MOBILE_LIST_PADDING ? offsetTop : 0;\n  };\n\n  _toggle = (e) => {\n    const { isOpen, onVisibilityChange, onMenuToggle } = this.props;\n    const visible = !(typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible'));\n    if (onMenuToggle || onVisibilityChange) {\n      (onMenuToggle || onVisibilityChange)(visible, e);\n    }\n\n    let state;\n    if (typeof isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      state = { visible };\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _close = (e) => {\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(false, e);\n    }\n\n    if (e.type === 'keydown' && this._field) {\n      this._field.focus();\n    }\n\n    let state;\n    if (this.props.required && !getField(this.props, this.state, 'value')) {\n      state = { error: true };\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      state = state || {};\n      state.visible = false;\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    const { isOpen } = this.props;\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n    if (visible && this._container) {\n      let node = e.target;\n      while (this._container.contains(node)) {\n        if (node.dataset && typeof node.dataset.id !== 'undefined') {\n          const { id, value } = node.dataset;\n          this._selectItem(parseInt(id, 10), value, e);\n          return;\n        }\n\n        node = node.parentNode;\n      }\n    }\n  };\n\n  _selectItem = (dataIndex, dataValue, e) => {\n    const { required, menuItems, itemLabel, itemValue, onChange, id, name } = this.props;\n    const value = this._getItemPart(menuItems[dataIndex], itemLabel, itemValue);\n    const prevValue = getField(this.props, this.state, 'value');\n    if (prevValue !== value && onChange) {\n      onChange(value, dataIndex, e, { id, name, value });\n    }\n\n    const state = {\n      ...this._getActive({ value, itemLabel, itemValue, menuItems }, {}),\n      error: !!required && !value && value !== 0,\n    };\n\n    if (typeof this.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    this.setState(state);\n  };\n\n  _handleFocus = (e) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n\n    this.setState({ active: true });\n  };\n\n  _handleBlur = (e) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n\n    let { error } = this.state;\n    const { isOpen, required } = this.props;\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n    const value = getField(this.props, this.state, 'value');\n\n    if (required && !visible) {\n      error = !value;\n    }\n\n    this.setState({ active: false, error });\n  };\n\n  _handleKeyDown = (e) => {\n    const { isOpen, onKeyDown } = this.props;\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    const key = e.which || e.keyCode;\n    const up = key === UP;\n    const down = key === DOWN;\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n\n    if (up || down) {\n      e.preventDefault();\n\n      if (!visible) {\n        this._toggle(e);\n        return;\n      }\n\n      this._advanceFocus(up);\n    } else if (!visible && handleKeyboardAccessibility(e, this._toggle, true, true)) {\n      return;\n    } else if (visible && (key === ESC || key === TAB)) {\n      if (this._field && key === ESC) {\n        this._field.focus();\n      }\n\n      this._close(e);\n      return;\n    } else {\n      this._selectItemByLetter(key, e);\n    }\n  };\n\n  _advanceFocus = (decrement) => {\n    const { position, stripActiveItem } = this.props;\n    const { activeIndex } = this.state;\n\n    const below = position === SelectField.Positions.BELOW;\n    const value = getField(this.props, this.state, 'value');\n    const valued = isValued(value);\n    const itemStripped = (typeof stripActiveItem !== 'undefined' ? stripActiveItem : below) && valued;\n\n    // If the select field is positioned below and there is no value, need to increment the last index\n    // by one since this select field removes the active item. Need to account for that here when there\n    // is no value.\n    const lastIndex = this._items.length - (itemStripped ? 0 : 1);\n    if ((decrement && activeIndex <= 0) || (!decrement && activeIndex >= lastIndex)) {\n      return;\n    }\n\n    const nextIndex = Math.max(-1, Math.min(lastIndex, activeIndex + (decrement ? -1 : 1)));\n    if (nextIndex === activeIndex) {\n      return;\n    }\n\n    this._attemptItemFocus(nextIndex - (itemStripped ? 1 : 0));\n    this.setState({ activeIndex: nextIndex });\n  };\n\n  _selectItemByLetter = (key, e) => {\n    const charCode = String.fromCharCode(key);\n    const isLetter = charCode && charCode.match(/[A-Za-z0-9-_ ]/);\n    const isKeypad = isBetween(key, KEYPAD_ZERO, KEYPAD_NINE);\n    if (!isBetween(key, ZERO, NINE) && !isKeypad && !isLetter) {\n      return;\n    }\n\n    const letter = isLetter ? charCode : String(key - (isKeypad ? KEYPAD_ZERO : ZERO));\n\n    if (this._matchingTimeout) {\n      clearTimeout(this._matchingTimeout);\n    }\n\n    this._matchingTimeout = setTimeout(() => {\n      this._matchingTimeout = null;\n\n      this.setState({ match: null, lastSearch: null });\n    }, this.props.keyboardMatchingTimeout);\n\n    this._selectFirstMatch(letter, e);\n  };\n\n  _selectFirstMatch = (letter, e) => {\n    const { menuItems, itemLabel, itemValue, isOpen, onChange, id, name } = this.props;\n    const { lastSearch } = this.state;\n    let match = -1;\n    const search = `${lastSearch || ''}${letter}`.toUpperCase();\n    menuItems.some((item, index) => {\n      if (item && typeof item === 'object' && item.disabled) {\n        return false;\n      }\n\n      const label = String(this._getItemPart(item, itemLabel, itemValue, true));\n      if (label && label.toUpperCase().replace(/\\s/g, '').indexOf(search) === 0) {\n        match = index;\n      }\n\n      return match > -1;\n    });\n\n    const state = {\n      match,\n      lastSearch: search,\n    };\n\n    if (match !== -1) {\n      const activeItem = menuItems[match];\n      state.activeLabel = this._getItemPart(activeItem, itemLabel, itemValue, true);\n      state.activeIndex = match;\n\n      const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n      if (visible) {\n        if (state.match !== this.state.match) {\n          this._attemptItemFocus(state.activeIndex);\n        }\n      } else {\n        const value = this._getItemPart(activeItem, itemLabel, itemValue);\n        const prevValue = getField(this.props, this.state, 'value');\n\n        if (value !== prevValue && onChange) {\n          onChange(value, match, e, { id, name, value });\n        }\n\n        if (typeof this.props.value === 'undefined') {\n          state.value = value;\n        }\n      }\n    }\n\n    this.setState(state);\n  };\n\n  _reduceItems = (items, item, i) => {\n    if (item === null) {\n      return items;\n    } else if (React.isValidElement(item)) {\n      items.push(item);\n      return items;\n    }\n\n    const { getItemProps, id, itemLabel, itemProps, itemValue, position, stripActiveItem } = this.props;\n    const below = position === SelectField.Positions.BELOW;\n    const value = getField(this.props, this.state, 'value');\n\n    const dataValue = this._getItemPart(item, itemLabel, itemValue);\n    const primaryText = this._getItemPart(item, itemLabel, itemValue, true);\n\n    const active = dataValue === value || dataValue === parseInt(value, 10);\n    const stripped = (typeof stripActiveItem !== 'undefined' ? stripActiveItem : below) && active;\n    if (!stripped) {\n      const objectType = typeof item === 'object';\n      const props = objectType ? omit(item, this._deleteKeys) : {};\n      const disabled = props.disabled || false;\n      props.ref = disabled ? null : this._setListItem;\n      props.id = active ? `${id}-options-active` : null;\n      props.active = active;\n      props.tabIndex = -1;\n      props.primaryText = primaryText;\n      props.key = item.key || dataValue;\n      props.role = 'option';\n      props['data-id'] = disabled ? null : i;\n      props['data-value'] = disabled ? null : dataValue;\n\n      const getProps = (objectType && item[itemProps]) || getItemProps;\n      if (typeof getProps === 'function') {\n        Object.assign(props, getProps({\n          index: i,\n          active,\n          disabled,\n          itemValue,\n          value,\n          props,\n          item,\n          field: this,\n        }));\n      }\n\n      items.push(<ListItem {...props} />);\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      listStyle,\n      listClassName,\n      toggleStyle,\n      toggleClassName,\n      menuItems,\n      anchor,\n      belowAnchor,\n      fixedTo,\n      position,\n      xThreshold,\n      yThreshold,\n      listZDepth,\n      listInline,\n      listHeightRestricted,\n      block,\n      centered,\n      sameWidth,\n      fullWidth,\n      repositionOnScroll,\n      repositionOnResize,\n      simplifiedMenu,\n      minLeft,\n      minRight,\n      minBottom,\n      fillViewportWidth,\n      fillViewportHeight,\n      menuTransitionName,\n      menuTransitionEnterTimeout,\n      menuTransitionLeaveTimeout,\n      isOpen, // deprecated\n      /* eslint-disable no-unused-vars */\n      error: propError,\n      menuId: propMenuId,\n      visible: propVisible,\n      itemLabel,\n      itemValue,\n      itemProps,\n      getItemProps,\n      defaultValue,\n      defaultVisible,\n      onClick,\n      onKeyDown,\n      onVisibilityChange,\n      deleteKeys,\n      stripActiveItem,\n      keyboardMatchingTimeout,\n\n      // Deprecated\n      defaultOpen,\n      initiallyOpen,\n      onMenuToggle,\n      stretchList,\n      menuStyle,\n      menuClassName,\n      floatingLabel,\n      noAutoAdjust,\n      adjustMinWidth,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { menuId, listId, error } = this.props;\n    error = error || this.state.error;\n    if (!menuId) {\n      menuId = `${id}-menu`;\n    }\n\n    if (!listId) {\n      listId = `${menuId}-options`;\n    }\n\n    const { listProps, active, activeLabel } = this.state;\n    const below = position === SelectField.Positions.BELOW;\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n    const value = getField(this.props, this.state, 'value');\n    const useSameWidth = typeof sameWidth !== 'undefined' ? sameWidth : below;\n\n    const toggle = (\n      <SelectFieldToggle\n        {...props}\n        id={id}\n        style={toggleStyle}\n        className={toggleClassName}\n        visible={visible}\n        value={value}\n        below={below}\n        error={error}\n        active={active}\n        activeLabel={activeLabel}\n        onClick={this._toggle}\n        onFocus={this._handleFocus}\n        onBlur={this._handleBlur}\n      />\n    );\n\n    return (\n      <Menu\n        id={menuId}\n        listId={listId}\n        style={style}\n        className={cn('md-menu--select-field', className)}\n        listProps={listProps}\n        listStyle={listStyle}\n        listClassName={listClassName}\n        toggle={toggle}\n        visible={visible}\n        onClose={this._close}\n        onKeyDown={this._handleKeyDown}\n        onClick={this._handleClick}\n        simplified={simplifiedMenu}\n        anchor={anchor}\n        belowAnchor={belowAnchor}\n        fixedTo={fixedTo}\n        position={position}\n        xThreshold={xThreshold}\n        yThreshold={yThreshold}\n        listZDepth={listZDepth}\n        listInline={listInline}\n        listHeightRestricted={listHeightRestricted}\n        sameWidth={useSameWidth}\n        block={block}\n        centered={centered}\n        fullWidth={fullWidth}\n        minLeft={minLeft}\n        minRight={minRight}\n        minBottom={minBottom}\n        fillViewportWidth={fillViewportWidth}\n        fillViewportHeight={fillViewportHeight}\n        repositionOnScroll={repositionOnScroll}\n        repositionOnResize={repositionOnResize}\n        transitionName={menuTransitionName}\n        transitionEnterTimeout={menuTransitionEnterTimeout}\n        transitionLeaveTimeout={menuTransitionLeaveTimeout}\n      >\n        {menuItems.reduce(this._reduceItems, [])}\n      </Menu>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * This is just a simple <tfoot> component.\n */\nexport default class TableFooter extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The children to display. This should really be one or a list of `TableRow`\n     * components.\n     */\n    children: PropTypes.node,\n  };\n\n  static childContextTypes = {\n    footer: PropTypes.bool,\n  }\n\n  getChildContext() {\n    return { footer: true };\n  }\n\n  render() {\n    const { className, children, ...props } = this.props;\n\n    return (\n      <tfoot className={cn('md-table-footer', className)} {...props}>\n        {children}\n      </tfoot>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport SelectField from '../SelectFields/SelectField';\nimport Button from '../Buttons/Button';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport findTable from './findTable';\nimport TableFooter from './TableFooter';\nimport TableColumn from './TableColumn';\n\n/**\n * The `TablePagination` component is used to generate the table footer that helps\n * pagination through a large dataset by limiting the number of rows per page.\n * The pagination will always be placed persistently at the bottom of the table\n * so that when a user scrolls to the right, they will always be able to use the\n * pagination.\n */\nexport default class TablePagination extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional id to provide to the select field. If this is omitted, it will be\n     * the `DataTable`'s `baseId` with '-pagination'.\n     *\n     * @see {@link DataTables/DataTable#baseId}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the increment icon button. If this is omitted, it will be\n     * the `id` with '-increment-btn'.\n     *\n     * @see {@link #id}\n     */\n    incrementId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the decrement icon button. If this is omitted, it will be\n     * the `id` with '-decrement-btn'.\n     *\n     * @see {@link #id}\n     */\n    decrementId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the `tfoot` tag.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `tfoot` tag.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the select field.\n     *\n     * @see {@link SelectFields/SelectField#style}\n     */\n    selectFieldStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field.\n     *\n     * @see {@link SelectFields/SelectField#className}\n     */\n    selectFieldClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the select field's input.\n     *\n     * @see {@link SelectFields/SelectField#inputStyle}\n     */\n    selectFieldInputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field's input.\n     *\n     * @see {@link SelectFields/SelectField#inputClassName}\n     */\n    selectFieldInputClassName: PropTypes.string,\n\n    /**\n     * Boolean if the select field should use the simplified menu logic.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * A function to call when a user clicks the increment or decrement pagination\n     * icon button. This function will be given the new start index and the number\n     * or rows per page as well as the current page.\n     *\n     * ```js\n     * onPagination(newStart, rowsPerPage, currentPage);\n     * ```\n     */\n    onPagination: PropTypes.func.isRequired,\n\n    /**\n     * The current value for the select field holding the number of rows per page.\n     */\n    rowsPerPage: PropTypes.number,\n\n    /**\n     * The current page for the pagination. This will make the component controlled, so the only way to get pagination\n     * is making sure you are updating this prop after the `onPagination` callback is called.\n     *\n     * Pages start from 1 instead of 0.\n     */\n    page: PropTypes.number,\n\n    /**\n     * The default page to start from for the pagination. Pages start from 1 instead of 0.\n     */\n    defaultPage: PropTypes.number.isRequired,\n\n    /**\n     * The default number of rows per page to display. This will be the value for the\n     * `SelectField`.\n     */\n    defaultRowsPerPage: PropTypes.number.isRequired,\n\n    /**\n     * The label to use for the rows per page `SelectField`.\n     */\n    rowsPerPageLabel: PropTypes.node.isRequired,\n\n    /**\n     * A list of numbers for the amount of rows per page to display at a time.\n     * This will be rendered into the `SelectField`.\n     */\n    rowsPerPageItems: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    /**\n     * The total number of rows that can be displayed. This is the unfiltered/non-subset\n     * number of rows. This is used to help calculate the increment/decrement values to\n     * display and determine if the user can increment/decrement again.\n     */\n    rows: PropTypes.number.isRequired,\n\n    /**\n     * The icon to use for the increment icon button.\n     */\n    incrementIcon: PropTypes.element,\n\n    /**\n     * The icon to use for the decrement icon button.\n     */\n    decrementIcon: PropTypes.element,\n\n    incrementIconChildren: deprecated(PropTypes.node, 'Use the `incrementIcon` prop instead'),\n    incrementIconClassName: deprecated(PropTypes.string, 'Use the `incrementIcon` prop instead'),\n    decrementIconChildren: deprecated(PropTypes.node, 'Use the `decrementIcon` prop instead'),\n    decrementIconClassName: deprecated(PropTypes.string, 'Use the `decrementIcon` prop instead'),\n  };\n\n  static contextTypes = {\n    baseId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    fixedFooter: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    defaultPage: 1,\n    defaultRowsPerPage: 10,\n    rowsPerPageLabel: 'Rows per page:',\n    rowsPerPageItems: [10, 20, 30, 40, 50, 100],\n    incrementIcon: <FontIcon>keyboard_arrow_right</FontIcon>,\n    decrementIcon: <FontIcon>keyboard_arrow_left</FontIcon>,\n    simplifiedMenu: false,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    const controlledPage = typeof props.page !== 'undefined';\n    const controlledRowsPerPage = typeof props.rowsPerPage !== 'undefined';\n    const rowsPerPage = controlledRowsPerPage ? props.rowsPerPage : props.defaultRowsPerPage;\n    const page = controlledPage ? props.page : props.defaultPage;\n    this.state = {\n      start: (page - 1) * rowsPerPage,\n      controlsMarginLeft: 0,\n    };\n\n    if (!controlledPage) {\n      this.state.page = page;\n    }\n\n    if (!controlledRowsPerPage) {\n      this.state.rowsPerPage = props.defaultRowsPerPage;\n    }\n\n    this._table = null;\n    this._ticking = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { rowsPerPage, page } = this.props;\n    if (page !== nextProps.page || rowsPerPage !== nextProps.rowsPerPage) {\n      const rpp = getField(nextProps, this.state, 'rowsPerPage');\n      const p = getField(nextProps, this.state, 'page');\n\n      this.setState({ start: (p - 1) * rpp });\n    }\n  }\n\n  _setControls = (controls) => {\n    this._controls = controls;\n    this._table = findTable(controls);\n\n    if (this._table && this.context.fixedFooter) {\n      this._table.addEventListener('scroll', this._throttledPosition);\n    }\n  };\n\n  _position = () => {\n    if (this._table) {\n      const { fixedFooter } = this.context;\n      const { offsetWidth, scrollLeft } = this._table;\n\n      let controlsMarginLeft = offsetWidth - this._controls.offsetWidth;\n      if (fixedFooter) {\n        controlsMarginLeft += scrollLeft;\n      }\n\n      this.setState({\n        controlsMarginLeft: Math.max(24, controlsMarginLeft),\n      });\n    }\n  };\n\n  _throttledPosition = () => {\n    if (!this._ticking) {\n      requestAnimationFrame(() => {\n        this._ticking = false;\n        this._position();\n      });\n    }\n\n    this._ticking = true;\n  };\n\n  _increment = () => {\n    const { rows, onPagination } = this.props;\n    const { start } = this.state;\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    const page = getField(this.props, this.state, 'page');\n\n    // Only correct multiple of rows per page\n    const max = rows - (rows % rowsPerPage);\n\n    const newStart = Math.min(start + rowsPerPage, max);\n    const nextPage = page + 1;\n\n    onPagination(newStart, rowsPerPage, nextPage);\n    if (typeof this.props.page === 'undefined') {\n      this.setState({ start: newStart, page: nextPage });\n    }\n  };\n\n  _decrement = () => {\n    const { start } = this.state;\n    const page = getField(this.props, this.state, 'page');\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    const newStart = Math.max(0, start - rowsPerPage);\n    const nextPage = page - 1;\n\n    this.props.onPagination(newStart, rowsPerPage, nextPage);\n    if (typeof this.props.page === 'undefined') {\n      this.setState({ start: newStart, page: nextPage });\n    }\n  };\n\n  _setRowsPerPage = (rowsPerPage) => {\n    const page = 1;\n    const newStart = 0;\n    this.props.onPagination(newStart, rowsPerPage, page);\n    let nextState;\n    if (typeof this.props.rowsPerPage === 'undefined') {\n      nextState = { rowsPerPage };\n    }\n\n    if (typeof this.props.page === 'undefined') {\n      nextState = nextState || {};\n      nextState.start = newStart;\n    }\n\n    if (nextState) {\n      this.setState(nextState);\n    }\n  };\n\n  render() {\n    const { controlsMarginLeft, start } = this.state;\n    const {\n      className,\n      selectFieldStyle,\n      selectFieldClassName,\n      selectFieldInputStyle,\n      selectFieldInputClassName,\n      rows,\n      rowsPerPageLabel,\n      rowsPerPageItems,\n      incrementIcon,\n      decrementIcon,\n      simplifiedMenu,\n\n      // deprecated\n      incrementIconChildren,\n      incrementIconClassName,\n      decrementIconChildren,\n      decrementIconClassName,\n      /* eslint-disable no-unused-vars */\n      id: propId,\n      incrementId: propIncrementId,\n      decrementId: propDecrementId,\n      onPagination,\n      rowsPerPage: propRowsPerPage,\n      page: propPage,\n      defaultPage,\n      defaultRowsPerPage,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const { baseId } = this.context;\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    let { id, incrementId, decrementId } = this.props;\n    if (!id) {\n      id = `${baseId}-pagination`;\n    }\n\n    if (!incrementId) {\n      incrementId = `${id}-increment-btn`;\n    }\n\n    if (!decrementId) {\n      decrementId = `${id}-decrement-btn`;\n    }\n\n    const pagination = `${start + 1}-${Math.min(rows, start + rowsPerPage)} of ${rows}`;\n    return (\n      <TableFooter {...props} className={cn('md-table-footer--pagination', className)}>\n        <ResizeObserver watchWidth component=\"tr\" onResize={this._throttledPosition} />\n        <ResizeObserver watchWidth component=\"tr\" target={this._table} onResize={this._throttledPosition} />\n        <tr>\n          {/* colspan 100% so footer columns do not align with body and header */}\n          <TableColumn colSpan=\"100%\">\n            <div\n              ref={this._setControls}\n              className=\"md-table-pagination md-table-pagination--controls md-text\"\n              style={{ marginLeft: controlsMarginLeft }}\n            >\n              <span className=\"md-table-pagination__label\">\n                {rowsPerPageLabel}\n              </span>\n              <SelectField\n                id={id}\n                menuItems={rowsPerPageItems}\n                position={SelectField.Positions.BELOW}\n                style={selectFieldStyle}\n                className={selectFieldClassName}\n                inputStyle={selectFieldInputStyle}\n                inputClassName={cn('md-select-field--pagination', selectFieldInputClassName)}\n                value={rowsPerPage}\n                onChange={this._setRowsPerPage}\n                simplifiedMenu={simplifiedMenu}\n              />\n              <span className=\"md-table-pagination--label\">{pagination}</span>\n              <Button\n                id={decrementId}\n                icon\n                onClick={this._decrement}\n                disabled={start === 0}\n                iconEl={getDeprecatedIcon(decrementIconClassName, decrementIconChildren, decrementIcon)}\n              />\n              <Button\n                id={incrementId}\n                icon\n                onClick={this._increment}\n                disabled={start + rowsPerPage >= rows}\n                iconEl={getDeprecatedIcon(incrementIconClassName, incrementIconChildren, incrementIcon)}\n              />\n            </div>\n            {/*\n              * Since the footer controls is positioned absolutely for a persistent footer,\n              * we have a mask to correctly set the height of the footer.\n              */}\n            <div className=\"md-table-pagination\" />\n          </TableColumn>\n        </tr>\n      </TableFooter>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\n\nimport isValidFocusKeypress from '../utils/EventUtils/isValidFocusKeypress';\n\nconst hrefables = ['a', 'area'].map(tag => `${tag}[href],`).join('');\nconst disableables = ['button', 'input', 'textarea', 'select'].map(tag => `${tag}:not([disabled]),`).join('');\nconst FOCUSABLE_QUERY = `${hrefables}${disableables}*[tabIndex]`;\n\n/**\n * This component is used for keeping the focus within some container. When the container\n * is mounted and the `focusOnMount` prop is `true`, it will attempt to focus either:\n * - an element that matches `document.getElementById(this.props.initialFocus)`\n * - an element that matches `this._container.querySelector(this.props.initialFocus)`\n * - the first focusable element in it's children (if `this.props.initialFocus` is omitted)\n */\nexport default class FocusContainer extends PureComponent {\n  static propTypes = {\n    /**\n     * The component to render as. This can be a React DOM element or\n     * a react Component.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The children to display.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional id string or a query selector string to use for the initial focus.\n     * This will only be triggered if the `focusOnMount` prop is `true`. If this is\n     * omitted and the `focusOnMount` prop is `true`, the first focusable element in the\n     * container will be focused.\n     *\n     * Examples:\n     *\n     * ```js\n     * initialFocus=\"#someAmazingId\"\n     * // or\n     * initialFocus=\".md-btn,.md-list-tile\"\n     * ```\n     */\n    initialFocus: PropTypes.string,\n\n    /**\n     * Boolean if an element in the container should be focused when mounted.\n     */\n    focusOnMount: PropTypes.bool,\n\n    /**\n     * An optional list of additional key codes to use for focus events.\n     */\n    additionalFocusKeys: PropTypes.arrayOf(PropTypes.number),\n\n    /**\n     * Boolean if the focus container should start or stop containing the focus within the container.\n     * This is useful for changing the focus requirements after mount.\n     */\n    containFocus: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    component: 'div',\n    containFocus: true,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.containFocus === nextProps.containFocus) {\n      return;\n    }\n\n    if (nextProps.containFocus) {\n      this._enableFocusTrap();\n      this._attemptInitialFocus();\n    } else {\n      this._disableFocusTrap();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.containFocus && this._container) {\n      this._focusables = Array.prototype.slice.call(this._container.querySelectorAll(FOCUSABLE_QUERY))\n        .filter(el => el.tabIndex !== -1);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.containFocus) {\n      this._disableFocusTrap();\n    }\n  }\n\n  _enableFocusTrap = () => {\n    window.addEventListener('keydown', this._handleKeyDown, true);\n  };\n\n  _disableFocusTrap = () => {\n    window.removeEventListener('keydown', this._handleKeyDown, true);\n  };\n\n  _attemptInitialFocus = () => {\n    if (!this._container) {\n      return;\n    }\n\n    const { initialFocus } = this.props;\n\n    const toFocus = initialFocus\n      ? document.getElementById(initialFocus) || this._container.querySelector(initialFocus)\n      : this._focusables[0];\n\n    let debugError;\n    if (!toFocus && initialFocus) {\n      debugError = ' The `initialFocus` did not match a document\\'s `id` or was an invalid ';\n      debugError += `\\`querySelector\\` for the container. \\`initialFocus\\`: \\`${initialFocus}\\`. `;\n      debugError += 'If this was supposed to be an `id`, make sure to prefix with the `#` symbol.';\n    }\n\n    if (process.env.NODE_ENV !== 'production' && !toFocus) {\n      throw new Error(\n        'You specified that the `FocusContainer` should focus an element on mount, ' +\n        'but a focusable element was not found in the children. This could be because ' +\n        'the `initialFocus` prop is an invalid id or query selector, or the children ' +\n        `do not contain a valid focusable element.${debugError}`\n      );\n    }\n\n    if (toFocus) {\n      toFocus.focus();\n    }\n  };\n\n  /**\n   * Manages the event listeners to contain the focus within some container.  When the container\n   * ref is not null, the container has mounted and then attempts to focus an element inside\n   * if the `focusOnMount` prop is `true`.\n   */\n  _containFocus = (containerRef) => {\n    if (containerRef === null) {\n      this._container = null;\n      this._disableFocusTrap();\n      return;\n    }\n\n    const { focusOnMount, containFocus } = this.props;\n    this._container = findDOMNode(containerRef);\n    this._focusables = Array.prototype.slice.call(this._container.querySelectorAll(FOCUSABLE_QUERY))\n      .filter(el => el.tabIndex !== -1);\n\n    if (focusOnMount) {\n      this._attemptInitialFocus();\n    }\n\n    if (containFocus) {\n      this._enableFocusTrap();\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    this._shifted = e.shiftKey;\n    if (!isValidFocusKeypress(e, this.props.additionalFocusKeys)) {\n      return;\n    } else if (this._focusables.length === 1) {\n      e.preventDefault();\n      return;\n    }\n\n    const { target, shiftKey } = e;\n    const [first, ...focusables] = this._focusables;\n    const last = focusables[focusables.length - 1];\n\n    if (shiftKey && target === first) {\n      e.preventDefault();\n      last.focus();\n    } else if (!shiftKey && target === last) {\n      e.preventDefault();\n      first.focus();\n    }\n  };\n\n  render() {\n    const {\n      component: Component,\n      /* eslint-disable no-unused-vars */\n      initialFocus,\n      focusOnMount,\n      containFocus,\n      additionalFocusKeys,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    return <Component {...props} ref={this._containFocus} />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport default class DialogTitle extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  render() {\n    const { children, className, ...props } = this.props;\n\n    if (!children) {\n      return null;\n    }\n\n    return (\n      <h2 {...props} className={cn('md-title md-title--dialog', className)}>\n        {children}\n      </h2>\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport Button from '../Buttons/Button';\n\nconst FOOTER_PADDING = 8;\n\nexport default class DialogFooter extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    actions: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.object,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.object,\n      ])),\n    ]),\n    stacked: PropTypes.bool,\n  };\n\n  state = { stacked: false };\n\n  _toElement(action, index) {\n    if (isValidElement(action)) {\n      const button = Children.only(action);\n\n      return cloneElement(action, {\n        key: button.key || index,\n        className: cn('md-btn--dialog', button.props.className),\n      });\n    }\n\n    // Both label and children are valid for dialog actions\n    const { label, children, ...remaining } = action;\n    return (\n      <Button\n        key={index}\n        flat\n        {...remaining}\n        className={cn('md-btn--dialog', action.className)}\n      >\n        {label || children}\n      </Button>\n    );\n  }\n\n  _setContainer = (container) => {\n    if (container !== null) {\n      this._container = container;\n      const maxWidth = (this._container.offsetWidth - (FOOTER_PADDING * 3)) / 2;\n\n      let stacked = false;\n      Array.prototype.slice.call(this._container.querySelectorAll('.md-btn'))\n        .some(({ offsetWidth }) => {\n          stacked = offsetWidth > maxWidth;\n          return stacked;\n        });\n\n      this.setState({ stacked });\n    }\n  };\n\n  _generateActions = () => {\n    const { actions } = this.props;\n    if (!actions) {\n      return null;\n    } else if (Array.isArray(actions)) {\n      return actions.map(this._toElement);\n    }\n\n    return this._toElement(actions);\n  };\n\n  render() {\n    const {\n      actions,\n      className,\n      children,\n      stacked: propStacked,\n      ...props\n    } = this.props;\n\n    if (!children && (!actions || (Array.isArray(actions) && !actions.length))) {\n      return null;\n    }\n\n    let { stacked } = this.props;\n    const stackedDefined = typeof propStacked !== 'undefined';\n    if (!stackedDefined) {\n      stacked = this.state.stacked;\n    }\n\n    return (\n      <footer\n        {...props}\n        className={cn('md-dialog-footer', {\n          'md-dialog-footer--inline': !stacked,\n          'md-dialog-footer--stacked': stacked,\n        }, className)}\n        ref={!stackedDefined ? this._setContainer : null}\n      >\n        {this._generateActions()}\n        {children}\n      </footer>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport FocusContainer from '../Helpers/FocusContainer';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport Paper from '../Papers/Paper';\nimport DialogTitle from './DialogTitle';\nimport DialogFooter from './DialogFooter';\n\nconst DIFF_KEYS = ['style', 'height', 'width', 'contentStyle'];\n\n/**\n * The `Dialog` is just a static component for creating dialogs. Dialogs\n * seemed like they could be used outside of the `DialogContainer` component,\n * so it was exposed as well. In *most* cases, you will still want to use\n * the `DialogContainer` component.\n */\nexport default class Dialog extends PureComponent {\n  static propTypes = {\n    /**\n     * @see {@link Dialogs/DialogContainer#id}\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * @see {@link Dialogs/DialogContainer#aria-describedby}\n     */\n    'aria-describedby': oneRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'title', 'aria-labelledby', 'aria-label'),\n\n    /**\n     * @see {@link Dialogs/DialogContainer#aria-labelledby}\n     */\n    'aria-labelledby': PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * @see {@link Dialogs/DialogContainer#aria-label}\n     */\n    'aria-label': PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the dialog.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional styke to apply to the title.\n     */\n    titleStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the title.\n     */\n    titleClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the footer. This is used when the `actions`\n     * prop is defined.\n     */\n    footerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the footer. This is used when the `actions`\n     * prop is defined.\n     */\n    footerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog's content.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the dialog's content.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * The component to render the content as. This is helpful if you would like to use\n     * the CSSTransitionGroup. This really just saves a tiny bit of markup.\n     *\n     * ```js\n     * <Dialog\n     *   contentComponent={CSSTransitionGroup}\n     *   contentProps={{\n     *     transitionName: 'md-cross-fade',\n     *     transitionLeave: false,\n     *     transitionEnterTimeout: 150,\n     *   }}\n     * >\n     *   {dynamicContent}\n     * </Dialog>\n     * ```\n     */\n    contentComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * Any additional props to pass to the content component.\n     */\n    contentProps: PropTypes.object,\n\n    /**\n     * An optional title to display in the dialog.\n     */\n    title: PropTypes.node,\n\n    /**\n     * Any children to display in the content of the dialog.\n     */\n    children: PropTypes.node,\n\n    /**\n     * A single action or a list of actions to display in the dialog. This can either be a list\n     * of `FlatButton` props or `<Button flat {...props} />` elements.\n     */\n    actions: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.object,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.object,\n      ])),\n    ]),\n\n    /**\n     * @see {@link Helpers/FocusContainer#additionalFocusKeys}\n     */\n    additionalFocusKeys: FocusContainer.propTypes.additionalFocusKeys,\n\n    /**\n     * @see {@link Helpers/FocusContainer#initialFocus}\n     */\n    initialFocus: FocusContainer.propTypes.initialFocus,\n\n    /**\n     * @see {@link Helpers/FocusContainer#focusOnMount}\n     */\n    focusOnMount: FocusContainer.propTypes.focusOnMount,\n\n    /**\n     * @see {@link Helpers/FocusContainer#containFocus}\n     */\n    containFocus: FocusContainer.propTypes.containFocus,\n\n    /**\n     * An optional x coordinate on the page that caused a full page dialog\n     * to be created. This is really just used for a `transformOrigin` style.\n     */\n    pageX: PropTypes.number,\n\n    /**\n     * An optional y coordinate on the page that caused a full page dialog\n     * to be created. This is really just used for a `transformOrigin` style.\n     */\n    pageY: PropTypes.number,\n\n    /**\n     * An optional x scroll position of the container holding the dialog. This\n     * is really just used for a `transformOrigin` style on full page dialogs.\n     */\n    containerX: PropTypes.number,\n\n    /**\n     * An optional y scroll position of the container holding the dialog. This\n     * is really just used for a `transformOrigin` style on full page dialogs.\n     */\n    containerY: PropTypes.number,\n\n    /**\n     * Boolean if the dialog should be rendered as a full page dialog.\n     */\n    fullPage: PropTypes.bool,\n\n    /**\n     * The zDepth to use for the dialog.\n     */\n    zDepth: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to call when the dialog has been opened. This is\n     * really just used for the `DialogContainer`.\n     */\n    onOpen: PropTypes.func,\n\n    /**\n     * An optional function to call when the dialog has been closed. This is\n     * really just used for the `DialogContainer`.\n     */\n    onLeave: PropTypes.func,\n\n    /**\n     * Boolean if the dialog should be centered in the page.\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the content should be padded. This will take precedence\n     * over the `autopadContent` prop. So if this is defined, that value\n     * will be used instead of any thing that was was calculated in this\n     * component.\n     *\n     * @see {@link #autopadContent}\n     */\n    paddedContent: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should automatically try to determine if the content\n     * should be padded. It will be padded if the dialog does not contain a `List`.\n     */\n    autopadContent: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog content's size should automatically be resized to overflow\n     * correctly when there is a lot of content. This will calculate and apply some `maxHeight`\n     * to the `contentStyle`.\n     */\n    autosizeContent: PropTypes.bool,\n\n    /**\n     * An optional height to apply to the dialog. This is used if it is easier to just apply height/width\n     * with for specific dialogs instead of in CSS.\n     *\n     * **This prop should not be used if the `fullPage` prop is enabled.**\n     *\n     * @see {@link #fullPage}\n     * @see {@link #width}\n     */\n    height: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional width to apply to the dialog. This is used if it is easier to just apply height/width\n     * with for specific dialogs instead of in CSS.\n     *\n     * **This prop should not be used if the `fullPage` prop is enabled.**\n     *\n     * @see {@link #fullPage}\n     * @see {@link #height}\n     */\n    width: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * Boolean if the actions should be stacked on top of each other. If this value is `undefined`, it will\n     * automatically attempt to guess if the items should be stacked.\n     */\n    stackedActions: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    autopadContent: true,\n    autosizeContent: true,\n    contentComponent: 'section',\n    zDepth: 5,\n  };\n\n  static childContextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  constructor(props) {\n    super();\n\n    const { height, width } = props;\n    let styles = props.style;\n    if (height || width) {\n      styles = styles || {};\n      styles = { height, width, ...styles };\n    }\n\n    this.state = {\n      styles,\n      contentStyles: props.contentStyle,\n      contentPadded: false,\n    };\n  }\n\n  getChildContext() {\n    return { renderNode: this._renderNode };\n  }\n\n  componentWillMount() {\n    const { pageX, pageY } = this.props;\n    if (!pageX || !pageY) {\n      return;\n    }\n\n    this.setState({ styles: this._getStyles(this.props) });\n  }\n\n  componentDidMount() {\n    if (this.props.onOpen) {\n      this.props.onOpen();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (DIFF_KEYS.some(key => nextProps[key] !== this.props[key])) {\n      this.setState({\n        styles: this._getStyles(nextProps),\n        contentStyles: { ...this.state.contentStyles, ...nextProps.contentStyle },\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.onLeave) {\n      this.props.onLeave();\n    }\n  }\n\n  _getStyles = ({ pageX, containerX, pageY, containerY, height, width, style } = this.props) => ({\n    height: typeof height !== 'undefined' ? height : null,\n    width: typeof width !== 'undefined' ? width : null,\n    transformOrigin: pageX || pageY ? `${pageX - containerX}px ${pageY - containerY}px` : null,\n    ...style,\n  });\n\n  _setRenderNode = (dialog) => {\n    this._renderNode = findDOMNode(dialog);\n  };\n\n  _setContent = (content) => {\n    if (content !== null) {\n      this._content = findDOMNode(content);\n      const contentPadded = this._content.querySelectorAll('.md-list').length === 0;\n\n      this.setState({ contentPadded });\n    }\n  };\n\n  _handleContentResize = ({ scrollHeight, el: content }) => {\n    const maxHeight = content.style.maxHeight;\n    const dialog = content.parentNode;\n    content.style.maxHeight = 'none';\n    const title = this.props.title ? dialog.querySelector('.md-title--dialog') : null;\n    const footer = this.props.actions ? dialog.querySelector('.md-dialog-footer') : null;\n\n    const totalHeight = dialog.offsetHeight - (title ? title.offsetHeight : 0) - (footer ? footer.offsetHeight : 0);\n    content.style.maxHeight = maxHeight;\n    const equalHeight = totalHeight === scrollHeight;\n    if (equalHeight) {\n      const currentHeight = (this.state.contentStyles && this.state.contentStyles.maxHeight) || null;\n      if (currentHeight && currentHeight !== scrollHeight) {\n        this.setState({ contentStyles: this.props.contentStyle });\n      }\n    } else {\n      this.setState({ contentStyles: { maxHeight: totalHeight, ...this.props.contentStyle } });\n    }\n  };\n\n  render() {\n    const { contentPadded, styles, contentStyles } = this.state;\n    const {\n      id,\n      className,\n      titleStyle,\n      titleClassName,\n      footerStyle,\n      footerClassName,\n      contentClassName,\n      title,\n      contentComponent: Content,\n      contentProps,\n      actions,\n      children,\n      fullPage,\n      centered,\n      autopadContent,\n      paddedContent,\n      autosizeContent,\n      stackedActions,\n      /* eslint-disable no-unused-vars */\n      style,\n      contentStyle,\n      pageX,\n      pageY,\n      containerX,\n      containerY,\n      onOpen,\n      onLeave,\n      height,\n      width,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { 'aria-labelledby': labelledBy } = this.props;\n    const titleId = `${id}-title`;\n    if (!labelledBy && title) {\n      labelledBy = titleId;\n    }\n\n    const padDefined = typeof paddedContent !== 'undefined';\n    const dialogChildren = fullPage ? children : [\n      <DialogTitle\n        key=\"title\"\n        id={titleId}\n        style={titleStyle}\n        className={titleClassName}\n      >\n        {title}\n      </DialogTitle>,\n      <Content\n        ref={!padDefined && autopadContent ? this._setContent : null}\n        key=\"content\"\n        {...contentProps}\n        style={contentStyles}\n        className={cn('md-dialog-content', {\n          'md-dialog-content--padded': padDefined ? paddedContent : contentPadded,\n        }, contentClassName)}\n      >\n        {autosizeContent ? <ResizeObserver watchHeight watchWidth onResize={this._handleContentResize} /> : null}\n        {children}\n      </Content>,\n      <DialogFooter\n        key=\"footer\"\n        style={footerStyle}\n        className={footerClassName}\n        actions={actions}\n        stacked={stackedActions}\n      />,\n    ];\n\n    return (\n      <Paper\n        {...props}\n        id={id}\n        component={FocusContainer}\n        ref={this._setRenderNode}\n        style={styles}\n        className={cn('md-dialog', {\n          'md-dialog--full-page': fullPage,\n          'md-dialog--centered': centered,\n        }, className)}\n        role=\"dialog\"\n        aria-labelledby={labelledBy}\n      >\n        {dialogChildren}\n      </Paper>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport AccessibleFakeButton from '../Helpers/AccessibleFakeButton';\nimport Layover from '../Helpers/Layover';\nimport Dialog from '../Dialogs/Dialog';\n\nexport default class EditDialog extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    textFieldId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    dialogStyle: PropTypes.object,\n    dialogClassName: PropTypes.string,\n    dialogContentStyle: PropTypes.object,\n    dialogContentClassName: PropTypes.string,\n    children: PropTypes.node,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    visible: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    placeholder: PropTypes.bool,\n    title: PropTypes.node,\n    large: PropTypes.bool,\n    actions: Dialog.propTypes.actions,\n    dialogZDepth: PropTypes.number,\n    header: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      id,\n      dialogStyle,\n      dialogClassName,\n      dialogContentStyle,\n      dialogContentClassName,\n      textFieldId,\n      visible,\n      header,\n      onOpen,\n      children,\n      label,\n      title,\n      large,\n      actions,\n      placeholder,\n      dialogZDepth,\n      ...props\n    } = this.props;\n\n    const field = (\n      <AccessibleFakeButton\n        className={cn('md-edit-dialog__label', {\n          'md-edit-dialog__header': header,\n        }, themeColors({ hint: placeholder || header }))}\n        noFocusOutline={visible}\n        onClick={onOpen}\n        onFocus={onOpen}\n      >\n        {label}\n      </AccessibleFakeButton>\n    );\n\n    return (\n      <Layover\n        {...props}\n        id={`${id}-layover`}\n        toggle={field}\n        visible={visible}\n        block\n        belowAnchor={null}\n      >\n        <Dialog\n          id={id}\n          aria-labelledby={!large ? textFieldId : undefined}\n          style={dialogStyle}\n          className={cn('md-edit-dialog', themeColors({ background: true, themeText: false }), dialogClassName)}\n          contentStyle={dialogContentStyle}\n          contentClassName={cn('md-edit-dialog__content', dialogContentClassName)}\n          title={large ? title : null}\n          focusOnMount\n          containFocus={!!large}\n          paddedContent={false}\n          actions={large ? actions : null}\n          zDepth={dialogZDepth}\n        >\n          {children}\n        </Dialog>\n      </Layover>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { ENTER, ESC, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport themeColors from '../utils/themeColors';\nimport viewport from '../utils/Positioning/viewport';\nimport controlled from '../utils/PropTypes/controlled';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Layover from '../Helpers/Layover';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport TextField from '../TextFields/TextField';\nimport TableColumn from './TableColumn';\nimport EditDialog from './EditDialog';\nimport findTable from './findTable';\nimport findFixedTo from './findFixedTo';\n\n/**\n * The `EditDialogColumn` is used when there should be used when a table column's value\n * can be changed. It can either be displayed as a dialog or inline.\n *\n * All props that are not documented but provided will be passed on to the `TextField`\n * component.\n */\nexport default class EditDialogColumn extends PureComponent {\n  static VerticalAnchors = Layover.VerticalAnchors;\n  static HorizontalAnchors = Layover.HorizontalAnchors;\n  static Positions = Layover.Positions;\n\n  static propTypes = {\n    /**\n     * An optional id to use for the text field in the column. If this is omitted,\n     * the id will be `${dialogId}-field`.\n     *\n     * @see {@link #dialogId}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to use for the dialog that appears in the column. If this is omitted,\n     * the id will be `${rowId}-${cellIndex}-edit-dialog-field`.\n     */\n    dialogId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * The optional style to apply to the edit dialog's column.\n     */\n    style: PropTypes.object,\n\n    /**\n     * The optional className to apply to the edit dialog's column.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog's surrounding `Layover` component.\n     */\n    layoverStyle: PropTypes.object,\n\n    /**\n     * An optional className to the dialog's surrounding `Layover` component.\n     */\n    layoverClassName: PropTypes.string,\n\n    /**\n     * The optional style to apply to the edit dialog.\n     */\n    dialogStyle: PropTypes.object,\n\n    /**\n     * The optional className to apply to the edit dialog.\n     */\n    dialogClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog's content area. This is the area\n     * that holds the text field.\n     */\n    dialogContentStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the dialog's content area. This is the area\n     * that holds the text field.\n     */\n    dialogContentClassName: PropTypes.string,\n\n    /**\n     * The zDepth to apply to the dialog when not inline.\n     *\n     * @see {@link Papers/Paper#zDepth}\n     */\n    dialogZDepth: PropTypes.number.isRequired,\n\n    /**\n     * An optional style to apply to the text field.\n     */\n    textFieldStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the text field.\n     */\n    textFieldClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the text field's input.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the text field's input.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * Boolean if the edit dialog is currently disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the text field should be editable inline instead of in a dialog.\n     *\n     * @see {@link #inlineIcon}\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * An optional icon to set for the inline edit dialog column. Setting this prop to null\n     * will not render an icon.\n     */\n    inlineIcon: PropTypes.element,\n\n    /**\n     * The default value to use for the text field.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * A value to use for the edit dialog text field. This will make the component controlled\n     * so you will need to provide an `onChange` function.\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'onChange', 'defaultValue'),\n\n    /**\n     * An optional function to call when the text field's value has changed. This is required\n     * if the `value` prop has been defined.\n     *\n     * @see {@link TextFields/TextField#onChange}\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field gains focus.\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when the keydown event is triggered on the text field.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional label for the text field. When displaying an `inline` edit dialog column,\n     * the `placeholder` prop should be used instead. This is because the text field changes\n     * to the `block` type when `inline`.\n     *\n     * @see {@link #inline}\n     * @see {@link #placeholder}\n     * @see {@link TextFields/TextField#block}\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional placeholder for the text field.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * Boolean if the edit dialog should become a large dialog. When the dialog is large,\n     * the `title` prop is required.\n     *\n     * A large dialog has a Title followed by the text field, and then a cancel and ok action\n     * buttons below.\n     */\n    large: PropTypes.bool,\n\n    /**\n     * The title to use for the large edit dialog. This prop is required if the `large` prop\n     * is enabled.\n     */\n    title: PropTypes.node,\n\n    /**\n     * An optional `maxLength` to apply to the text field.\n     *\n     * @see {@link TextFields/TextField#maxLength}\n     */\n    maxLength: PropTypes.number,\n\n    /**\n     * An optional function to call when the \"Ok\" button has been clicked, the user presses enter\n     * on * the text field or when the `okOnOutsideClick` prop has been enabled and the user clicks\n     * somewhere on the page.\n     *\n     * The callback will include the current value and the click or keypress event.\n     * ```js\n     * onOkClick(value, event)\n     * ```\n     *\n     * @see {@link #large}\n     */\n    onOkClick: PropTypes.func,\n\n    /**\n     * The label to use for the \"Ok\" button in large dialogs.\n     *\n     * @see {@link #large}\n     */\n    okLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the \"Ok\" button in large dialogs should be styled with the primary color.\n     * To get a `default` styled button, set both `okPrimary` and `okSecondary` (or omit `okSecondary`)\n     * to `false`.\n     *\n     * @see {@link #large}\n     * @see {@link #okSecondary}\n     */\n    okPrimary: PropTypes.bool,\n\n    /**\n     * Boolean if the \"Ok\" button in large dialogs should be styled with the secondary color.\n     *\n     * @see {@link #large}\n     * @see {@link #okPrimary}\n     */\n    okSecondary: PropTypes.bool,\n\n    /**\n     * Any additional props to apply to the \"Ok\" button. This will override any of the other\n     * button props.\n     *\n     * @see {@link #okLabel}\n     * @see {@link #okPrimary}\n     * @see {@link #okSecondary}\n     */\n    okProps: PropTypes.object,\n\n    /**\n     * An optional function to call when the \"Cancel\" button has been clicked in large edit dialogs.\n     * The callback will include the text field's value before any edits occurred and the click event.\n     *\n     * ```js\n     * onCancelClick(previousValue, event)\n     * ```\n     *\n     * @see {@link #large}\n     */\n    onCancelClick: PropTypes.func,\n\n    /**\n     * The label to give to the \"Cancel\" button in large edit dialogs.\n     *\n     * @see {@link #large}\n     */\n    cancelLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the \"Cancel\" button in large dialogs should be styled with the primary color.\n     * To get a `default` styled button, set both `cancelPrimary` and `cancelSecondary` (or\n     * omit `cancelSecondary`) to `false`.\n     *\n     * @see {@link #large}\n     * @see {@link #cancelSecondary}\n     */\n    cancelPrimary: PropTypes.bool,\n\n    /**\n     * Boolean if the \"Cancel\" button in large dialogs should be styled with the secondary color.\n     *\n     * @see {@link #large}\n     * @see {@link #cancelPrimary}\n     */\n    cancelSecondary: PropTypes.bool,\n\n    /**\n     * Any additional props to apply to the \"Cancel\" button. This will override any of the other\n     * button props.\n     *\n     * @see {@link #cancelLabel}\n     * @see {@link #cancelPrimary}\n     * @see {@link #cancelSecondary}\n     */\n    cancelProps: PropTypes.object,\n\n    /**\n     * Boolean if the action for clicking somewhere on on the page while the dialog is open\n     * saves the changes or cancels to the previous value before opening the dialog.\n     *\n     * @see {@link #onOkClick}\n     * @see {@link #onCancelClick}\n     */\n    okOnOutsideClick: PropTypes.bool,\n\n    /**\n     * An optional function to call when a user clicks out of the text field.\n     */\n    onOutsideClick: PropTypes.func,\n\n    /**\n     * Boolean if the edit dialog should be closed if the user clicks somewhere else on the page\n     * while the dialog is open.\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * Boolean if the Edit Dialog should be visible by default. This only applies when the `inline` prop\n     * is not enabled.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * Boolean if the edit dialog should automatically open when the text field is focused for non-inline\n     * dialogs. This is enabled by default for backwards compatibility.\n     */\n    visibleOnFocus: PropTypes.bool,\n\n    /**\n     * The type for the text field in the edit dialog.\n     *\n     * @see {@link TextFields/TextField#type}\n     */\n    type: PropTypes.string,\n\n    /**\n     * This is how the dialog gets \"anchored\" to the table column.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is the animation position to use for the dialog.\n     *\n     * @see {@link Helpers/Layover#animationPosition}\n     */\n    animationPosition: positionShape,\n\n    /**\n     * This is how the dialog should be fixed within the table. When this is omitted, it will\n     * automatically use the responsive table as the fixture so that the dialog will close/adjust itself\n     * to the scrolling of the table.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * @see {@link Helpers/Layover#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#centered}\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#sameWidth}\n     */\n    sameWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#transitionName}\n     */\n    transitionName: PropTypes.string,\n\n    /**\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * The optional tooltip to render on hover.\n     */\n    tooltipLabel: PropTypes.node,\n\n    /**\n     * An optional delay to apply to the tooltip before it appears.\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position of the tooltip.\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the dialog.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedDialog: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: Layover.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: Layover.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: Layover.propTypes.minBottom,\n\n    /**\n     * Boolean if the edit dialog should attempt to scroll into view if the full\n     * dialog can not be displayed in the viewport when it was toggled open.\n     *\n     * @see {@link #scrollIntoViewPadding}\n     */\n    scrollIntoView: PropTypes.bool,\n\n    /**\n     * The amount of padding that should be applied when the cell is scrolled into view.\n     * This will be applied to the left of the cell.\n     */\n    scrollIntoViewPadding: PropTypes.number,\n\n    /**\n     * An optional function to call when the `click` event is triggered in the column.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mousedown` event is triggered in the column.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseup` event is triggered in the column.\n     */\n    onMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchstart` event is triggered in the column.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchend` event is triggered in the column.\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseenter` event is triggered in the column.\n     */\n    onMouseEnter: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseover` event is triggered in the column.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseleave` event is triggered in the column.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchmove` event is triggered in the column.\n     */\n    onTouchMove: PropTypes.func,\n\n    /**\n     * This is injected by the `TableRow` component.\n     * @access private\n     */\n    header: PropTypes.bool,\n\n    /**\n     * This is injected by the `TableRow` component and used to help generate the unique id for the text\n     * field.\n     *\n     * @access private\n     */\n    cellIndex: PropTypes.number,\n\n    /**\n     * @access private\n     */\n    adjusted: PropTypes.bool,\n\n    inlineIconChildren: deprecated(PropTypes.node, 'Use the `inlineIcon` prop instead'),\n    inlineIconClassName: deprecated(PropTypes.string, 'Use the `inlineIcon` prop instead'),\n    noIcon: deprecated(PropTypes.bool, 'Set the `inlineIcon` prop to `null` instead'),\n    enforceMinWidth: deprecated(\n      PropTypes.bool,\n      'The min width will always be enforced based on the `$md-edit-dialog-min-width` Sass variable.'\n    ),\n    scrollThreshold: deprecated(\n      PropTypes.number,\n      'Use `xThreshold` and `yThreshold` instead'\n    ),\n    transitionDuration: deprecated(\n      PropTypes.number,\n      'use `transitionEnterTimeout` and `transitionLeaveTimeout` instead'\n    ),\n  };\n\n  static defaultProps = {\n    type: 'text',\n    defaultValue: '',\n    okOnOutsideClick: true,\n    inlineIcon: <FontIcon>edit</FontIcon>,\n    okLabel: 'Save',\n    okPrimary: true,\n    cancelLabel: 'Cancel',\n    cancelPrimary: true,\n    animationPosition: EditDialogColumn.Positions.BELOW,\n    dialogZDepth: 1,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n    scrollIntoView: true,\n    scrollIntoViewPadding: 16,\n    minLeft: 0,\n    minRight: 0,\n    minBottom: 0,\n    visibleOnFocus: true,\n    defaultVisible: false,\n  };\n\n  static contextTypes = {\n    rowId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.defaultVisible,\n      value: props.defaultValue,\n      cancelValue: props.defaultValue,\n      actions: this._makeActions(props),\n      cellIndex: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this._column = findDOMNode(this);\n    this._table = findTable(this._column);\n    this._fixedTo = findFixedTo(this._table);\n\n    // If a developer creates their own component to wrap the EditDialogColumn, the cellIndex prop\n    // might not be defined if they don't pass ...props\n    const { cellIndex } = this.props;\n    if (!cellIndex && cellIndex !== 0) {\n      const columns = [].slice.call(this._column.parentNode.querySelectorAll('th,td'));\n      this.setState({ cellIndex: columns.indexOf(this._column) }); // eslint-disable-line react/no-did-mount-set-state\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      okLabel,\n      okPrimary,\n      okSecondary,\n      okProps,\n      cancelLabel,\n      cancelPrimary,\n      cancelSecondary,\n      cancelProps,\n    } = this.props;\n\n    if (okLabel !== nextProps.okLabel || okPrimary !== nextProps.okPrimary\n      || okSecondary !== nextProps.okSecondary || cancelLabel !== nextProps.cancelLabel\n      || cancelPrimary !== nextProps.cancelPrimary || cancelSecondary !== nextProps.cancelSecondary\n      || okProps !== nextProps.okProps || cancelProps !== nextProps.cancelProps\n    ) {\n      this.setState({ actions: this._makeActions(nextProps) });\n    }\n  }\n\n  _setField = (field) => {\n    this._field = field;\n  };\n\n  _makeActions = (props) => {\n    const {\n      okLabel,\n      okPrimary,\n      okSecondary,\n      okProps,\n      cancelLabel,\n      cancelPrimary,\n      cancelSecondary,\n      cancelProps,\n    } = props;\n\n    return [{\n      key: 'cancel',\n      children: cancelLabel,\n      primary: cancelPrimary && !cancelSecondary,\n      secondary: cancelSecondary,\n      ...cancelProps,\n      onClick: this._handleCancel,\n    }, {\n      key: 'ok',\n      children: okLabel,\n      primary: okPrimary && !okSecondary,\n      secondary: okSecondary,\n      ...okProps,\n      onClick: this._handleOk,\n    }];\n  };\n\n  _handleOpen = (e) => {\n    if (this._skipNextOpen) {\n      this._skipNextOpen = false;\n    } else if (this.props.visibleOnFocus || !e || e.type !== 'focus') {\n      const { scrollIntoView, scrollIntoViewPadding } = this.props;\n      if (scrollIntoView) {\n        const vp = viewport(this._column);\n        if (vp !== true && this._table && this._column && !this.props.inline) {\n          this._table.scrollLeft = this._column.offsetLeft - scrollIntoViewPadding;\n        }\n      }\n\n      this.setState({ visible: true, cancelValue: getField(this.props, this.state, 'value') });\n    }\n  };\n\n  _handleClose = (e) => {\n    const { onOutsideClick, okOnOutsideClick } = this.props;\n    if (onOutsideClick) {\n      onOutsideClick(e);\n    }\n\n    if (okOnOutsideClick) {\n      this._handleOk(e);\n    } else {\n      this._handleCancel(e);\n    }\n  };\n\n  _handleChange = (value, e) => {\n    if (this.props.onChange) {\n      this.props.onChange(value, e);\n    }\n\n    if (typeof this.props.value === 'undefined') {\n      this.setState({ value });\n    }\n  };\n\n  _handleFocus = (e) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n\n    if (this.props.inline) {\n      this.setState({ cancelValue: e.target.value });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    const { onKeyDown, okOnOutsideClick, large } = this.props;\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    const key = e.which || e.keyCode;\n    if (key === ENTER) {\n      this._handleOk(e);\n    } else if (key === ESC) {\n      this._handleCancel(e);\n    } else if (key === TAB && !large) {\n      // infinitely opens otherwise...\n      this._skipNextOpen = e.shiftKey;\n\n      if (okOnOutsideClick) {\n        this._handleOk(e);\n      } else {\n        this._handleCancel(e);\n      }\n    }\n  };\n\n  _handleOk = (e) => {\n    if (this.props.onOkClick) {\n      this.props.onOkClick(getField(this.props, this.state, 'value'), e);\n    }\n\n    this.setState({ visible: false });\n  };\n\n  _handleCancel = (e) => {\n    const value = this.state.cancelValue;\n    if (this.props.onCancelClick) {\n      this.props.onCancelClick(value, e);\n    }\n\n    const state = { visible: false };\n    if (typeof this.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    this.setState(state);\n  };\n\n  render() {\n    const { rowId } = this.context;\n    const {\n      style,\n      className,\n      layoverStyle,\n      layoverClassName,\n      dialogStyle,\n      dialogClassName,\n      dialogContentStyle,\n      dialogContentClassName,\n      dialogZDepth,\n      textFieldStyle,\n      textFieldClassName,\n      inputClassName,\n      large,\n      title,\n      inline,\n      inlineIcon,\n      maxLength,\n      label,\n      placeholder,\n      header,\n      anchor,\n      belowAnchor,\n      fixedTo,\n      animationPosition,\n      xThreshold,\n      yThreshold,\n      centered,\n      sameWidth,\n      repositionOnScroll,\n      repositionOnResize,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      tooltipLabel,\n      tooltipDelay,\n      tooltipPosition,\n      onClick,\n      onMouseDown,\n      onMouseUp,\n      onTouchStart,\n      onTouchEnd,\n      onMouseEnter,\n      onMouseOver,\n      onMouseLeave,\n      onTouchMove,\n      simplifiedDialog,\n      minLeft,\n      minRight,\n      minBottom,\n\n      // deprecated\n      noIcon,\n      inlineIconChildren,\n      inlineIconClassName,\n      /* eslint-disable no-unused-vars */\n      id: propId,\n      dialogId: propDialogId,\n      cellIndex: propCellIndex,\n      onOkClick,\n      okLabel,\n      okPrimary,\n      okSecondary,\n      okProps,\n      onCancelClick,\n      cancelLabel,\n      cancelPrimary,\n      cancelSecondary,\n      cancelProps,\n      okOnOutsideClick,\n      defaultValue,\n      adjusted,\n      scrollIntoView,\n      scrollIntoViewPadding,\n      defaultVisible,\n      visibleOnFocus,\n\n      // deprecated\n      scrollThreshold,\n      enforceMinWidth,\n      transitionDuration,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    const { visible, actions } = this.state;\n    const value = getField(this.props, this.state, 'value');\n    const cellIndex = getField(this.props, this.state, 'cellIndex');\n\n    let { id, dialogId } = this.props;\n    if (!dialogId) {\n      dialogId = `${id || `${rowId}-${cellIndex}`}-edit-dialog`;\n    }\n\n    if (!id) {\n      id = `${dialogId}-field`;\n    }\n\n    let inlineEditIcon;\n    if (inline && !noIcon) {\n      const icon = getDeprecatedIcon(inlineIconClassName, inlineIconChildren, inlineIcon);\n      if (icon) {\n        inlineEditIcon = React.cloneElement(icon, { key: 'edit-icon' });\n      }\n    }\n\n    const numeric = props.type === 'number';\n    const field = (\n      <TextField\n        {...props}\n        ref={this._setField}\n        style={textFieldStyle}\n        className={cn({ 'md-edit-dialog__blocked-field': inline }, textFieldClassName)}\n        inputClassName={cn({\n          'md-edit-dialog__header': header && inline,\n          'md-text-right': numeric,\n        }, themeColors({ hint: header && inline }), inputClassName)}\n        id={id}\n        label={label}\n        placeholder={placeholder}\n        value={value}\n        onFocus={this._handleFocus}\n        onChange={this._handleChange}\n        onKeyDown={this._handleKeyDown}\n        block={inline}\n        maxLength={visible ? maxLength : null}\n        rightIcon={inlineEditIcon}\n      />\n    );\n\n    let children;\n    if (inline) {\n      children = field;\n    } else {\n      const dialogLabel = value || value === 0 ? value : placeholder || label;\n      children = (\n        <EditDialog\n          style={layoverStyle}\n          className={layoverClassName}\n          dialogStyle={dialogStyle}\n          dialogClassName={dialogClassName}\n          dialogContentStyle={dialogContentStyle}\n          dialogContentClassName={dialogContentClassName}\n          id={dialogId}\n          textFieldId={id}\n          visible={visible}\n          onOpen={this._handleOpen}\n          onClose={this._handleClose}\n          label={dialogLabel}\n          actions={actions}\n          large={large}\n          title={title}\n          header={header}\n          placeholder={dialogLabel === placeholder || dialogLabel === label}\n          simplified={simplifiedDialog}\n          anchor={anchor}\n          belowAnchor={belowAnchor}\n          animationPosition={animationPosition}\n          xThreshold={xThreshold}\n          yThreshold={yThreshold}\n          centered={centered}\n          sameWidth={sameWidth}\n          minLeft={minLeft}\n          minRight={minRight}\n          minBottom={minBottom}\n          fixedTo={typeof fixedTo !== 'undefined' ? fixedTo : this._fixedTo}\n          dialogZDepth={dialogZDepth}\n          repositionOnScroll={repositionOnScroll}\n          repositionOnResize={repositionOnResize}\n          transitionName={transitionName}\n          transitionEnterTimeout={transitionEnterTimeout}\n          transitionLeaveTimeout={transitionLeaveTimeout}\n        >\n          {field}\n        </EditDialog>\n      );\n    }\n\n    return (\n      <TableColumn\n        style={style}\n        numeric={numeric}\n        className={cn('md-edit-dialog-column', className)}\n        header={header}\n        adjusted={false}\n        tooltipLabel={tooltipLabel}\n        tooltipDelay={tooltipDelay}\n        tooltipPosition={tooltipPosition}\n        onClick={onClick}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onTouchStart={onTouchStart}\n        onTouchMove={onTouchMove}\n        onMouseEnter={onMouseEnter}\n        onMouseOver={onMouseOver}\n        onMouseLeave={onMouseLeave}\n        onTouchEnd={onTouchEnd}\n      >\n        {children}\n      </TableColumn>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport SelectField from '../SelectFields/SelectField';\nimport withTableFixes from './withTableFixes';\nimport TableColumn from './TableColumn';\n\n/**\n * The `SelectFieldColumn` component is just a simple wrapper between a `SelectField` and\n * the `TableColumn` components.\n *\n * All props that are on the `SelectField` are also available here (except the naming of style or className).\n * See the [SelectField](/components/select-fields?tab=1#select-field-proptypes) for remaining prop descriptions.\n */\nclass SelectFieldColumn extends PureComponent {\n  static VerticalAnchors = SelectField.VerticalAnchors;\n  static HorizontalAnchors = SelectField.HorizontalAnchors;\n  static Positions = SelectField.Positions;\n  static propTypes = {\n    /**\n     * An optional id to use for the select field in the column. If this is omitted, it's value will be\n     * `${rowId}-${cellIndex}-select-field`\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * This is the optional style to apply to the `TableColumn`.\n     */\n    style: PropTypes.object,\n\n    /**\n     * This is the optional className to apply to the `TableColumn`.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The is the optional style to apply to the select field's menu container.\n     *\n     * @see {@link SelectFields/SelectField#style}\n     */\n    menuStyle: PropTypes.object,\n\n    /**\n     * The is the optional class name to apply to the select field's menu container.\n     *\n     * @see {@link SelectFields/SelectField#className}\n     */\n    menuClassName: PropTypes.string,\n\n    /**\n     * This is how the select field should be fixed within the table. When this is omitted,\n     * it will automatically use the responsive table as the fixture so that the select field\n     * will close/adjust itself to the scrolling of the table.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * Boolean if the select field should span the entire width of the column.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * The position for the select field.\n     *\n     * @see {@link SelectFields/SelectField#position}\n     */\n    position: positionShape,\n\n    /**\n     * This is injected by the `TableRow` component.\n     * @access private\n     */\n    header: PropTypes.bool,\n\n    /**\n     * @access private\n     */\n    adjusted: PropTypes.bool,\n\n    /**\n     * The optional tooltip to render on hover.\n     *\n     * @see {@link DataTables/TableColumn#tooltipLabel}\n     */\n    tooltipLabel: PropTypes.string,\n\n    /**\n     * An optional delay to apply to the tooltip before it appears.\n     *\n     * @see {@link DataTables/TableColumn#tooltipDelay}\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position of the tooltip.\n     *\n     * @see {@link DataTables/TableColumn#tooltipPosition}\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    wrapperStyle: deprecated(PropTypes.object, 'There is no longer a wrapper'),\n    wrapperClassName: deprecated(PropTypes.string, 'There is no longer a wrapper'),\n  };\n\n  static defaultProps = {\n    position: SelectFieldColumn.Positions.BELOW,\n    fullWidth: true,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n    simplifiedMenu: false,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      menuStyle,\n      menuClassName,\n      header,\n      tooltipLabel,\n      tooltipDelay,\n      tooltipPosition,\n      /* eslint-disable no-unused-vars */\n      adjusted,\n\n      // deprecated\n      wrapperStyle,\n      wrapperClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    return (\n      <TableColumn\n        header={header}\n        style={style}\n        className={cn('md-select-field-column', className)}\n        adjusted={false}\n        tooltipLabel={tooltipLabel}\n        tooltipDelay={tooltipDelay}\n        tooltipPosition={tooltipPosition}\n      >\n        <SelectField {...props} style={menuStyle} className={menuClassName} />\n      </TableColumn>\n    );\n  }\n}\n\nexport default withTableFixes(SelectFieldColumn, 'select-field');\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport mapToListParts from '../utils/mapToListParts';\nimport getField from '../utils/getField';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Menu from './Menu';\n\n/**\n * The `DropdownMenu` is just a simple wrapper to the `Menu` component. The main differences\n * is that the `toggle` component will now be the children and the list of items to display\n * will be the `menuItems` prop.\n *\n * The dropdown menu is mostly used to control the state of the menu and render a single element\n * as the toggle.\n */\nexport default class DropdownMenu extends PureComponent {\n  static Positions = Menu.Positions;\n  static HorizontalAnchors = Menu.HorizontalAnchors;\n  static VerticalAnchors = Menu.VerticalAnchors;\n  static propTypes = {\n    /**\n     * An id to use for the menu. This is required for accessibility.\n     *\n     * @see {@link Menus/Menu#id}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the menu's list.\n     *\n     * @see {@link Menus/Menu#listId}\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the menu.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the menu.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the list.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the list.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * Any additional props to provide to the list.\n     *\n     * @see {@link Menus/Menu#listProps}\n     */\n    listProps: PropTypes.object,\n\n    /**\n     * The z-depth to use for the list.\n     *\n     * @see {@link Menus/Menu/listZDepth}\n     */\n    listZDepth: PropTypes.number,\n\n    /**\n     * Boolean if the list should be displayed inline.\n     *\n     * @see {@link Lists/List#inline}\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * Boolean if the list's height should be restricted.\n     *\n     * @see {@link Menus/Menu#listHeightRestricted}\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list is currently visible. If this is defined, it will\n     * require the `onVisibilityChange` function to be defined since it will become\n     * a controlled component.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * Boolean if the menu's list should be visible by default.\n     */\n    defaultVisible: PropTypes.bool.isRequired,\n\n    /**\n     * An optional function to call when the button is clicked.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the visibility changes for the menu. The callback will\n     * include the next visibility state and the event that triggered the change.\n     *\n     * ```js\n     * onVisibilityChange(visible, event);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * This is a 0 to many relationship of `ListItem` to display in the menu's `List`. If the type\n     * of the item is a number or string, it will be passed to the `ListItem` as the `primaryText`.\n     * If it is an object, it should be the shape of the `ListItem` props. If it is a node, it will\n     * just be rendered in the `List`.\n     *\n     * @see {@link Lists/ListItem}\n     * @see {@link Menus/Menu#children}\n     */\n    menuItems: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.object,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.object,\n        PropTypes.node,\n      ])),\n    ]),\n\n    /**\n     * @see {@link Menus/Menu#toggle}\n     */\n    children: PropTypes.element.isRequired,\n\n    /**\n     * The anchor position of the menu's list.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is how the menu's list is fixed to the toggle.\n     *\n     * @see {@link Menus/Menu#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * This is the animation position for the menu's list.\n     *\n     * @see {@link Menus/Menu#position}\n     */\n    position: positionShape,\n\n    /**\n     * Boolean if the menu's list should gain the cascading styles.\n     *\n     * @see {@link Menus/Menu#cascading}\n     */\n    cascading: PropTypes.bool,\n\n    /**\n     * The zDepth to use for the lists that appear in cascading menus.\n     *\n     * @see {@link Menus/Menu#cascadingZDepth}\n     */\n    cascadingZDepth: PropTypes.number,\n\n    /**\n     * The anchor position for the cascading lists.\n     *\n     * @see {@link Menus/Menu#cascadingAnchor}\n     */\n    cascadingAnchor: anchorShape,\n\n    /**\n     * Boolean if the menu should display as a full width container. This will *not* update the button\n     * to be full width as well.\n     *\n     * @see {@link Menus/Menu#fullWidth}\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's container should display as `block` instead of `inline-block`.\n     *\n     * @see {@link Menus/Menu#block}\n     */\n    block: PropTypes.bool,\n\n    /**\n     * Boolean if the list should appear centered related to the button.\n     *\n     * @see {@link Menus/Menu#centered}\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list should be the same width as the button.\n     *\n     * @see {@link Menus/Menu#sameWidth}\n     */\n    sameWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Menus/Menu#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Menus/Menu#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * Boolean if the menu's list should be closed when an element outside of the menu has been clicked.\n     *\n     * @see {@link Menus/Menu#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * The transition name to use for the menu's list visibility changes.\n     *\n     * @see {@link Menus/Menu#transitionName}\n     */\n    transitionName: PropTypes.string,\n\n    /**\n     * The transition name to use when the menu's list gains visibility.\n     *\n     * @see {@link Menus/Menu#transitionEnterTimeout}\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * The transition timeout to use when the menu's list loses visibility.\n     *\n     * @see {@link Menus/Menu#transitionLeaveTimeout}\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: Menu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: Menu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: Menu.propTypes.minBottom,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    defaultVisible: false,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    if (typeof props.visible === 'undefined') {\n      this.state.visible = props.defaultVisible;\n    }\n  }\n\n  _handleClick = (e) => {\n    const { onVisibilityChange, children } = this.props;\n    const visible = !getField(this.props, this.state, 'visible');\n    if (onVisibilityChange) {\n      onVisibilityChange(visible, e);\n    }\n\n    const toggle = React.Children.only(children);\n    if (toggle.props.onClick) {\n      toggle.props.onClick(e);\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n    }\n  };\n\n  _handleClose = (e) => {\n    const { onVisibilityChange } = this.props;\n    const visible = false;\n    if (onVisibilityChange) {\n      onVisibilityChange(visible, e);\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n    }\n  };\n\n  render() {\n    const {\n      id,\n      listId,\n      menuItems,\n      children: propChildren,\n      simplifiedMenu,\n      /* eslint-disable no-unused-vars */\n      visible: propVisible,\n      onVisibilityChange,\n      defaultVisible,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const visible = getField(this.props, this.state, 'visible');\n\n    const children = React.Children.only(propChildren);\n    const toggle = React.cloneElement(children, {\n      id: children.props.id || `${id}-toggle`,\n      onClick: this._handleClick,\n    });\n\n    let items;\n    if (!Array.isArray(menuItems)) {\n      items = mapToListParts(menuItems);\n    } else {\n      items = menuItems.map(mapToListParts);\n    }\n\n    return (\n      <Menu\n        {...props}\n        simplified={simplifiedMenu}\n        id={id}\n        listId={listId}\n        toggle={toggle}\n        visible={visible}\n        onClose={this._handleClose}\n      >\n        {items}\n      </Menu>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Button from '../Buttons/Button';\nimport DropdownMenu from './DropdownMenu';\n\n/**\n * The `MenuButton` is a simple wrapper / combination of the `Button` and the `Menu`\n * components that can be uncontrolled.\n */\nexport default class MenuButton extends PureComponent {\n  static Positions = DropdownMenu.Positions;\n  static HorizontalAnchors = DropdownMenu.HorizontalAnchors;\n  static VerticalAnchors = DropdownMenu.VerticalAnchors;\n  static propTypes = {\n    /**\n     * An id to use for the menu button. This is required for accessibility.\n     *\n     * @see {@link Menus/Menu#id}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the menu's list.\n     *\n     * @see {@link Menus/Menu#listId}\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the button. If this is omitted, the button will automatically\n     * gain an id of `${id}-toggle`.\n     */\n    buttonId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the button.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the button.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the surrounding menu.\n     */\n    menuStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the surrounding menu.\n     */\n    menuClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the list.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the list.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * Any additional props to provide to the list.\n     *\n     * @see {@link Menus/Menu#listProps}\n     */\n    listProps: PropTypes.object,\n\n    /**\n     * The z-depth to use for the list.\n     *\n     * @see {@link Menus/Menu/listZDepth}\n     */\n    listZDepth: PropTypes.number,\n\n    /**\n     * Boolean if the list should be displayed inline.\n     *\n     * @see {@link Lists/List#inline}\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * Boolean if the list's height should be restricted.\n     *\n     * @see {@link Menus/Menu#listHeightRestricted}\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list is currently visible. If this is defined, it will\n     * require the `onVisibilityChange` function to be defined since it will become\n     * a controlled component.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * Boolean if the menu's list should be visible by default.\n     */\n    defaultVisible: PropTypes.bool.isRequired,\n\n    /**\n     * An optional function to call when the button is clicked.\n     *\n     * @see {@link #onMenuClick}\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mousedown` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseDown}\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseup` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseUp}\n     */\n    onMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseenter` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseEnter}\n     */\n    onMouseEnter: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mousemove` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseMove}\n     */\n    onMouseMove: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseleave` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseLeave}\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchstart` event is triggered by the button.\n     *\n     * @see {@link #onMenuTouchStart}\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchmove` event is triggered by the button.\n     *\n     * @see {@link #onMenuTouchMove}\n     */\n    onTouchMove: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchend` event is triggered by the button.\n     *\n     * @see {@link #onMenuTouchEnd}\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchcancel` event is triggered by the button.\n     *\n     * @see {@link #onMenuTouchCancel}\n     */\n    onTouchCancel: PropTypes.func,\n\n    /**\n     * An optional function to call when the `focus` event is triggered by the button.\n     *\n     * @see {@link #onMenuFocus}\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when the `blur` event is triggered by the button.\n     *\n     * @see {@link #onMenuBlur}\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keydown` event is triggered by the button.\n     *\n     * @see {@link #onMenuKeyDown}\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keyup` event is triggered by the button.\n     *\n     * @see {@link #onMenuKeyUp}\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the entire `MenuButton` is clicked. This can be triggered\n     * by clicking the button or any list item that appears in the menu list.\n     *\n     * @see {@link #onClick}\n     */\n    onMenuClick: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mousedown` event.\n     *\n     * @see {@link #onMouseDown}\n     */\n    onMenuMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseup` event.\n     *\n     * @see {@link #onMouseUp}\n     */\n    onMenuMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseenter` event.\n     *\n     * @see {@link #onMouseEnter}\n     */\n    onMenuMouseEnter: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mousemove` event.\n     *\n     * @see {@link #onMouseMove}\n     */\n    onMenuMouseMove: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseleave` event.\n     *\n     * @see {@link #onMouseLeave}\n     */\n    onMenuMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `touchstart` event.\n     *\n     * @see {@link @onTouchStart}\n     */\n    onMenuTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `touchmove` event.\n     *\n     * @see {@link @onTouchMove}\n     */\n    onMenuTouchMove: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `touchend` event.\n     *\n     * @see {@link @onTouchEnd}\n     */\n    onMenuTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `touchcancel` event.\n     *\n     * @see {@link @onTouchCancel}\n     */\n    onMenuTouchCancel: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `focus` event.\n     *\n     * @see {@link #onFocus}\n     */\n    onMenuFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `blur` event.\n     *\n     * @see {@link #onBlur}\n     */\n    onMenuBlur: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `keydown` event.\n     *\n     * @see {@link #onKeyDown}\n     */\n    onMenuKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `keyup` event.\n     *\n     * @see {@link #onKeyUp}\n     */\n    onMenuKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the visibility changes for the menu. The callback will\n     * include the next visibility state and the event that triggered the change.\n     *\n     * ```js\n     * onVisibilityChange(visible, event);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * This is a 0 to many relationship of `ListItem` to display in the menu's `List`. If the type\n     * of the item is a number or string, it will be passed to the `ListItem` as the `primaryText`.\n     * If it is an object, it should be the shape of the `ListItem` props. If it is a node, it will\n     * just be rendered in the `List`.\n     *\n     * @see {@link Lists/ListItem}\n     * @see {@link Menus/Menu#children}\n     */\n    menuItems: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.object,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.object,\n        PropTypes.node,\n      ])),\n    ]),\n\n    /**\n     * This should be the children to use in the `Button` that gets created as the menu's toggle.\n     *\n     * @see {@link Buttons/Button}\n     * @see {@link Menus/Menu#toggle}\n     */\n    children: PropTypes.node,\n\n    /**\n     * The anchor position of the menu's list.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is how the menu's list is fixed to the toggle.\n     *\n     * @see {@link Menus/Menu#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * This is the animation position for the menu's list.\n     *\n     * @see {@link Menus/Menu#position}\n     */\n    position: positionShape,\n\n    /**\n     * Boolean if the menu's list should gain the cascading styles.\n     *\n     * @see {@link Menus/Menu#cascading}\n     */\n    cascading: PropTypes.bool,\n\n    /**\n     * The zDepth to use for the lists that appear in cascading menus.\n     *\n     * @see {@link Menus/Menu#cascadingZDepth}\n     */\n    cascadingZDepth: PropTypes.number,\n\n    /**\n     * The anchor position for the cascading lists.\n     *\n     * @see {@link Menus/Menu#cascadingAnchor}\n     */\n    cascadingAnchor: anchorShape,\n\n    /**\n     * Boolean if the menu should display as a full width container. This will *not* update the button\n     * to be full width as well.\n     *\n     * @see {@link Menus/Menu#fullWidth}\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's container should display as `block` instead of `inline-block`.\n     *\n     * @see {@link Menus/Menu#block}\n     */\n    block: PropTypes.bool,\n\n    /**\n     * Boolean if the list should appear centered related to the button.\n     *\n     * @see {@link Menus/Menu#centered}\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list should be the same width as the button.\n     *\n     * @see {@link Menus/Menu#sameWidth}\n     */\n    sameWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Menus/Menu#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Menus/Menu#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * Boolean if the menu's list should be closed when an element outside of the menu has been clicked.\n     *\n     * @see {@link Menus/Menu#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * The transition name to use for the menu's list visibility changes.\n     *\n     * @see {@link Menus/Menu#transitionName}\n     */\n    transitionName: PropTypes.string,\n\n    /**\n     * The transition name to use when the menu's list gains visibility.\n     *\n     * @see {@link Menus/Menu#transitionEnterTimeout}\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * The transition timeout to use when the menu's list loses visibility.\n     *\n     * @see {@link Menus/Menu#transitionLeaveTimeout}\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: DropdownMenu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: DropdownMenu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: DropdownMenu.propTypes.minBottom,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    buttonChildren: deprecated(\n      PropTypes.node,\n      'To build a button, put any elements in the `children`. The `ListItem` have been moved to the `menuItems` prop'\n    ),\n    onMenuToggle: deprecated(PropTypes.bool, 'Use `onVisibilityChange` instead'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n  };\n\n  static defaultProps = {\n    defaultVisible: false,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n  };\n\n  render() {\n    const {\n      id,\n      listId,\n      buttonId,\n      menuStyle,\n      menuClassName,\n      listStyle,\n      listClassName,\n      listProps,\n      listZDepth,\n      listInline,\n      listHeightRestricted,\n      menuItems,\n      buttonChildren,\n      children,\n      anchor,\n      belowAnchor,\n      fixedTo,\n      position,\n      cascading,\n      cascadingAnchor,\n      cascadingZDepth,\n      fullWidth,\n      block,\n      centered,\n      sameWidth,\n      repositionOnScroll,\n      repositionOnResize,\n      xThreshold,\n      yThreshold,\n      closeOnOutsideClick,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      visible,\n      defaultVisible,\n      onVisibilityChange,\n      simplifiedMenu,\n      minLeft,\n      minRight,\n      minBottom,\n      fillViewportWidth,\n      fillViewportHeight,\n      onMenuClick,\n      onMenuMouseDown,\n      onMenuMouseUp,\n      onMenuMouseEnter,\n      onMenuMouseMove,\n      onMenuMouseLeave,\n      onMenuTouchStart,\n      onMenuTouchMove,\n      onMenuTouchCancel,\n      onMenuTouchEnd,\n      onMenuFocus,\n      onMenuBlur,\n      onMenuKeyDown,\n      onMenuKeyUp,\n      isOpen, // deprecated\n      defaultOpen, // deprecated\n      onMenuToggle, // deprecated\n      ...props\n    } = this.props;\n\n    let items = children;\n    let toggleChildren = buttonChildren;\n    if (typeof menuItems !== 'undefined') {\n      toggleChildren = children;\n      items = menuItems;\n    }\n\n    return (\n      <DropdownMenu\n        id={id}\n        listId={listId}\n        style={menuStyle}\n        className={menuClassName}\n        listStyle={listStyle}\n        listClassName={listClassName}\n        listProps={listProps}\n        listInline={listInline}\n        listZDepth={listZDepth}\n        listHeightRestricted={listHeightRestricted}\n        visible={typeof isOpen !== 'undefined' ? isOpen : visible}\n        defaultVisible={typeof defaultOpen !== 'undefined' ? defaultOpen : defaultVisible}\n        menuItems={items}\n        simplifiedMenu={simplifiedMenu}\n        anchor={anchor}\n        belowAnchor={belowAnchor}\n        fixedTo={fixedTo}\n        position={position}\n        cascading={cascading}\n        cascadingAnchor={cascadingAnchor}\n        cascadingZDepth={cascadingZDepth}\n        fullWidth={fullWidth}\n        block={block}\n        centered={centered}\n        sameWidth={sameWidth}\n        minLeft={minLeft}\n        minRight={minRight}\n        minBottom={minBottom}\n        fillViewportWidth={fillViewportWidth}\n        fillViewportHeight={fillViewportHeight}\n        repositionOnScroll={repositionOnScroll}\n        repositionOnResize={repositionOnResize}\n        xThreshold={xThreshold}\n        yThreshold={yThreshold}\n        closeOnOutsideClick={closeOnOutsideClick}\n        transitionName={transitionName}\n        transitionEnterTimeout={transitionEnterTimeout}\n        transitionLeaveTimeout={transitionLeaveTimeout}\n        onVisibilityChange={onMenuToggle || onVisibilityChange}\n        onClick={onMenuClick}\n        onMouseDown={onMenuMouseDown}\n        onMouseUp={onMenuMouseUp}\n        onMouseEnter={onMenuMouseEnter}\n        onMouseMove={onMenuMouseMove}\n        onMouseLeave={onMenuMouseLeave}\n        onTouchStart={onMenuTouchStart}\n        onTouchMove={onMenuTouchMove}\n        onTouchCancel={onMenuTouchCancel}\n        onTouchEnd={onMenuTouchEnd}\n        onFocus={onMenuFocus}\n        onBlur={onMenuBlur}\n        onKeyDown={onMenuKeyDown}\n        onKeyUp={onMenuKeyUp}\n      >\n        <Button {...props} id={buttonId}>\n          {toggleChildren}\n        </Button>\n      </DropdownMenu>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport fixedToShape from '../Helpers/fixedToShape';\nimport withTableFixes from './withTableFixes';\nimport MenuButton from '../Menus/MenuButton';\nimport TableColumn from './TableColumn';\n\nclass MenuButtonColumn extends PureComponent {\n  static Positions = MenuButton.Positions;\n  static HorizontalAnchors = MenuButton.HorizontalAnchors;\n  static VerticalAnchors = MenuButton.VerticalAnchors;\n  static propTypes = {\n    /**\n     * An optional id to use for the menu button in the column. If this is omitted, it's value will be\n     * `${rowId}-${cellIndex}-menu-button`\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * This is the optional style to apply to the `TableColumn`.\n     */\n    style: PropTypes.object,\n\n    /**\n     * This is the optional className to apply to the `TableColumn`.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The is the optional style to apply to the menu button's menu container.\n     *\n     * @see {@link Menus/MenuButton#style}\n     */\n    menuStyle: PropTypes.object,\n\n    /**\n     * The is the optional class name to apply to the menu button's menu container.\n     *\n     * @see {@link Menus/MenuButton#className}\n     */\n    menuClassName: PropTypes.string,\n\n    /**\n     * This is how the select field should be fixed within the table. When this is omitted,\n     * it will automatically use the responsive table as the fixture so that the select field\n     * will close/adjust itself to the scrolling of the table.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * The optional tooltip to render on hover.\n     *\n     * @see {@link DataTables/TableColumn#tooltipLabel}\n     */\n    tooltipLabel: PropTypes.string,\n\n    /**\n     * An optional delay to apply to the tooltip before it appears.\n     *\n     * @see {@link DataTables/TableColumn#tooltipDelay}\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position of the tooltip.\n     *\n     * @see {@link DataTables/TableColumn#tooltipPosition}\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * This is injected by the `TableRow` component.\n     * @access private\n     */\n    header: PropTypes.bool,\n\n    /**\n     * @access private\n     */\n    adjusted: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    simplifiedMenu: false,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      menuStyle,\n      menuClassName,\n      header,\n      adjusted,\n      tooltipLabel,\n      tooltipDelay,\n      tooltipPosition,\n      ...props\n    } = this.props;\n    return (\n      <TableColumn\n        style={style}\n        className={className}\n        header={header}\n        adjusted={adjusted}\n        tooltipLabel={tooltipLabel}\n        tooltipDelay={tooltipDelay}\n        tooltipPosition={tooltipPosition}\n      >\n        <MenuButton {...props} style={menuStyle} className={menuClassName} />\n      </TableColumn>\n    );\n  }\n}\n\nexport default withTableFixes(MenuButtonColumn, 'menu-button');\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport fixedToShape from '../Helpers/fixedToShape';\nimport withTableFixes from './withTableFixes';\nimport DropdownMenu from '../Menus/DropdownMenu';\nimport TableColumn from './TableColumn';\n\nclass DropdownMenuColumn extends PureComponent {\n  static Positions = DropdownMenu.Positions;\n  static HorizontalAnchors = DropdownMenu.HorizontalAnchors;\n  static VerticalAnchors = DropdownMenu.VerticalAnchors;\n  static propTypes = {\n    /**\n     * An optional id to use for the menu button in the column. If this is omitted, it's value will be\n     * `${rowId}-${cellIndex}-menu-button`\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * This is the optional style to apply to the `TableColumn`.\n     */\n    style: PropTypes.object,\n\n    /**\n     * This is the optional className to apply to the `TableColumn`.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The is the optional style to apply to the menu button's menu container.\n     *\n     * @see {@link Menus/DropdownMenu#style}\n     */\n    menuStyle: PropTypes.object,\n\n    /**\n     * The is the optional class name to apply to the menu button's menu container.\n     *\n     * @see {@link Menus/DropdownMenu#className}\n     */\n    menuClassName: PropTypes.string,\n\n    /**\n     * This is how the select field should be fixed within the table. When this is omitted,\n     * it will automatically use the responsive table as the fixture so that the select field\n     * will close/adjust itself to the scrolling of the table.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * The optional tooltip to render on hover.\n     *\n     * @see {@link DataTables/TableColumn#tooltipLabel}\n     */\n    tooltipLabel: PropTypes.string,\n\n    /**\n     * An optional delay to apply to the tooltip before it appears.\n     *\n     * @see {@link DataTables/TableColumn#tooltipDelay}\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position of the tooltip.\n     *\n     * @see {@link DataTables/TableColumn#tooltipPosition}\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * This is injected by the `TableRow` component.\n     * @access private\n     */\n    header: PropTypes.bool,\n\n    /**\n     * @access private\n     */\n    adjusted: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    simplifiedMenu: false,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      menuStyle,\n      menuClassName,\n      header,\n      adjusted,\n      tooltipLabel,\n      tooltipDelay,\n      tooltipPosition,\n      ...props\n    } = this.props;\n    return (\n      <TableColumn\n        style={style}\n        className={className}\n        header={header}\n        adjusted={adjusted}\n        tooltipLabel={tooltipLabel}\n        tooltipDelay={tooltipDelay}\n        tooltipPosition={tooltipPosition}\n      >\n        <DropdownMenu {...props} style={menuStyle} className={menuClassName} />\n      </TableColumn>\n    );\n  }\n}\n\nexport default withTableFixes(DropdownMenuColumn, 'menu-button');\n","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport oneRequired from '../utils/PropTypes/oneRequired';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport CardTitleBlock from '../Cards/CardTitleBlock';\n\n/**\n * The `TableCardHeader` is used when contextual actions should appear when\n * a user selects a row.\n */\nexport default class TableCardHeader extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The component to render as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * The transition name to use when the contextual header appears.\n     */\n    transitionName: PropTypes.string.isRequired,\n\n    /**\n     * The transition time to use when the contextual header appears.\n     */\n    transitionEnterTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The transition time to use when the contextual header disappears.\n     */\n    transitionLeaveTimeout: PropTypes.number.isRequired,\n\n    /**\n     * An optional title to display. It is invalid to have both `title` and `leftChildren`\n     * defined as only one will be used.\n     */\n    title: oneRequired(PropTypes.node, 'leftChildren', 'children'),\n\n    /**\n     * An optional id to provide to the title.\n     */\n    titleId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional title to display in the contextual header. This will get wrapped in an `h2`\n     * tag and additional styles applied.\n     */\n    contextualTitle: PropTypes.node,\n\n    /**\n     * An optional id to provide to the contextual title.\n     */\n    contextualTitleId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * Any additional children to display in the contextual header. This will be displayed after\n     * the optional `contextualTile` and before the `actions`.\n     */\n    contextualChildren: PropTypes.node,\n\n    /**\n     * An optional button or list of buttons to display instead of a title.\n     */\n    leftChildren: invalidIf(PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]), 'title'),\n\n    /**\n     * An additional children to display after the `title` or `leftChildren` prop.\n     * This is _normally_ a list of icon button or menu button.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]),\n\n    /**\n     * An optional button/menu button or a list of button/menu button to display in the\n     * contextual header once the user has selected a row or multiple rows.\n     */\n    actions: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]),\n\n    /**\n     * Boolean if the `actions` prop should not have each element cloned with additional\n     * class names.\n     */\n    noActionsAdjust: PropTypes.bool,\n\n    /**\n     * Boolean if the `children` prop should not have each element cloned with additional\n     * class names.\n     */\n    noChildrenAdjust: PropTypes.bool,\n\n    /**\n     * Boolean if the `leftChildren` prop should not have each element cloned with additional\n     * class names.\n     */\n    noLeftChildrenClone: PropTypes.bool,\n\n    /**\n     * Boolean if the contextual header is currently visible.\n     */\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    component: 'header',\n    transitionName: 'md-drop-down',\n    transitionEnterTimeout: 150,\n    transitionLeaveTimeout: 150,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { animating: false };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { visible } = this.props;\n    const { visible: nVisible, transitionEnterTimeout, transitionLeaveTimeout } = nextProps;\n    const timeout = !nVisible ? transitionLeaveTimeout : transitionEnterTimeout;\n    if (visible !== nVisible) {\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n      }\n\n      this._timeout = setTimeout(() => {\n        this._timeout = setTimeout(() => {\n          this._timeout = null;\n          this.setState({ animating: false });\n        }, timeout);\n      }, TICK);\n\n      if (!this.state.animating) {\n        this.setState({ animating: true });\n      }\n    }\n  }\n\n  _cloneCellRight(noAdjust, children) {\n    if (noAdjust || !children) {\n      return children;\n    }\n\n    return Children.map(Children.toArray(children), (child, i) => {\n      if (i === 0) {\n        return cloneElement(child, { className: cn('md-cell--right', child.props.className) });\n      }\n\n      return child;\n    });\n  }\n\n  _cloneLeftChildren(noClone, children) {\n    if (noClone || !children) {\n      return children;\n    }\n\n    return Children.map(Children.toArray(children), child => cloneElement(child, {\n      className: cn('md-btn--dialog', child.props.className),\n    }));\n  }\n\n  render() {\n    const { animating } = this.state;\n    const {\n      style,\n      className,\n      title,\n      titleId,\n      actions,\n      contextualTitleId,\n      contextualChildren,\n      noActionsAdjust,\n      noChildrenAdjust,\n      noLeftChildrenClone,\n      visible,\n      /* eslint-disable no-unused-vars */\n      children: propChildren,\n      leftChildren: propLeftChildren,\n      contextualTitle: propContextualTitle,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { children, leftChildren, contextualTitle } = this.props;\n    children = this._cloneCellRight(noChildrenAdjust, children);\n    leftChildren = this._cloneLeftChildren(noLeftChildrenClone, leftChildren);\n\n    if (title) {\n      children = (\n        <div className=\"md-card-title\" key=\"main-title\">\n          <CardTitleBlock id={titleId} title={title} />\n          {children}\n        </div>\n      );\n    } else if (leftChildren) {\n      leftChildren = Children.toArray(leftChildren);\n\n      if (children) {\n        children = leftChildren.concat(Children.toArray(children));\n      } else {\n        children = leftChildren;\n      }\n    }\n\n    if (contextualTitle) {\n      contextualTitle = (\n        <h2\n          id={contextualTitleId}\n          className=\"md-card-title--title md-card-title--title-contextual\"\n          tabIndex={contextualTitleId ? -1 : null}\n        >\n          {contextualTitle}\n        </h2>\n      );\n    }\n\n    const contextualHeader = (\n      <div key=\"contextual-header\" className=\"md-card-title md-card-title--contextual\">\n        {contextualTitle}\n        {contextualChildren}\n        {this._cloneCellRight(noActionsAdjust, actions)}\n      </div>\n    );\n\n    let mergedStyles = style;\n    if (animating) {\n      mergedStyles = Object.assign({}, style, { overflow: 'hidden' });\n    }\n\n    return (\n      <CSSTransitionGroup\n        {...props}\n        style={mergedStyles}\n        className={cn('md-table-card-header', {\n          'md-table-card-header--no-title': !title,\n        }, className)}\n      >\n        {children}\n        {visible ? contextualHeader : null}\n      </CSSTransitionGroup>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport { ESC } from '../constants/keyCodes';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getField from '../utils/getField';\nimport toggleScroll from '../utils/toggleScroll';\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport Dialog from './Dialog';\nimport Portal from '../Helpers/Portal';\n\n/**\n * The `DialogContainer` component is used for dynamically creating the `Dialog` with\n * transitions.\n */\nexport default class DialogContainer extends PureComponent {\n  /* eslint-disable max-len */\n  static propTypes = {\n    /**\n     * An id to use for the `Dialog` once it has been opened. This is used for the\n     * [dialog role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_dialog_role).\n     * This is used to generate an `id` for the `title` prop when it has been defined.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n    /* eslint-enable max-len */\n\n    /**\n     * An optional accessibility prop to use when the `Dialog` is opened. This should be an id\n     * pointing to some text that describes the content of the dialog. For accessibility\n     * reasons, one of the following props must be defined:\n     * - `title`\n     * - `aria-describedby`\n     * - `aria-labelledby`\n     * - `aria-label`\n     *\n     * An example usage:\n     *\n     * ```js\n     * <Dialog id=\"accessible-example\" visible aria-describedby=\"accessible-content\">\n     *   <p id=\"accessible-content\">This is some content that describes the dialog.</p>\n     * </Dialog>\n     * ```\n     */\n    'aria-describedby': oneRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'title', 'aria-labelledby', 'aria-label'),\n\n    /**\n     * An optional accessibility prop to use when the `title` prop is not given. This should be\n     * an id pointing to a `h` tag that labels the dialog.\n     *\n     * An example usage:\n     *\n     * ```js\n     * <Dialog visible id=\"accessible-example\" aria-labelledby=\"accessible-dialog-label\">\n     *   <h2 id=\"accessible-dialog-label\">Some Accessible Dialog</h2>\n     * </Dialog>\n     * ```\n     */\n    'aria-labelledby': PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional accessibility prop to use when the `title` and `aria-labelledby` props are\n     * not defined. This should be a string that describes what is in the `Dialog`.\n     *\n     * An example usage:\n     *\n     * ```js\n     * <Dialog visible id=\"accessible-example\" aria-label=\"Some Accessible Dialog\">\n     *   <p>Lorem Ipsum</p>\n     * </Dialog>\n     * ```\n     */\n    'aria-label': PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the dialog's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog itself when the `visible` prop is `true`.\n     */\n    dialogStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the dialog itself when the `visible` prop is `true`.\n     */\n    dialogClassName: PropTypes.string,\n\n    /**\n     * An optional styke to apply to the title.\n     */\n    titleStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the title.\n     */\n    titleClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the footer. This is used when the `actions`\n     * prop is defined.\n     */\n    footerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the footer. This is used when the `actions`\n     * prop is defined.\n     */\n    footerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog's content.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the dialog's content.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * The component to render the dialog's container in.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * The component to render the dialog's content in.\n     */\n    contentComponent: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * The content to display in the dialog once open.\n     */\n    children: PropTypes.node,\n\n    /**\n     * A single action or a list of actions to display in the dialog. This can either be a list\n     * of `FlatButton` props or `<Button flat {...props} />` elements.\n     */\n    actions: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.object,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.object,\n      ])),\n    ]),\n\n    /**\n     * Boolean if the `Dialog` is current visible.\n     */\n    visible: PropTypes.bool.isRequired,\n\n    /**\n     * An optional function to call when the `visible` prop is changed from `false` to `true`.\n     */\n    onShow: PropTypes.func,\n\n    /**\n     * A function to call that will close the dialog. This is required when the `modal` and `fullPage`\n     * props are not `true`.\n     */\n    onHide: (props, propName, ...args) => {\n      let validator = PropTypes.func;\n      if (!props.modal && !props.fullPage) {\n        validator = validator.isRequired;\n      }\n\n      return validator(props, propName, ...args);\n    },\n\n    /**\n     * Boolean if the dialog should behave like a modal. This means that the dialog can only\n     * be closed by clicking on an action instead of also clicking on the overlay.\n     */\n    modal: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should be displayed as a full page dialog.\n     */\n    fullPage: (props, propName, componentName, ...args) => {\n      if (typeof props[propName] === 'undefined') {\n        return null;\n      }\n      const componentNameSafe = componentName || '<<anonymous>>';\n\n      let err = PropTypes.bool(props, propName, componentName, ...args);\n\n      if (!err && typeof props.title !== 'undefined') {\n        err = new Error(\n          `You provided a \\`title\\` ${location} to the \\`${componentNameSafe}\\` when \\`fullPage\\` ` +\n          'has been set to true. A title for a full page dialog should be rendered as a child instead.'\n        );\n      }\n\n      return err;\n    },\n\n    /**\n     * An optional pageX location to use when rendering a full page dialog. This is used to set the location\n     * the dialog should appear from.\n     */\n    pageX: PropTypes.number,\n\n    /**\n     * An optional pageY location to use when rendering a full page dialog. This is used to set the location\n     * the dialog should appear from.\n     */\n    pageY: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/FocusContainer#additionalFocusKeys}\n     */\n    additionalFocusKeys: Dialog.propTypes.additionalFocusKeys,\n\n    /**\n     * @see {@link Helpers/FocusContainer#initialFocus}\n     */\n    initialFocus: Dialog.propTypes.initialFocus,\n\n    /**\n     * @see {@link Helpers/FocusContainer#focusOnMount}\n     */\n    focusOnMount: Dialog.propTypes.focusOnMount,\n\n    /**\n     * @see {@link Helpers/FocusContainer#containFocus}\n     */\n    containFocus: Dialog.propTypes.containFocus,\n\n    /**\n     * The transition enter timeout for the dialog.\n     */\n    transitionEnterTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The transition leave timeout for the dialog.\n     */\n    transitionLeaveTimeout: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the dialog should be closable by pressing the escape key.\n     * This will always be considered `false` of the `modal` props is `true`.\n     */\n    closeOnEsc: PropTypes.bool,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the dialog.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * Since the `Dialog` uses the `Portal` component, you can pass an optional HTML Node to render\n     * the dialog in instead of the `document.body`.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the dialog should be rendered as the last child in the `renderNode` or `body` instead\n     * of as the first.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * An optional title for the dialog.\n     */\n    title: PropTypes.node,\n\n    /**\n     * Boolean if the dialog should animate into view if it is constructed with `visible` enabled.\n     *\n     * This basically means that if the `Dialog` has `visible` enabled on initial page load, does it animate?\n     * In some cases, it can also mean if the `Dialog` is added to the render tree with `visible` enabled,\n     * does it animate?\n     */\n    defaultVisibleTransitionable: PropTypes.bool,\n\n    /**\n     * Boolean if the Dialog should no longer try to prevent the parent container from scrolling while visible.\n     * In most cases, this will attempt to prevent the main window scrolling. If this dialog is nested in another\n     * dialog, it will attempt to prevent the parent dialog from scrolling.\n     */\n    disableScrollLocking: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should automatically try to determine if the content\n     * should be padded. It will be padded if the dialog does not contain a `List`.\n     */\n    autopadContent: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog content's size should automatically be resized to overflow\n     * correctly when there is a lot of content. This will calculate and apply some `maxHeight`\n     * to the `contentStyle`.\n     */\n    autosizeContent: PropTypes.bool,\n\n    /**\n     * An optional height to apply to the dialog. This is used if it is easier to just apply height/width\n     * with for specific dialogs instead of in CSS.\n     *\n     * **This prop should not be used if the `fullPage` prop is enabled.**\n     *\n     * @see {@link #fullPage}\n     * @see {@link #width}\n     */\n    height: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional width to apply to the dialog. This is used if it is easier to just apply height/width\n     * with for specific dialogs instead of in CSS.\n     *\n     * **This prop should not be used if the `fullPage` prop is enabled.**\n     *\n     * @see {@link #fullPage}\n     * @see {@link #height}\n     */\n    width: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * Boolean if the actions should be stacked on top of each other. If this value is `undefined`, it will\n     * automatically attempt to guess if the items should be stacked.\n     */\n    stackedActions: PropTypes.bool,\n\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    transitionName: deprecated(PropTypes.string, 'The transition name will be managed by the component'),\n    transitionEnter: deprecated(PropTypes.bool, 'The transition will always be enforced'),\n    transitionLeave: deprecated(PropTypes.bool, 'The transition will always be enforced'),\n    actionLeft: deprecated(PropTypes.node, 'Use the `fullPage` prop instead'),\n    actionRight: deprecated(PropTypes.node, 'Use the `fullPage` prop instead'),\n    close: deprecated(PropTypes.func, 'Use `onHide` instead.'),\n  };\n\n  static defaultProps = {\n    autopadContent: true,\n    autosizeContent: true,\n    component: 'span',\n    closeOnEsc: true,\n    contentComponent: 'section',\n    focusOnMount: true,\n    transitionEnterTimeout: 300,\n    transitionLeaveTimeout: 300,\n    defaultVisibleTransitionable: false,\n  };\n\n  static contextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const visible = typeof props.isOpen !== 'undefined' ? props.isOpen : props.visible;\n    const dialogVisible = visible && !props.defaultVisibleTransitionable;\n\n    this.state = {\n      active: visible && !props.fullPage,\n      overlay: visible && !props.fullPage,\n      portalVisible: visible,\n      dialogVisible,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.isOpen && !this.props.visible) {\n      return;\n    }\n\n    this._mountDialog(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const visible = typeof nextProps.isOpen !== 'undefined' ? nextProps.isOpen : nextProps.visible;\n    if (this.props.isOpen === visible || this.props.visible === visible) {\n      return;\n    }\n\n    const el = getField(this.props, this.context, 'renderNode') || window;\n    let { scrollX: pageX, scrollY: pageY } = el;\n    if (typeof el.scrollTop !== 'undefined' && typeof el.scrollLeft !== 'undefined') {\n      pageX = el.scrollLeft;\n      pageY = el.scrollTop;\n    } else if (typeof el.scrollY !== 'undefined' && typeof el.scrollX !== 'undefined') {\n      pageX = el.scrollX;\n      pageY = el.scrollY;\n    }\n\n    this._pageX = pageX;\n    this._pageY = pageY;\n\n    if (this._inTimeout) {\n      clearTimeout(this._inTimeout);\n      this._inTimeout = null;\n    }\n\n    if (visible) {\n      this._activeElement = document.activeElement;\n      this._mountPortal(nextProps);\n    } else {\n      this.setState({ dialogVisible: false, active: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { visible, closeOnEsc, modal } = this.props;\n    const escapable = !modal && closeOnEsc;\n    const prevEscapable = !prevProps.modal && prevProps.closeOnEsc;\n\n    // Only going to support visible here since it was not implemented before.\n    if (visible === prevProps.visible && escapable === prevEscapable) {\n      return;\n    }\n\n    let add = false;\n    let remove = false;\n\n    if (escapable !== prevEscapable) {\n      add = visible && escapable;\n      remove = !visible || (prevEscapable && !escapable);\n    } else if (escapable) {\n      add = visible;\n      remove = !visible;\n    }\n\n    if (add) {\n      window.addEventListener('keydown', this._handleEscClose);\n    } else if (remove) {\n      window.removeEventListener('keydown', this._handleEscClose);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.isOpen || this.props.visible) {\n      toggleScroll(false);\n    }\n\n    if (this.props.visible && (this.props.closeOnEsc && !this.props.modal)) {\n      window.removeEventListener('keydown', this._handleEscClose);\n    }\n\n    if (this._inTimeout) {\n      clearTimeout(this._inTimeout);\n    }\n  }\n\n  _setContainer = (container) => {\n    if (container !== null) {\n      this._container = findDOMNode(container);\n    }\n  };\n\n  _handleEscClose = (e) => {\n    if ((e.which || e.keyCode) === ESC) {\n      (this.props.onHide || this.props.close)(e);\n      window.removeEventListener('keydown', this._handleEscClose);\n    }\n  };\n\n  _mountPortal = (props) => {\n    this._mountDialog(props);\n    this.setState({ portalVisible: true });\n  };\n\n  _mountDialog = (props) => {\n    const { fullPage, onShow } = props;\n    this._inTimeout = setTimeout(() => {\n      this._inTimeout = fullPage ? null : setTimeout(() => {\n        this._inTimeout = null;\n        this.setState({ active: true });\n      }, TICK);\n      this.setState({ dialogVisible: true, overlay: !fullPage }, onShow);\n    }, TICK);\n  };\n\n  _unmountPortal = () => {\n    this.setState({ portalVisible: false });\n  };\n\n  _handleClick = (e) => {\n    const visible = typeof this.props.isOpen !== 'undefined' ? this.props.isOpen : this.props.visible;\n    if (this.props.modal || !visible || e.target !== this._container) {\n      return;\n    }\n\n    (this.props.onHide || this.props.close)(e);\n  };\n\n  _handleDialogMounting = (dialog) => {\n    const { disableScrollLocking } = this.props;\n    if (dialog === null) {\n      if (this._activeElement) {\n        this._activeElement.focus();\n      }\n\n      if (!disableScrollLocking) {\n        toggleScroll(false, this.scrollEl);\n      }\n\n      this._activeElement = null;\n      this.setState({ overlay: false });\n    } else {\n      const container = document.querySelector(`#${this.props.id}`);\n      if (!container || disableScrollLocking) {\n        return;\n      }\n\n      let el = getField(this.props, this.context, 'renderNode');\n      let node = container.parentNode;\n      while (node && node.classList && !el) {\n        if (node.classList.contains('md-dialog')) {\n          el = node;\n        }\n\n        node = node.parentNode;\n      }\n\n      this.scrollEl = el;\n      toggleScroll(true, el);\n    }\n  };\n\n  render() {\n    const { overlay, active, dialogVisible, portalVisible } = this.state;\n    const {\n      style,\n      className,\n      dialogStyle,\n      dialogClassName,\n      modal,\n      fullPage,\n      component,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      lastChild,\n      portal,\n      /* eslint-disable no-unused-vars */\n      visible: propVisible,\n      renderNode: propRenderNode,\n      closeOnEsc,\n      onShow,\n      onHide,\n      disableScrollLocking,\n      defaultVisibleTransitionable,\n\n      // deprecated\n      close,\n      isOpen,\n      actionLeft,\n      actionRight,\n      transitionName,\n      transitionEnter,\n      transitionLeave,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const renderNode = getField(this.props, this.context, 'renderNode');\n    const dialog = (\n      <Dialog\n        key=\"dialog\"\n        style={dialogStyle}\n        className={cn('md-background--card', dialogClassName)}\n        ref={this._handleDialogMounting}\n        centered={!fullPage}\n        fullPage={fullPage}\n        {...props}\n        containerX={this._pageX}\n        containerY={this._pageY}\n        onLeave={this._unmountPortal}\n      />\n    );\n\n    const container = (\n      <CSSTransitionGroup\n        component={component}\n        ref={this._setContainer}\n        style={style}\n        className={cn('md-dialog-container', {\n          'md-overlay': !fullPage && overlay,\n          'md-pointer--hover': !fullPage && overlay && !modal,\n          'md-overlay--active': !fullPage && active && overlay,\n        }, className)}\n        transitionName={`md-dialog--${fullPage ? 'full-page' : 'centered'}`}\n        transitionEnterTimeout={transitionEnterTimeout}\n        transitionLeaveTimeout={transitionLeaveTimeout}\n        tabIndex={-1}\n        onClick={this._handleClick}\n      >\n        {dialogVisible ? dialog : null}\n      </CSSTransitionGroup>\n    );\n\n    if (!portal) {\n      return portalVisible ? container : null;\n    }\n\n    return (\n      <Portal visible={portalVisible} renderNode={renderNode} lastChild={lastChild}>\n        {container}\n      </Portal>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport Portal from '../Helpers/Portal';\n\nexport default class Overlay extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    active: PropTypes.bool,\n    visible: PropTypes.bool.isRequired,\n    renderNode: PropTypes.object,\n    onClick: PropTypes.func,\n  };\n\n  static childContextTypes = {\n    isInPortal: PropTypes.bool,\n  };\n\n  getChildContext() {\n    // Always want the overlay to render in a separate subtree until 1.1.0\n    return { isInPortal: false };\n  }\n\n  render() {\n    const { active, visible, renderNode, onClick, style, className } = this.props;\n    return (\n      <Portal visible={visible} renderNode={renderNode}>\n        <div\n          style={style}\n          className={cn('md-overlay md-overlay--drawer md-pointer--hover', {\n            'md-overlay--active': active,\n          }, className)}\n          onClick={onClick}\n        />\n      </Portal>\n    );\n  }\n}\n","/** @module Drawers/DrawerTypes */\n\n/**\n * An enum for all the different type of drawers.\n *\n * @readonly\n * @enum {string}\n */\nconst DrawerTypes = {\n  // Permanent drawers\n  /**\n   * This is the default drawer type. It will always be on the screen and takes\n   * up the entire height. This is very helpful for main navigation on desktops\n   * when you do not need an expandable workspace.\n   */\n  FULL_HEIGHT: 'full-height',\n\n  /**\n   * This drawer type will always be on the screen, but it will appear under the\n   * main toolbar.\n   */\n  CLIPPED: 'clipped',\n\n  /**\n   * This drawer type will always be on the screen, but it will appear under the\n   * main toolbar and have a transparent background. This is useful if you want\n   * a persistent drawer on desktop screens, but do not want the main focus to be\n   * the drawer.\n   */\n  FLOATING: 'floating',\n\n  // Persistent drawers\n  /**\n   * A persistent drawer changes between being hidden and being fixed on the page like\n   * a permanent drawer. When it is visible, it will take up the same amount of room\n   * as a permanent drawer, and will not go away until closed.\n   *\n   * This drawer type is helpful when you need to have a dynamic workspace size.\n   */\n  PERSISTENT: 'persistent',\n\n  /**\n   * This is a modification of the persistent drawer. It will behave as the persistent drawer\n   * but it will always have a \"mini\" drawer visible. This is helpful when you want to have\n   * a dynamic workspace size and keep certain actions available at all times.\n   */\n  PERSISTENT_MINI: 'persistent-mini',\n\n  // Temporary\n  /**\n   * A temporary drawer will not be visible by default. When it is visible, it will overlay\n   * the page to get the main focus on the drawer. When the user touches the overlay or\n   * one of the navigation items, the drawer will be closed. The overlay can be disabled on\n   * desktop and tablets.\n   */\n  TEMPORARY: 'temporary',\n\n  /**\n   * This is a modification of the temporary drawer. It will behave like a temporary drawer,\n   * but it will always have a \"mini\" drawer visible. Just like the `PERSISTENT_MINI` drawer\n   * type, this is useful when certain actions should be available at all times but additional\n   * actions are available when the drawer is visible.\n   */\n  TEMPORARY_MINI: 'temporary-mini',\n};\n\nexport default DrawerTypes;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { MOBILE_MIN_WIDTH, TABLET_MIN_WIDTH, DESKTOP_MIN_WIDTH } from '../constants/media';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getField from '../utils/getField';\nimport mapToListParts from '../utils/mapToListParts';\nimport controlled from '../utils/PropTypes/controlled';\nimport Paper from '../Papers/Paper';\nimport Portal from '../Helpers/Portal';\nimport List from '../Lists/List';\nimport Overlay from './Overlay';\n\nimport { isTemporary, isPermanent, isMini } from './isType';\nimport DrawerTypes from './DrawerTypes';\n\nconst oneOfDrawerTypes = PropTypes.oneOf([\n  DrawerTypes.FULL_HEIGHT,\n  DrawerTypes.CLIPPED,\n  DrawerTypes.FLOATING,\n  DrawerTypes.PERSISTENT,\n  DrawerTypes.PERSISTENT_MINI,\n  DrawerTypes.TEMPORARY,\n  DrawerTypes.TEMPORARY_MINI,\n]);\n\n/**\n * The `Drawer` component is used for having a sliding panel of content or navigation\n * that appears from the side of a screen.\n *\n * If the `Drawer` uses any of the `_MINI` drawer types, you will need to also create another\n * `Drawer` that is not `_MINI`. Transitioning the `width` on mobile devices is very sluggish,\n * and it isn't much more work to create another drawer.\n */\nexport default class Drawer extends PureComponent {\n  static DrawerTypes = DrawerTypes;\n  static propTypes = {\n    /**\n     * An optional id to provide to the drawer. This is generally a good idea to provide if\n     * there are any `navItems` defined.\n     *\n     * @see {@link #navItemsId}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the navItems list. If this is omitted and the `id` prop is\n     * defined, it will be defaulted to `${id}-nav-items`.\n     */\n    navItemsId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `List` surrounding the `navItems`.\n     */\n    navStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `List` surrounding the `navItems`.\n     */\n    navClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the overlay.\n     */\n    overlayStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the overlay.\n     */\n    overlayClassName: PropTypes.string,\n\n    /**\n     * An optional component to render the drawer in. When this prop is undefined, the drawer\n     * will be rendered as a `nav` if the `navItems` prop is defined, otherwise an `aside`.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.element,\n    ]),\n\n    /**\n     * An optional list of navigation items to display in the drawer. This list can either contain\n     * a valid child component for a `List` or an object used to create a `Divider`, `Subheader`,\n     * or `ListItem`.\n     *\n     * - To create a divider in the list, set a `divider` key to `true`. Any other keys will be\n     * passed to the `Divider` component.\n     * - To create a subheader in the list, set the `subheader` key to `true`. Any other keys will\n     * be passed to the `Subheader` component.\n     * - To create a list item, just create an object with any normal `ListItem` props.\n     */\n    navItems: PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({\n        divider: PropTypes.bool,\n        subheader: PropTypes.bool,\n        primaryText: PropTypes.node,\n      }),\n    ])),\n\n    /**\n     * Boolean if a temporary drawer should close when a nav item is clicked.\n     */\n    autoclose: PropTypes.bool,\n\n    /**\n     * An optional header to display. This _should_ normally be a toolbar.\n     */\n    header: PropTypes.node,\n\n    /**\n     * Any additional children to display after the `header` and `navItems`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The drawer type to use when the current device matches the mobile\n     * media query.\n     */\n    mobileType: PropTypes.oneOf([\n      Drawer.DrawerTypes.TEMPORARY,\n      Drawer.DrawerTypes.TEMPORARY_MINI,\n    ]).isRequired,\n\n    /**\n     * The min-width to use for the mobile media query.\n     */\n    mobileMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * The drawer type to use when the current device matches the tablet\n     * media query.\n     */\n    tabletType: oneOfDrawerTypes.isRequired,\n\n    /**\n     * The min-width to use for the tablet media query.\n     */\n    tabletMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * The drawer type to use when the current device matches the desktop media\n     * query.\n     */\n    desktopType: oneOfDrawerTypes.isRequired,\n\n    /**\n     * The min-width for a desktop screen.\n     */\n    desktopMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * An optional type to enforce across all media sizes. Since `mobile` devices are\n     * included, you are required to manually specify when the `type` should be `temporary`.\n     *\n     * When the `type` is not one of the `temporary` types, the `onMediaTypeChange` prop\n     * must be provided.\n     */\n    type: (props, propName, component, ...others) => {\n      const type = props[propName];\n      if (isTemporary(type)) {\n        return oneOfDrawerTypes(props, propName, component, ...others);\n      }\n\n      let err = oneOfDrawerTypes(props, propName, component, ...others);\n      if (!err && typeof type !== 'undefined' && !isMini(type) && typeof props.onMediaTypeChange === 'undefined') {\n        err = new Error(\n          `You provided a \\`${propName}\\` prop to the ${component} without the \\`onMediaTypeChange\\` ` +\n          `handler. The \\`onMediaTypeChange\\` prop must be specified when the \\`${propName}\\` is not ` +\n          'one of the `temporary` types.'\n        );\n      }\n\n      return err;\n    },\n\n    /**\n     * An optional function to call when the drawer's type changes when the screen resizes.\n     * The callback will include the new `type` that should be used for the screen size,\n     * and an object containing the media matches for `mobile`, `tablet`, and `desktop`.\n     *\n     * ```js\n     * this.props.onMediaTypeChange(Drawer.DrawerTypes.TEMPORARY, {\n     *   mobile: true,\n     *   tablet: false,\n     *   desktop: false,\n     * });\n     * ```\n     */\n    onMediaTypeChange: PropTypes.func,\n\n    /**\n     * The default drawer type to display on initial render. The drawer will automatically\n     * adjust itself to the correct media once it has mounted. This prop is really only useful\n     * for server side rendering.\n     */\n    defaultMedia: PropTypes.oneOf(['mobile', 'tablet', 'desktop']).isRequired,\n\n    /**\n     * Boolean if there should be a visible overlay when the drawer is visible. The default behavior\n     * is to only include a visible overlay when the `type` is `TEMPORARY` or `TEMPORARY_MINI` and\n     * the device is not a desktop.\n     *\n     * Definining this variable as `true` or `false` will override any default behavior. This means that\n     * if this is enabled for a full-height drawer, an overlay will still be created.\n     */\n    overlay: PropTypes.bool,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the drawer. The overlay that appears for temporary type drawers will still appear in the\n     * separate subtree.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM Node to render the drawer into. The default is to render as\n     * the first child in the `body`.\n     *\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n     * since the `Portal` component will not be used.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the drawer should be rendered as the last child instead of the first child\n     * in the `renderNode` or `body`.\n     *\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n     * since the `Portal` component will not be used.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * Boolean if the drawer is visible by default. If this is omitted, the drawer will be visible\n     * if the current drawer type is NOT `Drawer.DrawerTypes.TEMPORARY` or `Drawer.DrawerTypes.TEMPORARY_MINI`.\n     *\n     * This basically means that if you are using the default configuration, a mobile device's drawer\n     * will be hidden while tablets and desktops will be visible.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * Boolean if the drawer is visible. This will force the component to define the `onVisibilityChange`\n     * prop as well as manually updating the drawer's visibility.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the visibility of the drawer is changed. The function will\n     * be called with the new visibility state.\n     *\n     * ```js\n     * onVisibilityChange(!currentlyVisible);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * The drawer's position on the page when it is not `inline`. When the drawer's position is `left`,\n     * the width will be `calc(100vw - 56px)` on mobile devices and `$md-drawer-desktop-width` on desktops.\n     *\n     * When the position is `right`, the width will be `100vw` for mobile devices and scaling to the drawer's\n     * children width on desktops.\n     */\n    position: PropTypes.oneOf(['left', 'right']).isRequired,\n\n    /**\n     * Boolean if the drawer should be displayed inline instead of fixed to the page. When this prop\n     * is enabled, the `position` prop will not be used.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * The `$md-drawer-transition-time` value from sass.\n     */\n    transitionDuration: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the temporary drawer's overlay should be created on desktop screens. This is really used so that\n     * the drawer will close when a user clicks anywhere on the page except in the drawer.\n     */\n    clickableDesktopOverlay: PropTypes.bool,\n\n    /**\n     * Boolean if the `autoclose` feature should wait for the ink transition to finish before automatically\n     * closing the drawer. This will add a `300ms` delay. If this is `false`, there will only be a `17ms` delay.\n     *\n     * > The delay is required so that any event listeners will still be correctly invoked when an item is clicked.\n     */\n    autocloseAfterInk: PropTypes.bool,\n\n    /**\n     * Boolean if the `type` prop should be constant across all media sizes. This is only valid if the `type` is\n     * one of the temporary types.\n     *\n     * This will basically mean that when attempting to do a media adjustment, it will use the `type` prop instead of\n     * `mobileType`, `tabletType`, and `desktopType` to determine the next drawer type.\n     */\n    constantType: PropTypes.bool.isRequired,\n\n    /**\n     * An optional zDepth to apply to the drawer. If this is omitted, the value will be set as follows:\n     * - floating || inline = 1\n     * - temporary = 5\n     * - all others = 1\n     *\n     * @see {@link Papers/Paper#zDepth}\n     */\n    zDepth: PropTypes.number,\n\n    closeOnNavItemClick: deprecated(PropTypes.bool, 'Use `autoclose` instead'),\n    onVisibilityToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\n  };\n\n  static defaultProps = {\n    defaultMedia: 'mobile',\n    mobileType: Drawer.DrawerTypes.TEMPORARY,\n    mobileMinWidth: MOBILE_MIN_WIDTH,\n    tabletType: Drawer.DrawerTypes.PERSISTENT,\n    tabletMinWidth: TABLET_MIN_WIDTH,\n    desktopType: Drawer.DrawerTypes.FULL_HEIGHT,\n    desktopMinWidth: DESKTOP_MIN_WIDTH,\n    position: 'left',\n    transitionDuration: 300,\n    autoclose: true,\n    clickableDesktopOverlay: true,\n    constantType: true,\n  };\n\n  /**\n   * Determines the current media and returns an object containing matches for `mobile`, `tablet`, `desktop`,\n   * and the current drawer type. This expects a `props` object of the drawer.\n   *\n   * If this is used server side, it will default to only matching mobile.\n   *\n   * @param {Object=} props - The current drawer's prop shape to extract the mobile, tablet,\n   *    and desktop type/min widths. This defaults to the drawer's default props.\n   * @return {Object} an object containing the media matches and the current type to use for the drawer.\n   */\n  static getCurrentMedia(props = Drawer.defaultProps) {\n    const {\n      mobileMinWidth,\n      tabletMinWidth,\n      desktopMinWidth,\n      mobileType,\n      tabletType,\n      desktopType,\n      constantType,\n    } = props;\n    if (typeof window === 'undefined') {\n      const type = constantType && props.type ? props.type : mobileType;\n      return { mobile: true, tablet: false, desktop: false, type };\n    }\n\n    const mobile = Drawer.matchesMedia(mobileMinWidth, tabletMinWidth - 1);\n    const tablet = Drawer.matchesMedia(tabletMinWidth, desktopMinWidth);\n    const desktop = Drawer.matchesMedia(desktopMinWidth);\n\n    let type;\n    if (constantType && props.type && isTemporary(props.type)) {\n      type = props.type;\n    } else if (desktop) {\n      type = desktopType;\n    } else if (tablet) {\n      type = tabletType;\n    } else {\n      type = mobileType;\n    }\n\n    return { type, mobile, tablet, desktop };\n  }\n\n  /**\n   * Simply does a `window.matchMedia(query)` where the query gets defined as a min width\n   * and optional max width.\n   *\n   * @param {number} min - The min width for the media query.\n   * @param {number=} max - An optional max width to include for the media query.\n   * @return {boolean} true if the media matches.\n   */\n  static matchesMedia(min, max) {\n    let media = `screen and (min-width: ${min}px)`;\n    if (max) {\n      media += ` and (max-width: ${max}px)`;\n    }\n\n    return window.matchMedia(media).matches;\n  }\n\n  static contextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { defaultVisible, defaultMedia, overlay } = props;\n\n    this.state = {\n      mobile: defaultMedia === 'mobile',\n      tablet: defaultMedia === 'tablet',\n      desktop: defaultMedia === 'desktop',\n      animating: false,\n      overlayActive: false,\n      drawerActive: false,\n    };\n\n    if (typeof props.type === 'undefined') {\n      this.state.type = props[`${defaultMedia}Type`];\n    }\n\n    const type = getField(props, this.state, 'type');\n    this._initialFix = true;\n\n    if (typeof props.visible === 'undefined') {\n      let visible = isPermanent(type) || isMini(type);\n      if (!visible && typeof defaultVisible !== 'undefined') {\n        visible = defaultVisible;\n      }\n\n      this.state.visible = visible;\n    }\n\n    const visible = getField(props, this.state, 'visible');\n\n    this.state.overlayActive = (typeof overlay !== 'undefined' ? overlay : isTemporary(type) && !this.state.desktop)\n      && visible;\n    this.state.drawerActive = visible;\n  }\n\n  componentWillMount() {\n    if (typeof window !== 'undefined') {\n      this._updateType(this.props);\n    }\n  }\n\n  componentDidMount() {\n    if (!isMini(getField(this.props, this.state, 'type'))) {\n      window.addEventListener('resize', this._updateMedia);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      mobileMinWidth,\n      mobileType,\n      tabletMinWidth,\n      tabletType,\n      desktopMinWidth,\n      desktopType,\n    } = this.props;\n\n    if (nextProps.mobileMinWidth !== mobileMinWidth || nextProps.mobileType !== mobileType\n      || nextProps.tabletMinWidth !== tabletMinWidth || nextProps.tabletType !== tabletType\n      || nextProps.desktopMinWidth !== desktopMinWidth || nextProps.desktopType !== desktopType) {\n      this._updateType(nextProps);\n    }\n\n    const { visible, transitionDuration, overlay } = nextProps;\n    if (this.props.visible === nextProps.visible) {\n      return;\n    }\n\n    const type = getField(nextProps, this.state, 'type');\n    this._animate(visible, type, transitionDuration, overlay, this.state.desktop);\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    if (this._closeTimeout) {\n      clearTimeout(this._closeTimeout);\n    }\n\n    window.removeEventListener('resize', this._updateMedia);\n  }\n\n  _updateType = (props) => {\n    const {\n      onMediaTypeChange,\n      overlay,\n      transitionDuration,\n    } = props;\n\n    const onVisibilityChange = props.onVisibilityToggle || props.onVisibilityChange;\n\n    let state = Drawer.getCurrentMedia(props);\n    const diffType = getField(props, this.state, 'type') !== state.type;\n    const diffMedia = state.mobile !== this.state.mobile\n      || state.tablet !== this.state.tablet\n      || state.desktop !== this.state.desktop;\n\n    if (onMediaTypeChange && (diffType || diffMedia)) {\n      onMediaTypeChange(state.type, { mobile: state.mobile, tablet: state.tablet, desktop: state.desktop });\n    }\n\n    if (diffType) {\n      let visible = isPermanent(state.type);\n      if (this._initialFix) {\n        if (props.defaultVisible) {\n          visible = props.defaultVisible;\n        } else if (props.visible) {\n          visible = props.visible;\n        }\n      }\n\n      const prevVisible = getField(props, this.state, 'visible');\n      if (onVisibilityChange && (visible !== prevVisible)) {\n        onVisibilityChange(visible);\n      }\n\n      if (typeof props.visible === 'undefined') {\n        state.visible = visible;\n        this._animate(visible, state.type, transitionDuration, overlay, state.desktop);\n      }\n    } else if (this._initialFix && diffMedia) {\n      state.overlayActive = (typeof overlay !== 'undefined' ? overlay : isTemporary(state.type) && !state.desktop)\n        && getField(props, this.state, 'visible');\n    }\n\n    if (typeof props.type !== 'undefined') {\n      const { type, ...realState } = state; // eslint-disable-line no-unused-vars\n      state = realState;\n    }\n\n    this._initialFix = false;\n    this.setState(state);\n  };\n\n  _updateMedia = () => {\n    this._updateType(this.props);\n  };\n\n  _animate = (visible, type, timeout, overlay, desktop) => {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    if (visible) {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        this.setState({\n          overlayActive: overlay || (isTemporary(type) && !desktop),\n          drawerActive: true,\n          animating: true,\n        });\n      }, TICK);\n    } else {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        this.setState({ animating: false });\n      }, timeout);\n      this.setState({ animating: true, overlayActive: false, drawerActive: false });\n    }\n  };\n\n  _setNavigation = (navigation) => {\n    this._navigation = findDOMNode(navigation);\n  };\n\n  _handleNavClick = (e) => {\n    const { closeOnNavItemClick, autoclose, autocloseAfterInk } = this.props;\n    const enabled = typeof closeOnNavItemClick !== 'undefined' ? closeOnNavItemClick : autoclose;\n    if (!enabled || !isTemporary(getField(this.props, this.state, 'type'))) {\n      return;\n    }\n\n    let { target } = e;\n    while (target && this._navigation.contains(target)) {\n      if (target.classList.contains('md-list-tile')) {\n        // Clicked a nav item that has a nested list\n        if (target.getAttribute('aria-expanded') !== null) {\n          return;\n        }\n\n        this._closeTimeout = setTimeout(() => {\n          this._closeTimeout = null;\n\n          this._closeDrawer(e);\n        }, autocloseAfterInk ? 300 : TICK);\n        return;\n      }\n\n      target = target.parentNode;\n    }\n  };\n\n  _closeDrawer = () => {\n    const { onVisibilityChange, onVisibilityToggle, transitionDuration, overlay } = this.props;\n    const callback = onVisibilityToggle || onVisibilityChange;\n    if (callback) {\n      callback(false);\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      this.setState({ visible: false });\n      this._animate(false, getField(this.props, this.state, 'type'), transitionDuration, overlay, this.state.desktop);\n    }\n  };\n\n  render() {\n    const { overlayActive, drawerActive, animating } = this.state;\n    const {\n      id,\n      style,\n      className,\n      navStyle,\n      navClassName,\n      component,\n      navItems,\n      header,\n      children,\n      inline,\n      position,\n      overlay,\n      clickableDesktopOverlay,\n      lastChild,\n      portal,\n      overlayStyle,\n      overlayClassName,\n      /* eslint-disable no-unused-vars */\n      type: propType,\n      visible: propVisible,\n      renderNode: propRenderNode,\n      navItemsId: propNavItemsId,\n      zDepth: propZDepth,\n      constantType,\n      defaultVisible,\n      defaultMedia,\n      mobileType,\n      mobileMinWidth,\n      tabletType,\n      tabletMinWidth,\n      desktopType,\n      desktopMinWidth,\n      transitionDuration,\n      onMediaTypeChange,\n      onVisibilityChange,\n      autoclose,\n      autocloseAfterInk,\n      // deprecated\n      onVisibilityToggle,\n      closeOnNavItemClick,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { navItemsId, zDepth } = this.props;\n    if (!navItemsId && id) {\n      navItemsId = `${id}-nav-items`;\n    }\n\n    const { desktop } = this.state;\n    const renderNode = getField(this.props, this.context, 'renderNode');\n    const type = getField(this.props, this.state, 'type');\n    const visible = getField(this.props, this.state, 'visible');\n    const mini = isMini(type);\n    const temporary = isTemporary(type);\n    const floating = DrawerTypes.FLOATING === type;\n    const permanent = isPermanent(type);\n\n    let Component;\n    if (component) {\n      Component = component;\n    } else if (navItems) {\n      Component = 'nav';\n    } else {\n      Component = 'aside';\n    }\n\n    let navigation;\n    if (navItems) {\n      navigation = (\n        <List\n          ref={this._setNavigation}\n          key=\"navigation\"\n          id={navItemsId}\n          style={navStyle}\n          className={cn('md-list--drawer', {\n            'md-toolbar-relative': mini && !visible,\n            'md-background': floating,\n          }, navClassName)}\n          onClick={this._handleNavClick}\n        >\n          {navItems.map(mapToListParts)}\n        </List>\n      );\n    }\n\n    if (typeof zDepth === 'undefined') {\n      zDepth = 1;\n      if (floating || inline) {\n        zDepth = 0;\n      } else if (!mini && temporary) {\n        zDepth = 5;\n      }\n    }\n\n    let overlayVisible = overlay;\n    if (typeof overlayVisible !== 'boolean') {\n      overlayVisible = temporary && !mini && (!desktop || clickableDesktopOverlay) && (animating || visible);\n    }\n\n    const drawer = (\n      <Paper\n        {...props}\n        id={id}\n        key=\"drawer\"\n        component={Component}\n        zDepth={zDepth}\n        raiseOnHover={false}\n        style={style}\n        className={cn('md-drawer', {\n          [`md-drawer--${position}`]: !inline,\n          'md-drawer--fixed': !inline,\n          'md-drawer--inline': inline,\n          'md-drawer--active': mini || drawerActive,\n          'md-drawer--mini': mini,\n          'md-transition--deceleration': !mini && !permanent && visible,\n          'md-transition--acceleration': !mini && !permanent && !visible,\n          'md-background': inline || floating,\n          'md-background--card': !floating && !inline,\n        }, className)}\n      >\n        {header}\n        {navigation}\n        {children}\n        <Overlay\n          style={overlayStyle}\n          className={overlayClassName}\n          active={overlayActive}\n          onClick={this._closeDrawer}\n          visible={overlayVisible}\n          renderNode={renderNode}\n        />\n      </Paper>\n    );\n\n    if (inline || permanent) {\n      return drawer;\n    } else if (!portal) {\n      return mini || animating || visible ? drawer : null;\n    }\n\n    return (\n      <Portal visible={animating || visible} renderNode={renderNode} lastChild={lastChild}>\n        {drawer}\n      </Portal>\n    );\n  }\n}\n","export const MOBILE_MIN_WIDTH = 320;\nexport const TABLET_MIN_WIDTH = 768;\nexport const DESKTOP_MIN_WIDTH = 1025;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport DialogFooter from '../Dialogs/DialogFooter';\n\n/**\n * The `PanelContent` component is for displaying the expanded content\n * for an `ExpansionPanel`. It will display any children in a `md-panel-content`\n * container followed by a `Divider` and the `PanelControls` .\n */\nexport default class PanelContent extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    footerStyle: PropTypes.object,\n    footerClassName: PropTypes.string,\n    contentStyle: PropTypes.object,\n    children: PropTypes.node,\n    onSave: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    saveProps: PropTypes.object,\n    saveType: PropTypes.string,\n    saveLabel: PropTypes.node.isRequired,\n    savePrimary: PropTypes.bool,\n    saveSecondary: PropTypes.bool,\n    cancelProps: PropTypes.object,\n    cancelType: PropTypes.string,\n    cancelLabel: PropTypes.node.isRequired,\n    cancelPrimary: PropTypes.bool,\n    cancelSecondary: PropTypes.bool,\n    footer: PropTypes.node,\n    footerChildren: PropTypes.node,\n  };\n\n  render() {\n    const {\n      style,\n      footerStyle,\n      footerClassName,\n      contentStyle,\n      className,\n      children,\n      onSave,\n      onCancel,\n      saveProps,\n      saveType,\n      saveLabel,\n      savePrimary,\n      saveSecondary,\n      cancelProps,\n      cancelType,\n      cancelLabel,\n      cancelPrimary,\n      cancelSecondary,\n      footer,\n      footerChildren,\n    } = this.props;\n\n    const actions = [{\n      type: cancelType,\n      label: cancelLabel,\n      primary: cancelPrimary,\n      secondary: cancelSecondary,\n      ...cancelProps,\n      onClick: onCancel,\n    }, {\n      type: saveType,\n      label: saveLabel,\n      primary: savePrimary,\n      secondary: saveSecondary,\n      ...saveProps,\n      onClick: onSave,\n    }];\n\n    let actionFooter = null;\n    if (typeof footer === 'undefined') {\n      actionFooter = (\n        <DialogFooter\n          actions={actions}\n          style={footerStyle}\n          className={cn('md-divider-border md-divider-border--top', footerClassName)}\n        >\n          {footerChildren}\n        </DialogFooter>\n      );\n    } else if (footer !== null) {\n      actionFooter = footer;\n    }\n\n    return (\n      <div style={style}>\n        <div className={cn('md-panel-content', className)} style={contentStyle}>\n          {children}\n        </div>\n        {actionFooter}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport themeColors from '../utils/themeColors';\nimport getCollapserStyles from '../utils/getCollapserStyles';\nimport controlled from '../utils/PropTypes/controlled';\nimport Paper from '../Papers/Paper';\nimport AccessibleFakeButton from '../Helpers/AccessibleFakeButton';\nimport Collapse from '../Helpers/Collapse';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport PanelContent from './PanelContent';\n\nconst LABEL_FONT_SIZE = 15;\nconst LINE_HEIGHT = 1.42857;\nconst SINGLE_LINE_HEIGHT = LABEL_FONT_SIZE * LINE_HEIGHT;\n\n/**\n * The `ExpansionPanel` component needs to be used with the `ExpansionList`\n * component. The only reason is that the `ExpansionPanel` should really\n * be rendered as a table, but it was a bit hard to have a single component\n * dynamically rendering another row when expanded. It couldn't be in the\n * same row since the expanded content might not have the same columns.\n */\nexport default class ExpansionPanel extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the panel.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the panel.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An options style to apply to the panel's header content. This is the\n     * section that toggles the children to be visible and label columns.\n     */\n    headerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the panel's header content. This is the\n     * section that toggles the children to be visible and label columns.\n     */\n    headerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the element surrounding the children when expanded.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the element surrounding the children when expanded.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the footer when the `footer` prop is `undefined`.\n     *\n     * @see {@link #footer}\n     */\n    footerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the footer when the `footer` prop is `undefined`.\n     *\n     * @see {@link #footer}\n     */\n    footerClassName: PropTypes.string,\n\n    /**\n     * The main label to display in the unexpanded panel.\n     */\n    label: PropTypes.node.isRequired,\n\n    /**\n     * Any additional columns to display after the main label. If this is a `list`\n     * instead of a singular item, they will each be formatted as a column.\n     */\n    secondaryLabel: PropTypes.node,\n\n    /**\n     * Any additional columns to display after the main label when the panel is\n     * expanded. If this is omitted, the default `secondaryLabel` will be displayed\n     * instead.\n     */\n    expandedSecondaryLabel: PropTypes.node,\n\n    /**\n     * The component to render the panel as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * The content to display once the panel is toggled open.\n     */\n    children: PropTypes.node,\n\n    /**\n     * A boolean if the panel is currently expanded. This will force the component\n     * to be controlled and require's the `onExpandToggle` function to be defined.\n     */\n    expanded: controlled(PropTypes.bool, 'onExpandToggle', 'defaultExpanded'),\n\n    /**\n     * Boolean if an uncontrolled panel should be expanded by default.\n     */\n    defaultExpanded: PropTypes.bool.isRequired,\n\n    /**\n     * The icon to display for expanding the expansion panel.\n     */\n    expanderIcon: PropTypes.element,\n\n    /**\n     * Boolean if the `ExpansionPanel` is currently tab focused. This is injected\n     * and managed by the `ExpansionList` component. Do not set yourself.\n     */\n    focused: PropTypes.bool.isRequired,\n\n    /**\n     * A list of min-widths to apply to each column in the panel header. This is injected\n     * and managed by the `ExpansionList` component. Do not set yourself.\n     */\n    columnWidths: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    /**\n     * Boolean if the panel has too much content so that it overflowns. This is injected\n     * and managed by the `ExpansionList` component. Do not set yourself.\n     *\n     * When this is active, it will truncate all columns except for the main label and the\n     * toggle icon.\n     */\n    overflown: PropTypes.bool,\n\n    /**\n     * A function to call when the expansion panel's expanded state is toggled.\n     * The callback for this function will include the new expanded state.\n     *\n     * `onExpandToggle(expanded)`\n     */\n    onExpandToggle: PropTypes.func,\n\n    /**\n     * An optional function to call when the Save button is clicked on the expanded panel.\n     */\n    onSave: PropTypes.func,\n\n    /**\n     * An optional function to call when the Cancel button is clicked on the expanded panel.\n     */\n    onCancel: PropTypes.func,\n\n    /**\n     * Boolean if the panel should close when the Save button is clicked.\n     */\n    closeOnSave: PropTypes.bool,\n\n    /**\n     * Boolean if the panel should close when the Cancel button is clicked.\n     */\n    closeOnCancel: PropTypes.bool,\n\n    /**\n     * An optional button type to apply to the Save button. This will get\n     * passed to the `FlatButton`.\n     */\n    saveType: PropTypes.oneOf(['button', 'submit', 'reset']),\n\n    /**\n     * The label for the Save button.\n     */\n    saveLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the Save button should be styled with the primary color.\n     */\n    savePrimary: PropTypes.bool,\n\n    /**\n     * Boolean if the Save button should be styled with the secondary color,\n     */\n    saveSecondary: PropTypes.bool,\n\n    /**\n     * Any additional props to provide/override for the save button in the\n     * footer of the panel.\n     */\n    saveProps: PropTypes.object,\n\n    /**\n     * An optional button type to apply to the Cancel button. This will get\n     * passed to the `FlatButton`.\n     */\n    cancelType: PropTypes.oneOf(['button', 'submit', 'reset']),\n\n    /**\n     * The label for the Cancel button.\n     */\n    cancelLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the Cancel button should be styled with the primary color,\n     */\n    cancelPrimary: PropTypes.bool,\n\n    /**\n     * Boolean if the Cancel button should be styled with the secondary color,\n     */\n    cancelSecondary: PropTypes.bool,\n\n    /**\n     * Any additional props to provide/override for the cancel button in the\n     * footer of the panel.\n     */\n    cancelProps: PropTypes.object,\n\n    /**\n     * The tab index for the panel's header. This allows keyboard navigation.\n     */\n    tabIndex: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the panel's content should animate when the content's visibility changes. This\n     * can also be toggled from the `ExpansionList` component if all `ExpansionPanel` in the list\n     * should not animate. This only affects the height transition.\n     *\n     * > The default value is really `true` since it gets passed down to the `Collapse` component.\n     */\n    animateContent: PropTypes.bool,\n\n    /**\n     * This prop controls the footer for the expansion panel. If this prop is `undefined`, it will\n     * go with the default behavior of generating the save and cancel buttons with the save and cancel\n     * props.\n     *\n     * If this value is `null`, there will be no footer created.\n     *\n     * Finally, if this prop is defined as any renderable item, it will be displayed in place of the\n     * footer.\n     *\n     * @see {@link #footerChildren}\n     */\n    footer: PropTypes.node,\n\n    /**\n     * Any additional children that should be displayed in the footer of the panel. These children\n     * will be placed after the action buttons.\n     */\n    footerChildren: PropTypes.node,\n    expandIconChildren: deprecated(PropTypes.node, 'Use the `expanderIcon` instead'),\n    expandIconClassName: deprecated(PropTypes.string, 'Use the `expanderIcon` instead'),\n  };\n\n  static defaultProps = {\n    defaultExpanded: false,\n    expanderIcon: <FontIcon>keyboard_arrow_down</FontIcon>,\n    component: 'li',\n    saveLabel: 'Save',\n    cancelLabel: 'Cancel',\n    savePrimary: true,\n    tabIndex: 0,\n    closeOnSave: true,\n    closeOnCancel: true,\n    focused: false,\n    columnWidths: [],\n  };\n\n  static contextTypes = {\n    animateContent: PropTypes.bool,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      received: false,\n      twoLine: false,\n    };\n\n    if (typeof props.expanded === 'undefined') {\n      this.state.expanded = props.defaultExpanded;\n    }\n  }\n\n  componentDidMount() {\n    this._determineIfTwoLine();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (process.env.NODE_ENV === 'development' && !this.state.received) {\n      if (nextProps.columnWidths.length === 0) {\n        // Hopefully a nice warning about fixing the missing props injected from ExpansionList\n        /* eslint-disable no-console */\n        console.error(\n          'The `ExpansionPanel` component expects the `columnWidths` prop to be injected from the ' +\n          '`ExpansionList` component. It could be missing because:' +\n          '\\n - you have a wrapper component with extra functionality' +\n          '\\n - the `ExpansionPanel` is not a direct child of the `ExpansionList` component' +\n          '\\n\\nYou can fix this by making sure to pass `this.props.focused` and `this.props.columnWidths` ' +\n          'within your wrapper component and making the `ExpansionPanel` a direct child of `ExpansionList`.'\n        );\n      }\n\n      this.setState({ received: true });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.label === prevProps.label && this.props.secondaryLabel === prevProps.secondaryLabel) {\n      return;\n    }\n\n    this._determineIfTwoLine();\n  }\n\n  _isExpanded(props, state) {\n    return typeof props.expanded === 'undefined' ? state.expanded : props.expanded;\n  }\n\n  _determineIfTwoLine = () => {\n    let twoLine = false;\n    Array.prototype.slice.call(findDOMNode(this).querySelectorAll('.md-panel-column'))\n      .some(el => (twoLine = el.offsetHeight > SINGLE_LINE_HEIGHT));\n\n    this.setState({ twoLine });\n  };\n\n  _handleClick = () => {\n    const expanded = !this._isExpanded(this.props, this.state);\n    if (this.props.onExpandToggle) {\n      this.props.onExpandToggle(expanded);\n    }\n\n\n    if (typeof this.props.expanded === 'undefined') {\n      this.setState({ expanded });\n    }\n  };\n\n  _handleSave = (e) => {\n    const { onSave, onExpandToggle, closeOnSave } = this.props;\n    if (onSave) {\n      onSave(e);\n    }\n\n    if (closeOnSave) {\n      if (onExpandToggle) {\n        onExpandToggle(false);\n      }\n\n      if (typeof this.props.expanded === 'undefined') {\n        this.setState({ expanded: false });\n      }\n    }\n  };\n\n  _handleCancel = (e) => {\n    const { onCancel, onExpandToggle, closeOnCancel } = this.props;\n    if (onCancel) {\n      onCancel(e);\n    }\n\n    if (closeOnCancel) {\n      if (onExpandToggle) {\n        onExpandToggle(false);\n      }\n\n      if (typeof this.props.expanded === 'undefined') {\n        this.setState({ expanded: false });\n      }\n    }\n  };\n\n  render() {\n    const {\n      className,\n      label,\n      secondaryLabel,\n      expandedSecondaryLabel,\n      children,\n      focused,\n      columnWidths,\n      saveType,\n      saveLabel,\n      savePrimary,\n      saveSecondary,\n      saveProps,\n      cancelType,\n      cancelLabel,\n      cancelPrimary,\n      cancelSecondary,\n      cancelProps,\n      headerStyle,\n      headerClassName,\n      contentStyle,\n      contentClassName,\n      tabIndex,\n      overflown,\n      footer,\n      footerChildren,\n      footerStyle,\n      footerClassName,\n\n      // deprecated\n      expandIconChildren,\n      expandIconClassName,\n      /* eslint-disable no-unused-vars */\n      animateContent: propAnimateContent,\n      expanded: propExpanded,\n      expanderIcon: propExpanderIcon,\n      defaultExpanded,\n      closeOnSave,\n      closeOnCancel,\n      onSave,\n      onCancel,\n      onExpandToggle,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    const { twoLine } = this.state;\n    const expanded = this._isExpanded(this.props, this.state);\n    const animateContent = getField(this.props, this.context, 'animateContent');\n\n    let columns = Children.map(expanded && expandedSecondaryLabel || secondaryLabel, (panelLabel, i) => (\n      <div\n        style={{ [`${overflown ? 'width' : 'minWidth'}`]: columnWidths[i + 1] }}\n        className={cn('md-panel-column', {\n          'md-panel-column--overflown': overflown,\n        }, themeColors({ text: true }))}\n      >\n        {panelLabel}\n      </div>\n    ));\n\n    if (!Array.isArray(columns)) {\n      columns = [columns];\n    }\n\n    columns.unshift((\n      <div\n        key=\"main-label\"\n        style={{ minWidth: columnWidths[0] }}\n        className={cn('md-panel-column', themeColors({ text: true }))}\n      >\n        {label}\n      </div>\n    ));\n\n    let expanderIcon = getDeprecatedIcon(expandIconClassName, expandIconChildren, this.props.expanderIcon);\n    expanderIcon = React.Children.only(expanderIcon);\n    expanderIcon = React.cloneElement(expanderIcon, {\n      className: getCollapserStyles({\n        flipped: expanded,\n      }, 'md-expansion-panel__collapser md-cell--right', expanderIcon.props.className),\n    });\n\n    return (\n      <Paper\n        {...props}\n        className={cn('md-expansion-panel', {\n          'md-expansion-panel--expanded': expanded,\n        }, className)}\n        aria-expanded={expanded}\n      >\n        <AccessibleFakeButton\n          onClick={this._handleClick}\n          style={headerStyle}\n          className={cn('md-panel-header', {\n            'md-panel-header--expanded': expanded || twoLine,\n            'md-panel-header--focused': focused,\n          }, headerClassName)}\n          tabIndex={tabIndex}\n        >\n          {columns}\n          {expanderIcon}\n        </AccessibleFakeButton>\n        <Collapse collapsed={!expanded} animate={animateContent}>\n          <PanelContent\n            style={contentStyle}\n            className={contentClassName}\n            footerStyle={footerStyle}\n            footerClassName={footerClassName}\n            onSave={this._handleSave}\n            onCancel={this._handleCancel}\n            saveType={saveType}\n            saveLabel={saveLabel}\n            savePrimary={savePrimary}\n            saveSecondary={saveSecondary}\n            saveProps={saveProps}\n            cancelType={cancelType}\n            cancelLabel={cancelLabel}\n            cancelPrimary={cancelPrimary}\n            cancelSecondary={cancelSecondary}\n            cancelProps={cancelProps}\n            footer={footer}\n            footerChildren={footerChildren}\n          >\n            {children}\n          </PanelContent>\n        </Collapse>\n      </Paper>\n    );\n  }\n}\n","import React, { PureComponent, cloneElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\n\nimport { TAB } from '../constants/keyCodes';\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\nimport ResizeObserver from '../Helpers/ResizeObserver';\n\n/**\n * The `ExpansionList` component is a wrapper for the `ExpansionPanel` that helps\n * determine which `ExpansionPanel` currently has tab focus and adjusts the column\n * sizes in the header of the `ExpansionPanel`.\n *\n * The `ExpansionList` and `ExpansionPanel` components should have probably been\n * implemented as a `table` instead of a `ul || ol` since it is more column based,\n * but it would complicate the API to have dynamic row generation for the expanded\n * panels. The expanded panels _might_ not follow the same column widths as their labels\n * so a singular row with a div for expanded content might not work correctly.\n */\nexport default class ExpansionList extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style object to apply to the list.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the list.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The children should be a list or singular `ExpansionPanel` component\n     * to render with some additional props injected.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The component to render the list as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * Boolean if all the expansion panels in the list should animate when their content's visibility\n     * changes. This is just a quicker way to disable all animations instead of having to toggle it off\n     * on each panel.\n     *\n     * > The default value is really `true` since it gets passed down to the `Collapse` component.\n     */\n    animateContent: PropTypes.bool,\n\n    /**\n     * The threshold that should be used for when the list should recalculate the positioning of all\n     * the columns. This will only compare the difference between updates.\n     * So if the size changes from 80 -> 120 -> 160 -> 140. It will only update on the third resize (160)\n     */\n    recalculateThreshold: PropTypes.number.isRequired,\n  };\n\n  static defaultProps = {\n    component: 'ul',\n    recalculateThreshold: 80,\n  };\n\n  static childContextTypes = {\n    animateContent: PropTypes.bool,\n  };\n\n  state = { columnWidths: [], focusedIndex: -1, overflown: false };\n\n  getChildContext() {\n    const { animateContent } = this.props;\n    return { animateContent };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.children !== nextProps.children) {\n      this._calcColumnWidths();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { focusedIndex } = this.state;\n    if (prevState.focusedIndex === focusedIndex || (prevState.focusedIndex > -1 && focusedIndex > -1)) {\n      return;\n    }\n\n    handleWindowClickListeners(this._removeFocus, this.state.focusedIndex !== -1);\n  }\n\n  componentWillUnmount() {\n    if (this.state.focusedIndex === -1) {\n      handleWindowClickListeners(this._removeFocus, false);\n    }\n\n    window.removeEventListener('keyup', this._determineTabFocus);\n  }\n\n  _setContainer = (container) => {\n    if (container !== null) {\n      this._container = findDOMNode(container);\n      window.addEventListener('keyup', this._determineTabFocus);\n\n      this._width = this._container.offsetWidth;\n      this._calcColumnWidths();\n    }\n  };\n\n  _determineTabFocus = (e) => {\n    if ((e.which || e.keyCode) === TAB) {\n      const panels = Array.prototype.slice.call(findDOMNode(this).querySelectorAll('.md-panel-header'));\n      this.setState({ focusedIndex: panels.indexOf(e.target) });\n    }\n  };\n\n  _removeFocus = () => {\n    this.setState({ focusedIndex: -1 });\n  };\n\n  _isOverflown = (widths) => {\n    if (!this._container) {\n      return 0;\n    }\n\n    const panel = this._container.querySelector('.md-panel-header');\n    if (!panel) {\n      return 0;\n    }\n\n    const collapser = this._container.querySelector('.md-expansion-panel__collapser');\n    const collapserWidth = collapser ? collapser.offsetWidth : 0;\n    const styles = window.getComputedStyle(panel);\n    const maxWidth = panel.offsetWidth\n      - parseFloat(styles.paddingLeft)\n      - parseFloat(styles.paddingRight)\n      - collapserWidth;\n\n    const totalWidth = widths.reduce((total, w) => total + w, 0);\n    return totalWidth > maxWidth;\n  };\n\n  /**\n   * Since this should really be rendered as a table, need to calculate the max width for each _column_\n   * on the panel's header and apply that as a min width for the other panels.\n   */\n  _getColumnWidths = () => {\n    if (!this._container) {\n      return this.state.columnWidths;\n    }\n\n    return [].slice.call(this._container.querySelectorAll('.md-panel-header'))\n      .reduce((maxes, row) => {\n        const columns = row.querySelectorAll('.md-panel-column');\n        for (let i = 0; i < columns.length; i++) {\n          const col = columns[i];\n          // Need to reset the widths if it has already been calculated to get a more accurate measurement.\n          const { width, minWidth } = col.style;\n          col.style.width = 'auto';\n          col.style.minWidth = 'auto';\n\n          // Only need to include the offsetWidth of the column because the child will really\n          // determine the width of the column. Since it has already been defined at this point,\n          // no additional work needs to be done.\n          maxes[i] = Math.max(col.offsetWidth, maxes[i] || 0);\n          col.style.width = width;\n          col.style.minWidth = minWidth;\n        }\n\n        return maxes;\n      }, [0]);\n  };\n\n  _calcColumnWidths = () => {\n    const { columnWidths } = this.state;\n    const nextWidths = this._getColumnWidths();\n    const overflown = this._isOverflown(nextWidths);\n    if (this.state.overflown !== overflown\n      || columnWidths.length !== nextWidths.length\n      || nextWidths.some((w, i) => w !== columnWidths[i])\n    ) {\n      this.setState({ columnWidths: nextWidths, overflown });\n    }\n  };\n\n  _handleResize = ({ width }) => {\n    const { recalculateThreshold } = this.props;\n    if (this._width !== width && (Math.abs(width - this._width) >= recalculateThreshold)) {\n      this._width = width;\n      this._calcColumnWidths();\n    }\n  };\n\n  render() {\n    const { columnWidths, focusedIndex, overflown } = this.state;\n    const {\n      children,\n      className,\n      component: Component,\n      animateContent, // eslint-disable-line no-unused-vars\n      recalculateThreshold, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    const panels = Children.map(children, (child, i) => cloneElement(child, {\n      key: child.key || i,\n      overflown,\n      columnWidths,\n      focused: focusedIndex === i,\n    }));\n    return (\n      <Component\n        {...props}\n        ref={this._setContainer}\n        className={cn('md-expansion-panel-list', className)}\n      >\n        <ResizeObserver watchWidth onResize={this._handleResize} />\n        {panels}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { TAB, SPACE, ENTER } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport getBtnStyles from '../Buttons/getBtnStyles';\nimport FontIcon from '../FontIcons/FontIcon';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\n\n/**\n * The `FileInput` component is used as simple styling for the `<input type=\"file\" />`.\n * It will style the input as a raised button by default.\n */\nexport default class FileInput extends PureComponent {\n  static propTypes = {\n    /**\n     * The id for the text field. This is required for a11y and to get the `input type=\"file\"` to\n     * open.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An optional name to provide to the input.\n     */\n    name: PropTypes.string,\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the label.\n     */\n    labelStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the label.\n     */\n    labelClassName: PropTypes.string,\n\n    /**\n     * Boolean if the `FileInput` should be styled with the primary color.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the `FileInput` should be styled with the secondary color.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the `FileInput` should be styled as a flat button instead of a\n     * raised button.\n     */\n    flat: PropTypes.bool,\n\n    /**\n     * Boolean if the theming should be swapped from text to background or vice-versa.\n     *\n     * @see {@link Buttons/Button#swapTheming}\n     */\n    swapTheming: PropTypes.bool,\n\n    /**\n     * This should be a comma separated list of Media Types that the `FileInput` can\n     * accept. If this prop is left blank, any file will be accepted.\n     *\n     * The values can either be:\n     * - A file extension\n     * - audio/*\n     * - video/*\n     * - image/*\n     * - any valid [IANA Media Type](http://www.iana.org/assignments/media-types/media-types.xhtml)\n     *\n     * > NOTE: IE does not enforce this.\n     */\n    accept: PropTypes.string,\n\n    /**\n     * Boolean if the same file is allowed to be uploaded multiple times. This will basically make the\n     * `value` of the file input always blank.\n     */\n    allowDuplicates: PropTypes.bool,\n\n    /**\n     * Boolean if multiple files will be accepted.\n     */\n    multiple: PropTypes.bool,\n\n    /**\n     * A label to display on the `FileInput`. This will be used with the `AccessibleFakeInkedButton` component to\n     * create a `<label>` for the `<input type=\"file\">`.\n     */\n    label: PropTypes.node,\n\n    /**\n     * Boolean if the icons should appear before the label.\n     */\n    iconBefore: PropTypes.bool,\n\n    /**\n     * An optional icon to display with the file download. This can be a `FontIcon` or an `SVGIcon`.\n     */\n    icon: PropTypes.element,\n\n    /**\n     * A function to call when the value of the input changes. This will\n     * be triggered when the user selects a new file or cancels the new file selection.\n     *\n     * This function will be given the new [FileList](https://developer.mozilla.org/en-US/docs/Web/API/FileList)\n     * as an array and the change event. If this is not a multiple file input, only the\n     * newly selected File will be given instead of a list of one file. Since this is an\n     * `input` tag, the user will not be able to select the same file multiple times unless\n     * you manually clear the input's value.\n     *\n     * > NOTE: If the user hits cancel, null will be given for a single file input.\n     *\n     * ```js\n     * onChange(files, e);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional value to apply to the `FileInput`. This is usually not needed and the\n     * `allowDuplicates` is what you are probably looking for instead.\n     *\n     * @see {@link #allowDuplicates}\n     */\n    value: PropTypes.string,\n\n    /**\n     * Boolean if the `FileInput` is currently disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional function to call when they keyup event is triggered on the file input's label.\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when they keydown event is triggered on the file input's label.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when they mouseup event is triggered on the file input's label.\n     */\n    onMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when they mousedown event is triggered on the file input's label.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when they mouseover event is triggered on the file input's label.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when they mouseleave event is triggered on the file input's label.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when they touchend event is triggered on the file input's label.\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when they touchstart event is triggered on the file input's label.\n     */\n    onTouchStart: PropTypes.func,\n\n    iconChildren: deprecated(PropTypes.node, 'Use `icon` instead'),\n    iconClassName: deprecated(PropTypes.string, 'Use `icon` instead'),\n  };\n\n  static defaultProps = {\n    label: 'Select a file',\n    icon: <FontIcon>file_upload</FontIcon>,\n    allowDuplicates: false,\n  };\n\n  state = { hover: false, pressed: false, value: '' };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.disabled && !nextProps.disabled && this.state.hover) {\n      this.setState({ hover: false });\n    }\n\n    if (nextProps.allowDuplicates && this.state.value) {\n      this.setState({ value: '' });\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    // I honestly don't remember why this was implemented, but it was copied from the Button\n    // component\n    if (!this.state.pressed && nextState.pressed) {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n        if (this._attemptedBlur) {\n          this._attemptedBlur = false;\n\n          this.setState({ pressed: false });\n        }\n      }, 450);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    window.removeEventListener('click', this._blur);\n  }\n\n  _handleChange = (e) => {\n    const { multiple, onChange, allowDuplicates } = this.props;\n    const { files, value } = e.target;\n    if (onChange) {\n      if (!multiple) {\n        onChange(files[0] || null, e);\n      } else {\n        onChange(Array.prototype.slice.call(files), e);\n      }\n    }\n\n    if (!allowDuplicates) {\n      this.setState({ value });\n    }\n  };\n\n  _blur = () => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this._timeout) {\n      this._attemptedBlur = true;\n    } else {\n      this.setState({ pressed: false });\n    }\n  };\n\n  _handleMouseUp = (e) => {\n    if (this.props.onMouseUp) {\n      this.props.onMouseUp(e);\n    }\n\n    this._blur();\n  };\n\n  _handleMouseDown = (e) => {\n    if (this.props.onMouseDown) {\n      this.props.onMouseDown(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleTouchEnd = (e) => {\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(e);\n    }\n\n    this._blur();\n    captureNextEvent('mouseover');\n  };\n\n  _handleKeyUp = (e) => {\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(e);\n    }\n\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.addEventListener('click', this._blur);\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    const key = e.which || e.keyCode;\n\n    if (key === TAB) {\n      window.removeEventListener('click', this._blur);\n      this.setState({ pressed: false });\n    } else if (key === SPACE || key === ENTER) {\n      e.preventDefault();\n      e.target.click();\n    }\n  };\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ hover: true });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ hover: false });\n    }\n  };\n\n  render() {\n    const { hover, pressed } = this.state;\n    const {\n      style,\n      className,\n      labelStyle,\n      labelClassName,\n      label,\n      primary,\n      secondary,\n      flat,\n      id,\n      name,\n      iconBefore,\n      disabled,\n      accept,\n      multiple,\n      swapTheming,\n\n      // Deprecated\n      iconChildren,\n      iconClassName,\n      /* eslint-disable no-unused-vars */\n      icon: propIcon,\n      value: propValue,\n      allowDuplicates,\n      onChange,\n      onKeyUp,\n      onKeyDown,\n      onMouseUp,\n      onMouseDown,\n      onMouseOver,\n      onMouseLeave,\n      onTouchStart,\n      onTouchEnd,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    const value = getField(this.props, this.state, 'value');\n    let { icon } = this.props;\n    if (iconClassName || iconChildren) {\n      icon = <FontIcon iconClassName={iconClassName}>{iconChildren}</FontIcon>;\n    }\n\n    let labelChildren = label;\n    if (icon) {\n      icon = React.cloneElement(icon, { inherit: true });\n      labelChildren = <IconSeparator label={label} iconBefore={iconBefore}>{icon}</IconSeparator>;\n    }\n\n    return (\n      <div\n        {...props}\n        style={style}\n        className={cn('md-inline-block md-file-input-container', className)}\n      >\n        <AccessibleFakeInkedButton\n          component=\"label\"\n          htmlFor={id}\n          disabled={disabled}\n          onTouchStart={this._handleTouchStart}\n          onTouchEnd={this._handleTouchEnd}\n          onMouseDown={this._handleMouseDown}\n          onMouseUp={this._handleMouseUp}\n          onKeyDown={this._handleKeyDown}\n          onKeyUp={this._handleKeyUp}\n          onMouseOver={this._handleMouseOver}\n          onMouseLeave={this._handleMouseLeave}\n          style={labelStyle}\n          className={getBtnStyles({\n            flat,\n            raised: !flat,\n            disabled,\n            primary,\n            secondary,\n            hover,\n            swapTheming,\n            pressed,\n          }, labelClassName)}\n        >\n          {labelChildren}\n        </AccessibleFakeInkedButton>\n        <input\n          id={id}\n          name={name}\n          accept={accept}\n          type=\"file\"\n          multiple={multiple}\n          disabled={disabled}\n          aria-hidden=\"true\"\n          className=\"md-file-input\"\n          onChange={this._handleChange}\n          value={value}\n          tabIndex={-1}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport FileInput from './FileInput';\n\nimport omit from '../utils/omit';\n\n/**\n * The `FileUpload` component is used to upload files locally This is a wrapper of the `FileInput` component\n * with some additional functionality so any props that are undocumented on `FileUpload` but are present\n * on `FileInput` are correctly provided. If you want to upload files to a server, use\n * [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData)\n * by attaching the `File`.\n *\n * Quick example:\n *\n * ```js\n * function upload(file) {\n *   fetch('/api/images', {\n *     method: 'POST',\n *     body: new FormData().append('file', file),\n *   });\n * }\n * ```\n *\n * An upload can be aborted by calling the `abort(file || fileName)` function. If\n * the file or fileName are omitted, it will *attempt* to abort the current\n * file that is uploading. Unreliable for multi-select.\n *\n * ```js\n * <FileUpload ref=\"upload\" />\n * <Button raised onClick={() => this.refs.upload.abort()} label=\"Abort! Abort!\" />\n * ```\n */\nexport default class FileUpload extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the label.\n     */\n    labelStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the label.\n     */\n    labelClassName: PropTypes.string,\n\n    /**\n     * Boolean if the `FileInput` should be styled with the primary color.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the `FileInput` should be styled with the secondary color.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the `FileInput` should be styled as a flat button instead of a\n     * raised button.\n     */\n    flat: PropTypes.bool,\n\n    /**\n     * This should be a comma separated list of Media Types that the `FileInput` can\n     * accept. If this prop is left blank, any file will be accepted.\n     *\n     * The values can either be:\n     * - A file extension\n     * - audio/*\n     * - video/*\n     * - image/*\n     * - any valid [IANA Media Type](http://www.iana.org/assignments/media-types/media-types.xhtml)\n     */\n    accept: PropTypes.string,\n\n    /**\n     * Boolean if multiple files will be accepted.\n     */\n    multiple: PropTypes.bool,\n\n    /**\n     * A label to display on the `FileInput`.\n     */\n    label: PropTypes.node,\n\n    /**\n     * The icon children to use for the upload icon.\n     */\n    iconChildren: PropTypes.node,\n\n    /**\n     * The icon className to use for the upload icon.\n     */\n    iconClassName: PropTypes.string,\n\n    /**\n     * An optional max size for the file. If the file is greater than\n     * this limit, the file will not be uploaded.\n     */\n    maxSize: PropTypes.number,\n\n    /**\n     * A required function to call when the `maxSize` prop is set. It will\n     * be given a list of files that were too big.\n     */\n    onSizeError: (props, propName, component, ...others) => {\n      if (typeof props.maxSize === 'number') {\n        return PropTypes.func.isRequired(props, propName, component, ...others);\n      }\n\n      return null;\n    },\n\n    /**\n     * You can force the `FileReader` to read the file as a specific type\n     * if you do not trust the *amazing* regex I have for choosing the correct\n     * one.\n     *\n     * ```js\n     * if(type.match(/image|video|audio/)) {\n     *   fr.readAsDataURL(file);\n     * } else if(type.match(/application|model|multipart/)) {\n     *   fr.readAsArrayBuffer(file);\n     * } else {\n     *   fr.readAsText(file);\n     * }\n     * ```\n     *\n     * > `.yml` and `.js` both are considered `application`, so it definitely fails there.\n     *\n     * If this prop is a function, you will be given the file's type, the file object, and\n     * the file reader. You will then need to call `fileReader.readAsYOUR_CORRECT_TYPE(file)`.\n     */\n    readAs: PropTypes.oneOfType([\n      PropTypes.oneOf(['DataURL', 'ArrayBuffer', 'Text']),\n      PropTypes.func,\n    ]),\n\n    /**\n     * An optional function to call when the `FileUpload` aborts. The current\n     * file and the abort event are given. This might not be the most useful\n     * function to use since you will need to manually call abort yourself anyways.\n     */\n    onAbort: PropTypes.func,\n\n    /**\n     * An optional function to call when the `FileUpload` errors. The current\n     * file, the error, and the error event are given.\n     *\n     * ```js\n     * onError(file, event.target.error, event);\n     * ```\n     */\n    onError: PropTypes.func,\n\n    /**\n     * An optional function to call when the `FileUpload` loads. The current\n     * file, the load result, and the load event are given.\n     *\n     * ```js\n     * onLoad(file, event.target.result, event);\n     * ```\n     *\n     * The load result will either be:\n     * - a data URL\n     * - a plain text string\n     * - an array buffer\n     *\n     * depending on what type the file is.\n     */\n    onLoad: PropTypes.func,\n\n    /**\n     * An optional function to call when the `FileUpload` starts loading. The current\n     * file and the load start event are given.\n     */\n    onLoadStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the `FileUpload` finishes loading. The\n     * current file and the load end event are given.\n     */\n    onLoadEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the `FileUpload` progress. The current\n     * file, upload progress, and the progress event are given. The progress\n     * will be a number between 0 and 100 that has not been rounded.\n     *\n     * ```js\n     * onProgress(file, progress, event);\n     * ```\n     */\n    onProgress: PropTypes.func,\n\n    /**\n     * Boolean if the same file is allowed to be uploaded multiple times. This will basically make the\n     * `value` of the file input always blank.\n     */\n    allowDuplicates: PropTypes.bool,\n\n    /**\n     * An optional function to call when a file selects or unselects a file.\n     * This will be called before any local uploading occurs.\n     *\n     * ```js\n     * onChange(file(s) || null, event);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional value to apply to the `FileInput`. This is usually not needed and the\n     * `allowDuplicates` is what you are probably looking for instead.\n     *\n     * @see {@link #allowDuplicates}\n     */\n    value: PropTypes.string,\n  };\n\n  state = {};\n\n  /**\n   * Attempts to abort the upload of a file. This function takes an optional `file` or `fileName`\n   * as it's parameter. If the parameter is omitted, it attempts to abort the first file that was\n   * added. If the `onAbort` function was given, it will be called as well.\n   *\n   * @param {Object|string} file - The file or the file name to use to find the\n   *     correct `FileReader`.\n   */\n  abort = (file) => {\n    let fileName = file;\n    if (!file) {\n      // Attempt to remove first file added...\n      fileName = Object.keys(this.state)[0];\n    } else if (typeof file.name === 'string') {\n      fileName = file.name;\n    }\n\n    const reader = this.state[fileName];\n    if (reader) {\n      reader.abort();\n      findDOMNode(this).querySelector('.md-file-input').value = '';\n\n      this.setState(omit(this.state, [fileName]));\n    }\n  };\n\n  _uploadFile = (file) => {\n    const {\n      onAbort,\n      onError,\n      onLoad,\n      onLoadStart,\n      onLoadEnd,\n      onProgress,\n      readAs,\n    } = this.props;\n\n    const { name, type } = file;\n\n    const fr = new FileReader();\n    if (onError) {\n      fr.onerror = e => {\n        onError(file, e.target.error, e);\n      };\n    }\n\n    if (onAbort) {\n      fr.onabort = e => {\n        onAbort(file, e);\n      };\n    }\n\n    if (onLoadStart) {\n      fr.onloadstart = e => {\n        onLoadStart(file, e);\n      };\n    }\n\n    if (onLoadEnd) {\n      fr.onloadend = e => {\n        onLoadEnd(file, e);\n      };\n    }\n\n    fr.onload = e => {\n      if (onLoad) {\n        onLoad(file, e.target.result, e);\n      }\n\n      this.setState(omit(this.state, [name]));\n    };\n\n    if (onProgress) {\n      fr.onprogress = e => {\n        if (e.lengthComputable) {\n          onProgress(file, (e.loaded / e.total) * 100, e);\n        }\n      };\n    }\n\n    if (readAs) {\n      if (typeof readAs === 'function') {\n        readAs(type, file, fr);\n      } else {\n        fr[`readAs${readAs}`](file);\n      }\n    } else if (type.match(/image|video|audio|application\\/pdf/) || name.match(/\\.mkv$/)) {\n      fr.readAsDataURL(file);\n    } else if (type.match(/application\\/json/)) {\n      fr.readAsText(file);\n    } else if (type.match(/application|model|multipart/) || name.match(/(w|e)ar$/)) {\n      fr.readAsArrayBuffer(file);\n    } else {\n      fr.readAsText(file);\n    }\n\n    return fr;\n  };\n\n  _handleUpload = (fileList, e) => {\n    if (this.props.onChange) {\n      this.props.onChange(fileList, e);\n    }\n\n    if (!fileList) { return; }\n    const { maxSize, onSizeError } = this.props;\n    let files = Array.isArray(fileList) ? fileList : [fileList];\n\n    let errorFiles = [];\n    if (maxSize) {\n      errorFiles = files.filter(file => file.size > maxSize);\n      files = files.filter(file => file.size <= maxSize);\n    }\n\n    if (errorFiles.length) {\n      onSizeError(errorFiles);\n    }\n\n    if (!files.length) {\n      return;\n    }\n\n    const nextState = {};\n    files.forEach(file => {\n      const fileReader = this._uploadFile(file);\n      nextState[file.name] = fileReader;\n    });\n\n    this.setState(nextState);\n  };\n\n  render() {\n    const {\n      /* eslint-disable no-unused-vars */\n      maxSize,\n      readAs,\n      onLoad,\n      onLoadStart,\n      onLoadEnd,\n      onProgress,\n      onAbort,\n      onError,\n      onSizeError,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    return <FileInput {...props} onChange={this._handleUpload} />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport bem from '../utils/bem';\nimport isValued from '../utils/isValued';\n\nconst DIFF_KEYS = [\n  'className',\n  'stacked',\n  'container',\n  'noSpacing',\n  'gutter',\n  'spacing',\n];\n\nexport default class Grid extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the Grid component. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the Grid component. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    className: PropTypes.string,\n\n    /**\n     * The component to render the Grid as. This should probably not be used as much\n     * as the `children` callback function.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]),\n\n    /**\n     * The children can either be renderable React elements or a callback function\n     * that accepts the style and className props to apply so that the styles can\n     * be manually added to whichever component.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n\n    /**\n     * An optional container name to apply to the Grid. This should be the same name as provided\n     * to the [react-md-make-grid-container](/components/grids?tab=2#mixin-react-md-make-grid-container) mixin.\n     */\n    container: PropTypes.string,\n\n    /**\n     * Boolean if the grid should be placed vertically instead of horizontally.\n     */\n    stacked: PropTypes.bool,\n\n    /**\n     * Boolean if all the gutters and spacing should be removed from the grid.\n     */\n    noSpacing: PropTypes.bool,\n\n    /**\n     * When the [react-md-make-custom-grid](/components/grids?tab=2#mixin-react-md-make-custom-grid) mixin\n     * is used, you can use the `gutter` and `spacing` props on the `Grid` to apply the correct className\n     */\n    gutter: PropTypes.number,\n\n    /**\n     * When the [react-md-make-custom-grid](/components/grids?tab=2#mixin-react-md-make-custom-grid) mixin\n     * is used, you can use the `gutter` and `spacing` props on the `Grid` to apply the correct className\n     */\n    spacing: PropTypes.number,\n  };\n\n  static defaultProps = {\n    component: 'div',\n    stacked: false,\n    noSpacing: false,\n  };\n\n  /**\n   * A utility function to get the grid's className based on the Grid's props. This is\n   * used behind the scenes to merge and create the className for the grid.\n   *\n   * ### Example:\n   * ```js\n   * <div className={Grid.getClassName()}>A base grid</div>\n   * <div className={Grid.getClassName({ stacked: true })}>A stacked Grid</div>\n   * ```\n   *\n   * @param {Object=} props - This should be an object of the `Grid`'s props. It\n   *    will extract the needed keys and generate the className.\n   * @return {String} the full className to use for the grid\n   */\n  static getClassName(props = {}) {\n    const { className, stacked, noSpacing, gutter, spacing, container } = props;\n    return bem('md-grid', {\n      'stacked': stacked,\n      'no-spacing': noSpacing,\n      [`${gutter}-${spacing}`]: isValued(gutter) && isValued(spacing),\n      [container]: container,\n    }, className);\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = { className: Grid.getClassName(props) };\n  }\n\n  componentWillMount() {\n    this.setState({ className: Grid.getClassName(this.props) });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (DIFF_KEYS.some(key => this.props[key] !== nextProps[key])) {\n      this.setState({ className: Grid.getClassName(nextProps) });\n    }\n  }\n\n  render() {\n    const { className } = this.state;\n    const {\n      style,\n      component: Component,\n      children,\n      /* eslint-disable no-unused-vars */\n      className: propClassName,\n      container,\n      stacked,\n      noSpacing,\n      gutter,\n      spacing,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    if (typeof children === 'function') {\n      return children({ style, className });\n    }\n\n    return <Component {...props} style={style} className={className}>{children}</Component>;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport bem from '../utils/bem';\n\nconst DIFF_KEYS = [\n  'className',\n  'align',\n  'position',\n  'size',\n  'offset',\n  'order',\n  'phoneSize',\n  'phoneOrder',\n  'phoneOffset',\n  'phoneHidden',\n  'tabletSize',\n  'tabletOrder',\n  'tabletOffset',\n  'tabletHidden',\n  'desktopSize',\n  'desktopOrder',\n  'desktopOffset',\n  'desktopHidden',\n];\n\nexport default class Cell extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the Cell component. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the Cell component. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    className: PropTypes.string,\n\n    /**\n     * The component to render the Cell as. This should probably not be used as much\n     * as the `children` callback function.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]),\n\n    /**\n     * The children can either be renderable React elements or a callback function\n     * that accepts the style and className props to apply so that the styles can\n     * be manually added to whichever component.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n\n    /**\n     * An optional cell alignment to apply. When the `Grid` is not `stacked`,\n     * this will apply to vertical alignment within each \"row\" of the grid.\n     *\n     * Alignments:\n     * - `top` - This will align to the top of the row\n     * - `middle` - This will align to the middle of the row\n     * - `bottom` - This will align to the bottom of the row\n     * - `stretch` - This will make the cell stretch to fill all the available space\n     *   in the row.\n     *\n     * @see {@link #position}\n     */\n    align: PropTypes.oneOf(['top', 'middle', 'bottom', 'stretch']),\n\n    /**\n     * An optional cell position to apply. When the `Grid` is not `stacked`,\n     * this will apply to horizontal alignment within each \"row\" of the grid.\n     *\n     * Positions:\n     * - `center` - This will align the cell to be within the center of the row. This really\n     *    just applies `margin-left: auto; margin-right: auto`.\n     * - `right` - This will align the cell to the end of the row. This really just applies `margin-left: auto`.\n     *\n     * @see {@link #align}\n     */\n    position: PropTypes.oneOf(['center', 'right']),\n\n    /**\n     * An optional size to apply to the cell. This sizing will be applied across all media sizes.\n     * If the size is greater than the number of columns allowed for the media size, it will just\n     * span the entire width.\n     */\n    size: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell. This order will be applied across all media sizes.\n     */\n    order: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell. This will add spacing to the left of the cell.\n     */\n    offset: PropTypes.number,\n\n    /**\n     * An optional size to apply to the cell only on phones.\n     */\n    phoneSize: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell only on phones.\n     */\n    phoneOrder: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell only on phones.\n     */\n    phoneOffset: PropTypes.number,\n\n    /**\n     * Boolean if the cell should be hidden on phones only.\n     */\n    phoneHidden: PropTypes.bool,\n\n    /**\n     * An optional size to apply to the cell only on tablets.\n     */\n    tabletSize: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell only on tablets.\n     */\n    tabletOrder: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell only on tablets.\n     */\n    tabletOffset: PropTypes.number,\n\n    /**\n     * Boolean if the cell should be hidden on tablets only.\n     */\n    tabletHidden: PropTypes.bool,\n\n    /**\n     * An optional size to apply to the cell only on desktops.\n     */\n    desktopSize: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell only on desktops.\n     */\n    desktopOrder: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell only on desktops.\n     */\n    desktopOffset: PropTypes.number,\n\n    /**\n     * Boolean if the cell should be hidden on desktops only.\n     */\n    desktopHidden: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    component: 'div',\n    phoneHidden: false,\n    tabletHidden: false,\n    desktopHidden: false,\n  };\n\n  /**\n   * A utility function to get the cell's className based on the Cell's props. This is\n   * used behind the scenes to merge and create the className for the cell.\n   *\n   * ### Example:\n   * ```js\n   * <div className={Cell.getClassName()}>A simple cell</div>\n   * <div className={Cell.getClassName({ size: 1 })}>A cell with size 1</div>\n   * ```\n   *\n   * @param {Object=} props - This should be an object of the `Cell`'s props. It\n   *    will extract the needed keys and generate the className.\n   * @return {String} the full className to use for the cell\n   */\n  static getClassName(props = {}) {\n    const {\n      className,\n      align,\n      position,\n      size,\n      order,\n      offset,\n      phoneSize,\n      phoneOrder,\n      phoneOffset,\n      phoneHidden,\n      tabletSize,\n      tabletOrder,\n      tabletOffset,\n      tabletHidden,\n      desktopSize,\n      desktopOrder,\n      desktopOffset,\n      desktopHidden,\n    } = props;\n\n    return bem('md-cell', {\n      [align]: align,\n      [position]: position,\n      [size]: size,\n      [`order-${order}`]: order,\n      [`${offset}-offset`]: offset,\n      [`${phoneSize}-phone`]: phoneSize,\n      [`order-${phoneOrder}-phone`]: phoneOrder,\n      [`${phoneOffset}-phone-offset`]: phoneOffset,\n      'phone-hidden': phoneHidden,\n      [`${tabletSize}-tablet`]: tabletSize,\n      [`order-${tabletOrder}-tablet`]: tabletOrder,\n      [`${tabletOffset}-tablet-offset`]: tabletOffset,\n      'tablet-hidden': tabletHidden,\n      [`${desktopSize}-desktop`]: desktopSize,\n      [`order-${desktopOrder}-desktop`]: desktopOrder,\n      [`${desktopOffset}-desktop-offset`]: desktopOffset,\n      'desktop-hidden': desktopHidden,\n    }, className);\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = { className: Cell.getClassName(props) };\n  }\n\n  componentWillMount() {\n    this.setState({ className: Cell.getClassName(this.props) });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (DIFF_KEYS.some(key => this.props[key] !== nextProps[key])) {\n      this.setState({ className: Cell.getClassName(nextProps) });\n    }\n  }\n\n  render() {\n    const { className } = this.state;\n    const {\n      style,\n      component: Component,\n      children,\n      /* eslint-disable no-unused-vars */\n      className: propClassName,\n      align,\n      position,\n      size,\n      offset,\n      order,\n      phoneSize,\n      phoneOrder,\n      phoneOffset,\n      phoneHidden,\n      tabletSize,\n      tabletOrder,\n      tabletOffset,\n      tabletHidden,\n      desktopSize,\n      desktopOrder,\n      desktopOffset,\n      desktopHidden,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    if (typeof children === 'function') {\n      return children({ style, className });\n    }\n\n    return <Component {...props} style={style} className={className}>{children}</Component>;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport Grid from './Grid';\nimport Cell from './Cell';\n\nconst DIFF_KEYS = [\n  'className',\n  'cellClassName',\n  'stacked',\n  'container',\n  'noSpacing',\n  'gutter',\n  'spacing',\n  'align',\n  'position',\n  'size',\n  'offset',\n  'order',\n  'phoneSize',\n  'phoneOrder',\n  'phoneOffset',\n  'phoneHidden',\n  'tabletSize',\n  'tabletOrder',\n  'tabletOffset',\n  'tabletHidden',\n  'desktopSize',\n  'desktopOrder',\n  'desktopOffset',\n  'desktopHidden',\n];\n\nexport default class GridList extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the Grid component. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the Grid component. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to each child. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    cellStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to each child. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    cellClassName: PropTypes.string,\n\n    /**\n     * The component to render the Cell as. This should probably not be used as much\n     * as the `children` callback function.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]),\n\n    /**\n     * The children can either be renderable React elements or a callback function\n     * that accepts the style and className props to apply so that the styles can\n     * be manually added to whichever component.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n\n    /**\n     * An optional container name to apply to the Grid. This should be the same name as provided\n     * to the [react-md-make-grid-container](/components/grids?tab=2#mixin-react-md-make-grid-container) mixin.\n     */\n    container: PropTypes.string,\n\n    /**\n     * Boolean if the grid should be placed vertically instead of horizontally.\n     */\n    stacked: PropTypes.bool,\n\n    /**\n     * Boolean if all the gutters and spacing should be removed from the grid.\n     */\n    noSpacing: PropTypes.bool,\n\n    /**\n     * When the [react-md-make-custom-grid](/components/grids?tab=2#mixin-react-md-make-custom-grid) mixin\n     * is used, you can use the `gutter` and `spacing` props on the `Grid` to apply the correct className\n     */\n    gutter: PropTypes.number,\n\n    /**\n     * When the [react-md-make-custom-grid](/components/grids?tab=2#mixin-react-md-make-custom-grid) mixin\n     * is used, you can use the `gutter` and `spacing` props on the `Grid` to apply the correct className\n     */\n    spacing: PropTypes.number,\n\n    /**\n     * An optional cell alignment to apply. When the `Grid` is not `stacked`,\n     * this will apply to vertical alignment within each \"row\" of the grid.\n     *\n     * Alignments:\n     * - `top` - This will align to the top of the row\n     * - `middle` - This will align to the middle of the row\n     * - `bottom` - This will align to the bottom of the row\n     * - `stretch` - This will make the cell stretch to fill all the available space\n     *   in the row.\n     *\n     * @see {@link #position}\n     */\n    align: PropTypes.oneOf(['top', 'middle', 'bottom', 'stretch']),\n\n    /**\n     * An optional cell position to apply. When the `Grid` is not `stacked`,\n     * this will apply to horizontal alignment within each \"row\" of the grid.\n     *\n     * Positions:\n     * - `center` - This will align the cell to be within the center of the row. This really\n     *    just applies `margin-left: auto; margin-right: auto`.\n     * - `right` - This will align the cell to the end of the row. This really just applies `margin-left: auto`.\n     *\n     * @see {@link #align}\n     */\n    position: PropTypes.oneOf(['center', 'right']),\n\n    /**\n     * An optional size to apply to the cell. This sizing will be applied across all media sizes.\n     * If the size is greater than the number of columns allowed for the media size, it will just\n     * span the entire width.\n     */\n    size: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell. This order will be applied across all media sizes.\n     */\n    order: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell. This will add spacing to the left of the cell.\n     */\n    offset: PropTypes.number,\n\n    /**\n     * An optional size to apply to the cell only on phones.\n     */\n    phoneSize: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell only on phones.\n     */\n    phoneOrder: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell only on phones.\n     */\n    phoneOffset: PropTypes.number,\n\n    /**\n     * Boolean if the cell should be hidden on phones only.\n     */\n    phoneHidden: PropTypes.bool,\n\n    /**\n     * An optional size to apply to the cell only on tablets.\n     */\n    tabletSize: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell only on tablets.\n     */\n    tabletOrder: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell only on tablets.\n     */\n    tabletOffset: PropTypes.number,\n\n    /**\n     * Boolean if the cell should be hidden on tablets only.\n     */\n    tabletHidden: PropTypes.bool,\n\n    /**\n     * An optional size to apply to the cell only on desktops.\n     */\n    desktopSize: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell only on desktops.\n     */\n    desktopOrder: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell only on desktops.\n     */\n    desktopOffset: PropTypes.number,\n\n    /**\n     * Boolean if the cell should be hidden on desktops only.\n     */\n    desktopHidden: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    component: 'div',\n    stacked: false,\n    noSpacing: false,\n    phoneHidden: false,\n    tabletHidden: false,\n    desktopHidden: false,\n  };\n\n  /**\n   * A utility function to get the grid's className based on the `Grid`'s and `Cell`'s\n   * props. This is * used behind the scenes to merge and create the className for the grid.\n   *\n   * ### Example:\n   * ```js\n   * const { className, cellClassName } = GridList.getClassNames();\n   * const { className, cellClassName } = GridList.getClassNames({ size: 1, container: 'custom' });\n   * ```\n   *\n   * @param {Object=} props - This should be an object of the `Grid`'s props. It\n   *    will extract the needed keys and generate the classNames.\n   * @return {Object} an object containing the `className` and `cellClassName` attributes.\n   */\n  static getClassNames(props = {}) {\n    const { className, cellClassName, ...remaining } = props;\n    return {\n      className: Grid.getClassName({ className, ...remaining }),\n      cellClassName: Cell.getClassName({ className: cellClassName, ...remaining }),\n    };\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = GridList.getClassNames(props);\n  }\n\n  componentWillMount() {\n    this.setState(GridList.getClassNames(this.props));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (DIFF_KEYS.some(key => this.props[key] !== nextProps[key])) {\n      this.setState(GridList.getClassNames(nextProps));\n    }\n  }\n\n  render() {\n    const { className, cellClassName } = this.state;\n    const {\n      style,\n      cellStyle,\n      component: Component,\n      children,\n      /* eslint-disable no-unused-vars */\n      className: propClassName,\n      cellClassName: propCellClassName,\n      container,\n      noSpacing,\n      stacked,\n      gutter,\n      spacing,\n      align,\n      position,\n      size,\n      offset,\n      order,\n      phoneSize,\n      phoneOrder,\n      phoneOffset,\n      phoneHidden,\n      tabletSize,\n      tabletOrder,\n      tabletOffset,\n      tabletHidden,\n      desktopSize,\n      desktopOrder,\n      desktopOffset,\n      desktopHidden,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    if (typeof children === 'function') {\n      return children({ style, className, cellStyle, cellClassName });\n    }\n\n    return (\n      <Component {...props} style={style} className={className}>\n        {React.Children.map(children, (child) => {\n          if (!child) {\n            return child;\n          }\n\n          let childStyle = child.props.style;\n          if (cellStyle) {\n            childStyle = childStyle ? { ...cellStyle, ...childStyle } : cellStyle;\n          }\n\n          return React.cloneElement(child, {\n            style: childStyle,\n            className: cn(child.props.className, cellClassName),\n          });\n        })}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport ListItemText from './ListItemText';\nimport TileAddon from './TileAddon';\n\nexport default class ListItemControl extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the `.md-list-item`.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `.md-list-item`.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `.md-list-tile`.\n     */\n    tileStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `.md-list-tile`.\n     */\n    tileClassName: PropTypes.string,\n\n    /**\n     * The primary text to display in the `ListItemControl`. The `primaryAction` or\n     * `secondaryAction` will end up getting the `label` prop injected into it with\n     * a combination of the `primaryText` and `secondaryText`. If the `primaryAction`\n     * or `secondaryAction` already have a label prop, the `label` prop will be used\n     * as the `primaryText`.\n     */\n    primaryText: PropTypes.node,\n\n    /**\n     * An optional secondary text that can be displayed in the label of the `primaryAction`\n     * or `secondaryAction`.\n     */\n    secondaryText: PropTypes.node,\n\n    /**\n     * Boolean if the primary and secondary text will span three lines.\n     */\n    threeLines: PropTypes.bool,\n\n    /**\n     * The primary action of the `ListItemControl`. This _should_ normally\n     * be a type of `SelectionControl`\n     */\n    primaryAction: PropTypes.element,\n\n    /**\n     * The secondary action of the `ListItemControl`. This _should_ normally\n     * be a type of `SelectionControl`. If it is a selection control,\n     * make sure to add the `labelBefore` prop to get correct positioning.\n     */\n    secondaryAction: PropTypes.element,\n\n    /**\n     * An optional `FontIcon` to display to the left of the action.\n     */\n    leftIcon: PropTypes.node,\n\n    /**\n     * An optional `Avatar` to display to the left of the action.\n     */\n    leftAvatar: PropTypes.node,\n\n    /**\n     * An optional `FontIcon` to display to the right of the action.\n     */\n    rightIcon: PropTypes.node,\n\n    /**\n     * An optional `FontIcon` to display to the right of the action.\n     */\n    rightAvatar: PropTypes.node,\n\n    /**\n     * Defines the number of items in the list. This is only required when all items in the\n     * list are not present in the DOM.\n     *\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-setsize\n     */\n    'aria-setsize': PropTypes.number,\n\n    /**\n     * Defines the items position in the list. This is only required when all items in the list\n     * are not present in the DOM. The custom validation just requires this prop if the `aria-setsize`\n     * prop is defined as a helpful reminder.\n     *\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-posinset\n     */\n    'aria-posinset': (props, propName, ...args) => {\n      let validator = PropTypes.number;\n      if (typeof props['aria-setsize'] !== 'undefined') {\n        validator = validator.isRequired;\n      }\n\n      return validator(props, propName, ...args);\n    },\n  };\n\n  render() {\n    const {\n      className,\n      tileStyle,\n      tileClassName,\n      primaryAction,\n      secondaryAction,\n      primaryText,\n      secondaryText,\n      threeLines,\n      leftIcon,\n      leftAvatar,\n      rightIcon,\n      rightAvatar,\n      ...props\n    } = this.props;\n\n    let control = Children.only(primaryAction || secondaryAction);\n    const text = (\n      <ListItemText\n        key=\"text\"\n        primaryText={control.props.label || primaryText}\n        secondaryText={secondaryText}\n        className={cn({\n          'md-tile-content--left-icon': leftIcon,\n          'md-tile-content--left-avatar': leftAvatar,\n          'md-tile-content--left-button': primaryAction,\n          'md-tile-content--right-padding': primaryAction,\n        })}\n      />\n    );\n    control = cloneElement(control, {\n      className: cn('md-list-control', {\n        'md-list-control--right': secondaryAction,\n      }, control.props.className),\n      label: text,\n    });\n\n    const leftNode = (\n      <TileAddon\n        key=\"left-addon\"\n        icon={leftIcon}\n        avatar={leftAvatar}\n      />\n    );\n\n    const rightNode = (\n      <TileAddon\n        key=\"right-addon\"\n        icon={rightIcon}\n        avatar={rightAvatar}\n      />\n    );\n\n    const icond = !!leftIcon || !!rightIcon;\n    const avatard = !!leftAvatar || !!rightAvatar;\n\n    return (\n      <li {...props} className={cn('md-list-item', className)}>\n        <div\n          style={tileStyle}\n          className={cn('md-list-tile', {\n            'md-list-tile--icon': !secondaryText && icond && !avatard,\n            'md-list-tile--avatar': !secondaryText && avatard,\n            'md-list-tile--two-lines': secondaryText && !threeLines,\n            'md-list-tile--three-lines': secondaryText && threeLines,\n            'md-list-tile--control-left': primaryAction,\n            'md-list-tile--control-right': secondaryAction,\n          }, themeColors({ text: true }), tileClassName)}\n        >\n          {leftNode}\n          {control}\n          {rightNode}\n        </div>\n      </li>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nfunction validateAspectRatio(props, propName, component, ...args) {\n  const value = props[propName];\n  let err = PropTypes.string.isRequired(props, propName, component, ...args);\n  if (!err && value.split('-').length !== 2) {\n    err = new Error(\n      `Your provided an \\`${propName}\\` prop to the ${component} that is not a valid ` +\n      `aspect ratio \\`${value}\\`. This should be in the form of '{width}-{height}'.`\n    );\n  }\n\n  return err;\n}\n\n/**\n * The `Media` component is used to display images, iframes, ...media. Who'da thunk?\n */\nexport default class Media extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional className to apply to the card media component.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Any media to display.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the aspect ratio should be forced.\n     */\n    forceAspect: PropTypes.bool,\n\n    /**\n     * The aspect ratio to use.\n     */\n    aspectRatio: validateAspectRatio,\n\n    /**\n     * Boolean if this component should be expandable when there is a `CardExpander`\n     * above it in the `Card`.\n     */\n    expandable: PropTypes.bool,\n\n    /**\n     * The component to render the card media as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    forceAspect: true,\n    aspectRatio: '16-9',\n    component: 'section',\n  };\n\n  render() {\n    const {\n      component: Component,\n      className,\n      children,\n      forceAspect,\n      aspectRatio,\n      expandable, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    return (\n      <Component\n        {...props}\n        className={cn('md-media', {\n          [`md-media--${aspectRatio}`]: forceAspect,\n        }, className)}\n      >\n        {children}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `MediaOverlay` component is just a very simple wrapper that adds the\n * `.md-media-overlay` class name to a div. The overlay will be positioned\n * at the bottom of the `Media` by default.\n */\nexport default class MediaOverlay extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the overlay.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the overlay.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Any children to display in the overlay. This is _normally_ a `CardTitle` component\n     * or some buttons.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The component to be rendered as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    component: 'div',\n  };\n\n  render() {\n    const { className, component: Component, ...props } = this.props;\n    return <Component className={cn('md-media-overlay', className)} {...props} />;\n  }\n}\n","import React, { PureComponent, Children, isValidElement, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport default class ToolbarTitle extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    prominent: PropTypes.bool,\n    offset: PropTypes.bool,\n    title: PropTypes.node,\n  };\n\n  render() {\n    const { title, className, prominent, offset, ...props } = this.props;\n    if (!title) {\n      return null;\n    }\n\n    const fullClassName = cn('md-title md-title--toolbar', {\n      'md-title--toolbar-prominent': prominent,\n      'md-title--toolbar-offset': offset,\n    }, className);\n\n    if (isValidElement(title)) {\n      const titleEl = Children.only(title);\n      return cloneElement(title, {\n        ...props,\n        id: titleEl.props.id || props.id,\n        className: cn(fullClassName, titleEl.props.className),\n      });\n    }\n\n    return (\n      <h2\n        {...props}\n        className={fullClassName}\n      >\n        {title}\n      </h2>\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport between from '../utils/PropTypes/between';\nimport Paper from '../Papers/Paper';\nimport ToolbarTitle from './ToolbarTitle';\n\nexport default class Toolbar extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional id to provide to the toolbar. If this is specified and the `titleId` is not, the title\n     * will gain an id of `${id}-title`. This will not be applied to the `titleMenu`.\n     *\n     * @see {@link #titleId}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the toolbar.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the toolbar,\n     */\n    className: PropTypes.string,\n\n    /*\n     * An optional style to apply to the `h2` surrounding the `title` prop.\n     */\n    titleStyle: PropTypes.object,\n\n    /*\n     * An optional className to apply to the `h2` surrounding the `title` prop.\n     */\n    titleClassName: PropTypes.string,\n\n    /**\n     * Boolean if the toolbar should more prominent. This will double the height of the toolbar.\n     */\n    prominent: PropTypes.bool,\n\n    /**\n     * Boolean if the toolbar's title should be more prominent. This will move the title to the\n     * second line of the toolbar. This only works when the `prominent` prop is true as well.\n     */\n    prominentTitle: PropTypes.bool,\n\n    /**\n     * The current title of the page to show in the toolbar. It is invalid to specify both a\n     * `title` and a `titleMenu`. Only one should be given.\n     */\n    title: invalidIf(PropTypes.node, 'titleMenu'),\n\n    /**\n     * An optional id to give the main title in the toolbar. This will not be applied to the\n     * `titleMenu`.\n     */\n    titleId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional title menu to display instead of the title. This should be a `SelectField` component.\n     * It is cloned with some additional props, so if the `SelectField` is separated into a separate\n     * component, the following props must be passed to get the correct styling: `className`, `block`,\n     * `paddedBlock`, `position`.\n     */\n    titleMenu: PropTypes.element,\n\n    /**\n     * This prop is used for rendering an optional navigation button to the left of the `title`\n     * or the `titleMenu` component. This needs to be an icon `Button` because some additional props\n     * are cloned into it.\n     */\n    nav: PropTypes.element,\n\n    /**\n     * Any additional actions to display to the right of the title. This should be a list or a single\n     * `Button` to display. The buttons get cloned with an additional className for toolbar styling.\n     */\n    actions: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]),\n\n    /**\n     * Any children to display in the toolbar. This will be displayed between the optional title and\n     * actions.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the toolbar should be fixed to the top of the page. This will add some additional box shadow.\n     */\n    fixed: PropTypes.bool,\n\n    /**\n     * Boolean if the nav, actions, and title should share the same color. For a `colored` or dark `themed`\n     * toolbar, they will all be colored white. For a transparent or light `themed` toolbar, the colors will\n     * be the `rgba(0, 0, 0, .87)`. Setting this to false will only style the title to the specific color\n     * stated above.\n     */\n    singleColor: PropTypes.bool,\n\n    /**\n     * Boolean if the toolbar should be colored based off the current theme. This will either style the background\n     * to be fairly white, or fairly black. You can not specify both `themed` and `colored`.\n     */\n    themed: PropTypes.bool,\n\n    /**\n     * Boolean if the toolbar should be colored with the `$md-primary-color`.\n     */\n    colored: invalidIf(PropTypes.bool, 'themed'),\n\n    /**\n     * The component to render the toolbar as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * Boolean if the toolbar is inset in the page. This will just add some margin around\n     * it.\n     */\n    inset: PropTypes.bool,\n\n    /**\n     * An optional zDepth to enforce for the toolbar. This should be a number between 0 and 5.\n     * If this is omitted, the toolbar will gain a zDepth of 2 when `fixed`.\n     */\n    zDepth: between(PropTypes.number, 0, 5),\n    containerStyle: deprecated(\n      PropTypes.object,\n      'The `container` no longer exists in the `Toolbar`. Use the `style` prop instead'\n    ),\n    containerClassName: deprecated(\n      PropTypes.string,\n      'The `container` no longer exists in the `Toolbar`. Use the `className` prop instead'\n    ),\n    primary: deprecated(PropTypes.bool, 'Use the `colored` prop instead'),\n    secondary: deprecated(\n      PropTypes.bool,\n      'Toolbars can no longer be themed to the secondary color. Use the `colored` prop instead'\n    ),\n    actionLeft: deprecated(PropTypes.element, 'Use the `nav` prop instead'),\n    actionsRight: deprecated(\n      PropTypes.node,\n      'Use the `menu` prop and/or the `actions` prop instead'\n    ),\n  };\n\n  static defaultProps = {\n    singleColor: true,\n    component: 'header',\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      component,\n      titleStyle,\n      titleClassName,\n      prominentTitle,\n      themed,\n      singleColor,\n      actions,\n      fixed,\n      children,\n      inset,\n      titleId,\n      /* eslint-disable no-unused-vars */\n      nav: propNav,\n      title: propTitle,\n      titleMenu: propTitleMenu,\n      zDepth: propZDepth,\n      colored: propColored,\n      prominent: propProminent,\n\n      // deprecated\n      containerStyle,\n      containerClassName,\n      /* eslint-enble no-unused-vars */\n      // deprecated\n      actionLeft,\n      actionsRight,\n      primary,\n      secondary,\n      ...props\n    } = this.props;\n\n    let {\n      colored,\n      title,\n      titleMenu,\n      nav,\n      prominent,\n      zDepth,\n    } = this.props;\n\n    colored = colored || primary || secondary;\n    prominent = prominent || prominentTitle;\n\n    title = (\n      <ToolbarTitle\n        key=\"title\"\n        style={titleStyle}\n        className={titleClassName}\n        prominent={prominentTitle}\n        offset={prominentTitle}\n        id={typeof titleId === 'undefined' && props.id ? `${props.id}-title` : titleId}\n        title={title}\n      />\n    );\n\n    if (nav || actionLeft) {\n      const navEl = Children.only(nav || actionLeft);\n      nav = cloneElement(nav, {\n        className: cn('md-btn--toolbar md-toolbar--action-left', navEl.props.className),\n      });\n    }\n\n    let rightActions;\n    if (actions || actionsRight) {\n      rightActions = Children.map(Children.toArray(actions || actionsRight), action => cloneElement(action, {\n        className: cn('md-btn--toolbar', action.props.className),\n      }));\n\n      rightActions = (\n        <div key=\"actions\" className=\"md-cell--right md-toolbar--action-right\">\n          {rightActions}\n        </div>\n      );\n    }\n\n    if (titleMenu) {\n      titleMenu = Children.only(titleMenu);\n      titleMenu = cloneElement(titleMenu, {\n        className: cn('md-title md-title--toolbar md-select-field--toolbar', {\n          'md-title--toolbar-offset': prominentTitle,\n          'md-title--toolbar-prominent': prominentTitle,\n        }, titleMenu.props.className),\n        position: titleMenu.props.position || 'tl',\n        toolbar: true,\n      });\n    }\n\n    if (typeof zDepth !== 'number') {\n      zDepth = fixed ? 2 : 0;\n    }\n\n    return (\n      <Paper\n        {...props}\n        component={component}\n        zDepth={zDepth}\n        style={style}\n        className={cn('md-toolbar', {\n          'md-background--primary': colored,\n          'md-toolbar--themed': themed,\n          'md-toolbar--text-white': singleColor && colored,\n          'md-toolbar--prominent': prominent,\n          'md-toolbar--fixed': fixed,\n          'md-toolbar--inset': inset,\n        }, className)}\n      >\n        {nav}\n        {title}\n        {titleMenu}\n        {children}\n        {rightActions}\n      </Paper>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * This is an accessibility only component that should be used in the `NavigationDrawer`\n * component. It allows keyboard users to quickly jump to the main content.\n *\n * This component relies on the `contextTypes` of the `NavigationDrawer` to work. If this is going\n * to be used outside of that component, you will need to specify an `id` and `label` contextType\n * to pass to this component.\n */\nexport default class JumpToContentLink extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional function to call when the linked is clicked.\n     */\n    onClick: PropTypes.func,\n  };\n\n  static contextTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    label: PropTypes.node.isRequired,\n  }\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    document.getElementById(this.context.id).focus();\n  };\n\n  render() {\n    const { className, ...props } = this.props;\n    const { id, label } = this.context;\n    return (\n      <a\n        {...props}\n        id={`jump-to-${id}`}\n        href={`#${id}`}\n        onClick={this._handleClick}\n        className={cn('md-content-jump', className)}\n      >\n        {label}\n      </a>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Buttons/Button';\n\n/**\n * A button used to close the persistent navigation drawer. The button will\n * be generated based on the `NavigationDrawer`'s `contextTypes`.\n *\n * This component is really only used if you are using a `persistent` drawer and you\n * manually created the `drawerHeader` for the `NavigationDrawer`.\n */\nexport default class CloseButton extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional additional function to call when the `click` event is triggered.\n     */\n    onClick: PropTypes.func,\n  };\n\n  static contextTypes = {\n    closeIcon: PropTypes.element,\n    onCloseClick: PropTypes.func,\n  };\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    if (this.context.onCloseClick) {\n      this.context.onCloseClick(e);\n    }\n  };\n\n  render() {\n    const { closeIcon } = this.context;\n\n    return (\n      <Button\n        {...this.props}\n        icon\n        key=\"close\"\n        onClick={this._handleClick}\n        iconEl={closeIcon}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport TileAddon from '../Lists/TileAddon';\n\nexport default class MiniListItem extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    tileStyle: PropTypes.object,\n    tileClassName: PropTypes.string,\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]),\n    active: PropTypes.bool,\n    activeClassName: PropTypes.string,\n    leftIcon: PropTypes.node,\n    leftAvatar: PropTypes.node,\n    disabled: PropTypes.bool,\n    onTouchStart: PropTypes.func,\n    onTouchEnd: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    defaultOpen: PropTypes.bool,\n    itemComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    activeClassName: 'md-text--theme-primary',\n    component: 'div',\n    itemComponent: 'li',\n  };\n\n  state = { active: false };\n\n  componentWillUnmount() {\n    if (this._touchTimeout) {\n      clearTimeout(this._touchTimeout);\n    }\n  }\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ active: true });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ active: false });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    this._touched = true;\n\n    this.setState({ active: true, touchedAt: Date.now() });\n  };\n\n  _handleTouchEnd = (e) => {\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(e);\n    }\n\n    const time = Date.now() - this.state.touchedAt;\n    this._touchTimeout = setTimeout(() => {\n      this._touchTimeout = null;\n\n      this.setState({ active: false });\n    }, time > 450 ? 0 : 450 - time);\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      tileStyle,\n      tileClassName,\n      leftIcon,\n      leftAvatar,\n      active,\n      activeClassName,\n      itemComponent: ItemComponent,\n      /* eslint-disable no-unused-vars,react/prop-types */\n      primaryText,\n      secondaryText,\n      rightIcon,\n      rightAvatar,\n      threeLines,\n      children,\n      defaultOpen,\n      isOpen,\n      inset,\n      nestedItems,\n      animateNestedItems,\n      expanderIcon,\n\n      // deprecated\n      expanderIconChildren,\n      expanderIconClassName,\n      /* eslint-enable no-unused-vars,react/prop-types */\n      ...props\n    } = this.props;\n\n    return (\n      <ItemComponent style={style} className={className}>\n        <AccessibleFakeInkedButton\n          {...props}\n          style={tileStyle}\n          className={cn('md-list-tile md-list-tile--icon md-list-tile--mini', {\n            'md-list-tile--active': this.state.active && !this._touched,\n          }, tileClassName)}\n          onMouseOver={this._handleMouseOver}\n          onMouseLeave={this._handleMouseLeave}\n          onTouchStart={this._handleTouchStart}\n          onTouchEnd={this._handleTouchEnd}\n        >\n          <TileAddon\n            active={active}\n            activeClassName={activeClassName}\n            icon={leftIcon}\n            avatar={leftAvatar}\n          />\n        </AccessibleFakeInkedButton>\n      </ItemComponent>\n    );\n  }\n}\n","/** @module utils/DateUtils/DateTimeFormat */\n\n/**\n * A _really_ terrible DateTimeFormat mock if it is not available in\n * the browser or node version.\n */\nconst DateTimeFormat = (() => {\n  if (typeof Intl !== 'undefined' && typeof Intl.DateTimeFormat !== 'undefined') {\n    return Intl.DateTimeFormat;\n  }\n\n  // Very bad 'mock' of Intl.DateTimeFormat\n  return class DateTimeFormat { // eslint-disable-line no-shadow\n    constructor(locales, formatOptions) {\n      this.locales = locales;\n      this.options = formatOptions;\n    }\n\n    format(date) {\n      return date.toLocaleString();\n    }\n  };\n})();\n\nexport default DateTimeFormat;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `PickerControl` component is the button that goes in the header\n * of a `Picker` component. It is used to switch the view of the `Picker`\n * from state to state.\n *\n * For example, this is the year and date views for the `DatePicker`.\n */\nexport default class PickerControl extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    active: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired,\n  };\n\n  render() {\n    const { className, active, ...props } = this.props;\n    return (\n      <button\n        {...props}\n        type=\"button\"\n        className={cn('md-btn md-pointer--hover md-picker-control md-picker-text', {\n          'md-picker-text--active': active,\n        }, className)}\n      />\n    );\n  }\n}\n","/* eslint-disable new-cap */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport PickerControl from './PickerControl';\n\n/**\n * The `DatePickerHeader` component is the component that holds the\n * current year and the current date. It allows the user to switch\n * between calendar and year picker mode.\n */\nexport default class DatePickerHeader extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\n    calendarMode: PropTypes.oneOf(['calendar', 'year']).isRequired,\n    changeCalendarMode: PropTypes.func.isRequired,\n    timeZone: PropTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = this._getFormattedDate(props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { DateTimeFormat, locales, calendarTempDate, changeCalendarMode } = this.props;\n    if (DateTimeFormat !== nextProps.DateTimeFormat\n      || locales !== nextProps.locales\n      || calendarTempDate !== nextProps.calendarTempDate\n      || changeCalendarMode !== nextProps.changeCalendarMode) {\n      this.setState(this._getFormattedDate(nextProps));\n    }\n  }\n\n  _getFormattedDate({ DateTimeFormat, locales, calendarTempDate, timeZone }) {\n    return {\n      year: DateTimeFormat(locales, { year: 'numeric', timeZone }).format(calendarTempDate),\n      weekday: DateTimeFormat(locales, { weekday: 'short', timeZone }).format(calendarTempDate),\n      date: DateTimeFormat(locales, { month: 'short', day: '2-digit', timeZone }).format(calendarTempDate),\n    };\n  }\n\n  _selectYear = (e) => {\n    this.props.changeCalendarMode('year', e);\n  };\n\n  _selectCalendar = (e) => {\n    this.props.changeCalendarMode('calendar', e);\n  };\n\n  render() {\n    const { year, weekday, date } = this.state;\n    const { calendarMode, className } = this.props;\n    return (\n      <header className={cn('md-picker-header', className)}>\n        <PickerControl onClick={this._selectYear} active={calendarMode === 'year'}>\n          <h6 className=\"md-subheading-1\">{year}</h6>\n        </PickerControl>\n        <PickerControl onClick={this._selectCalendar} active={calendarMode === 'calendar'}>\n          <h4 className=\"md-display-1\">{`${weekday},`}&nbsp;</h4>\n          <h4 className=\"md-display-1\">{date}</h4>\n        </PickerControl>\n      </header>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * This component renders a selectable date in the `CalendarMonth` component.\n */\nexport default class CalendarDate extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    date: PropTypes.instanceOf(Date).isRequired,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    active: PropTypes.bool,\n    today: PropTypes.bool,\n    timeZone: PropTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { ...this._getFormattedDate(props), desktopActive: false };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { DateTimeFormat, locales, date } = this.props;\n    if (DateTimeFormat !== nextProps.DateTimeFormat || locales !== nextProps.locales || date !== nextProps.date) {\n      this.setState(this._getFormattedDate(nextProps));\n    }\n  }\n\n  _getFormattedDate({ DateTimeFormat, locales, date, timeZone }) {\n    return {\n      date: new DateTimeFormat(locales, { day: 'numeric', timeZone }).format(date),\n    };\n  }\n\n  _setFocus = (btn) => {\n    if (btn && this.props.active) {\n      btn.focus();\n    }\n  };\n\n  _handleClick = (e) => {\n    this.props.onClick(new Date(this.props.date), e);\n  };\n\n  _setActive = () => {\n    if (!this.props.disabled) {\n      this.setState({ desktopActive: true });\n    }\n  };\n\n  _setInactive = () => {\n    if (!this.props.disabled) {\n      this.setState({ desktopActive: false });\n    }\n  };\n\n  render() {\n    const { date, desktopActive } = this.state;\n    const { disabled, active, today, className } = this.props;\n\n    const fullyActive = today && !active && !desktopActive;\n    return (\n      <button\n        type=\"button\"\n        ref={this._setFocus}\n        onFocus={this._setActive}\n        onBlur={this._setInactive}\n        onMouseOver={this._setActive}\n        onMouseLeave={this._setInactive}\n        className={cn('md-calendar-date md-calendar-date--btn', {\n          'md-calendar-date--btn-active': active || desktopActive,\n          'md-pointer--hover': !disabled,\n        }, themeColors({ disabled, primary: fullyActive }), 'md-btn', className)}\n        onClick={this._handleClick}\n        disabled={disabled}\n      >\n        <span\n          className={cn('md-calendar-date--date', {\n            'md-picker-text--active': active || desktopActive,\n            'md-font-bold': fullyActive,\n          })}\n        >\n          {date}\n        </span>\n      </button>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport addDate from '../utils/DateUtils/addDate';\nimport stripTime from '../utils/DateUtils/stripTime';\nimport getLastDay from '../utils/DateUtils/getLastDay';\nimport getDayOfWeek from '../utils/DateUtils/getDayOfWeek';\n\nimport CalendarDate from './CalendarDate';\n\n/**\n * This component renders a month for the calendar view of the `DatePicker`.\n */\nexport default class CalendarMonth extends PureComponent {\n  static propTypes = {\n    /**\n     * A className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The current selected date of the calendar. This is\n     * the date after hitting the Ok button or `value` || `defaultValue`.\n     */\n    calendarDate: PropTypes.instanceOf(Date).isRequired,\n\n    /**\n     * The current selected date of the calendar before verifying\n     * the new date.\n     */\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\n\n    /**\n     * An optional min date for the calendar. This will disable any\n     * dates that come before this date in the month.\n     */\n    minDate: PropTypes.instanceOf(Date),\n\n    /**\n     * An optional max date for the calendar. This will disable any\n     * dates that come after this date in the month.\n     */\n    maxDate: PropTypes.instanceOf(Date),\n\n    /**\n     * A function to call that will select a new date.\n     */\n    onCalendarDateClick: PropTypes.func.isRequired,\n\n    /**\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\n     */\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n\n    /**\n     * True if weekends are to be greyed out.\n     */\n    disableWeekEnds: PropTypes.bool,\n\n    /**\n     * An optional className to apply to a date.\n     */\n    dateClassName: PropTypes.string,\n\n    /**\n     * True if dates from adjacent months should be shown.\n     */\n    showAllDays: PropTypes.bool,\n    disableOuterDates: PropTypes.bool,\n\n    /**\n     * An optional className to apply to a date from an adjacent month.\n     */\n    outerDateClassName: PropTypes.string,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n\n    /**\n     * The timeZone to be used in all formatting operations.\n     * For a full list of possible timeZone values check https://www.iana.org/time-zones.\n     */\n    timeZone: PropTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    firstDayOfWeek: 0,\n  };\n\n  render() {\n    const {\n      calendarDate,\n      calendarTempDate,\n      onCalendarDateClick,\n      minDate,\n      maxDate,\n      DateTimeFormat,\n      locales,\n      className,\n      firstDayOfWeek,\n      disableWeekEnds,\n      dateClassName,\n      showAllDays,\n      outerDateClassName,\n      disableOuterDates,\n      timeZone,\n      ...props\n    } = this.props;\n\n    const days = [];\n    const firstDay = new Date(calendarDate);\n    firstDay.setDate(1);\n    const lastDay = getLastDay(calendarDate);\n    let currentDate = stripTime(getDayOfWeek(firstDay, 0));\n    let endDate = stripTime(getDayOfWeek(lastDay, 6));\n    const activeDateTime = stripTime(new Date(calendarTempDate)).getTime();\n    const todayTime = stripTime(new Date()).getTime();\n\n    if (firstDayOfWeek) {\n      currentDate = addDate(currentDate, firstDayOfWeek > firstDay.getDay() ? firstDayOfWeek - 7 : firstDayOfWeek, 'D');\n      endDate = addDate(endDate, firstDayOfWeek > lastDay.getDay() ? firstDayOfWeek - 7 : firstDayOfWeek, 'D');\n    }\n    while (currentDate <= endDate) {\n      const key = `${currentDate.getMonth()}-${currentDate.getDate()}`;\n      const currentMonth = currentDate.getMonth() === calendarDate.getMonth();\n\n      let date;\n      if (currentMonth || showAllDays) {\n        const time = currentDate.getTime();\n        const isMinDateDisabled = minDate && minDate.getTime() > time;\n        const isMaxDateDisabled = maxDate && maxDate.getTime() < time;\n        const isWeekendDisabled = disableWeekEnds && (currentDate.getDay() === 0 || currentDate.getDay() === 6);\n        const disabled = (!currentMonth && disableOuterDates)\n          || isMinDateDisabled\n          || isMaxDateDisabled\n          || isWeekendDisabled;\n\n        date = (\n          <CalendarDate\n            key={key}\n            className={cn(dateClassName, { [outerDateClassName]: !currentMonth && outerDateClassName })}\n            today={time === todayTime}\n            active={time === activeDateTime}\n            disabled={disabled}\n            onClick={onCalendarDateClick}\n            date={currentDate}\n            DateTimeFormat={DateTimeFormat}\n            locales={locales}\n            timeZone={timeZone}\n          />\n        );\n      } else {\n        date = <div key={key} className=\"md-calendar-date\" />;\n      }\n\n      days.push(date);\n      // stripTime again to avoid problems when time is forwarded an hour for DST\n      currentDate = stripTime(addDate(currentDate, 1, 'D'));\n    }\n\n    return (\n      <div className={cn('md-calendar-month', className)} {...props}>\n        {days}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport isMonthBefore from '../utils/DateUtils/isMonthBefore';\nimport getDayOfWeek from '../utils/DateUtils/getDayOfWeek';\nimport addDate from '../utils/DateUtils/addDate';\nimport Button from '../Buttons/Button';\n\n/**\n * This component renders the controls for a `DatePicker`'s Calendar.\n * This will render a next and previous month button along with the\n * current month/year. It also renders the abbreviiations for the days\n * of the week.\n */\nexport default class CalendarHeader extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    date: PropTypes.instanceOf(Date).isRequired,\n    minDate: PropTypes.instanceOf(Date),\n    maxDate: PropTypes.instanceOf(Date),\n    previousIcon: PropTypes.element,\n    onPreviousClick: PropTypes.func.isRequired,\n    nextIcon: PropTypes.node,\n    onNextClick: PropTypes.func.isRequired,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n    /**\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\n     */\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    /**\n     * An optional className to apply to the title.\n     */\n    titleClassName: PropTypes.string,\n    /**\n     * The DateTimeFormat options to apply to format the title.\n     */\n    titleFormat: PropTypes.shape({\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n    }),\n    /**\n     * An optional className to apply to a weekday.\n     */\n    weekdayClassName: PropTypes.string,\n    /**\n     * The DateTimeFormat option to apply to format a weekday.\n     */\n    weekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\n\n    /**\n     * The timeZone to be used in all formatting operations.\n     * For a full list of possible timeZone values check https://www.iana.org/time-zones.\n     */\n    timeZone: PropTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    firstDayOfWeek: 0,\n    titleFormat: { month: 'long', year: 'numeric' },\n    weekdayFormat: 'narrow',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = this._createState(props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { DateTimeFormat, locales, date } = this.props;\n    if (DateTimeFormat !== nextProps.DateTimeFormat || locales !== nextProps.locales || date !== nextProps.date) {\n      this.setState(this._createState(nextProps));\n    }\n  }\n\n  _createState({\n    DateTimeFormat,\n    locales,\n    date,\n    firstDayOfWeek,\n    titleFormat,\n    weekdayClassName,\n    weekdayFormat,\n    timeZone,\n  } = this.props) {\n    const firstDay = getDayOfWeek(date, firstDayOfWeek);\n    const formatter = new DateTimeFormat(locales, { weekday: weekdayFormat, timeZone });\n    const dows = [];\n    for (let i = 0; i < 7; i++) {\n      const dow = formatter.format(addDate(firstDay, i, 'D'));\n      dows.push(\n        <h4\n          key={i}\n          className={cn('md-calendar-date md-calendar-dow', themeColors({ disabled: true }), weekdayClassName)}\n        >\n          {dow}\n        </h4>\n      );\n    }\n\n    return {\n      dows,\n      title: new DateTimeFormat(locales, { ...titleFormat, timeZone }).format(date),\n    };\n  }\n\n  render() {\n    const { dows, title } = this.state;\n    const {\n      date,\n      minDate,\n      maxDate,\n      onPreviousClick,\n      previousIcon,\n      onNextClick,\n      nextIcon,\n      titleClassName,\n    } = this.props;\n\n    const isPreviousDisabled = isMonthBefore(minDate, date);\n    const isNextDisabled = isMonthBefore(date, maxDate);\n    return (\n      <header className=\"md-calendar-header\">\n        <div className=\"md-calendar-controls\">\n          <Button\n            icon\n            onClick={onPreviousClick}\n            disabled={isPreviousDisabled}\n            className=\"md-calendar-control\"\n            iconEl={previousIcon}\n          />\n          <h4 className={cn('md-title', titleClassName)}>{title}</h4>\n          <Button\n            icon\n            onClick={onNextClick}\n            disabled={isNextDisabled}\n            className=\"md-calendar-control\"\n            iconEl={nextIcon}\n          />\n        </div>\n        <div className=\"md-calendar-dows\">\n          {dows}\n        </div>\n      </header>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport CalendarMonth from './CalendarMonth';\nimport CalendarHeader from './CalendarHeader';\n\nexport default class DatePickerCalendar extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    previousIcon: PropTypes.element,\n    onPreviousClick: PropTypes.func.isRequired,\n    nextIcon: PropTypes.element,\n    onNextClick: PropTypes.func.isRequired,\n    onCalendarDateClick: PropTypes.func.isRequired,\n    calendarDate: PropTypes.instanceOf(Date).isRequired,\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n    minDate: PropTypes.instanceOf(Date),\n    maxDate: PropTypes.instanceOf(Date),\n\n    /**\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\n     */\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n\n    /**\n     * True if weekends are to be greyed out.\n     */\n    disableWeekEnds: PropTypes.bool,\n\n    /**\n     * True if dates from adjacent months should be shown.\n     */\n    showAllDays: PropTypes.bool,\n    disableOuterDates: PropTypes.bool,\n\n    /**\n     * An optional className to apply to a date in calendar.\n     */\n    dateClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to a date from an adjacent month.\n     */\n    outerDateClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the title in calendar header.\n     */\n    titleClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat options to apply to format the title in calendar header.\n     */\n    titleFormat: PropTypes.shape({\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n    }),\n\n    /**\n     * An optional className to apply to a weekday in calendar header.\n     */\n    weekdayClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat option to apply to format a weekday in calendar header.\n     */\n    weekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\n\n    /**\n     * The timeZone to be used in all formatting operations.\n     * For a full list of possible timeZone values check https://www.iana.org/time-zones.\n     */\n    timeZone: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const {\n      className,\n      previousIcon,\n      onPreviousClick,\n      nextIcon,\n      onNextClick,\n      calendarDate,\n      calendarTempDate,\n      onCalendarDateClick,\n      DateTimeFormat,\n      locales,\n      minDate,\n      maxDate,\n      firstDayOfWeek,\n      disableWeekEnds,\n      showAllDays,\n      disableOuterDates,\n      dateClassName,\n      outerDateClassName,\n      titleClassName,\n      titleFormat,\n      weekdayClassName,\n      weekdayFormat,\n      timeZone,\n    } = this.props;\n\n    return (\n      <section className={cn('md-picker-content md-picker-content--calendar', className)}>\n        <CalendarHeader\n          date={calendarDate}\n          minDate={minDate}\n          maxDate={maxDate}\n          DateTimeFormat={DateTimeFormat}\n          locales={locales}\n          onPreviousClick={onPreviousClick}\n          previousIcon={previousIcon}\n          onNextClick={onNextClick}\n          nextIcon={nextIcon}\n          firstDayOfWeek={firstDayOfWeek}\n          titleClassName={titleClassName}\n          titleFormat={titleFormat}\n          weekdayClassName={weekdayClassName}\n          weekdayFormat={weekdayFormat}\n          timeZone={timeZone}\n        />\n        <CalendarMonth\n          key={new DateTimeFormat(locales).format(calendarDate)}\n          calendarDate={calendarDate}\n          calendarTempDate={calendarTempDate}\n          onCalendarDateClick={onCalendarDateClick}\n          minDate={minDate}\n          maxDate={maxDate}\n          DateTimeFormat={DateTimeFormat}\n          locales={locales}\n          firstDayOfWeek={firstDayOfWeek}\n          disableWeekEnds={disableWeekEnds}\n          showAllDays={showAllDays}\n          disableOuterDates={disableOuterDates}\n          dateClassName={dateClassName}\n          outerDateClassName={outerDateClassName}\n          timeZone={timeZone}\n        />\n      </section>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * This is a component for rendering a year in the Date Picker's Year picker\n * list.\n */\nexport default class Year extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    active: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    year: PropTypes.number.isRequired,\n  };\n\n  state = { desktopActive: false };\n\n  _setActiveFocus = (btn) => {\n    if (btn && this.props.active) {\n      btn.focus();\n    }\n  };\n\n  _setActive = () => {\n    this.setState({ desktopActive: true });\n  };\n\n  _setInactive = () => {\n    this.setState({ desktopActive: false });\n  };\n\n  _handleClick = (e) => {\n    this.props.onClick(this.props.year, e);\n  };\n\n  render() {\n    const { desktopActive } = this.state;\n    const { active, className, year } = this.props;\n    return (\n      <button\n        type=\"button\"\n        ref={this._setActiveFocus}\n        className={cn('md-year', { 'md-year--active': active }, themeColors({\n          text: !active && !desktopActive,\n          primary: active || desktopActive,\n        }), 'md-btn md-pointer--hover md-full-width', className)}\n        onClick={this._handleClick}\n      >\n        {year}\n      </button>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport Year from './Year';\n\n/**\n * The `YearPicker` component is the Year view in a `DatePicker`. This\n * will display a list of years to select from within the given range.\n */\nexport default class YearPicker extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\n    onCalendarYearClick: PropTypes.func.isRequired,\n    yearsDisplayed: PropTypes.number.isRequired,\n    minDate: PropTypes.instanceOf(Date),\n    maxDate: PropTypes.instanceOf(Date),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = this._getYearRange(props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.yearsDisplayed !== nextProps.yearsDisplayed) {\n      this.setState(this._getFullYear(nextProps));\n    }\n  }\n\n  /**\n   * Gets the current start and end years for the year picker.\n   *\n   * @param {Object} props - The current props to extract the year range from.\n   * @return {Object} an object containign the start and end years\n   */\n  _getYearRange({ minDate, maxDate, yearsDisplayed, calendarTempDate }) {\n    const year = calendarTempDate.getFullYear();\n    const range = !minDate && !maxDate\n      ? parseInt(yearsDisplayed / 2, 10)\n      : yearsDisplayed;\n\n    let startYear;\n    let endYear;\n    if (minDate && maxDate) {\n      startYear = minDate.getFullYear();\n      endYear = maxDate.getFullYear();\n    } else if (!minDate && !maxDate) {\n      startYear = year - range;\n      endYear = year + range;\n      if (yearsDisplayed % 2 === 0) {\n        endYear -= 1;\n      }\n    } else if (!maxDate) {\n      startYear = minDate.getFullYear();\n      endYear = startYear + yearsDisplayed - 1;\n    } else {\n      endYear = maxDate.getFullYear();\n      startYear = endYear - yearsDisplayed + 1;\n    }\n\n    return { startYear, endYear };\n  }\n\n  _setContainer(container) {\n    if (container === null) {\n      return;\n    }\n\n    const { offsetHeight, offsetWidth } = container;\n    const { offsetTop: top, offsetHeight: height } = container.querySelector('.md-year--active');\n\n    // Portrait seems to be 3/4 of the way while landscape is about 1/2\n    if (offsetHeight > offsetWidth) {\n      container.scrollTop = top - (offsetHeight * 3 / 4);\n    } else {\n      container.scrollTop = top - (offsetHeight / 2) + (height / 2);\n    }\n  }\n\n  render() {\n    const { startYear, endYear } = this.state;\n\n    const currentYear = this.props.calendarTempDate.getFullYear();\n    const years = [];\n    for (let year = startYear; year <= endYear; year++) {\n      years.push(\n        <Year\n          key={year}\n          year={year}\n          active={year === currentYear}\n          onClick={this.props.onCalendarYearClick}\n        />\n      );\n    }\n\n    return (\n      <section\n        className={cn('md-picker-content md-picker-content--year', this.props.className)}\n        ref={this._setContainer}\n      >\n        <ol className=\"md-years\">\n          {years}\n        </ol>\n      </section>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport DialogFooter from '../Dialogs/DialogFooter';\nimport DatePickerHeader from './DatePickerHeader';\nimport DatePickerCalendar from './DatePickerCalendar';\nimport YearPicker from './YearPicker';\n\nexport default class DatePicker extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    okLabel: PropTypes.node.isRequired,\n    okPrimary: PropTypes.bool.isRequired,\n    onOkClick: PropTypes.func.isRequired,\n    cancelLabel: PropTypes.node.isRequired,\n    cancelPrimary: PropTypes.bool.isRequired,\n    onCancelClick: PropTypes.func.isRequired,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n    calendarDate: PropTypes.instanceOf(Date).isRequired,\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\n    calendarMode: PropTypes.oneOf(['calendar', 'year']).isRequired,\n    changeCalendarMode: PropTypes.func.isRequired,\n    icon: PropTypes.bool,\n    inline: PropTypes.bool,\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n    /**\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\n     */\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n\n    /**\n     * True if weekends are to be greyed out.\n     */\n    disableWeekEnds: PropTypes.bool,\n\n    /**\n     * True if dates from adjacent months should be shown in calendar.\n     */\n    showAllDays: PropTypes.bool,\n    disableOuterDates: PropTypes.bool,\n\n    /**\n     * An optional className to apply to the header of date picker.\n     */\n    headerClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the content container of date picker.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the footer of date picker.\n     */\n    footerClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the calendar container of date picker.\n     */\n    calendarClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the year picker of date picker.\n     */\n    yearPickerClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to a date in calendar.\n     */\n    calendarDateClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to a date from an adjacent month in calendar.\n     */\n    calendarOuterDateClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the title in calendar header.\n     */\n    calendarTitleClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat options to apply to format the title in calendar header.\n     */\n    calendarTitleFormat: PropTypes.shape({\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n    }),\n\n    /**\n     * An optional className to apply to a weekday in calendar header.\n     */\n    calendarWeekdayClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat option to apply to format a weekday in calendar header.\n     */\n    calendarWeekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\n\n    /**\n     * The timeZone to be used in all formatting operations.\n     * For a full list of possible timeZone values check https://www.iana.org/time-zones.\n     */\n    timeZone: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const {\n      okLabel,\n      okPrimary,\n      onOkClick,\n      cancelLabel,\n      cancelPrimary,\n      onCancelClick,\n      DateTimeFormat,\n      locales,\n      calendarTempDate,\n      calendarMode,\n      changeCalendarMode,\n      style,\n      className,\n      inline,\n      icon,\n      displayMode,\n      firstDayOfWeek,\n      disableWeekEnds,\n      showAllDays,\n      disableOuterDates,\n      headerClassName,\n      contentClassName,\n      footerClassName,\n      calendarClassName,\n      yearPickerClassName,\n      calendarDateClassName,\n      calendarOuterDateClassName,\n      calendarTitleClassName,\n      calendarTitleFormat,\n      calendarWeekdayClassName,\n      calendarWeekdayFormat,\n      timeZone,\n      ...props\n    } = this.props;\n\n    let picker;\n    if (calendarMode === 'calendar') {\n      picker = (\n        <DatePickerCalendar\n          {...props}\n          key=\"calendar\"\n          className={calendarClassName}\n          calendarTempDate={calendarTempDate}\n          DateTimeFormat={DateTimeFormat}\n          locales={locales}\n          firstDayOfWeek={firstDayOfWeek}\n          disableWeekEnds={disableWeekEnds}\n          showAllDays={showAllDays}\n          disableOuterDates={disableOuterDates}\n          dateClassName={calendarDateClassName}\n          outerDateClassName={calendarOuterDateClassName}\n          titleClassName={calendarTitleClassName}\n          titleFormat={calendarTitleFormat}\n          weekdayClassName={calendarWeekdayClassName}\n          weekdayFormat={calendarWeekdayFormat}\n          timeZone={timeZone}\n        />\n      );\n    } else {\n      picker = (\n        <YearPicker\n          {...props}\n          key=\"year\"\n          className={yearPickerClassName}\n          calendarTempDate={calendarTempDate}\n          DateTimeFormat={DateTimeFormat}\n          locales={locales}\n        />\n      );\n    }\n\n    const actions = [{\n      key: 'cancel',\n      onClick: onCancelClick,\n      primary: cancelPrimary,\n      secondary: !cancelPrimary,\n      label: cancelLabel,\n    }, {\n      key: 'ok',\n      onClick: onOkClick,\n      primary: okPrimary,\n      secondary: !okPrimary,\n      label: okLabel,\n    }];\n\n    return (\n      <div\n        style={style}\n        className={cn('md-picker md-picker--date', {\n          [`md-picker--${displayMode}`]: displayMode,\n          'md-picker--inline': inline,\n          'md-picker--inline-icon': inline && icon,\n        }, className)}\n      >\n        <DatePickerHeader\n          className={headerClassName}\n          DateTimeFormat={DateTimeFormat}\n          locales={locales}\n          calendarTempDate={calendarTempDate}\n          calendarMode={calendarMode}\n          changeCalendarMode={changeCalendarMode}\n          timeZone={timeZone}\n        />\n        <div className={cn('md-picker-content-container', contentClassName)}>\n          {picker}\n          <DialogFooter\n            className={footerClassName}\n            actions={actions}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable new-cap,no-shadow */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { ESC, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport controlled from '../utils/PropTypes/controlled';\nimport isDateEqual from '../utils/DateUtils/isDateEqual';\nimport addDate from '../utils/DateUtils/addDate';\nimport DateTimeFormat from '../utils/DateUtils/DateTimeFormat';\n\nimport Collapse from '../Helpers/Collapse';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport TextField from '../TextFields/TextField';\nimport Dialog from '../Dialogs/DialogContainer';\nimport DatePicker from './DatePicker';\n\n/**\n * The `DatePickerContainer` component is a wrapper for the main `DatePicker` component\n * to manage the state and _logic_ for rendering the `DatePicker`. This component will\n * either render inline or in a `Dialog` depending if the `inline` prop is set to `true`.\n *\n * NOTE: This component is actually exported as `DatePicker` when using the `import { member }` syntax.\n * The following two lines are equivalent:\n *\n * ```js\n * import { DatePicker } from 'react-md/lib/Pickers';\n * import DatePicker from 'react-md/lib/Pickers/DatePickerContainer';\n * ```\n */\nexport default class DatePickerContainer extends PureComponent {\n  static propTypes = {\n    /**\n     * An id for the text field in the date picker. This is require for a11y.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An aria label for the dialog. This is required for a11y.\n     */\n    'aria-label': isRequiredForA11y(PropTypes.string),\n\n    /**\n     * An optional style to apply to the date picker's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the date picker's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the date picker.\n     */\n    pickerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the date picker.\n     */\n    pickerClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the header of date picker.\n     */\n    pickerHeaderClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the content container of date picker.\n     */\n    pickerContentClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the footer of date picker.\n     */\n    pickerFooterClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the calendar container of date picker.\n     */\n    calendarClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the year picker of date picker.\n     */\n    yearPickerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the input tag.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the input tag.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the text field's container.\n     */\n    textFieldStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the text field's container.\n     */\n    textFieldClassName: PropTypes.string,\n\n    /**\n     * An optional icon to display with the date picker.\n     *\n     * @see {@link TextFields/TextField#leftIcon}\n     */\n    icon: PropTypes.node,\n\n    /**\n     * Boolean if the date picker is open by default.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * An optional label to be displayed in the date picker's text\n     * field.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional placeholder to be displayed in the date picker's text field.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * The value of the date picker. This will make the date picker\n     * be a controlled component. This value should either be a\n     * formatted date string or a date object.\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]), 'onChange', 'defaultValue'),\n\n    /**\n     * An optional default value to give for the date picker. This should\n     * either be a formatted date string or a date object.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]),\n\n    /**\n     * An optional date to use when the calendar is opened for the first time.\n     * If this is omitted, it will either be the `defaultValue`, `value`, or\n     * today.\n     */\n    defaultCalendarDate: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]),\n\n    /**\n     * An optional function to call when the selected date is changed\n     * by hitting the OK button. The newly formatted date string,\n     * the new Date object, and the change event will be given.\n     *\n     * `onChange(dateString, dateObject, event)`.\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * A function to format the dates since it should be formatted to the user's\n     * locale. This _should_ be the `Intl.DateTimeFormat` function. You\n     * can also create your own if you really wanted. Inadvisable though.\n     *\n     * See [intl-polyfill](https://github.com/andyearnshaw/Intl.js/) for more info.\n     */\n    DateTimeFormat: PropTypes.func.isRequired,\n\n    /**\n     * The locales to use for formatting the date. This will default to using\n     * the user's language in the browser or `'en-US'` when server rendering.\n     */\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n\n    /**\n     * The label to use for the ok button on the date picker.\n     */\n    okLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the ok button should be styled with the primary color.\n     */\n    okPrimary: PropTypes.bool,\n\n    /**\n     * The label to use for the cancel button on the date picker.\n     */\n    cancelLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the cancel button should be styled with the primary color.\n     */\n    cancelPrimary: PropTypes.bool,\n\n    /**\n     * The initial mode to open the calendar in.\n     */\n    defaultCalendarMode: PropTypes.oneOf(['calendar', 'year']),\n\n    /**\n     * The icon to use to display the previous month icon in the calendar.\n     */\n    previousIcon: PropTypes.node,\n\n    /**\n     * The icon to use to display the next month icon in the calendar.\n     */\n    nextIcon: PropTypes.node,\n\n    /**\n     * An optional min date to use for the date picker. This will prevent\n     * any dates before this time to be chosen.\n     */\n    minDate: PropTypes.instanceOf(Date),\n\n    /**\n     * An optional max date to use for the date picker. This will prevent\n     * any dates after this time to be chosen.\n     */\n    maxDate: (props, propName, component, ...others) => {\n      const err = PropTypes.instanceOf(Date)(props, propName, component, ...others);\n      if (err || !props.minDate || !props[propName]) {\n        return err;\n      }\n\n      const { minDate, maxDate } = props;\n      if (minDate > maxDate) {\n        return new Error(\n          `The min date: '${minDate}' is greater than the max date: '${maxDate}'`\n        );\n      }\n\n      return null;\n    },\n\n    /**\n     * Boolean if the date should automatically be selected when a user clicks\n     * on a new date instead of making them hit the ok button.\n     */\n    autoOk: PropTypes.bool,\n\n    /**\n     * The number of years to display.\n     */\n    yearsDisplayed: PropTypes.number,\n\n    /**\n     * Boolean if the date picker should be displayed inline instead of in a\n     * dialog.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * An optional force of the display mode of the date picker.\n     * This _should_ not really be used since there are media queries\n     * to use the correct mode based on device orientation.\n     */\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n    /**\n     * The DateTimeFormat options to apply to format the date.\n     */\n    formatOptions: PropTypes.shape({\n      weekday: PropTypes.oneOf(['narrow', 'short', 'long']),\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n      day: PropTypes.oneOf(['numeric', '2-digit']),\n      hour: PropTypes.oneOf(['numeric', '2-digit']),\n      minute: PropTypes.oneOf(['numeric', '2-digit']),\n      second: PropTypes.oneOf(['numeric', '2-digit']),\n      timeZoneName: PropTypes.oneOf(['short', 'long']),\n    }),\n\n    /**\n     * The timeZone to be used in all formatting operations.\n     * For a full list of possible timeZone values check https://www.iana.org/time-zones.\n     */\n    timeZone: PropTypes.string.isRequired,\n\n    /**\n     * Boolean if the text field for the Date Picker should be displayed as full width.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * The direction that the text field divider expands from when the text field\n     * in the date picker gains focus.\n     */\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\n\n    /**\n     * An optional boolean if the time picker is current visible by dialog or inline.\n     * If this is set, the `onOpenToggle` function is required.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the date picker is opened in either a dialog, or\n     * inline. The callback will include the next state.\n     *\n     * ```js\n     * onVisibilityChange(!visible, e);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * Boolean if the time picker is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should be able to close if a keyboard user presses the escape key.\n     */\n    closeOnEsc: PropTypes.bool,\n\n    /**\n     * Boolean if the inline time picker's visibility should be animated.\n     */\n    animateInline: PropTypes.bool,\n\n    /**\n     * Boolean if the time is required.\n     *\n     * @see {@link TextFields/TextField#required}\n     */\n    required: PropTypes.bool,\n\n    /**\n     * @see {@link TextFields/TextField#block}\n     */\n    block: TextField.propTypes.block,\n\n    /**\n     * @see {@link TextFields/TextField#paddedBlock}\n     */\n    paddedBlock: TextField.propTypes.paddedBlock,\n\n    /**\n     * @see {@link TextFields/TextField#active}\n     */\n    active: TextField.propTypes.active,\n\n    /**\n     * @see {@link TextFields/TextField#error}\n     */\n    error: TextField.propTypes.error,\n\n    /**\n     * @see {@link TextFields/TextField#floating}\n     */\n    floating: TextField.propTypes.floating,\n\n    /**\n     * @see {@link TextFields/TextField#leftIconStateful}\n     */\n    leftIconStateful: TextField.propTypes.leftIconStateful,\n\n    /**\n     * @see {@link TextFields/TextField#rightIcon}\n     */\n    rightIcon: TextField.propTypes.rightIcon,\n\n    /**\n     * @see {@link TextFields/TextField#rightIconStateful}\n     */\n    rightIconStateful: TextField.propTypes.rightIconStateful,\n\n    /**\n     * @see {@link TextFields/TextField#customSize}\n     */\n    customSize: TextField.propTypes.customSize,\n\n    /**\n     * @see {@link TextFields/TextField#errorText}\n     */\n    errorText: TextField.propTypes.errorText,\n\n    /**\n     * @see {@link TextFields/TextField#helpText}\n     */\n    helpText: TextField.propTypes.helpText,\n\n    /**\n     * @see {@link TextFields/TextField#helpOnFocus}\n     */\n    helpOnFocus: TextField.propTypes.helpOnFocus,\n\n    /**\n     * @see {@link TextFields/TextField#inlineIndicator}\n     */\n    inlineIndicator: TextField.propTypes.inlineIndicator,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the dialog.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM Node to render the dialog into. The default is to render as the first child\n     * in the `body`.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the DatePicker should be read only. This will prevent the user from opening the picker\n     * and only display the current date in the text field.\n     */\n    readOnly: PropTypes.bool,\n\n    /**\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\n     */\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n\n    /**\n     * True if weekends are to be greyed out.\n     */\n    disableWeekEnds: PropTypes.bool,\n\n    /**\n     * True if dates from adjacent months should be shown in calendar.\n     */\n    showAllDays: PropTypes.bool,\n\n    /**\n     * Boolean if the dates from adjacent months should be disabled. This will only\n     * do something if the `showAllDays` prop is enabled as well.\n     *\n     * This is really only helpful if youd like the other days to appear, but not be\n     * clickable until the user switches to that month.\n     *\n     * @see {@link #showAllDays}\n     */\n    disableOuterDates: PropTypes.bool,\n\n    /**\n     * An optional className to apply to a date in calendar.\n     */\n    calendarDateClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to a date from an adjacent month in calendar. This will be applied\n     * along with the `calendarDateClassName`.\n     *\n     * @see {@link #showAllDays}\n     * @see {@link #calendarDateClassName}\n     */\n    calendarOuterDateClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the title in calendar header.\n     */\n    calendarTitleClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat options to apply to format the title in calendar header.\n     */\n    calendarTitleFormat: PropTypes.shape({\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n    }),\n\n    /**\n     * An optional className to apply to a weekday in calendar header.\n     */\n    calendarWeekdayClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat option to apply to format a weekday in calendar header.\n     */\n    calendarWeekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\n\n    /**\n     * @see {@link Dialogs/DialogContainer#disableScrollLocking}\n     */\n    disableScrollLocking: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should be rendered as the last child of the `renderNode` or `body` instead\n     * of the first.\n     */\n    lastChild: PropTypes.bool,\n\n    previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\n    previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\n    nextIconChildren: deprecated(PropTypes.node, 'use the `nextIcon` prop instead'),\n    nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\n    adjustMinWidth: deprecated(PropTypes.bool, 'No longer valid for a text field'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    initialCalendarDate: deprecated(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]), 'Use `defaultCalendarDate` instead'),\n    initialCalendarMode: deprecated(PropTypes.oneOf(['calendar', 'year']), 'Use `defaultCalendarMode` instead'),\n    initialYearsDisplayed: deprecated(\n      PropTypes.number,\n      'Use `yearsDisplayed` instead. I have not implemented infinite loading years'\n    ),\n  };\n\n  static defaultProps = {\n    animateInline: true,\n    previousIcon: <FontIcon>chevron_left</FontIcon>,\n    nextIcon: <FontIcon>chevron_right</FontIcon>,\n    autoOk: false,\n    icon: <FontIcon>date_range</FontIcon>,\n    yearsDisplayed: 100,\n    defaultCalendarMode: 'calendar',\n    DateTimeFormat: DateTimeFormat, // eslint-disable-line object-shorthand\n    locales: typeof window !== 'undefined'\n      ? window.navigator.userLanguage || window.navigator.language\n      : 'en-US',\n    okLabel: 'Ok',\n    okPrimary: true,\n    cancelLabel: 'Cancel',\n    cancelPrimary: true,\n    closeOnEsc: true,\n    disableScrollLocking: false,\n    'aria-label': 'Pick a date',\n    timeZone: 'UTC',\n  };\n\n  constructor(props) {\n    super(props);\n\n    let date;\n    let value;\n    const {\n      defaultValue,\n      DateTimeFormat,\n      locales,\n      minDate,\n      maxDate,\n    } = props;\n\n    if (typeof props.value !== 'undefined') {\n      date = this._getDate(props.value);\n    } else if (defaultValue) {\n      date = this._getDate(defaultValue);\n      value = typeof defaultValue === 'string'\n        ? defaultValue\n        : DateTimeFormat(locales, this._getFormatOptions()).format(defaultValue);\n    } else {\n      date = new Date();\n      value = '';\n    }\n\n    date = this._validateDateRange(date, minDate, maxDate);\n\n    const defaultCalendarDate = typeof props.initialCalendarDate !== 'undefined'\n      ? props.initialCalendarDate\n      : props.defaultCalendarDate;\n    let calendarTempDate = date;\n    if (typeof defaultCalendarDate !== 'undefined' && !props.value && !props.defaultValue) {\n      calendarTempDate = this._getDate(defaultCalendarDate);\n      date = calendarTempDate;\n    } else if (calendarTempDate === null) {\n      calendarTempDate = new Date();\n      date = new Date();\n    }\n\n    const visible = typeof props.initiallyOpen !== 'undefined'\n      ? props.initiallyOpen\n      : !!props.defaultVisible;\n\n    this.state = {\n      value,\n      visible,\n      calendarDate: date,\n      calendarTempDate,\n      calendarMode: props.initialCalendarMode || props.defaultCalendarMode,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value, minDate, maxDate } = nextProps;\n    const minEqual = isDateEqual(this.props.minDate, minDate);\n    const maxEqual = isDateEqual(this.props.maxDate, maxDate);\n    if (this.props.value !== value || !minEqual || !maxEqual) {\n      let { calendarDate } = this.state;\n      if (typeof value !== 'undefined') {\n        calendarDate = this._getDate(value);\n      }\n\n      calendarDate = this._validateDateRange(calendarDate, minDate, maxDate);\n\n      if (!isDateEqual(this.state.calendarDate, calendarDate)) {\n        this.setState({ calendarDate, calendarTempDate: calendarDate });\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { inline, isOpen } = this.props;\n    const visible = typeof isOpen !== 'undefined'\n      ? isOpen\n      : getField(this.props, this.state, 'visible');\n    const pVisible = typeof prevProps.isOpen !== 'undefined'\n      ? prevProps.isOpen\n      : getField(prevProps, prevState, 'visible');\n\n    if (visible === pVisible) {\n      return;\n    }\n\n    if (visible) {\n      if (inline) {\n        handleWindowClickListeners(this._handleOutsideClick, true);\n        window.addEventListener('keydown', this._closeOnEsc);\n      }\n    } else if (inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  }\n\n  componentWillUnmount() {\n    const visible = typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible');\n\n    if (visible && this.props.inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  }\n\n  _getDate(value) {\n    if (value === '' || value === null) {\n      return new Date();\n    } else if (typeof value === 'string') {\n      return new Date(value);\n    }\n\n    return value;\n  }\n\n  _getFormatOptions() {\n    const { formatOptions, timeZone } = this.props;\n    return { ...formatOptions, timeZone };\n  }\n\n  _setContainer= (container) => {\n    this._container = container;\n  };\n\n  _closeOnEsc = (e) => {\n    if ((e.which || e.keyCode) === ESC) {\n      this._handleCancelClick(e);\n    }\n  };\n\n  _handleOutsideClick = (e) => {\n    if (this._container && !this._container.contains(e.target)) {\n      this._handleCancelClick(e);\n    }\n  };\n\n  _toggleOpen = (e) => {\n    if (this.props.disabled || this.props.readOnly) {\n      return;\n    }\n\n    const visible = !(typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible'));\n\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(visible, e);\n    }\n\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    handleKeyboardAccessibility(e, this._toggleOpen, true, true);\n\n    if ((e.which || e.keyCode) === TAB && this.state.active) {\n      this.setState({ active: false });\n    }\n  };\n\n  _handleOkClick = (e) => {\n    const { DateTimeFormat, locales, onChange, onVisibilityChange } = this.props;\n    const value = DateTimeFormat(locales, this._getFormatOptions()).format(this.state.calendarTempDate);\n    if (onChange) {\n      onChange(value, new Date(this.state.calendarTempDate), e);\n    }\n\n    if (onVisibilityChange) {\n      onVisibilityChange(false, e);\n    }\n\n    let state;\n    if (typeof this.props.value === 'undefined') {\n      state = { value };\n    }\n\n    if (typeof this.props.visible === 'undefined' && typeof this.props.isOpen === 'undefined') {\n      state = state || {};\n      state.visible = false;\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _handleCancelClick = (e) => {\n    const state = { calendarTempDate: this.state.calendarDate };\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.isOpen === 'undefined') {\n      state.visible = false;\n    }\n\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(false, e);\n    }\n\n    this.setState(state);\n  };\n\n  _changeCalendarMode = (calendarMode) => {\n    if (this.state.calendarMode === calendarMode) { return; }\n\n    this.setState({ calendarMode });\n  };\n\n  _previousMonth = () => {\n    const calendarDate = addDate(this.state.calendarDate, -1, 'M');\n    this.setState({ calendarDate });\n  };\n\n  _nextMonth = () => {\n    const calendarDate = addDate(this.state.calendarDate, 1, 'M');\n    this.setState({ calendarDate });\n  };\n\n  _setCalendarTempDate = (calendarTempDate) => {\n    const { autoOk, DateTimeFormat, locales, onChange } = this.props;\n\n    const state = { calendarTempDate };\n    if (autoOk) {\n      const value = DateTimeFormat(locales, this._getFormatOptions()).format(calendarTempDate);\n      if (onChange) {\n        onChange(value, new Date(calendarTempDate));\n      }\n\n      if (typeof this.props.value === 'undefined') {\n        state.value = value;\n      }\n\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        if (this.props.onVisibilityChange) {\n          this.props.onVisibilityChange(false);\n        }\n\n        if (typeof this.props.visible === 'undefined' && typeof this.props.isOpen === 'undefined') {\n          this.setState({ visible: false });\n        }\n      });\n    }\n    this.setState(state);\n  };\n\n  _setCalendarTempYear = (year) => {\n    const { calendarTempDate, calendarDate } = this.state;\n    if (calendarTempDate.getFullYear() === year) { return; }\n\n    const { minDate, maxDate } = this.props;\n    let nextDate = new Date(calendarDate.setFullYear(year));\n    let nextTemp = new Date(calendarTempDate.setFullYear(year));\n\n    if (minDate && nextTemp < minDate) {\n      nextDate = new Date(minDate);\n      nextTemp = new Date(minDate);\n    }\n\n    if (maxDate && nextTemp > maxDate) {\n      nextDate = new Date(maxDate);\n      nextTemp = new Date(maxDate);\n    }\n\n    this.setState({\n      calendarDate: nextDate,\n      calendarTempDate: nextTemp,\n    });\n  };\n\n  /**\n   * Gets the current value from the date picker as a formatted string.\n   *\n   * @param {Object} props? the props object to use.\n   * @param {Object} state? the state object to use.\n   * @return {String} a formatted date string or the empty string.\n   */\n  _getFormattedValue(props, state) {\n    const { DateTimeFormat, locales } = props;\n    const value = getField(props, state, 'value');\n    if (!value) {\n      return '';\n    } else if (value instanceof Date) {\n      return DateTimeFormat(locales, this._getFormatOptions()).format(new Date(value));\n    } else {\n      return value;\n    }\n  }\n\n  /**\n   * Attempts to validate the `calendarDate` in the state against the min and\n   * max dates.\n   *\n   * This will return null if the current calendarDate is still within the range.\n   *\n   * @param {Date} calendarDate - The current calendar date to compare to.\n   * @param {Date} minDate - An optional min date to compare to.\n   * @param {Date} maxDate - An optional max date to compare to.\n   * @return {Object} - The new state object with the updated calendarDate and\n   *    calendarTempDate keys or null.\n   */\n  _validateDateRange(calendarDate, minDate, maxDate) {\n    let date = calendarDate;\n    if (minDate && minDate > calendarDate) {\n      date = new Date(minDate);\n    }\n\n    if (maxDate && maxDate < calendarDate) {\n      date = new Date(maxDate);\n    }\n\n    return date;\n  }\n\n  render() {\n    const {\n      style,\n      className,\n      pickerStyle,\n      pickerClassName,\n      pickerHeaderClassName,\n      pickerContentClassName,\n      pickerFooterClassName,\n      inputStyle,\n      inputClassName,\n      textFieldStyle,\n      textFieldClassName,\n      label,\n      placeholder,\n      icon,\n      inline,\n      displayMode,\n      fullWidth,\n      lineDirection,\n      id,\n      disabled,\n      closeOnEsc,\n      animateInline,\n      portal,\n      renderNode,\n      lastChild,\n      block,\n      paddedBlock,\n      active,\n      error,\n      floating,\n      required,\n      leftIconStateful,\n      rightIcon,\n      rightIconStateful,\n      customSize,\n      errorText,\n      helpText,\n      helpOnFocus,\n      inlineIndicator,\n      disableScrollLocking,\n      'aria-label': ariaLabel,\n      nextIcon: propNextIcon,\n      previousIcon: propPreviousIcon,\n\n      // deprecated\n      isOpen,\n      previousIconChildren,\n      previousIconClassName,\n      nextIconChildren,\n      nextIconClassName,\n      /* eslint-disable no-unused-vars */\n      value: propValue,\n      visible: propVisible,\n      defaultValue,\n      defaultVisible,\n      onChange,\n      readOnly,\n      onVisibilityChange,\n      defaultCalendarDate,\n\n      // deprecated\n      initialCalendarDate,\n      initiallyOpen,\n      adjustMinWidth,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const nextIcon = getDeprecatedIcon(nextIconClassName, nextIconChildren, propNextIcon);\n    const previousIcon = getDeprecatedIcon(previousIconClassName, previousIconChildren, propPreviousIcon);\n    const visible = typeof isOpen !== 'undefined'\n      ? isOpen\n      : getField(this.props, this.state, 'visible');\n\n    const picker = (\n      <DatePicker\n        {...this.state}\n        {...props}\n        nextIcon={nextIcon}\n        previousIcon={previousIcon}\n        icon={!!icon}\n        inline={inline}\n        style={pickerStyle}\n        className={pickerClassName}\n        headerClassName={pickerHeaderClassName}\n        contentClassName={pickerContentClassName}\n        footerClassName={pickerFooterClassName}\n        displayMode={displayMode}\n        onCancelClick={this._handleCancelClick}\n        onOkClick={this._handleOkClick}\n        changeCalendarMode={this._changeCalendarMode}\n        onPreviousClick={this._previousMonth}\n        onNextClick={this._nextMonth}\n        onCalendarDateClick={this._setCalendarTempDate}\n        onCalendarYearClick={this._setCalendarTempYear}\n      />\n    );\n\n    let content;\n    if (inline) {\n      content = <Collapse collapsed={!visible} animate={animateInline}>{picker}</Collapse>;\n    } else {\n      content = (\n        <Dialog\n          id={`${id}-dialog`}\n          visible={visible}\n          onHide={this._handleCancelClick}\n          dialogClassName=\"md-dialog--picker\"\n          contentClassName=\"md-dialog-content--picker\"\n          aria-label={ariaLabel}\n          closeOnEsc={closeOnEsc}\n          renderNode={renderNode}\n          portal={portal}\n          lastChild={lastChild}\n          focusOnMount={false}\n          disableScrollLocking={disableScrollLocking}\n        >\n          {picker}\n        </Dialog>\n      );\n    }\n\n    return (\n      <div style={style} className={cn('md-picker-container', className)} ref={this._setContainer}>\n        <TextField\n          id={id}\n          style={textFieldStyle}\n          className={cn({ 'md-pointer--hover': !disabled }, textFieldClassName)}\n          inputStyle={inputStyle}\n          inputClassName={cn({ 'md-pointer--hover': !disabled }, inputClassName)}\n          active={active || visible}\n          error={error}\n          floating={floating || visible}\n          required={required}\n          disabled={disabled}\n          leftIcon={icon}\n          leftIconStateful={leftIconStateful}\n          rightIcon={rightIcon}\n          rightIconStateful={rightIconStateful}\n          inlineIndicator={inlineIndicator}\n          block={block}\n          paddedBlock={paddedBlock}\n          fullWidth={fullWidth}\n          lineDirection={lineDirection}\n          customSize={customSize}\n          helpText={helpText}\n          helpOnFocus={helpOnFocus}\n          errorText={errorText}\n          label={label}\n          placeholder={placeholder}\n          onClick={this._toggleOpen}\n          onKeyDown={this._handleKeyDown}\n          value={this._getFormattedValue(this.props, this.state)}\n          readOnly\n        />\n        {content}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { TAB } from '../constants/keyCodes';\nimport themeColors from '../utils/themeColors';\n\nconst CLOCK_PADDING = 4;\n\n/**\n * The `ClockTime` component is used for positioning hours or minutes\n * in a clock. The time will be positioned based on it's given index\n * and the radius of the clock.\n */\nexport default class ClockTime extends PureComponent {\n  static propTypes = {\n    /**\n     * The index of the current time to be displayed. This\n     * should be a number between 1 and 24.\n     */\n    index: PropTypes.number.isRequired,\n\n    /**\n     * The time number to display.\n     */\n    time: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if this time is currently selected.\n     */\n    active: PropTypes.bool.isRequired,\n\n    /**\n     * The radius of the clock.\n     */\n    radius: PropTypes.number.isRequired,\n\n    onKeyboardFocus: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // default size in scss\n      size: 18,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.radius !== nextProps.radius || this.props.index !== nextProps.index) {\n      this._setPosition(nextProps, this._time);\n    }\n  }\n\n  _handleKeyUp = (e) => {\n    if ((e.which || e.keyCode) === TAB) {\n      this.props.onKeyboardFocus(this.props.time);\n    }\n  }\n\n  _setTime = (time) => {\n    this._time = time;\n    if (time !== null) {\n      this._setPosition(this.props, time);\n\n      if (this.props.active) {\n        time.focus();\n      }\n    }\n  };\n\n  _setPosition = ({ radius, index }, time) => {\n    // 36 is default size for the time\n    const size = (time.offsetWidth || 36) / 2;\n    const timeRadians = (Math.PI / 2) - index * (Math.PI / 6);\n    const innerCircle = index > 12;\n\n    const outerRadius = radius - size;\n    const innerRadius = outerRadius - CLOCK_PADDING - (innerCircle ? size * 2 : 0);\n\n    this.setState({\n      style: {\n        top: outerRadius - innerRadius * Math.sin(timeRadians),\n        left: outerRadius + innerRadius * Math.cos(timeRadians),\n      },\n    });\n  };\n\n  render() {\n    const { time, active } = this.props;\n    return (\n      <div\n        ref={this._setTime}\n        tabIndex={0}\n        className={cn('md-clock-time md-text-no-select md-pointer--none', {\n          'md-picker-text--active': active,\n        }, themeColors({ text: !active }))}\n        style={this.state.style}\n        onKeyUp={this._handleKeyUp}\n      >\n        <span className=\"md-clock-time-value\">{time}</span>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `ClockHand` component is just used to display the hand of the clock\n * and a ball to surround the selected time.\n */\nexport default class ClockHand extends PureComponent {\n  static propTypes = {\n    /**\n     * This is the x and y coordinate to use for the center of the `ClockFace`.\n     * This should really be whatever the radius of the `ClockFace` is.\n     */\n    coords: PropTypes.number,\n\n    /**\n     * The current time of the clock.\n     */\n    time: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the clock is displaying minutes instead of hours.\n     */\n    minutes: PropTypes.bool.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { active: false };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.minutes !== nextProps.minutes) {\n      if (this.state.timeout) { clearTimeout(this.state.timeout); }\n\n      this.setState({\n        active: true,\n        timeout: setTimeout(() => this.setState({ active: false, timeout: null }), 150),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.timeout) { clearTimeout(this.state.timeout); }\n  }\n\n  _calcCurrentDegrees({ time, minutes }) {\n    const timeAt0Deg = minutes ? 15 : 3;\n    const sectors = minutes ? 60 : 12;\n\n    return (time % sectors - timeAt0Deg) * (360 / sectors);\n  }\n\n  render() {\n    const { coords, time, minutes } = this.props;\n\n    const degrees = this._calcCurrentDegrees(this.props);\n    let invisibleMinute = false;\n    if (minutes) {\n      invisibleMinute = degrees % (360 / 12) !== 0;\n    }\n\n    const rotateTransform = `rotate3d(0, 0, 1, ${degrees}deg)`;\n    return (\n      <div\n        className={cn('md-clock-hand md-background--primary', {\n          'md-clock-hand--active': this.state.active,\n          'md-clock-hand--minute-hover': invisibleMinute,\n          'md-clock-hand--inner': !minutes && (time > 12 || time === 0),\n        })}\n        style={{\n          left: coords,\n          top: coords,\n          WebkitTransform: rotateTransform,\n          MozTransform: rotateTransform,\n          msTransform: rotateTransform,\n          transform: rotateTransform,\n        }}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport isValidClick from '../utils/EventUtils/isValidClick';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport calcTimeFromPoint from '../utils/NumberUtils/calcTimeFromPoint';\nimport calcPageOffset from '../utils/Positioning/calcPageOffset';\nimport ResizeObserver from '../Helpers/ResizeObserver';\n\nimport ClockTime from './ClockTime';\nimport ClockHand from './ClockHand';\n\n/**\n * The `ClockFace` component is used for rendering all the clock's times\n * and the clock hand.\n */\nexport default class ClockFace extends PureComponent {\n  static propTypes = {\n    /**\n     * The current time for the clock.\n     */\n    time: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the clock is on the minutes view.\n     */\n    minutes: PropTypes.bool.isRequired,\n\n    /**\n     * A function to call when a new time is selected. It gives the\n     * new time value. If it is 12 o'clock, 0 will be given.\n     */\n    onChange: PropTypes.func.isRequired,\n\n    /**\n     * An optional time period string. This should be either AM or PM\n     * if the locale uses them.\n     */\n    timePeriod: PropTypes.string,\n\n    /**\n     * If true the hover mode of the Time Picker is activated.\n     * In hover mode no clicks are required to start selecting an hour\n     * and the timemode switches automatically when a time was chosen.\n     * When a minute is selected the chosen time is applied automatically.\n     */\n    hoverMode: PropTypes.bool,\n\n    onTimeChosen: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { radius: 136, moving: false };\n    this._center = {};\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this._handleMouseMove);\n    window.removeEventListener('mouseup', this._handleMouseMove);\n\n    removeTouchEvent(window, 'move', this._handleTouchMove);\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\n    clearInterval(this.interval);\n  }\n\n  _setFace = (face) => {\n    this._face = face;\n    this._setPositioning();\n  }\n\n  _setPositioning = () => {\n    if (!this._face) {\n      return;\n    }\n\n    const radius = this._face.offsetWidth / 2;\n    const offset = calcPageOffset(this._face);\n    this._center = { x: offset.left + radius, y: offset.top + radius };\n    this._left = offset.left;\n    this._top = offset.top;\n\n    if (this.state.radius !== radius) {\n      this.setState({ radius });\n    }\n  };\n\n  _handleMouseEnter = () => {\n    const { hoverMode } = this.props;\n\n    if (hoverMode) {\n      this._enableMouseMoving();\n    }\n  };\n\n  _handleMouseLeave = () => {\n    const { hoverMode } = this.props;\n\n    if (hoverMode) {\n      this._disableMouseMoving();\n    }\n  };\n\n  _handleMouseDown = (e) => {\n    if (!isValidClick(e)) {\n      return;\n    }\n\n    const { hoverMode } = this.props;\n\n    if (!hoverMode) {\n      this._enableMouseMoving();\n    }\n  };\n\n  _handleMouseMove = (e) => {\n    if (!this.state.moving) {\n      return;\n    }\n\n    e.preventDefault();\n    this._calcNewTime(e);\n  };\n\n  _handleMouseUp = (e) => {\n    if (!isValidClick(e)) {\n      return;\n    }\n\n    const { onTimeChosen, hoverMode } = this.props;\n\n    if (this._face) {\n      if (this._face.contains(e.target)) {\n        onTimeChosen();\n        this._calcNewTime(e);\n      } else {\n        captureNextEvent('click');\n      }\n    }\n\n    if (!hoverMode) {\n      this._disableMouseMoving();\n    }\n  };\n\n  _handleTouchStart = () => {\n    captureNextEvent('mousedown');\n\n    addTouchEvent(window, 'move', this._handleTouchMove);\n    addTouchEvent(window, 'end', this._handleTouchEnd);\n    this.setState({ moving: true });\n  };\n\n  _handleTouchMove = (e) => {\n    if (!this.state.moving) {\n      return;\n    }\n\n    this._calcNewTime(e);\n  };\n\n  _handleTouchEnd = (e) => {\n    this._calcNewTime(e);\n    if (this._face && !this._face.contains(e.target)) {\n      captureNextEvent('click');\n    }\n\n    removeTouchEvent(window, 'move', this._handleTouchMove);\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\n\n    this.setState({ moving: false });\n  };\n\n  _calcNewTime = (e) => {\n    const { pageX: x, pageY: y } = e.changedTouches ? e.changedTouches[0] : e;\n    const innerRadius = this.state.radius - 48;\n    const { onChange, minutes, timePeriod } = this.props;\n    onChange(calcTimeFromPoint({ x, y }, this._center, innerRadius, minutes, timePeriod));\n  };\n\n  _enableMouseMoving = () => {\n    window.addEventListener('mousemove', this._handleMouseMove);\n    window.addEventListener('mouseup', this._handleMouseUp);\n\n    this.setState({ moving: true });\n  };\n\n  _disableMouseMoving = () => {\n    window.removeEventListener('mousemove', this._handleMouseMove);\n    window.removeEventListener('mouseup', this._handleMouseUp);\n\n    this.setState({ moving: false });\n  };\n\n  render() {\n    const { time, minutes, timePeriod, onChange, hoverMode } = this.props;\n    const { radius } = this.state;\n    const size = !minutes && !timePeriod ? 24 : 12;\n    const times = Array.apply(null, new Array(size)).map((_, i) => {\n      let clockTime = i + 1;\n      if (minutes) {\n        clockTime = (clockTime * 5) % 60;\n      } else {\n        clockTime %= 24;\n      }\n\n      return (\n        <ClockTime\n          key={`time-${i}`}\n          index={i + 1}\n          time={clockTime}\n          active={clockTime === time}\n          radius={radius}\n          onKeyboardFocus={onChange}\n        />\n      );\n    });\n\n    return (\n      <div\n        ref={this._setFace}\n        className=\"md-clock-face md-block-centered md-pointer--hover\"\n        onMouseDown={this._handleMouseDown}\n        onMouseEnter={hoverMode ? this._handleMouseEnter : undefined}\n        onMouseLeave={hoverMode ? this._handleMouseLeave : undefined}\n        onTouchStart={this._handleTouchStart}\n      >\n        <ResizeObserver watchHeight onResize={this._setPositioning} />\n        {times}\n        <ClockHand time={time} coords={radius} minutes={minutes} />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport addHours from '../utils/DateUtils/addHours';\nimport PickerControl from './PickerControl';\n\n/**\n * This component displays a section for switching between the AM\n * and PM time periods.\n */\nexport default class TimePeriods extends PureComponent {\n  static propTypes = {\n    /**\n     * The current time for the time picker.\n     */\n    tempTime: PropTypes.instanceOf(Date).isRequired,\n\n    /**\n     * A function to update the time for the time picker.\n     */\n    setTempTime: PropTypes.func.isRequired,\n\n    /**\n     * The current time period.\n     */\n    timePeriod: PropTypes.string.isRequired,\n  };\n\n  _setAM = () => {\n    if (this.props.timePeriod !== 'AM') {\n      this.props.setTempTime(addHours(this.props.tempTime, -12));\n    }\n  };\n\n  _setPM = () => {\n    if (this.props.timePeriod !== 'PM') {\n      this.props.setTempTime(addHours(this.props.tempTime, 12));\n    }\n  };\n\n  render() {\n    const { timePeriod } = this.props;\n    return (\n      <div className=\"md-time-periods\">\n        <PickerControl onClick={this._setAM} active={timePeriod === 'AM'}>\n          <h6 className=\"md-time-period\">AM</h6>\n        </PickerControl>\n        <PickerControl onClick={this._setPM} active={timePeriod === 'PM'}>\n          <h6 className=\"md-time-period\">PM</h6>\n        </PickerControl>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TimePeriods from './TimePeriods';\nimport PickerControl from './PickerControl';\n\n/**\n * The `TimePickerHeader` component is used for rendering the\n * current time for the `TimePicker` as well as switching between\n * the different views for the time picker.\n */\nexport default class TimePickerHeader extends PureComponent {\n  static propTypes = {\n    /**\n     * The current time of the time picker.\n     */\n    tempTime: PropTypes.instanceOf(Date).isRequired,\n\n    /**\n     * The current time type that is being changed.\n     */\n    timeMode: PropTypes.oneOf(['hour', 'minute']).isRequired,\n\n    /**\n     * A function to update the time mode.\n     */\n    setTimeMode: PropTypes.func.isRequired,\n\n    /**\n     * A function to update the time for the time picker.\n     */\n    setTempTime: PropTypes.func.isRequired,\n\n    /**\n     * A formatted hours string for the user's locale. This\n     * would be '3' for en-US if the time was '3:15'\n     */\n    hours: PropTypes.string.isRequired,\n\n    /**\n     * A formatted minutes string for the user's locale.\n     * This would be ':15' for en-US if the time was '3:15'.\n     */\n    minutes: PropTypes.string.isRequired,\n\n    /**\n     * An optional time period to use for locales that use\n     * 12 hour clocks and AM/PM.\n     */\n    timePeriod: PropTypes.string,\n  };\n\n  _setHour = () => {\n    this.props.setTimeMode('hour');\n  };\n\n  _setMinute = () => {\n    this.props.setTimeMode('minute');\n  };\n\n  render() {\n    const { timeMode, hours, minutes, timePeriod, setTempTime, tempTime } = this.props;\n    let timePeriods;\n    if (timePeriod) {\n      timePeriods = <TimePeriods tempTime={tempTime} setTempTime={setTempTime} timePeriod={timePeriod} />;\n    }\n\n    return (\n      <header className=\"md-picker-header md-text-right\">\n        <PickerControl onClick={this._setHour} active={timeMode === 'hour'}>\n          <h4 className=\"md-display-3\">\n            {hours}\n          </h4>\n        </PickerControl>\n        <PickerControl onClick={this._setMinute} active={timeMode === 'minute'}>\n          <h4 className=\"md-display-3\">\n            {minutes}\n          </h4>\n        </PickerControl>\n        {timePeriods}\n      </header>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport ClockFace from './ClockFace';\nimport DialogFooter from '../Dialogs/DialogFooter';\nimport TimePickerHeader from './TimePickerHeader';\n\n/**\n * The `TimePicker` component is used to display a time picker\n * in the `TimePickerContainer` component.\n */\nexport default class TimePicker extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    okLabel: PropTypes.node.isRequired,\n    okPrimary: PropTypes.bool.isRequired,\n    onOkClick: PropTypes.func.isRequired,\n    cancelLabel: PropTypes.node.isRequired,\n    cancelPrimary: PropTypes.bool.isRequired,\n    onCancelClick: PropTypes.func.isRequired,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n    icon: PropTypes.bool,\n    inline: PropTypes.bool,\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n    /**\n     * A function that will switch the state from hour to minute.\n     */\n    setTimeMode: PropTypes.func.isRequired,\n\n    /**\n     * A function that will update the time for the TimePicker before\n     * the user selects ok. This function will be given a new Date object\n     * with a modified time.\n     */\n    setTempTime: PropTypes.func.isRequired,\n\n    /**\n     * The current display mode of the time picker.\n     */\n    timeMode: PropTypes.oneOf(['hour', 'minute']).isRequired,\n\n    /**\n     * The current time as a date object that is being displayed in the\n     * time picker.\n     */\n    tempTime: PropTypes.instanceOf(Date).isRequired,\n\n    /**\n     * A string that is a representation of the hours in the user's locale.\n     */\n    hours: PropTypes.string.isRequired,\n\n    /**\n     * A string that is a representation of the minutes in the user's locale.\n     * This will also include any separator the locale uses.\n     *\n     * Example: ':15' in '3:15 PM' for 'en-US'\n     */\n    minutes: PropTypes.string.isRequired,\n\n    /**\n     * An optional time period if a user's locale uses it.\n     */\n    timePeriod: PropTypes.string,\n\n    /**\n     * If true the hover mode of the Time Picker is activated.\n     * In hover mode no clicks are required to start selecting an hour\n     * and the timemode switches automatically when a time was chosen.\n     * When a minute is selected the chosen time is applied automatically.\n     */\n    hoverMode: PropTypes.bool,\n  };\n\n  /**\n   * Takes in the new time (number o'clock or minutes), updates the temp time\n   * with that new time, and then calls the setTempTime prop.\n   */\n  _updateTime = (newTime) => {\n    let timePart = newTime;\n    const { tempTime, setTempTime, timeMode, timePeriod } = this.props;\n    const time = new Date(tempTime);\n    if (timeMode === 'hour') {\n      const isAM = timePeriod === 'AM';\n      const is12 = timePart === 12;\n      if (timePeriod && isAM && is12) {\n        timePart = 0;\n      } else if (timePeriod && !isAM && !is12) {\n        timePart += 12;\n      }\n\n      time.setHours(timePart);\n    } else {\n      time.setMinutes(timePart);\n    }\n\n    setTempTime(time);\n  };\n\n  _handleTimeChosen = () => {\n    const { hoverMode, setTimeMode, onOkClick, timeMode } = this.props;\n\n    if (hoverMode) {\n      if (timeMode === 'hour') {\n        setTimeMode('minute');\n      } else {\n        onOkClick();\n      }\n    }\n  };\n\n  render() {\n    const {\n      okLabel,\n      okPrimary,\n      onOkClick,\n      cancelLabel,\n      cancelPrimary,\n      onCancelClick,\n      style,\n      className,\n      setTimeMode,\n      setTempTime,\n      timeMode,\n      tempTime,\n      hours,\n      minutes,\n      timePeriod,\n      displayMode,\n      inline,\n      icon,\n      hoverMode,\n    } = this.props;\n\n    const hoursInt = parseInt(hours, 10);\n    const minutesInt = parseInt(minutes.replace(/[^0-9]/g, ''), 10);\n    const actions = [{\n      key: 'cancel',\n      onClick: onCancelClick,\n      primary: cancelPrimary,\n      secondary: !cancelPrimary,\n      label: cancelLabel,\n    }, {\n      key: 'ok',\n      onClick: onOkClick,\n      primary: okPrimary,\n      secondary: !okPrimary,\n      label: okLabel,\n    }];\n\n    return (\n      <div\n        style={style}\n        className={cn('md-picker md-picker--time', {\n          [`md-picker--${displayMode}`]: displayMode,\n          'md-picker--inline': inline,\n          'md-picker--inline-icon': inline && icon,\n        }, className)}\n      >\n        <TimePickerHeader\n          tempTime={tempTime}\n          timeMode={timeMode}\n          setTimeMode={setTimeMode}\n          setTempTime={setTempTime}\n          hours={hours}\n          minutes={minutes}\n          timePeriod={timePeriod}\n        />\n        <div className=\"md-picker-content-container\">\n          <div className=\"md-picker-content md-picker-content--clock\">\n            <ClockFace\n              time={timeMode === 'hour' ? hoursInt : minutesInt}\n              minutes={timeMode === 'minute'}\n              onChange={this._updateTime}\n              timePeriod={timePeriod}\n              hoverMode={hoverMode}\n              onTimeChosen={this._handleTimeChosen}\n            />\n          </div>\n          <DialogFooter actions={actions} />\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-shadow */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { ESC, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport controlled from '../utils/PropTypes/controlled';\nimport DateTimeFormat from '../utils/DateUtils/DateTimeFormat';\nimport formatTime from '../utils/DateUtils/formatTime';\nimport extractTimeParts from '../utils/DateUtils/extractTimeParts';\nimport Dialog from '../Dialogs/DialogContainer';\nimport FontIcon from '../FontIcons/FontIcon';\nimport TextField from '../TextFields/TextField';\nimport Collapse from '../Helpers/Collapse';\nimport TimePicker from './TimePicker';\n\n/**\n * The `TimePickerContainer` component is a wrapper for the main `TimePicker` component\n * to manage the state and _logic_ for rendering the `TimePicker`. This component will\n * either render inline or in a `Dialog` depending if the `inline` prop is set\n * to `true`.\n *\n * NOTE: This component is actually exported as `TimePicker` when using the `import { member }` syntax.\n * The following two lines are equivalent:\n *\n * ```js\n * import { TimePicker } from 'react-md/lib/Pickers';\n * import TimePicker from 'react-md/lib/Pickers/TimePickerContainer';\n * ```\n */\nexport default class TimePickerContainer extends PureComponent {\n  static propTypes = {\n    /**\n     * An id for the text field in the time picker. This is require for a11y.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An aria-label to apply to the dialog when it has been opened. This is required for\n     * a11y.\n     */\n    'aria-label': isRequiredForA11y(PropTypes.string),\n\n    /**\n     * An optional style to apply to the time picker's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the time picker's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the time picker.\n     */\n    pickerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the time picker.\n     */\n    pickerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the input tag.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the input tag.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the text field's container.\n     */\n    textFieldStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the text field's container.\n     */\n    textFieldClassName: PropTypes.string,\n\n    /**\n     * An optional icon to display with the time picker.\n     *\n     * @see {@link TextFields/TextField#leftIcon}\n     */\n    icon: PropTypes.node,\n\n    /**\n     * Boolean if the time picker is open by default.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * An optional label to be displayed in the time picker's text\n     * field.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional placeholder to be displayed in the time picker's text field.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * The value of the time picker. This will make the time picker\n     * be a controlled component.\n     */\n    value: controlled(PropTypes.instanceOf(Date), 'onChange', 'defaultValue'),\n\n    /**\n     * An optional function to call when the selected date is changed\n     * by hitting the OK button. The newly formatted time string,\n     * the new Date object, and the change event will be given.\n     *\n     * `onChange(timeString, dateObject, event)`.\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional default value to give for the year picker.\n     */\n    defaultValue: PropTypes.instanceOf(Date),\n\n    /**\n     * A function to format the dates since it should be formatted to the user's\n     * locale. This _should_ be the `Intl.DateTimeFormat` function. You\n     * can also create your own if you really wanted. Inadvisable though.\n     *\n     * See [intl-polyfill](https://github.com/andyearnshaw/Intl.js/) for more info.\n     */\n    DateTimeFormat: PropTypes.func.isRequired,\n\n    /**\n     * The locales to use for formatting the date. This will default to using\n     * the user's language in the browser or `'en-US'` when server rendering.\n     */\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n\n    /**\n     * The label to use for the ok button on the year picker.\n     */\n    okLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the ok button should be styled with the primary color.\n     */\n    okPrimary: PropTypes.bool,\n\n    /**\n     * The label to use for the cancel button on the year picker.\n     */\n    cancelLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the cancel button should be styled with the primary color.\n     */\n    cancelPrimary: PropTypes.bool,\n\n    /**\n     * The default mode to open the time picker in.\n     */\n    defaultTimeMode: PropTypes.oneOf(['hour', 'minute']),\n\n    /**\n     * Boolean if the date should automatically be selected when a user clicks\n     * on a new date instead of making them hit the ok button.\n     */\n    autoOk: PropTypes.bool,\n\n    /**\n     * Boolean if the date picker should be displayed inline instead of in a\n     * dialog.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * An optional force of the display mode of the date picker.\n     * This _should_ not really be used since there are media queries\n     * to use the correct mode based on device orientation.\n     */\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n    /**\n     * Boolean if the text field for the Time Picker should be displayed as full width.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * The direction that the text field divider expands from when the text field\n     * in the date picker gains focus.\n     */\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\n\n    /**\n     * An optional boolean if the time picker is current visible by dialog or inline.\n     * If this is set, the `onVisibilityChange` function is required.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the date picker is opened in either a dialog, or\n     * inline. The callback will include the next state.\n     *\n     * ```js\n     * onVisibilityChange(!visible, e);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * Boolean if the time picker is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should be able to close if a keyboard user presses the escape key.\n     */\n    closeOnEsc: PropTypes.bool,\n\n    /**\n     * If true the hover mode of the Time Picker is activated.\n     * In hover mode no clicks are required to start selecting an hour\n     * and the time mode switches automatically when a time was chosen.\n     * When a minute is selected the chosen time is applied automatically.\n     */\n    hoverMode: PropTypes.bool,\n\n    /**\n     * Boolean if the inline time picker's visibility should be animated.\n     */\n    animateInline: PropTypes.bool,\n\n    /**\n     * Boolean if the time is required.\n     *\n     * @see {@link TextFields/TextField#required}\n     */\n    required: PropTypes.bool,\n\n    /**\n     * @see {@link TextFields/TextField#block}\n     */\n    block: TextField.propTypes.block,\n\n    /**\n     * @see {@link TextFields/TextField#paddedBlock}\n     */\n    paddedBlock: TextField.propTypes.paddedBlock,\n\n    /**\n     * @see {@link TextFields/TextField#active}\n     */\n    active: TextField.propTypes.active,\n\n    /**\n     * @see {@link TextFields/TextField#error}\n     */\n    error: TextField.propTypes.error,\n\n    /**\n     * @see {@link TextFields/TextField#floating}\n     */\n    floating: TextField.propTypes.floating,\n\n    /**\n     * @see {@link TextFields/TextField#leftIconStateful}\n     */\n    leftIconStateful: TextField.propTypes.leftIconStateful,\n\n    /**\n     * @see {@link TextFields/TextField#rightIcon}\n     */\n    rightIcon: TextField.propTypes.rightIcon,\n\n    /**\n     * @see {@link TextFields/TextField#rightIconStateful}\n     */\n    rightIconStateful: TextField.propTypes.rightIconStateful,\n\n    /**\n     * @see {@link TextFields/TextField#customSize}\n     */\n    customSize: TextField.propTypes.customSize,\n\n    /**\n     * @see {@link TextFields/TextField#errorText}\n     */\n    errorText: TextField.propTypes.errorText,\n\n    /**\n     * @see {@link TextFields/TextField#helpText}\n     */\n    helpText: TextField.propTypes.helpText,\n\n    /**\n     * @see {@link TextFields/TextField#helpOnFocus}\n     */\n    helpOnFocus: TextField.propTypes.helpOnFocus,\n\n    /**\n     * @see {@link TextFields/TextField#inlineIndicator}\n     */\n    inlineIndicator: TextField.propTypes.inlineIndicator,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the dialog.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM Node to render the dialog into. The default is to render as the first child\n     * in the `body`.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the dialog should be rendered as the last child of the `renderNode` or `body` instead\n     * of the first.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * @see {@link Dialogs/DialogContainer#disableScrollLocking}\n     */\n    disableScrollLocking: PropTypes.bool,\n\n    /**\n     * Boolean if the TimePicker should be read only. This will prevent the user from opening the picker\n     * and only display the current date in the text field.\n     */\n    readOnly: PropTypes.bool,\n\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    initialTimeMode: deprecated(PropTypes.oneOf(['hour', 'minute']), 'Use `defaultTimeMode` instead'),\n  };\n\n  static defaultProps = {\n    animateInline: true,\n    defaultTimeMode: 'hour',\n    icon: <FontIcon>access_time</FontIcon>,\n    DateTimeFormat: DateTimeFormat, // eslint-disable-line object-shorthand\n    locales: typeof window !== 'undefined'\n      ? window.navigator.userLanguage || window.navigator.language\n      : 'en-US',\n    okLabel: 'Ok',\n    okPrimary: true,\n    cancelLabel: 'Cancel',\n    cancelPrimary: true,\n    closeOnEsc: true,\n    disableScrollLocking: false,\n    'aria-label': 'Select a time',\n    hoverMode: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialDate;\n    if (props.defaultValue) {\n      initialDate = new Date(props.defaultValue);\n    } else if (props.value) {\n      initialDate = new Date(props.value);\n    } else {\n      initialDate = new Date();\n    }\n\n    const visible = typeof props.initiallyOpen !== 'undefined'\n      ? props.initiallyOpen\n      : !!props.defaultVisible;\n\n    this.state = {\n      visible,\n      ...this._getTimeParts(initialDate, props),\n      value: props.defaultValue,\n      time: initialDate,\n      timeMode: props.initialTimeMode || props.defaultTimeMode,\n      tempTime: initialDate,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value) {\n      const time = nextProps.value || new Date();\n      this.setState({ tempTime: time, ...this._getTimeParts(time, nextProps) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { inline, isOpen } = this.props;\n    const visible = typeof isOpen !== 'undefined'\n      ? isOpen\n      : getField(this.props, this.state, 'visible');\n    const pVisible = typeof prevProps.isOpen !== 'undefined'\n      ? prevProps.isOpen\n      : getField(prevProps, prevState, 'visible');\n\n    if (visible === pVisible) {\n      return;\n    }\n\n    if (visible) {\n      if (inline) {\n        handleWindowClickListeners(this._handleOutsideClick, true);\n        window.addEventListener('keydown', this._closeOnEsc);\n      }\n    } else if (inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  }\n\n  componentWillUnmount() {\n    const visible = typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible');\n    if (visible && this.props.inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  }\n\n  _setContainer = (container) => {\n    this._container = container;\n  };\n\n  _getTimeParts(date, props) {\n    return extractTimeParts(props.DateTimeFormat, props.locales, date);\n  }\n\n  _closeOnEsc = (e) => {\n    if ((e.which || e.keyCode) === ESC) {\n      this._handleCancelClick(e);\n    }\n  };\n\n  _handleOutsideClick = (e) => {\n    if (this._container && !this._container.contains(e.target)) {\n      this._handleCancelClick(e);\n    }\n  };\n\n  _toggleOpen = (e) => {\n    if (this.props.disabled || this.props.readOnly) {\n      return;\n    }\n\n    const visible = !(typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible'));\n\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(visible, e);\n    }\n\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      const { hoverMode } = this.props;\n\n      if (hoverMode) {\n        this._setTimeMode('hour');\n      }\n\n      this.setState({ visible });\n    }\n  };\n\n  _setTimeMode = (timeMode) => {\n    if (this.state.timeMode === timeMode) {\n      return;\n    }\n\n    this.setState({ timeMode });\n  };\n\n  _setTempTime = (time) => {\n    if (this.state.tempTime === time) {\n      return;\n    }\n\n    this.setState({ tempTime: time, ...this._getTimeParts(time, this.props) });\n  };\n\n  _handleKeyDown = (e) => {\n    handleKeyboardAccessibility(e, this._toggleOpen, true, true);\n\n    if ((e.which || e.keyCode) === TAB && this.state.active) {\n      this.setState({ active: false });\n    }\n  };\n\n  _handleOkClick = (e) => {\n    const { onVisibilityChange, onChange, DateTimeFormat, locales } = this.props;\n    const value = new Date(this.state.tempTime);\n    if (onChange) {\n      onChange(formatTime(DateTimeFormat, locales, value), value, e);\n    }\n\n    if (onVisibilityChange) {\n      onVisibilityChange(false, e);\n    }\n\n    const state = { time: value, ...this._getTimeParts(value, this.props) };\n    if (typeof this.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      state.visible = false;\n    }\n\n    this.setState(state);\n  };\n\n  _handleCancelClick = (e) => {\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(false, e);\n    }\n\n    let state;\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      state = { visible: false };\n    }\n\n    const value = getField(this.props, this.state, 'value');\n    if (value) {\n      state = { ...state, ...this._getTimeParts(value, this.props) };\n      state.tempTime = this.state.time;\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _getTextFieldValue(props, state) {\n    const { DateTimeFormat, locales } = props;\n    const value = getField(props, state, 'value');\n    if (!value) {\n      return '';\n    } else if (value instanceof Date) {\n      return formatTime(DateTimeFormat, locales, value);\n    } else {\n      // currently don't support value of string\n      return value;\n    }\n  }\n\n  render() {\n    const {\n      timeMode,\n      tempTime,\n      hours,\n      minutes,\n      timePeriod,\n    } = this.state;\n\n    const {\n      style,\n      className,\n      pickerStyle,\n      pickerClassName,\n      inputStyle,\n      inputClassName,\n      textFieldStyle,\n      textFieldClassName,\n      id,\n      disabled,\n      label,\n      placeholder,\n      icon,\n      inline,\n      displayMode,\n      fullWidth,\n      lineDirection,\n      closeOnEsc,\n      hoverMode,\n      portal,\n      renderNode,\n      lastChild,\n      animateInline,\n      block,\n      paddedBlock,\n      active,\n      error,\n      floating,\n      required,\n      leftIconStateful,\n      rightIcon,\n      rightIconStateful,\n      customSize,\n      errorText,\n      helpText,\n      helpOnFocus,\n      inlineIndicator,\n      disableScrollLocking,\n      'aria-label': ariaLabel,\n      /* eslint-disable no-unused-vars */\n      value: propValue,\n      visible: propVisible,\n      readOnly,\n      defaultValue,\n      defaultVisible,\n      defaultTimeMode,\n      onVisibilityChange,\n\n      // deprecated\n      isOpen,\n      initialTimeMode,\n      initiallyOpen,\n      ...props\n    } = this.props;\n\n    const visible = typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible');\n\n    const picker = (\n      <TimePicker\n        {...props}\n        inline={inline}\n        icon={!!icon}\n        tempTime={tempTime}\n        timeMode={timeMode}\n        hours={hours}\n        minutes={minutes}\n        timePeriod={timePeriod}\n        style={pickerStyle}\n        className={pickerClassName}\n        displayMode={displayMode}\n        onOkClick={this._handleOkClick}\n        onCancelClick={this._handleCancelClick}\n        setTimeMode={this._setTimeMode}\n        setTempTime={this._setTempTime}\n        hoverMode={hoverMode}\n      />\n    );\n\n    let content;\n    if (inline) {\n      content = <Collapse collapsed={!visible} animate={animateInline}>{picker}</Collapse>;\n    } else {\n      content = (\n        <Dialog\n          id={`${id}-dialog`}\n          visible={visible}\n          onHide={this._handleCancelClick}\n          dialogClassName=\"md-dialog--picker\"\n          contentClassName=\"md-dialog-content--picker\"\n          aria-label={ariaLabel}\n          closeOnEsc={closeOnEsc}\n          portal={portal}\n          lastChild={lastChild}\n          renderNode={renderNode}\n          focusOnMount={false}\n          disableScrollLocking={disableScrollLocking}\n        >\n          {picker}\n        </Dialog>\n      );\n    }\n\n    return (\n      <div style={style} className={cn('md-picker-container', className)} ref={this._setContainer}>\n        <TextField\n          id={id}\n          style={textFieldStyle}\n          className={cn({ 'md-pointer--hover': !disabled }, textFieldClassName)}\n          inputStyle={inputStyle}\n          inputClassName={cn({ 'md-pointer--hover': !disabled }, inputClassName)}\n          active={active || visible}\n          error={error}\n          floating={floating || visible}\n          required={required}\n          disabled={disabled}\n          leftIcon={icon}\n          leftIconStateful={leftIconStateful}\n          rightIcon={rightIcon}\n          rightIconStateful={rightIconStateful}\n          inlineIndicator={inlineIndicator}\n          block={block}\n          paddedBlock={paddedBlock}\n          fullWidth={fullWidth}\n          lineDirection={lineDirection}\n          customSize={customSize}\n          helpText={helpText}\n          helpOnFocus={helpOnFocus}\n          errorText={errorText}\n          label={label}\n          placeholder={placeholder}\n          onClick={this._toggleOpen}\n          onKeyDown={this._handleKeyDown}\n          value={this._getTextFieldValue(this.props, this.state)}\n          readOnly\n        />\n        {content}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport between from '../utils/PropTypes/between';\n\nconst ROATE_DISTANCE = 360 * 1.75;\nconst BASE_SIZE = 24; // font-icon font size\n\n/**\n * The `CircularProgress` component is used to give visual feedback while your app\n * is loading.\n *\n * There are two different types of circular progress bars: `Determinate` and `Indeterminate`.\n *\n * A `Determinate` circular progress bar should be used when you want to keep track of the current\n * progress. An example would be downloading a file.\n *\n * An `Indeterminate` circular progress bar should be used when you can not keep track of the progress\n * yourself. An example would be waiting for some API call to complete.\n */\nexport default class CircularProgress extends PureComponent {\n  /* eslint-disable max-len */\n  static propTypes = {\n    /**\n     * The `id` prop is required for accessibility concerns.\n     * [Progress Bar Role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_progressbar_role)\n     *\n     * > If the progressbar is describing the loading progress of a particular region of a page, the author\n     * __SHOULD__ use aria-describedby to point to the status, and set the aria-busy attribute to true on the\n     * region until it is finished loading. It is not possible for the user to alter the value of a progressbar\n     * because it is always readonly.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /* eslint-enable max-len */\n\n    /**\n     * A style object to apply to the SVG. If this is a determinate `CircularProgress`,\n     * the `transform` (and vendor prefixes) styles will be merged with the current\n     * progress rotation.\n     */\n    style: PropTypes.object.isRequired,\n\n    /**\n     * An optional className to apply to the SVG.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The current value of the progress. If this value is defined, it will\n     * be converted to a determinate circular progress. The progress will not\n     * advance unless this value changes.\n     *\n     * This value should also be a number between 0 and 100.\n     */\n    value: between(PropTypes.number, 0, 100),\n\n    /**\n     * The scale for the circular progress.\n     */\n    scale: PropTypes.number.isRequired,\n\n    /**\n     * You probably don't want to update this. I'm not good at SVG. This should\n     * match the SCSS variable `$md-circular-progress-stroke-dashoffset`.\n     */\n    determinateDashoffset: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the progress should be centered in it's container.\n     */\n    centered: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    style: {},\n    scale: 1,\n    determinateDashoffset: 187,\n    centered: true,\n  };\n\n  render() {\n    const {\n      scale,\n      style,\n      className,\n      value,\n      determinateDashoffset,\n      centered,\n      ...props\n    } = this.props;\n\n    const isDeterminate = typeof value === 'number';\n    let circleStyle;\n    let svgStyle = style;\n    if (isDeterminate) {\n      const rotate = `rotate3d(0, 0, 1, ${ROATE_DISTANCE / 100 * value}deg)`;\n      circleStyle = {\n        strokeDashoffset: determinateDashoffset - (determinateDashoffset / 100 * value),\n      };\n\n      svgStyle = Object.assign({}, style, {\n        WebkitTransform: cn(style.WebkitTransform, rotate),\n        MozTransform: cn(style.MozTransform, rotate),\n        transform: cn(style.transform, rotate),\n      });\n    }\n\n    const accessibilityProps = {\n      role: 'progressbar',\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n    };\n\n    if (isDeterminate) {\n      accessibilityProps['aria-valuenow'] = value;\n    }\n\n    return (\n      <svg\n        {...props}\n        {...accessibilityProps}\n        style={svgStyle}\n        className={cn('md-progress md-progress--circular', {\n          'md-block-centered': centered,\n          'md-progress--circular-determinate': isDeterminate,\n          'md-progress--circular-indeterminate': !isDeterminate,\n        }, className)}\n        width={scale * BASE_SIZE}\n        height={scale * BASE_SIZE}\n        viewBox=\"0 0 66 66\"\n      >\n        <circle\n          className={cn('md-circular-progress-path', {\n            'md-circular-progress-path--animated': !isDeterminate,\n          })}\n          strokeWidth=\"6\"\n          strokeLinecap=\"round\"\n          style={circleStyle}\n          cx=\"33\"\n          cy=\"33\"\n          r=\"30\"\n        />\n      </svg>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport between from '../utils/PropTypes/between';\n\n/**\n * There are 3 different types of linear progress bars: `Determinate`,\n * `Indeterminate`, and `Query Indeterminate`.\n *\n * A `Determinate` linear progress bar should be used when you can keep track of the\n * progress and have a percentage complete you can work with. An example would be\n * uploading/downloading a file.\n *\n * An `Indeterminate` linear progress bar should be used when you can not keep track\n * of the progress yourself. An example might be waiting for an API call to complete.\n *\n * A `Query Indeterminate` linear progress bar is used when you are combining\n * `Indeterminate` and `Determinate`. A Linear Progress component can be displayed\n * as a query indeterminate progress bar by adding the prop `query={true}` to the\n * component. Until a progress value is given, it will display the query linear\n * progress animation. Afterwards, it will start the determinate animation of where\n * you manually keep updating the value of the progress.\n */\nexport default class LinearProgress extends PureComponent {\n  /* eslint-disable max-len */\n  static propTypes = {\n    /**\n     * The `id` prop is required for accessibility concerns.\n     * [Progress Bar Role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_progressbar_role)\n     *\n     * > If the progressbar is describing the loading progress of a particular region of a page, the author\n     * __SHOULD__ use aria-describedby to point to the status, and set the aria-busy attribute to true on the\n     * region until it is finished loading. It is not possible for the user to alter the value of a progressbar\n     * because it is always readonly.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /* eslint-enable max-len */\n    /**\n     * An optional className to apply to the linear progress container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional className to apply to the progress bar element.\n     *\n     * If a function is specified it will be called to get necessary className.\n     * Current progress value and reference to the component will be passed into the function.\n     */\n    progressClassName: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the progress bar element.\n     *\n     * If a function is specified it will be called to get necessary style.\n     * Current progress value and reference to the component will be passed into the function.\n     */\n    progressStyle: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n    ]),\n\n    /**\n     * The current value of the progress. If this value is defined, it will\n     * be converted to a determinate circular progress. The progress will not\n     * advance unless this value changes.\n     *\n     * This value should also be a number between 0 and 100.\n     */\n    value: between(PropTypes.number, 0, 100),\n\n    /**\n     * Boolean if this should be a query indeterminate progress bar.\n     */\n    query: PropTypes.bool,\n\n    /**\n     * Boolean if the Linear Progress should be centered. This\n     * will only work if the `max-width` style is set.\n     */\n    centered: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    query: false,\n  };\n\n  render() {\n    const { className, progressClassName, progressStyle, value, query, centered, ...props } = this.props;\n    const isDeterminate = typeof value === 'number';\n\n    const accessibilityProps = {\n      role: 'progressbar',\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n    };\n\n    let style;\n    if (isDeterminate) {\n      style = { width: `${value}%` };\n      accessibilityProps['aria-valuenow'] = value;\n    }\n    if (progressStyle) {\n      style = Object.assign(style || {},\n        typeof progressStyle === 'function'\n          ? progressStyle(value, this)\n          : progressStyle\n      );\n    }\n\n    return (\n      <div\n        {...props}\n        className={cn('md-progress md-progress--linear', { 'md-block-centered': centered }, className)}\n      >\n        <div\n          {...accessibilityProps}\n          style={style}\n          className={cn('md-progress--linear-active', {\n            'md-progress--linear-query': query,\n            'md-progress--linear-determinate': isDeterminate,\n            'md-progress--linear-indeterminate': !isDeterminate,\n          }, typeof progressClassName === 'function'\n              ? progressClassName(value, this)\n              : progressClassName\n          )}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { UP, DOWN, LEFT, RIGHT } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport minMaxLoop from '../utils/NumberUtils/minMaxLoop';\nimport controlled from '../utils/PropTypes/controlled';\nimport SelectionControl from './SelectionControl';\n\n\n/**\n * A custom PropTypes validator to make sure that each `control` in the `controls` prop\n * contains the given `propName`, or the `SelectionControlGroup` has defined that prop.\n */\nfunction requiredByAllControls(validator) {\n  return function validate(props, propName, component, ...others) {\n    let err = validator(props, propName, component, ...others);\n\n    if (!err && typeof props[propName] === 'undefined') {\n      const invalids = props.controls.filter(c => !c[propName]).map((_, i) => i);\n      if (invalids.length) {\n        const invalidPrefix = invalids.length === props.controls.length\n          ? 'All `controls`'\n          : `The \\`controls\\` at indexes \\`${invalids.join('`, `')}\\``;\n        const invalidMsg = `${invalidPrefix} are missing the \\`${propName}\\` prop.`;\n\n        err = new Error(\n          `The \\`${propName}\\` prop is required to make \\`${component}\\` accessible for users of ` +\n          `assistive technologies such as screen readers. Either add the \\`${propName}\\` to the \\`${component}\\` ` +\n          `or add the \\`${propName}\\` to each \\`control\\` in the \\`controls\\` prop. ${invalidMsg}`\n        );\n      }\n    }\n\n    return err;\n  };\n}\n\n\n/**\n * The `SelectionControlGroup` component is used to simplify the generation of a list\n * of `SelectionControl`. Any common props are extracted to this component and passed\n * to the `SelectionControl`.\n */\nexport default class SelectionControlGroup extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to every `SelectionControl`. This will be merged with any `style`\n     * that a `control` might have.\n     */\n    controlStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to every `SelectionControl`. This will be merged with any\n     * `className` that a `control` might have.\n     */\n    controlClassName: PropTypes.string,\n\n    /**\n     * An optional base id to apply to each `SelectionControl`. When this is included, the id for\n     * each control will start with this and end with their current index. If this is omitted,\n     * each `control` in the `controls` prop *must* have an `id` prop. This is required for\n     * accessibility.\n     */\n    id: requiredByAllControls(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * The type to apply to each `SelectionControl` in the group. Only `checkbox` and `radio` is\n     * valid for a grouping.\n     */\n    type: PropTypes.oneOf(['checkbox', 'radio']).isRequired,\n\n    /**\n     * The component to render the `SelectionControlGroup` in. This can only be a valid dom element\n     * since it relies on the ref callback to add keyboard accessibility.\n     */\n    component: PropTypes.string.isRequired,\n\n    /**\n     * An optional label to display above the group of `SelectionControl`s.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional className to apply to the node surrounding the `label` prop.\n     */\n    labelClassName: PropTypes.string,\n\n    /**\n     * The component to render the optional `label` in.\n     */\n    labelComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * An optional function to call when any `SelectionControl`'s `checked` state is changed\n     * in the group. If the `type` of the group is `radio`, the `value` of the `checked` radio\n     * will be given in the callback. If the `type` of the group is `checkbox`, a comma-delimited\n     * string of all `checked` checkboxes values will be given.\n     *\n     * ```js\n     * // checkbox\n     * onChange('Alpha,Omega', changeEvent);\n     *\n     * // radio\n     * onChange('Omega', changeEvent);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * A name to use for each `SelectionControl` in the group. If the `type` of the group is\n     * `checkbox`, the name will be updated to be an array name so that using\n     * `document.querySelector('input[name=\"yourName[]\"].value` will give the comma-delimited\n     * string of checked checkboxes.\n     *\n     * It is either required to have this prop set or every `control` in the `controls` prop to\n     * have the `name` prop.\n     */\n    name: requiredByAllControls(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * The default value for the `SelectionControlGroup`. This can either be a single value\n     * or a comma-delimited string of checkbox values. When the `type` of the group is `radio`\n     * and the group is uncontrolled, it is recommended to set this prop. Otherwise the first\n     * value of the `controls` prop will be used as the default value.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional value to use for the `SelectionControlGroup`. This will make the component\n     * controlled and require the `onChange` prop to be defined. Like the `defaultValue`, this\n     * can either be a single value or a comma-delimited list of checkbox values.\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'onChange'),\n\n    /**\n     * A list of objects to create the `SelectionControl` components. The shape of the object\n     * is the `propTypes` of the `SelectionControl` component, except that `value` prop is\n     * now required.\n     *\n     * The `SelectionControl` will inherit any inheritable props from the `SelectionControlGroup`.\n     */\n    controls: PropTypes.arrayOf(PropTypes.shape({\n      key: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      label: PropTypes.node.isRequired,\n      value: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.number,\n        PropTypes.string,\n      ]).isRequired,\n    })).isRequired,\n\n    /**\n     * Boolean if the `SelectionControl` should be displayed inline.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * Boolean if all the selection controls in the group are disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional function to call when the keydown event is triggered.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An icon to use for a checked `radio` control. This will be applied to each\n     * control that has a `type=\"radio\"` in the `controls` list. This is just a simpler\n     * way of applying the custom icons for each radio in the list.\n     *\n     * This will default to the `checkedRadioIcon` on the `SelectionControl`.\n     *\n     * @see {@link #controls}\n     * @see {@link #uncheckedRadioIcon}\n     * @see {@link SelectionControls/SelectionControls#checkedRadioIcon}\n     * @see {@link SelectionControls/SelectionControls#uncheckedRadioIcon}\n     */\n    checkedRadioIcon: PropTypes.node,\n\n    /**\n     * An icon to use for an unchecked `radio` control. This will be applied to each\n     * control that has a `type=\"radio\"` in the `controls` list. This is just a simpler\n     * way of applying the custom icons for each radio in the list.\n     *\n     * This will default to the `uncheckedRadioIcon` on the `SelectionControl`.\n     *\n     * @see {@link #controls}\n     * @see {@link #checkedRadioIcon}\n     * @see {@link SelectionControls/SelectionControls#checkedRadioIcon}\n     * @see {@link SelectionControls/SelectionControls#uncheckedRadioIcon}\n     */\n    uncheckedRadioIcon: PropTypes.node,\n\n    /**\n     * An icon to use for a checked `checkbox` control. This will be applied to each\n     * control that has a `type=\"checkbox\"` in the `controls` list. This is just a simpler\n     * way of applying the custom icons for each checkbox in the list.\n     *\n     * This will default to the `checkedCheckboxIcon` on the `SelectionControl`.\n     *\n     * @see {@link #controls}\n     * @see {@link #uncheckedCheckboxIcon}\n     * @see {@link SelectionControls/SelectionControls#checkedCheckboxIcon}\n     * @see {@link SelectionControls/SelectionControls#uncheckedCheckboxIcon}\n     */\n    checkedCheckboxIcon: PropTypes.node,\n\n    /**\n     * An icon to use for an unchecked `checkbox` control. This will be applied to each\n     * control that has a `type=\"checkbox\"` in the `controls` list. This is just a simpler\n     * way of applying the custom icons for each checkbox in the list.\n     *\n     * This will default to the `uncheckedCheckboxIcon` on the `SelectionControl`.\n     *\n     * @see {@link #controls}\n     * @see {@link #checkedCheckboxIcon}\n     * @see {@link SelectionControls/SelectionControls#checkedCheckboxIcon}\n     * @see {@link SelectionControls/SelectionControls#uncheckedCheckboxIcon}\n     */\n    uncheckedCheckboxIcon: PropTypes.node,\n  };\n\n  static defaultProps = {\n    component: 'fieldset',\n    labelComponent: 'legend',\n    labelClassName: 'md-subheading-1',\n  };\n\n  constructor(props) {\n    super(props);\n\n    const radio = props.type === 'radio';\n    this.state = {};\n\n    if (typeof props.value === 'undefined') {\n      let value = props.defaultValue;\n\n      if (typeof value === 'undefined') {\n        value = radio ? props.controls[0].value : '';\n      }\n\n      this.state.value = value;\n    }\n\n    const groupValue = getField(props, this.state, 'value');\n    this._activeIndex = -1;\n    props.controls.some(({ value }, i) => {\n      if (value === groupValue) {\n        this._activeIndex = i;\n      }\n\n      return this._activeIndex > -1;\n    });\n  }\n\n  _isChecked(value, controlValue, type) {\n    return type === 'radio'\n      ? value === controlValue\n      : value.split(',').indexOf(controlValue) !== -1;\n  }\n\n  _setGroup = (group) => {\n    this._group = group;\n  };\n\n  _handleChange = (e) => {\n    let value = e.target.value;\n    if (this.props.type === 'checkbox') {\n      const { checked } = e.target;\n\n      const values = getField(this.props, this.state, 'value').split(',');\n      const index = values.indexOf(value);\n      if (checked) {\n        values.push(value);\n      } else {\n        values.splice(index, 1);\n      }\n\n      value = values.join(',');\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(value, e);\n    }\n\n    if (typeof this.props.value === 'undefined') {\n      this.setState({ value });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    const key = e.which || e.keyCode;\n    const dec = key === UP || key === LEFT;\n    const inc = key === DOWN || key === RIGHT;\n    if (!this._group || (!dec && !inc)) {\n      return;\n    }\n\n    e.preventDefault();\n    const radios = this._group.querySelectorAll('*[role=\"radio\"]');\n    this._activeIndex = minMaxLoop(this._activeIndex, 0, radios.length - 1, inc);\n    radios[this._activeIndex].focus();\n    const { value } = this.props.controls[this._activeIndex];\n    if (getField(this.props, this.state, 'value') !== value) {\n      if (this.props.onChange) {\n        this.props.onChange(value, e);\n      }\n\n      if (typeof this.props.value === 'undefined') {\n        this.setState({ value });\n      }\n    }\n  };\n\n  render() {\n    const {\n      id,\n      name,\n      type,\n      label,\n      labelClassName,\n      className,\n      controlStyle,\n      controlClassName,\n      component: Component,\n      labelComponent: LabelComponent,\n      inline,\n      disabled,\n      checkedRadioIcon,\n      uncheckedRadioIcon,\n      checkedCheckboxIcon,\n      uncheckedCheckboxIcon,\n      /* eslint-disable no-unused-vars */\n      value: propValue,\n      controls: propControls,\n      defaultValue,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const value = getField(this.props, this.state, 'value');\n    const radio = type === 'radio';\n\n    const controls = this.props.controls.map((control, i) => {\n      let style = control.style;\n      if (controlStyle) {\n        style = style ? { ...controlStyle, ...style } : controlStyle;\n      }\n\n      const checked = this._isChecked(value, control.value, type);\n      const controlProps = {\n        id: `${id}${i}`,\n        key: `control${i}`,\n        name: `${name}${type === 'checkbox' ? '[]' : ''}`,\n        type,\n        inline,\n        disabled,\n        checked,\n        tabIndex: !radio || checked || (i === 0 && this._activeIndex === -1) ? undefined : -1,\n        checkedRadioIcon,\n        uncheckedRadioIcon,\n        checkedCheckboxIcon,\n        uncheckedCheckboxIcon,\n        ...control,\n        style,\n        className: cn(controlClassName, control.className),\n      };\n\n      return <SelectionControl {...controlProps} />;\n    });\n\n    let ariaLabel;\n    if (label) {\n      ariaLabel = <LabelComponent className={labelClassName}>{label}</LabelComponent>;\n    }\n\n    return (\n      <Component\n        {...props}\n        ref={this._setGroup}\n        className={cn('md-selection-control-group', className)}\n        onChange={this._handleChange}\n        onKeyDown={radio ? this._handleKeyDown : null}\n      >\n        {ariaLabel}\n        {controls}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport FontIcon from '../FontIcons/FontIcon';\nimport SelectionControl from './SelectionControl';\n\n/**\n * The `Checkbox` component is used for the selection of multiple options from a set.\n */\nexport default class Checkbox extends PureComponent {\n  static propTypes = {\n    /**\n     * An id to use with the checkbox. This is used for accessibility and so that the label\n     * triggers the checkbox toggle.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An optional style to apply to the checkbox's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the checkbox's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A label to display with the checkbox. This is required for accessibility and triggering\n     * the toggle.\n     */\n    label: PropTypes.node,\n\n    /**\n     * Boolean if the label should appear before the checkbox icon.\n     */\n    labelBefore: PropTypes.bool,\n\n    /**\n     * A name to use for the `Checkbox`. This is required for accessibility. If the checkbox is\n     * part of a group, it is recommended to make this a string ending in `[]` so that the\n     * value can be found from `document.querySelector('input[name=\"someName[]\"]').value`.\n     */\n    name: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * Boolean if the `Checkbox` is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional function to call when the `checked` state of the `Checkbox` changes.\n     * The callback will include the new checked state and the changeEvent.\n     *\n     * ```js\n     * onChange(changeEvent.target.checked, changeEvent);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional value for the `Checkbox`. It is recommended to use a value though.\n     */\n    value: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * Boolean if the `Checkbox` is checked by default.\n     */\n    defaultChecked: PropTypes.bool,\n\n    /**\n     * A boolean if the `Checkbox` is currently checked. This will required the `onChange` prop\n     * to be defined.\n     */\n    checked: controlled(PropTypes.bool, 'onChange', 'defaultChecked'),\n\n    /**\n     * Boolean if the `Checkbox` should be displayed inline.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * The icon to display when the checkbox is checked.\n     */\n    checkedIcon: PropTypes.node,\n\n    /**\n     * The icon to display when the checkbox is unchecked.\n     */\n    uncheckedIcon: PropTypes.node,\n\n    checkedIconChildren: deprecated(PropTypes.node, 'Use `checkedIcon` instead'),\n    checkedIconClassName: deprecated(PropTypes.string, 'Use `checkedIcon` instead'),\n    uncheckedIconChildren: deprecated(PropTypes.node, 'Use `uncheckedIcon` instead'),\n    uncheckedIconClassName: deprecated(PropTypes.string, 'Use `uncheckedIcon` instead'),\n  };\n\n  static defaultProps = {\n    checkedIcon: <FontIcon>check_box</FontIcon>,\n    uncheckedIcon: <FontIcon>check_box_outline_blank</FontIcon>,\n  };\n\n  render() {\n    const {\n      checkedIcon,\n      uncheckedIcon,\n      // deprecated\n      checkedIconChildren,\n      checkedIconClassName,\n      uncheckedIconChildren,\n      uncheckedIconClassName,\n      ...props\n    } = this.props;\n\n    const checked = getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon);\n    const unchecked = getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon);\n\n    return (\n      <SelectionControl\n        type=\"checkbox\"\n        checkedCheckboxIcon={checked}\n        uncheckedCheckboxIcon={unchecked}\n        __superSecreteProp\n        {...props}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport FontIcon from '../FontIcons/FontIcon';\nimport SelectionControl from './SelectionControl';\n\n/**\n * The `Radio` component is used for the selection of a single option from a set. Unfortunately\n * the `Radio` component must always be controlled because of the `FontIcon` toggles and how\n * the `radio` input type works. It is recommended to use the `SelectionControlGroup` component\n * to manage the `radio`.\n */\nexport default class Radio extends PureComponent {\n  static propTypes = {\n    /**\n     * An id to use with the radio. This is used for accessibility and so that the label\n     * triggers the radio toggle.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An optional style to apply to the radio's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the radio's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A label to display with the radio. This is required for accessibility and triggering\n     * the toggle.\n     */\n    label: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the label should appear before the radio icon.\n     */\n    labelBefore: PropTypes.bool,\n\n    /**\n     * A name to use for the `Radio`. This is required for accessibility.\n     */\n    name: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * Boolean if the `Radio` is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * A function to call when the `Radio` triggers the `change` event. The `onChange` callback\n     * will include the current value of the checked `radio` and the change event.\n     *\n     * ```js\n     * onChange(changeEvent.target.value, changeEvent);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * The value for the `Radio` component.\n     */\n    value: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * A boolean if the `Radio` is currently checked.\n     */\n    checked: PropTypes.bool.isRequired,\n\n    /**\n     * Boolean if the `Radio` should be displayed inline.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * The icon to display when the radio is checked/selected.\n     */\n    checkedIcon: PropTypes.node.isRequired,\n\n    /**\n     * The icon to display when the radio is not checked/selected.\n     */\n    uncheckedIcon: PropTypes.node.isRequired,\n    checkedIconChildren: deprecated(PropTypes.node, 'Use `checkedIcon` instead'),\n    checkedIconClassName: deprecated(PropTypes.string, 'Use `checkedIcon` instead'),\n    uncheckedIconChildren: deprecated(PropTypes.node, 'Use `uncheckedIcon` instead'),\n    uncheckedIconClassName: deprecated(PropTypes.string, 'Use `uncheckedIcon` instead'),\n  };\n\n  static defaultProps = {\n    checkedIcon: <FontIcon>radio_button_checked</FontIcon>,\n    uncheckedIcon: <FontIcon>radio_button_unchecked</FontIcon>,\n  };\n\n  render() {\n    const {\n      checkedIcon,\n      uncheckedIcon,\n      // deprecated\n      checkedIconChildren,\n      checkedIconClassName,\n      uncheckedIconChildren,\n      uncheckedIconClassName,\n      ...props\n    } = this.props;\n\n    const checked = getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon);\n    const unchecked = getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon);\n\n    return (\n      <SelectionControl\n        type=\"radio\"\n        checkedCheckboxIcon={checked}\n        uncheckedCheckboxIcon={unchecked}\n        __superSecreteProp\n        {...props}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport SelectionControl from './SelectionControl';\n\nexport default class Switch extends PureComponent {\n  static propTypes = {\n    /**\n     * An id to use with the switch. This is used for accessibility and so that the label\n     * triggers the switch toggle.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An optional style to apply to the switch's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the switch's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A label to display with the switch. This is required for accessibility and triggering\n     * the toggle.\n     */\n    label: PropTypes.node,\n\n    /**\n     * Boolean if the label should appear before the switch.\n     */\n    labelBefore: PropTypes.bool,\n\n    /**\n     * A name to use for the `Switch`. This is required for accessibility since behind the scenes\n     * the `Switch` is renders as an `<input type=\"checkbox\" />`.\n     */\n    name: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * Boolean if the `Switch` is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional function to call when the `checked` state of the `Switch` changes.\n     * The callback will include the new checked state and the changeEvent.\n     *\n     * ```js\n     * onChange(changeEvent.target.checked, changeEvent);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional value for the `Switch`. It is recommended to use a value though.\n     */\n    value: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * Boolean if the `Switch` is checked by default.\n     */\n    defaultChecked: PropTypes.bool,\n\n    /**\n     * A boolean if the `Switch` is currently checked. This will required the `onChange` prop\n     * to be defined.\n     */\n    checked: controlled(PropTypes.bool, 'onChange', 'defaultChecked'),\n\n    defaultToggled: deprecated(PropTypes.bool, 'Use the `defaultChecked` prop instead'),\n    toggled: deprecated(PropTypes.bool, 'Use the `checked` prop instead'),\n  };\n\n  render() {\n    const {\n      toggled,\n      defaultToggled,\n      ...props\n    } = this.props;\n\n    if (typeof toggled !== 'undefined' && typeof props.checked === 'undefined') {\n      props.checked = toggled;\n    }\n\n    if (typeof defaultToggled !== 'undefined' && typeof props.defaultChecked === 'undefined') {\n      props.defaultChecked = defaultToggled;\n    }\n\n    return <SelectionControl type=\"switch\" {...props} __superSecreteProp />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * This is just the label component for the slider. It will\n * return null if there are no children to display.\n */\nexport default class SliderLabel extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    htmlFor: (props, propName, component, ...others) => {\n      if (typeof props.children === 'undefined') {\n        return null;\n      }\n\n      return PropTypes.string.isRequired(props, propName, component, ...others);\n    },\n  };\n\n  render() {\n    const { children, className, htmlFor, ...props } = this.props;\n    if (!children) {\n      return null;\n    }\n\n    return (\n      <label\n        {...props}\n        htmlFor={htmlFor}\n        className={cn('md-slider-label', themeColors({ text: true }), className)}\n      >\n        {children}\n      </label>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `TrackFill` component is used for showing a colored bar\n * within the `Track` component to show the `Slider`'s position.\n *\n * If the `Slider` is disabled, this will just return null.\n */\nexport default class TrackFill extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    dragging: PropTypes.bool,\n    disabled: PropTypes.bool,\n    trackFillWidth: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const { style, className, trackFillWidth, dragging, disabled, ...props } = this.props;\n    if (disabled) {\n      return null;\n    }\n\n    return (\n      <hr\n        {...props}\n        style={Object.assign({}, style, { width: trackFillWidth })}\n        className={cn('md-slider-track-fill', className, {\n          'md-slider-track-fill--dragging': dragging,\n        })}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport AccessibleFakeButton from '../Helpers/AccessibleFakeButton';\n\n/**\n * The `Thumb` component is the little ball for the slider.\n */\nexport default class Thumb extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    thumbLeft: PropTypes.string.isRequired,\n    on: PropTypes.bool,\n    off: PropTypes.bool,\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    dragging: PropTypes.bool,\n    discrete: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      on,\n      off,\n      active,\n      disabled,\n      dragging,\n      thumbLeft,\n      discrete,\n      ...props\n    } = this.props;\n\n    return (\n      <AccessibleFakeButton\n        disabled={disabled}\n        {...props}\n        style={Object.assign({}, style, { left: thumbLeft })}\n        className={cn('md-slider-thumb', className, {\n          'md-slider-thumb--active': active,\n          'md-slider-thumb--dragging': dragging,\n          'md-slider-thumb--disabled': disabled,\n          'md-slider-thumb--on': on,\n          'md-slider-thumb--continuous-off': !discrete && off,\n          'md-slider-thumb--discrete': discrete,\n          'md-slider-thumb--discrete-on': discrete && active && on,\n          'md-slider-thumb--discrete-off': discrete && !disabled && off,\n          'md-slider-thumb--discrete-active': discrete && active,\n          'md-slider-thumb--discrete-active-off': discrete && active && off,\n        })}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `ThumbMask` component is used for either:\n *\n *  - rendering the ink behind the `Thumb` component when the `Thumb`\n *  has keyboard focus or touch focus\n *  - rendering a underlay to make the `Track` look broken for disabled\n *  Sliders.\n */\nexport default class ThumbMask extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    thumbLeft: PropTypes.string.isRequired,\n    maskInked: PropTypes.bool,\n    dragging: PropTypes.bool,\n    discrete: PropTypes.bool,\n    leaving: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      thumbLeft,\n      disabled,\n      dragging,\n      maskInked,\n      discrete,\n      leaving,\n      ...props\n    } = this.props;\n\n    return (\n      <span\n        {...props}\n        style={Object.assign({}, style, { left: thumbLeft })}\n        className={cn('md-slider-thumb md-slider-thumb--mask', className, {\n          'md-slider-thumb--dragging': dragging,\n          'md-slider-thumb--mask-inked': maskInked,\n          'md-slider-thumb--mask-disabled': disabled,\n          'md-slider-thumb--discrete-mask-inked': maskInked && discrete,\n          'md-slider-thumb--discrete-mask-leaving': discrete && leaving,\n        })}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport default class DiscreteValue extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    discrete: PropTypes.bool,\n    dragging: PropTypes.bool,\n    active: PropTypes.bool,\n    value: PropTypes.number.isRequired,\n    thumbLeft: PropTypes.string.isRequired,\n    valuePrecision: PropTypes.number.isRequired,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      discrete,\n      dragging,\n      thumbLeft,\n      active,\n      value,\n      valuePrecision,\n      ...props\n    } = this.props;\n\n    if (!discrete || !active) {\n      return null;\n    }\n\n    let valueStr = value.toFixed(valuePrecision);\n    if (valuePrecision > 0) {\n      const [w, d] = valueStr.split('.');\n      if (parseInt(d, 10) === 0) {\n        valueStr = w;\n      }\n    }\n    return (\n      <span\n        {...props}\n        style={Object.assign({}, style, { left: thumbLeft })}\n        className={cn('md-slider-discrete-value', className, {\n          'md-slider-discrete-value--dragging': dragging,\n        })}\n      >\n        {valueStr}\n      </span>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport updateUnit from '../utils/NumberUtils/updateUnit';\nimport TrackFill from './TrackFill';\nimport Thumb from './Thumb';\nimport ThumbMask from './ThumbMask';\nimport DiscreteValue from './DiscreteValue';\n\nconst half = w => w / 2;\n\n/**\n * The `Track` component is used for showing the current state of the slider.\n * It will render the `TrackFill`, `Thumb`, and `ThumbMask` components.\n */\nexport default class Track extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    thumbStyle: PropTypes.object,\n    thumbClassName: PropTypes.string,\n    trackFillStyle: PropTypes.object,\n    trackFillClassName: PropTypes.string,\n    discreteValueStyle: PropTypes.object,\n    discreteValueClassName: PropTypes.string,\n    on: PropTypes.bool,\n    off: PropTypes.bool,\n    active: PropTypes.bool,\n    dragging: PropTypes.bool,\n    disabled: PropTypes.bool,\n    thumbLeft: PropTypes.string.isRequired,\n    trackFillWidth: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    discrete: PropTypes.bool,\n    maskInked: PropTypes.bool,\n    maskLeaving: PropTypes.bool,\n    onThumbKeyUp: PropTypes.func.isRequired,\n    onThumbKeyDown: PropTypes.func.isRequired,\n    onThumbFocus: PropTypes.func.isRequired,\n    scale: PropTypes.number,\n    step: PropTypes.number,\n    discreteTicks: PropTypes.number,\n    tickWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    valuePrecision: PropTypes.number.isRequired,\n  };\n\n  render() {\n    const {\n      on,\n      off,\n      active,\n      disabled,\n      dragging,\n      className,\n      thumbLeft,\n      trackFillWidth,\n      trackFillStyle,\n      trackFillClassName,\n      discreteValueStyle,\n      discreteValueClassName,\n      maskInked,\n      maskLeaving,\n      thumbStyle,\n      thumbClassName,\n      discrete,\n      onThumbFocus,\n      onThumbKeyUp,\n      onThumbKeyDown,\n      value,\n      tickWidth,\n      discreteTicks,\n      scale,\n      step,\n      valuePrecision,\n      ...props\n    } = this.props;\n\n    const ticks = [];\n    if (typeof discreteTicks !== 'undefined' && !disabled && discrete) {\n      const amt = scale / (discreteTicks / step);\n      const offset = updateUnit(tickWidth, half, 'px');\n      const inc = 100 / amt;\n\n      for (let i = 0; i <= amt; i++) {\n        let left = `${i * inc}%`;\n        let width = tickWidth;\n        if (i === 0 || i === amt) {\n          width = updateUnit(tickWidth, half);\n        } else {\n          left = `calc(${left} - ${offset})`;\n        }\n\n        ticks.push(\n          <span\n            key={`tick-${i}`}\n            className=\"md-slider-discrete-tick\"\n            style={{ left, width }}\n          />\n        );\n      }\n    }\n\n    return (\n      <div {...props} className={cn('md-slider-track', className)}>\n        {ticks}\n        <TrackFill\n          style={trackFillStyle}\n          className={trackFillClassName}\n          disabled={disabled}\n          dragging={dragging}\n          trackFillWidth={trackFillWidth}\n        />\n        <Thumb\n          style={thumbStyle}\n          className={thumbClassName}\n          on={on}\n          off={off}\n          disabled={disabled}\n          dragging={dragging}\n          active={active}\n          thumbLeft={thumbLeft}\n          onFocus={onThumbFocus}\n          onKeyUp={onThumbKeyUp}\n          onKeyDown={onThumbKeyDown}\n          discrete={discrete}\n        />\n        <DiscreteValue\n          style={discreteValueStyle}\n          className={discreteValueClassName}\n          discrete={discrete}\n          dragging={dragging}\n          active={active}\n          value={value}\n          thumbLeft={thumbLeft}\n          valuePrecision={valuePrecision}\n        />\n        <ThumbMask\n          dragging={dragging}\n          disabled={disabled}\n          thumbLeft={thumbLeft}\n          maskInked={maskInked}\n          discrete={discrete}\n          leaving={maskLeaving}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport { LEFT, RIGHT, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport isValidClick from '../utils/EventUtils/isValidClick';\nimport { setTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport calculateValueDistance from '../utils/NumberUtils/calculateValueDistance';\nimport isWithinStep from '../utils/NumberUtils/isWithinStep';\nimport controlled from '../utils/PropTypes/controlled';\nimport SliderLabel from './SliderLabel';\nimport Track from './Track';\nimport TextField from '../TextFields/TextField';\n\n/**\n * The `Slider` component is used to let users select a value from a continuous\n * or discrete range of values by moving the slider thumb.\n *\n * When the user has finished dragging the Slider or increments the value by using\n * the edit field/keyboard arrows, the value will be rounded to the nearest `step`.\n */\nexport default class Slider extends PureComponent {\n  static propTypes = {\n    /**\n     * An id to use for the `Slider`. This is required if the `label` prop\n     * is defined.\n     */\n    id: (props, propName, component, ...others) => {\n      if (typeof props.label === 'undefined') {\n        return PropTypes.string(props, propName, component, ...others);\n      }\n\n      return isRequiredForA11y(PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]))(props, propName, component, ...others);\n    },\n\n    /**\n     * An optional style to apply to the slider's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the slider's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the slider's thumb.\n     */\n    thumbStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the slider's thumb.\n     */\n    thumbClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the slider's track.\n     */\n    trackStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the slider's track.\n     */\n    trackClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the slider's track fill.\n     */\n    trackFillStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the slider's track fill.\n     */\n    trackFillClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to a discrete slider's value.\n     */\n    discreteValueStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to a discrete slider's value.\n     */\n    discreteValueClassName: PropTypes.string,\n\n    /**\n     * The default value for the slider. This number must be between the min and max values if\n     * defined. If this is undefined, it's value will be set to the min value.\n     */\n    defaultValue: PropTypes.number,\n\n    /**\n     * The min value for the slider. This value **must** be less than the `max` value.\n     */\n    min: (props, propName, component, ...others) => {\n      let err = PropTypes.number.isRequired(props, propName, component, ...others);\n      if (!err) {\n        const min = props[propName];\n        let name;\n        if (min > props.value) {\n          name = 'value';\n        } else if (typeof props.defaultValue !== 'undefined' && min > props.defaultValue) {\n          name = 'defaultValue';\n        }\n\n        if (name) {\n          err = new Error(\n            `The '${propName}' prop must be less than or equal to the '${name}' prop for the '${component}' but ` +\n            `received: 'min: ${min}' and '${name}: ${props[name]}'`\n          );\n        }\n      }\n\n      return err;\n    },\n\n    /**\n     * The max value for the slider. This value **must** be greater than the `min` value.\n     */\n    max: (props, propName, component, ...others) => {\n      let err = PropTypes.number.isRequired(props, propName, component, ...others);\n      if (!err) {\n        const max = props[propName];\n        let name;\n        if (max < props.value) {\n          name = 'value';\n        } else if (max < props.defaultValue) {\n          name = 'defaultValue';\n        }\n\n        if (name) {\n          err = new Error(\n            `The '${propName}' prop must be greater than or equal to the '${name}' prop for the '${component}' but ` +\n            `received: '${propName}: ${max}' and '${name}: ${props[name]}'`\n          );\n        }\n      }\n\n      return err;\n    },\n\n    /**\n     * Boolean if the slider is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional value for the slider. This will make the component controlled\n     * and require the `onChange` function.\n     */\n    value: controlled(PropTypes.number, 'onChange'),\n\n    /**\n     * This is called when the slider's value gets updated. The value can be updated\n     * by one of the following:\n     *\n     * - Clicking a section of the slider\n     * - Dragging the slider with the mouse\n     * - Touching a section of the slider.\n     * - Dragging the slider with touch\n     * - Using the text field to update the value either by typing or incrementing\n     * - Using the left or right arrow keys to increment/decrement the value.\n     *\n     * The callback for this function is as follows:\n     *\n     * ```js\n     * onChange(value, event);\n     * ```\n     *\n     * where the event can either be:\n     * - a touch start event\n     * - a touch move event\n     * - a touch end event\n     * - a mouse down event\n     * - a mouse move event\n     * - a mouse up event\n     * - a key up event\n     * - a key down event\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * This is only called when the user is dragging the slider with either\n     * the mouse or touch. Probably not really useful. It just includes the\n     * new drag percentage while the `onChange` does not.\n     *\n     * The callback for this function is defined as:\n     *\n     * ```js\n     * onDragChange(dragPercentage, value, (touchMove || mouseMove) event);\n     * ```\n     */\n    onDragChange: PropTypes.func,\n\n    /**\n     * An optional function to call when the slider's container has\n     * the mousedown event.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the slider's container has\n     * the touchstart event.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional icon or letter to place to the left of the slider.\n     * if you want to use a non-font icon or a letter, use the `md-slider-ind`\n     * className on your element.\n     */\n    leftIcon: PropTypes.element,\n\n    /**\n     * An optional icon or letter to place to the right of the slider.\n     * if you want to use a non-font icon or a letter, use the `md-slider-ind`\n     * className on your element.\n     *\n     * > NOTE: This can not be used if the `editable` prop is true.\n     */\n    rightIcon: PropTypes.element,\n\n    /**\n     * An optional label to display above the slider. If this prop\n     * is set, then an `id` must also be given.\n     */\n    label: PropTypes.node,\n\n    /**\n     * The incremental amount when the user hits left or right with the\n     * keyboard arrows, or the user hits the up or down buttons in the\n     * editable number text field. This number must be a number between\n     * 0 and 1 or a whole number above 1.\n     */\n    step: (props, propName, component, ...others) => {\n      let err = PropTypes.number.isRequired(props, propName, component, ...others);\n      if (!err) {\n        const step = props[propName];\n        if (step <= 0) {\n          err = new Error(\n            `The '${propName}' for the '${component}' must be a number greater than 0. The ` +\n            `current value is '${step}'.`\n          );\n        } else {\n          const valueDefined = typeof props.value !== 'undefined';\n          const defaultDefined = typeof props.defaultValue !== 'undefined';\n          let value = props.value;\n          if (!valueDefined) {\n            value = defaultDefined ? props.defaultValue : props.min;\n          }\n\n          let name;\n          if (!isWithinStep(value, step)) {\n            if (valueDefined) {\n              name = 'value';\n            } else if (defaultDefined) {\n              name = 'defaultValue';\n            } else {\n              name = 'min';\n            }\n          }\n\n          if (name) {\n            err = new Error(\n              `The '${name}' prop on '${component}' should be a number divisible by the ` +\n              `'${propName}' prop. The current value is '${props[name]}' and the '${propName}' ` +\n              `is '${step}'.`\n            );\n          }\n        }\n      }\n\n      return err;\n    },\n\n    /**\n     * Boolean if the Slider should be editable. This will place a number text field\n     * to the right of the slider. If this prop is set to `true`, the `rightIcon`\n     * prop can not be set.\n     */\n    editable: (props, propName, component, ...others) => {\n      if (typeof props[propName] === 'undefined') {\n        return null;\n      }\n\n      let err = PropTypes.bool.isRequired(props, propName, component, ...others);\n      if (!err && typeof props.rightIcon !== 'undefined') {\n        err = new Error(\n          `The '${component}' is unable to be 'editable' and include a 'rightIcon'.`\n        );\n      }\n\n      return err;\n    },\n\n    /**\n     * The width for the number text field when the Slider is editable.\n     */\n    inputWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * Boolean if the slider should be discrete. This will update the slider to include a\n     * _balloon_ with the current value inside. It will also not allow the `Slider` to be\n     * editable.\n     */\n    discrete: (props, propName, component, ...others) => {\n      if (typeof props[propName] === 'undefined') {\n        return null;\n      }\n\n      let err = PropTypes.bool(props, propName, component, ...others);\n      if (!err && typeof props.editable !== 'undefined') {\n        err = new Error(\n          `The '${component}' cannot be 'discrete' and 'editable'. Please choose one.`\n        );\n      }\n\n      return err;\n    },\n\n    /**\n     * The width of each tick for a discrete slider with ticks. This can either be a number\n     * which gets converted to `px`, or a valid CSS unit.\n     */\n    tickWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * This is number divisible by the total number of values included in the Slider. Every\n     * value that is divisible by this number will include a tick mark. It is common recommended\n     * to have this equal to the `step` prop.\n     *\n     * This prop is completely optional.\n     */\n    discreteTicks: (props, propName, component, ...others) => {\n      if (typeof props[propName] === 'undefined') {\n        return null;\n      }\n\n      let err = PropTypes.number(props, propName, component, ...others);\n      if (!err) {\n        const { min, max, step } = props;\n        const range = Math.abs(max - min);\n\n        if ((range / props[propName]) % 1 !== 0) {\n          err = new Error(\n            `The '${propName}' must be a number divisible by the range set by the 'min' and ` +\n            `'max' props. The current range is '${range}' by including the min: '${min}' and ` +\n            `max: '${max}' values. The current value of '${propName}' is '${props[propName]}'.`\n          );\n        } else if (props[propName] % step !== 0) {\n          err = new Error(\n            `The 'step' prop must be a number divisible by the '${propName}'. It is common to have ` +\n            `them as the same value. The current 'step' is '${step}' and the '${propName}' is '${props[propName]}'.`\n          );\n        }\n      }\n\n      return err;\n    },\n\n    /**\n     * The transition time for a discrete Slider's keyboard focus ink. This should match the\n     * `md-slider-discrete-ink-transition-time` value in your SCSS. This is used because\n     * the ink is only visible temporarily for a discrete slider when keyboard focusing.\n     */\n    discreteInkTransitionTime: PropTypes.number.isRequired,\n\n    /**\n     * The precision that the value should be rounded to when the Slider is updated. This\n     * needs to be a whole number greater than or equal to 0.\n     */\n    valuePrecision: (props, propName, component, ...others) => {\n      let err = PropTypes.number.isRequired(props, propName, component, ...others);\n      if (!err) {\n        const precision = props[propName];\n\n        if (precision % 1 !== 0 || precision < 0) {\n          err = new Error(\n            `The '${propName}' must be a positive whole number or 0 on the '${component}'. ` +\n            `The current '${propName}' is '${precision}'`\n          );\n        }\n      }\n\n      return err;\n    },\n\n    stepPrecision: deprecated(PropTypes.number, 'Use `step` and `valuePrecision` instead'),\n  };\n\n  static defaultProps = {\n    min: 0,\n    max: 100,\n    step: 1,\n    inputWidth: 40,\n    tickWidth: 6,\n    discreteInkTransitionTime: 300,\n    valuePrecision: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { min, max, step } = props;\n    const scale = Math.abs(max - min) / step;\n\n    let value = typeof props.value !== 'undefined'\n      ? props.value\n      : props.defaultValue;\n\n    if (typeof value === 'undefined') {\n      value = min;\n    }\n\n    const distance = this._calcDistance(value, min, max);\n    const thumbLeft = this._calcLeft(distance);\n    const trackFillWidth = `${distance}%`;\n\n    if (typeof props.value !== 'undefined') {\n      value = undefined;\n    }\n\n    let trackWidth;\n    if (props.label && !props.editable && !props.leftIcon && !props.rightIcon) {\n      trackWidth = '100%';\n    }\n\n    this.state = {\n      value,\n      scale,\n      distance,\n      thumbLeft,\n      trackWidth,\n      trackFillWidth,\n      active: false,\n      dragging: false,\n      maskInked: false,\n    };\n    this._dragAdded = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { leftIcon, rightIcon, label, min, max, step, value } = this.props;\n    if (value !== nextProps.value) {\n      const distance = this._calcDistance(nextProps.value, nextProps.min, nextProps.max);\n      this.setState({ distance, trackFillWidth: `${distance}%`, thumbLeft: this._calcLeft(distance) });\n    }\n\n    if (leftIcon !== nextProps.leftIcon\n      || rightIcon !== nextProps.rightIcon\n      || label !== nextProps.label\n    ) {\n      this._calcTrackWidth(nextProps);\n    }\n\n    if (min !== nextProps.min || max !== nextProps.max || step !== nextProps.step) {\n      this.setState({ scale: Math.abs(nextProps.max - nextProps.min) / nextProps.step });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { active, manualIncrement } = this.state;\n    let fn = window[`${active ? 'add' : 'remove'}EventListener`];\n    if (active !== prevState.active) {\n      fn('click', this._blurOnOutsideClick);\n\n      if (active) {\n        this._focusThumb();\n      }\n    }\n\n    const addDrag = active && !manualIncrement;\n    fn = window[`${addDrag ? 'add' : 'remove'}EventListener`];\n    if (this._dragAdded !== addDrag) {\n      fn('mousemove', this._handleDragMove);\n      fn('mouseup', this._handleDragEnd);\n      setTouchEvent(addDrag, window, 'move', this._handleDragMove);\n      setTouchEvent(addDrag, window, 'end', this._handleDragEnd);\n\n      this._dragAdded = addDrag;\n    }\n  }\n\n  componentWillUnmount() {\n    const rm = window.removeEventListener;\n    rm('click', this._blurOnOutsideClick);\n    rm('mousemove', this._handleMouseMove);\n    rm('mouseup', this._handleMouseUp);\n    removeTouchEvent(window, 'move', this._handleDragMove);\n    removeTouchEvent(window, 'end', this._handleDragEnd);\n\n    if (this._inkTimeout) {\n      clearTimeout(this._inkTimeout);\n    }\n\n    if (this._focusTimeout) {\n      clearTimeout(this._focusTimeout);\n    }\n  }\n\n  /**\n   * Gets the `left` position for the thumb based on the value given.\n   *\n   * @param {number} value - The current value.\n   * @return {string} the `calc` string.\n   */\n  _calcLeft(value) {\n    return `calc(${value}% - 6px)`;\n  }\n\n  _calcDistance(value, min, max) {\n    return Math.max(0, Math.min(100, ((value - min) / (max - min)) * 100));\n  }\n\n  /**\n   * Checks if a classList does not contain all the *bad* class names.\n   *\n   * @param {function} classList - The classList to check.\n   * @return {Boolean} true if the classList does not contain any of the *bad* class names.\n   */\n  _isValidClassList(classList) {\n    let invalid = false;\n    ['md-slider-label', 'md-slider-ind', 'md-icon'].some(cl => {\n      invalid = classList.contains(cl);\n      return invalid;\n    });\n\n    return !invalid;\n  }\n\n  _isInTextField(e) {\n    const { className } = e.target;\n\n    // SVG's className is an object instead of a string\n    return typeof className.match === 'function' && className.match(/text-field/);\n  }\n\n  /**\n   * Checks if the target is within the text field container.\n   *\n   * @param {Object} target - The event target.\n   * @return {Boolean} true if the target is in the text field.\n   */\n  _isTextField = (target) => this._field && this._field.contains(target);\n\n  /**\n   * Updates the slider's thumb position and the slider's track fill width based\n   * on the thumb's current x position on the screen.\n   *\n   * The slider distance will be *normalized* when:\n   *  - The user does a quick jump\n   *  - The user stops dragging with the mouse\n   *  - The user drops dragging with touch\n   *\n   * If the position is not *normalized*, the `onDragChange` prop will be called\n   * with the new distance percentage, the value, and the move event.\n   *\n   * The `onChange` function will always be called.\n   *\n   * @param {Object} e - The current event to extract an x location from\n   * @param {bool} normalize - Boolean if the distance should be normalized\n   *    to the current scale of the slider.\n   */\n  _updatePosition = (e, normalize) => {\n    const x = (e.changedTouches ? e.changedTouches[0] : e).clientX;\n    const { scale } = this.state;\n    const { onChange, onDragChange, min, max, step } = this.props;\n\n    const { value, distance } = calculateValueDistance(\n      x,\n      this._track.offsetWidth,\n      this._track.getBoundingClientRect().left,\n      scale,\n      step,\n      min,\n      max,\n      normalize\n    );\n\n    const isNewValue = getField(this.props, this.state, 'value') !== value;\n    if (onChange && isNewValue) {\n      onChange(value, e);\n    }\n\n    if (!normalize && onDragChange && (isNewValue || this.state.distance !== distance)) {\n      onDragChange(distance, value, e);\n    }\n\n    const state = {\n      active: true,\n      distance,\n      manualIncrement: false,\n      dragging: !normalize,\n      thumbLeft: this._calcLeft(distance),\n      trackFillWidth: `${distance}%`,\n    };\n\n    if (e.type === 'touchend' || e.type === 'mousedown') {\n      state.maskInked = false;\n    }\n\n    if (typeof this.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    this.setState(state);\n  };\n\n  /**\n   * This will either allow a user to start dragging the slider or quickly\n   * jump to a new value on the slider if the slider is not disabled.\n   *\n   * This will handle the `touchstart` and `mousedown` events.\n   *\n   * @param {Object} e - The touchstart or mousedown event.\n   */\n  _handleDragStart = (e) => {\n    if (e.type === 'mousedown' && this.props.onMouseDown) {\n      this.props.onMouseDown(e);\n    } else if (e.type === 'touchstart' && this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    if (this.props.disabled || (e.type === 'mousedown' && !isValidClick(e, 'mousedown')) || this._isInTextField(e)) {\n      return;\n    }\n\n    const { classList } = e.target;\n    const isDiscreteValue = classList.contains('md-slider-discrete-value');\n    if (classList.contains('md-slider-thumb') || isDiscreteValue) {\n      // Prevents text highlighting while dragging.\n      if (e.type.match(/mouse/)) {\n        e.preventDefault();\n      }\n      this.setState({ dragging: true, active: true, manualIncrement: false, maskInked: false });\n    } else if (!this._isTextField(e.target) && this._isValidClassList(classList)) {\n      this._updatePosition(e, true);\n    }\n  };\n\n  _setNode = (node) => {\n    this._node = findDOMNode(node);\n  };\n\n  _setTrack = (track) => {\n    this._track = findDOMNode(track);\n  };\n\n  _setField = (field) => {\n    this._field = findDOMNode(field);\n    this._calcTrackWidth(this.props);\n  };\n\n  _handleDragMove = (e) => {\n    if (this.props.disabled || !this.state.dragging) {\n      return;\n    }\n\n    // Stops the text highlighting while dragging\n    if (e.type.match(/mouse/)) {\n      e.preventDefault();\n    }\n\n    this._updatePosition(e, false);\n  };\n\n  _handleDragEnd = (e) => {\n    if (!this.state.dragging || this.props.disabled || (e.type === 'mouseup' && !isValidClick(e))) {\n      return;\n    }\n\n    this._updatePosition(e, true);\n  };\n\n  /**\n   * This will set the active state of the slider to false if the user\n   * clicks outside of the slider's container.\n   *\n   * @param {Object} e - The window's click event.\n   */\n  _blurOnOutsideClick = (e) => {\n    if ((this.state.dragging && !this.state.manualIncrement) || this.props.disabled) {\n      return;\n    }\n\n    if (!this._node.contains(e.target)) {\n      this.setState({ active: false, maskInked: false });\n    }\n  };\n\n  /**\n   * Updates the slider with the `step` prop and calls the `onChange`\n   * function with the new value.\n   *\n   * @param {number} incrementedValue - The newly incremented value of the slider.\n   * @param {Object} e - Either the text field's change event, mouse down event, or\n   *    touch start event.\n   * @param {bool} disableTransition - Boolean if the jump's transition should be disabled.\n   */\n  _handleIncrement = (incrementedValue, e, disableTransition) => {\n    const { onChange, min, max, discrete } = this.props;\n\n    const value = Math.max(min, Math.min(max, incrementedValue));\n    const distance = this._calcDistance(value, min, max);\n\n    if (onChange) {\n      onChange(value, e);\n    }\n\n    const state = {\n      distance,\n      manualIncrement: true,\n      thumbLeft: this._calcLeft(distance),\n      trackFillWidth: `${distance}%`,\n      dragging: Math.abs(this.state.distance - distance) < 2 && disableTransition,\n    };\n\n    if (typeof this.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    if (e.type === 'keydown' && !discrete) {\n      state.maskInked = true;\n    }\n\n    this.setState(state);\n  };\n\n  _handleTextFieldChange = (newValue, e) => {\n    this._handleIncrement(newValue, e, false);\n  };\n\n  /**\n   * This will increment the Slider's value by the `step` prop. If the left or\n   * right key arrow is pressed.\n   *\n   * @param {Object} e - the keydown event.\n   */\n  _handleKeyDown = (e) => {\n    const key = e.which || e.keyCode;\n    const { min, max, step, disabled } = this.props;\n    if (disabled) {\n      return;\n    }\n\n    if (key === TAB) {\n      this.setState({ active: false, maskInked: false });\n      return;\n    } else if ((key !== LEFT && key !== RIGHT)) {\n      return;\n    }\n\n    let nextValue = getField(this.props, this.state, 'value');\n    nextValue = Math.max(\n      min,\n      Math.min((key === LEFT ? -step : step) + nextValue, max)\n    );\n\n    this._handleIncrement(nextValue, e, true);\n  };\n\n  /**\n   * This function will animate the discrete Slider's ink if it gains focus\n   * by a tab event.\n   *\n   * @param {Object} e - the key up event.\n   */\n  _handleKeyUp = (e) => {\n    if ((e.which || e.keyCode) !== TAB) {\n      return;\n    }\n\n    if (this.props.discrete) {\n      this._animateDiscreteInk();\n    }\n\n    this.setState({ maskInked: true });\n  };\n\n  _handleFocus = () => {\n    this.setState({ active: true });\n  };\n\n  /**\n   * For some reason the width of the track gets set to 0 if the `Slider` has a label and\n   * does not include the `leftIcon`, `rightIcon`, and is not `editable` OR it is\n   * `editable` and does not include the `leftIcon`. All other cases the width works\n   * correctly.\n   *\n   * This function just checks these things, and sets the width accordingly.\n   */\n  _calcTrackWidth = (props) => {\n    const { editable, leftIcon, rightIcon, inputWidth, label } = props;\n\n    if (!label) {\n      this.setState({ trackWidth: null });\n      return;\n    }\n\n    let trackWidth = null;\n    if (!leftIcon && !rightIcon && !editable) {\n      trackWidth = '100%';\n    } else if (editable && !leftIcon) {\n      const cs = window.getComputedStyle(this._field);\n      const pl = parseInt(cs.getPropertyValue('padding-left'), 10);\n      const ml = parseInt(cs.getPropertyValue('margin-left'), 10);\n\n      trackWidth = pl + ml + inputWidth;\n    }\n\n    if (trackWidth) {\n      this.setState({ trackWidth });\n    }\n  };\n\n  /**\n   * The ink for a Discrete slider is only visible for a short time on initial\n   * focus. This function will handle the in/out transitions.\n   */\n  _animateDiscreteInk = () => {\n    const wait = this.props.discreteInkTransitionTime;\n    if (this._inkTimeout) {\n      clearTimeout(this._inkTimeout);\n    }\n\n    this._inkTimeout = setTimeout(() => {\n      this.setState({ leaving: true, maskInked: false });\n\n      this._inkTimeout = setTimeout(() => {\n        this._inkTimeout = null;\n        this.setState({ leaving: false });\n      }, wait);\n    }, wait);\n  };\n\n  /**\n   * This is a helper function for focusing the Slider's thumb component. There\n   * is a short delay because the body sometimes gets focused immediately after\n   * if there is no timeout..\n   */\n  _focusThumb = () => {\n    if (this._focusTimeout) {\n      clearTimeout(this._focusTimeout);\n    }\n\n    this._focusTimeout = setTimeout(() => {\n      this._focusTimeout = null;\n      if (!this._thumb) {\n        this._thumb = this._node.querySelector('.md-slider-thumb');\n      }\n\n      this._thumb.focus();\n    }, 100);\n  };\n\n  render() {\n    const {\n      dragging,\n      active,\n      thumbLeft,\n      trackFillWidth,\n      maskInked,\n      trackWidth,\n      scale,\n      distance,\n    } = this.state;\n\n    const {\n      id,\n      min,\n      max,\n      disabled,\n      className,\n      trackStyle,\n      trackClassName,\n      thumbStyle,\n      thumbClassName,\n      discreteValueStyle,\n      discreteValueClassName,\n      label,\n      editable,\n      step,\n      inputWidth,\n      leftIcon,\n      rightIcon,\n      discrete,\n      discreteTicks,\n      tickWidth,\n      valuePrecision,\n      /* eslint-disable no-unused-vars */\n      value: propValue,\n      onChange,\n      onDragChange,\n      discreteInkTransitionTime,\n\n      // deprecated\n      stepPrecision,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const value = getField(this.props, this.state);\n    let rightChildren = rightIcon;\n    if (editable) {\n      rightChildren = (\n        <TextField\n          id={`${id}-editor`}\n          ref={this._setField}\n          type=\"number\"\n          value={value}\n          inputClassName=\"md-slider-editor\"\n          style={{ width: inputWidth }}\n          onChange={this._handleTextFieldChange}\n          step={step}\n        />\n      );\n    }\n\n    return (\n      <div\n        {...props}\n        ref={this._setNode}\n        className={cn('md-slider-container', className, {\n          'md-pointer--hover': !disabled,\n        })}\n        onMouseDown={this._handleDragStart}\n        onTouchStart={this._handleDragStart}\n      >\n        <SliderLabel htmlFor={id}>{label}</SliderLabel>\n        <input\n          id={id}\n          type=\"range\"\n          className=\"md-slider-input\"\n          readOnly\n          min={min}\n          max={max}\n          value={value}\n          disabled={disabled}\n        />\n        {leftIcon}\n        <Track\n          ref={this._setTrack}\n          style={Object.assign({}, trackStyle, { width: trackWidth })}\n          className={cn(trackClassName, {\n            'md-slider-track--ind-left': leftIcon,\n            'md-slider-track--ind-right': rightIcon,\n          })}\n          thumbStyle={thumbStyle}\n          thumbClassName={thumbClassName}\n          discreteValueStyle={discreteValueStyle}\n          discreteValueClassName={discreteValueClassName}\n          active={active}\n          dragging={dragging}\n          disabled={disabled}\n          thumbLeft={thumbLeft}\n          trackFillWidth={trackFillWidth}\n          on={!disabled && distance > 0}\n          off={distance === 0}\n          maskInked={maskInked}\n          onThumbKeyUp={this._handleKeyUp}\n          onThumbKeyDown={this._handleKeyDown}\n          onThumbFocus={this._handleFocus}\n          discrete={discrete}\n          tickWidth={tickWidth}\n          discreteTicks={discreteTicks}\n          valuePrecision={valuePrecision}\n          step={step}\n          scale={scale}\n          value={value}\n        />\n        {rightChildren}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport Button from '../Buttons/Button';\nimport isInvalidAnimate from './isInvalidAnimate';\n\nexport default class Snackbar extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    onDismiss: PropTypes.func.isRequired,\n    toast: PropTypes.shape({\n      text: PropTypes.node.isRequired,\n      action: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.shape({\n          label: PropTypes.node,\n          children: PropTypes.node,\n          onClick: PropTypes.func,\n        }),\n      ]),\n      onAppear: PropTypes.func,\n    }).isRequired,\n    multiline: PropTypes.bool,\n    autohide: PropTypes.bool,\n    autohideTimeout: PropTypes.number,\n    fab: PropTypes.object,\n    leaveTimeout: PropTypes.number.isRequired,\n  };\n\n  componentWillMount() {\n    const { fab, multiline, toast: { onAppear } } = this.props;\n    if (onAppear) {\n      onAppear();\n    }\n\n    if (!fab || isInvalidAnimate(fab)) {\n      return;\n    }\n\n    this._fab = fab.getComposedComponent().getComposedComponent();\n    this._fab._animateForSnackbar(multiline);\n  }\n\n  componentDidMount() {\n    this._handleAutohide();\n  }\n\n  componentWillUnmount() {\n    this._clearTimeout();\n\n    if (this._eventType === 'focus') {\n      window.removeEventListener('focus', this._handleWindowFocus);\n    } else if (this._eventType === 'blur') {\n      window.removeEventListener('blur', this._handleWindowBlur);\n    }\n  }\n\n  _handleClick = (e) => {\n    const { onDismiss, toast: { action }, leaveTimeout, multiline } = this.props;\n    if (typeof action.onClick === 'function') {\n      action.onClick(e);\n    }\n\n    if (this._fab) {\n      this._fab._animateForSnackbar(multiline, leaveTimeout);\n    }\n\n    onDismiss();\n  };\n\n  _clearTimeout = () => {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this._timeout = null;\n    }\n  };\n\n  _handleAutohide = () => {\n    const { autohide, autohideTimeout, onDismiss, multiline, leaveTimeout } = this.props;\n    if (!autohide) {\n      return;\n    }\n\n    window.addEventListener('blur', this._handleWindowBlur);\n    this._eventType = 'blur';\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n      this._eventType = null;\n\n      window.removeEventListener('blur', this._handleWindowBlur);\n\n      if (this._fab) {\n        this._fab._animateForSnackbar(multiline, leaveTimeout);\n      }\n\n      onDismiss();\n    }, autohideTimeout || this.state.toast);\n  };\n\n  _handleWindowBlur = () => {\n    this._clearTimeout();\n    window.removeEventListener('blur', this._handleWindowBlur);\n    window.addEventListener('focus', this._handleWindowFocus);\n    this._eventType = 'focus';\n  };\n\n  _handleWindowFocus = () => {\n    window.removeEventListener('focus', this._handleWindowFocus);\n    this._eventType = null;\n    this._handleAutohide();\n  };\n\n  render() {\n    const {\n      className,\n      toast,\n      multiline,\n      /* eslint-disable no-unused-vars */\n      id: propId,\n      fab,\n      autohide,\n      autohideTimeout,\n      leaveTimeout,\n      onDismiss,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    let { text, action } = toast;\n    let { id } = this.props;\n\n    let Component = 'p';\n    if (action) {\n      Component = 'section';\n      text = <p className=\"md-snackbar--toast md-snackbar--action\">{text}</p>;\n\n      let btnProps = {\n        flat: true,\n        onClick: this._handleClick,\n        children: action,\n        secondary: true,\n        className: 'md-btn--snackbar',\n      };\n\n      if (typeof action !== 'string') {\n        btnProps = Object.assign(btnProps, action, {\n          className: cn(btnProps.className, action.className),\n          onClick: this._handleClick,\n        });\n      }\n\n\n      action = <Button {...btnProps} />;\n    }\n\n    if (!id) {\n      id = `snackbar-alert${action ? '-dialog' : ''}`;\n    }\n\n    const role = `alert${action ? 'dialog' : ''}`;\n    return (\n      <Component\n        {...props}\n        id={id}\n        role={role}\n        className={cn('md-snackbar', {\n          'md-snackbar--multiline': multiline,\n          'md-snackbar--toast': !action,\n        }, className)}\n      >\n        {text}\n        {action}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport isInvalidAnimate from './isInvalidAnimate';\nimport Portal from '../Helpers/Portal';\nimport Snackbar from './Snackbar';\n\nconst CHAINED_TOAST_DELAY = 50;\n\n/**\n * The `Snackbar` component is used for displaying a concise and small message to the user about\n * an operation performed.\n *\n * > The main component for the `Snackbar` is actually named the `SnackbarContainer`, so you need\n * to make sure the import is `react-md/lib/Snackbars` or `react-md/lib/Snackbars/SnackbarContainer`.\n * The first import is preferable.\n */\nexport default class SnackbarContainer extends PureComponent {\n  static propTypes = {\n    /**\n     * An id for the Snackbar once a toast has been added and is visible. This is a recommended\n     * prop for accessibility concerns. If it is omitted, the id will become `'snackbar-alert'`\n     * when there is no action on the toast, or `'snackbar-alert-dialog'` when there is an action\n     * on the toast.\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the snackbar once it appears.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the snackbar once it appears.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An immutable controlled queue of toasts that should appear in the snackbar.\n     * The snackbar will always display the first toast in this list. When the user has\n     * either clicked the action of the toast, or the `autohideTimeout` has been reached,\n     * the `onDismiss` function will be called. The `onDismiss` function should remove the\n     * first toast and return a new list of remaining toasts.\n     *\n     * ```js\n     * let toasts = [];\n     * const onDismiss = () => {\n     *   const [, ...remainingToasts] = toasts;\n     *   toasts = remainingToasts;\n     * };\n     * ```\n     */\n    toasts: PropTypes.arrayOf(PropTypes.shape({\n      /**\n       * The text to display in the toast.\n       */\n      text: PropTypes.node.isRequired,\n\n      /**\n       * An optional action to take. If this value is a string, the `label` for the\n       * button will be this value, Otherwise, all the keys in the action object will\n       * be applied to the `Button`.\n       */\n      action: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.shape({\n          onClick: PropTypes.func,\n          children: PropTypes.node,\n          // Deprecated\n          label: PropTypes.node,\n        }),\n      ]),\n    })).isRequired,\n\n    /**\n     * A function to call that will dismiss a toast. This will automatically be bound to\n     * any toast that has an `action` and it will also be called when the `autohideTimeout`\n     * has been reached.\n     */\n    onDismiss: PropTypes.func.isRequired,\n\n    /**\n     * Boolean if the snackbar's toasts should automatically be dismissed after the\n     * `autohideTimeout` has been reached.\n     */\n    autohide: PropTypes.bool,\n\n    /**\n     * The amount of time before the snackbar should be dequeued and the next toast\n     * should be displayed.\n     */\n    autohideTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The transition name to use for the snackbar appearing and disappearing.\n     */\n    transitionName: PropTypes.string.isRequired,\n\n    /**\n     * The transition time for the snackbar to enter. This should match the `$md-snackbar-transition-time`\n     * sass variable.\n     */\n    transitionEnterTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The transition time for the snackbar to leave. This should match the `$md-snackbar-transition-time`\n     * sass variable.\n     */\n    transitionLeaveTimeout: PropTypes.number.isRequired,\n\n    /**\n     * When the app contains a floating action button that is fixed to the bottom of the screen,\n     * you should set this to be a ref of the floating action button. When a snackbar appears,\n     * the FAB will be moved to not overlay the snackbar.\n     */\n    fab: (props, propName, componentName, location, propFullName) => {\n      const propValue = props[propName];\n      const propType = typeof propValue;\n\n      if (!propValue) {\n        return null;\n      }\n\n      if (propType !== 'object' || typeof propValue.render !== 'function' || isInvalidAnimate(propValue)) {\n        const componentNameSafe = componentName || '<<anonymous>>';\n        const propFullNameSafe = propFullName || propName;\n        return new Error(\n          `Invalid ${location} \\`${propFullNameSafe}\\` supplied to \\`${componentNameSafe}\\`, expected a ` +\n          'ref to a floating `Button` component. This should not be a DOMElement from `findDOMNode` but instead ' +\n          'the React ref object.'\n        );\n      }\n\n      return null;\n    },\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the snackbar.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM node to render the Snackbar in. If this is omitted, it will render as the first\n     * child in the `body`.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the snackbar should render as the last child in the `renderNode` or `body` instead of\n     * as the first.\n     */\n    lastChild: PropTypes.bool,\n    dismiss: deprecated(PropTypes.func, 'Use `onDismiss` instead'),\n  };\n\n  static defaultProps = {\n    autohide: true,\n    toasts: [],\n    autohideTimeout: 3000,\n    transitionName: 'md-snackbar',\n    transitionEnterTimeout: 300,\n    transitionLeaveTimeout: 300,\n  };\n\n  static contextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const visible = !!props.toasts.length;\n    this.state = {\n      visible,\n      toast: null,\n    };\n  }\n\n  componentDidMount() {\n    const { toasts } = this.props;\n    if (toasts.length) {\n      this._initAndToast(toasts[0]);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const [toast] = nextProps.toasts;\n    const [prevToast] = this.props.toasts;\n    if (toast === prevToast || toast === this.state.toast) {\n      return;\n    }\n\n    if (!toast) {\n      this._createLeaveTimer();\n    } else if (!this.state.visible) {\n      this._initAndToast(toast);\n    } else {\n      this._createSwapTimer(toast);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._initTimeout) {\n      clearTimeout(this._initTimeout);\n    }\n\n    if (this._leaveTimeout) {\n      clearTimeout(this._leaveTimeout);\n    }\n\n    if (this._swapTimeout) {\n      clearTimeout(this._swapTimeout);\n    }\n\n    if (this._dismissTimeout) {\n      clearTimeout(this._dismissTimeout);\n    }\n  }\n\n  _setContainer = (container) => {\n    this._container = findDOMNode(container);\n  };\n\n  /**\n   * This function takes in a new toast object and checks if the message will span\n   * multiple lines of text by creating the new snackbar before the `Snackbar` component\n   * gets made, checking the height of the message, and then removing the temporary\n   * snackbar.\n   */\n  _isMultiline = (toast) => {\n    const container = this._container;\n    if (container === null) {\n      return false;\n    }\n\n    const message = document.createElement('p');\n    message.classList.add('md-snackbar--toast');\n    message.innerHTML = toast.text;\n\n    let snackbar;\n    if (toast.action) {\n      message.classList.add('md-snackbar--action');\n\n      snackbar = document.createElement('section');\n      snackbar.className = 'md-snackbar';\n      snackbar.appendChild(message);\n\n      const action = document.createElement('button');\n      action.innerHTML = typeof toast.action === 'string' ? toast.action : toast.action.label;\n      action.className = 'md-btn md-btn--flat md-btn--text md-btn--snackbar';\n      snackbar.appendChild(action);\n    } else {\n      snackbar = message;\n    }\n\n    // Only style we really want from the .md-snackbar\n    snackbar.style.maxWidth = '568px';\n\n    container.appendChild(snackbar);\n    const multiline = message.offsetHeight > 20;\n    container.removeChild(snackbar);\n\n    return multiline;\n  };\n\n  _initAndToast = (toast) => {\n    this._initTimeout = setTimeout(() => {\n      this._initTimeout = null;\n\n      this.setState({ toast, multiline: this._isMultiline(toast) });\n    }, TICK);\n\n    this.setState({ visible: true });\n  };\n\n  _createLeaveTimer = () => {\n    const { transitionLeaveTimeout: time } = this.props;\n    this._leaveTimeout = setTimeout(() => {\n      this._leaveTimeout = null;\n\n      this.setState({ visible: false });\n    }, time + TICK);\n\n    this.setState({ toast: null });\n  };\n\n  _createSwapTimer = (toast) => {\n    this._swapTimeout = setTimeout(() => {\n      this._swapTimeout = null;\n\n      this.setState({ toast, multiline: this._isMultiline(toast) });\n    }, this.props.transitionLeaveTimeout + CHAINED_TOAST_DELAY);\n\n    this.setState({ toast: null });\n  };\n\n  render() {\n    const { visible, toast, multiline } = this.state;\n    const {\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      dismiss,\n      onDismiss,\n      lastChild,\n      portal,\n      renderNode: propRenderNode, // eslint-disable-line no-unused-vars\n      toasts, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n    const renderNode = getField(this.props, this.context, 'renderNode');\n\n    let snackbar;\n    if (toast) {\n      snackbar = (\n        <Snackbar\n          {...props}\n          key=\"snackbar\"\n          leaveTimeout={transitionLeaveTimeout}\n          toast={toast}\n          multiline={multiline}\n          onDismiss={onDismiss || dismiss}\n        />\n      );\n    }\n\n    const container = (\n      <CSSTransitionGroup\n        ref={this._setContainer}\n        key=\"container\"\n        className=\"md-snackbar-container\"\n        transitionName={transitionName}\n        transitionEnterTimeout={transitionEnterTimeout}\n        transitionLeaveTimeout={transitionLeaveTimeout}\n      >\n        {snackbar}\n      </CSSTransitionGroup>\n    );\n\n    if (!portal) {\n      return visible ? container : null;\n    }\n\n    return (\n      <Portal visible={visible} renderNode={renderNode} lastChild={lastChild}>\n        {container}\n      </Portal>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The `SVGIcon` component is used for rendering inline SVG icons or sprite-mapped SVGs\n * as an icon.\n */\nexport default class SVGIcon extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if the primary theme color should be applied.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the secondary theme color should be applied.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the icon is considered disabled and should inherit the\n     * disabled color.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the icon is considered errored and should inherit the error color.\n     */\n    error: PropTypes.bool,\n\n    /**\n     * Boolean if the color of the icon should be inherited by parent elements.\n     */\n    inherit: PropTypes.bool,\n\n    /**\n     * The role to apply to the SVG. When using icons, it is generally recommended to leave it as the default\n     * `img` so that it is insured as a graphic.\n     */\n    role: PropTypes.oneOf(['img', 'presentation']),\n\n    /**\n     * This prop is the title attribute to provide to the `<svg>` element itself. This should be used when you\n     * are using a spritesheet that has defined `<title>` with each SVG symbol.\n     */\n    titleAttr: PropTypes.string,\n\n    /**\n     * An optional list of ids to use to label the SVG icon with. This is helpful to add when you use the `title`\n     * and `desc` props as this is used to create ids for those two props. This is super beneficial to screen readers.\n     *\n     * When this is defined, it is a space-delimited string of ids to provide to the title and desc (in order). If\n     * this is omitted and the `use` prop is defined, it will take everything after the `#` sign and append `-title` and\n     * `-desc` as a fallback. Check out the examples for more information about this.\n     *\n     * @see {@link #title}\n     * @see {@link #desc}\n     */\n    'aria-labelledby': PropTypes.string,\n\n    /**\n     * An optional title to give to your SVG icon. This is generally recommended for accessibility when not using\n     * the `use` prop, or your spritemap does not contain `<title>` and `<desc>.\n     *\n     * @see {@link #aria-labelledby}\n     */\n    title: PropTypes.string,\n\n    /**\n     * An optional description to give to your SVG icon. This is generally recommended for accessibility when not using\n     * the `use` prop, or your spritemap does not contain `<title>` and `<desc>.\n     *\n     * @see {@link #aria-labelledby}\n     */\n    desc: PropTypes.string,\n\n    /**\n     * This should be a link to a part of an SVG spritemap. So normally one of the following:\n     * - `'#some-custom-svg'`\n     * - `'/images/spritemap.svg#some-custom-svg'`\n     *\n     * This prop **should not** be used with the `children` prop as only one will be rendered.\n     *\n     * > NOTE: IE **does not support** external SVGs. Please see the demo for more details.\n     */\n    use: PropTypes.string,\n\n    /**\n     * Any `<svg>` children to render to create your icon. This can not be used with the `use` prop.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n      PropTypes.node,\n    ]),\n\n    /**\n     * Boolean if the SVG should gain the `focusable` attribute. This is disabled by default since IE11\n     * and Edge actually default this to true and keyboard's will tab focus all SVGs.\n     */\n    focusable: PropTypes.string,\n\n    /**\n     * An optional size to apply to the SVG. This can be used to set both the\n     * `height` and `width` simultaneously. This will be provided as inline styles\n     * since the `height` and `width` are normally controlled by CSS, and CSS has\n     * higher precedence than the `height`/`width` attributes.\n     */\n    size: PropTypes.number,\n\n    /**\n     * The `height` prop should not be used since the `height` and `width` are controlled by CSS and the CSS\n     * has a higher precedence than inline attributes. If you want to set the `height`, it should be done via\n     * CSS or the `size` prop.\n     *\n     * @see {@link #size}\n     */\n    height: deprecated(PropTypes.number, 'Use the `size` prop instead.'),\n\n    /**\n     * The `width` prop should not be used since the `height` and `width` are controlled by CSS and the CSS\n     * has a higher precedence than inline attributes. If you want to set the `height`, it should be done via\n     * CSS or the `size` prop.\n     *\n     * @see {@link #size}\n     */\n    width: deprecated(PropTypes.number, 'Use the `size` prop instead.'),\n\n    /**\n     * The viewBox attribute allows you to specify that a given set of graphics stretch to\n     * fit a particular container element.\n     *\n     * The value of the viewBox attribute is a list of four numbers min-x, min-y, width and\n     * height, separated by white space and/or a comma, which specify a rectangle in user\n     * space which should be mapped to the bounds of the viewport established by the given\n     * element, taking into account attribute preserveAspectRatio.\n     *\n     * Negative values for width or height are not permitted and a value of zero disables\n     * rendering of the element.An optional viewbox for the SVG.\n     *\n     * For example, if the SVG element is 250 (width) by 200 (height) and you provide\n     * `viewBox=\"0 0 25 20\"`, the coordinates inside the SVG will go from the top left corner\n     * (0, 0) to the bottom right (25, 20) and each unit will be worth `10px`.\n     */\n    viewBox: PropTypes.string,\n\n    /**\n     * An optional xmlns string to provide. The `use` prop will not work without this prop\n     * defined.\n     */\n    xmlns: PropTypes.string,\n  };\n\n  static defaultProps = {\n    role: 'img',\n    focusable: 'false',\n    xmlns: 'http://www.w3.org/2000/svg',\n    viewBox: '0 0 24 24',\n  };\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      styles: this._mergeStyles(props),\n      ...this._getIds(props),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { style, size, use, title, desc, 'aria-labelledby': labels } = this.props;\n    let nextState;\n    if (style !== nextProps.style || size !== nextProps.size) {\n      nextState = { styles: this._mergeStyles(nextProps) };\n    }\n\n\n    if (title !== nextProps.title || desc !== nextProps.desc ||\n      ((nextProps.title || nextProps.desc) && (use !== nextProps.use || labels !== nextProps['aria-labelledby']))\n    ) {\n      nextState = { ...nextState, ...this._getIds(nextProps) };\n    }\n\n    if (nextState) {\n      this.setState(nextState);\n    }\n  }\n\n  _getIds = ({ use, 'aria-labelledby': labels, title, desc }) => {\n    let titleId = null;\n    let descId = null;\n    let labelledBy = null;\n    if (title || desc) {\n      if (use) {\n        const baseId = use.replace(/.*#/, '');\n        titleId = `${baseId}-title`;\n        descId = `${baseId}-desc`;\n\n        if (title) {\n          labelledBy = `${baseId}-title`;\n        }\n\n        if (desc) {\n          labelledBy = `${labelledBy ? `${labelledBy} ` : ''}${descId}`;\n        }\n      } else if (labels) {\n        [titleId, descId] = labels.split(' ');\n      }\n    }\n\n    return { titleId, descId, labelledBy };\n  };\n\n  _mergeStyles = ({ style, size }) => {\n    if (style && size) {\n      return { height: size, width: size, ...style };\n    } else if (style) {\n      return style;\n    } else if (size) {\n      return { height: size, width: size };\n    }\n\n    return undefined;\n  };\n\n  render() {\n    const { styles, titleId, descId, labelledBy } = this.state;\n    const {\n      className,\n      disabled,\n      use,\n      primary,\n      secondary,\n      error,\n      inherit,\n      titleAttr,\n      'aria-labelledby': ariaLabelledBy,\n      /* eslint-disable no-unused-vars */\n      size,\n      title: propTitle,\n      desc: propDesc,\n      style: propStyle,\n      children: propChildren,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { children, title, desc } = this.props;\n    if (!children && use) {\n      children = <use xlinkHref={use} />;\n    }\n\n    if (title) {\n      title = <title id={titleId}>{title}</title>;\n    }\n\n    if (desc) {\n      desc = <desc id={descId}>{desc}</desc>;\n    }\n\n    return (\n      <svg\n        {...props}\n        title={titleAttr}\n        aria-labelledby={ariaLabelledBy || labelledBy}\n        style={styles}\n        className={cn('md-icon', themeColors({\n          disabled,\n          error,\n          inherit,\n          primary,\n          secondary,\n        }, className))}\n      >\n        {title}\n        {desc}\n        {children}\n      </svg>\n    );\n  }\n}\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};","exports.f = Object.getOwnPropertySymbols;","exports.f = {}.propertyIsEnumerable;","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = require('./_has')\n  , toObject    = require('./_to-object')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export')\n  , core    = require('./_core')\n  , fails   = require('./_fails');\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject        = require('./_to-object')\n  , $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function(){\n  return function getPrototypeOf(it){\n    return $getPrototypeOf(toObject(it));\n  };\n});","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","module.exports = require('./_hide');","var dP       = require('./_object-dp')\n  , anObject = require('./_an-object')\n  , getKeys  = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};","module.exports = require('./_global').document && document.documentElement;","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = require('./_an-object')\n  , dPs         = require('./_object-dps')\n  , enumBugKeys = require('./_enum-bug-keys')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;","var def = require('./_object-dp').f\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};","'use strict';\nvar create         = require('./_object-create')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');","require('./es6.array.iterator');\nvar global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , TO_STRING_TAG = require('./_wks')('toStringTag');\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}","exports.f = require('./_wks');","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };","var META     = require('./_uid')('meta')\n  , isObject = require('./_is-object')\n  , has      = require('./_has')\n  , setDesc  = require('./_object-dp').f\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !require('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};","var global         = require('./_global')\n  , core           = require('./_core')\n  , LIBRARY        = require('./_library')\n  , wksExt         = require('./_wks-ext')\n  , defineProperty = require('./_object-dp').f;\nmodule.exports = function(name){\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});\n};","var getKeys   = require('./_object-keys')\n  , toIObject = require('./_to-iobject');\nmodule.exports = function(object, el){\n  var O      = toIObject(object)\n    , keys   = getKeys(O)\n    , length = keys.length\n    , index  = 0\n    , key;\n  while(length > index)if(O[key = keys[index++]] === el)return key;\n};","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys')\n  , gOPS    = require('./_object-gops')\n  , pIE     = require('./_object-pie');\nmodule.exports = function(it){\n  var result     = getKeys(it)\n    , getSymbols = gOPS.f;\n  if(getSymbols){\n    var symbols = getSymbols(it)\n      , isEnum  = pIE.f\n      , i       = 0\n      , key;\n    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);\n  } return result;\n};","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg){\n  return cof(arg) == 'Array';\n};","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys      = require('./_object-keys-internal')\n  , hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){\n  return $keys(O, hiddenKeys);\n};","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject')\n  , gOPN      = require('./_object-gopn').f\n  , toString  = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function(it){\n  try {\n    return gOPN(it);\n  } catch(e){\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it){\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","var pIE            = require('./_object-pie')\n  , createDesc     = require('./_property-desc')\n  , toIObject      = require('./_to-iobject')\n  , toPrimitive    = require('./_to-primitive')\n  , has            = require('./_has')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , gOPD           = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P){\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if(IE8_DOM_DEFINE)try {\n    return gOPD(O, P);\n  } catch(e){ /* empty */ }\n  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);\n};","'use strict';\n// ECMAScript 6 symbols shim\nvar global         = require('./_global')\n  , has            = require('./_has')\n  , DESCRIPTORS    = require('./_descriptors')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , META           = require('./_meta').KEY\n  , $fails         = require('./_fails')\n  , shared         = require('./_shared')\n  , setToStringTag = require('./_set-to-string-tag')\n  , uid            = require('./_uid')\n  , wks            = require('./_wks')\n  , wksExt         = require('./_wks-ext')\n  , wksDefine      = require('./_wks-define')\n  , keyOf          = require('./_keyof')\n  , enumKeys       = require('./_enum-keys')\n  , isArray        = require('./_is-array')\n  , anObject       = require('./_an-object')\n  , toIObject      = require('./_to-iobject')\n  , toPrimitive    = require('./_to-primitive')\n  , createDesc     = require('./_property-desc')\n  , _create        = require('./_object-create')\n  , gOPNExt        = require('./_object-gopn-ext')\n  , $GOPD          = require('./_object-gopd')\n  , $DP            = require('./_object-dp')\n  , $keys          = require('./_object-keys')\n  , gOPD           = $GOPD.f\n  , dP             = $DP.f\n  , gOPN           = gOPNExt.f\n  , $Symbol        = global.Symbol\n  , $JSON          = global.JSON\n  , _stringify     = $JSON && $JSON.stringify\n  , PROTOTYPE      = 'prototype'\n  , HIDDEN         = wks('_hidden')\n  , TO_PRIMITIVE   = wks('toPrimitive')\n  , isEnum         = {}.propertyIsEnumerable\n  , SymbolRegistry = shared('symbol-registry')\n  , AllSymbols     = shared('symbols')\n  , OPSymbols      = shared('op-symbols')\n  , ObjectProto    = Object[PROTOTYPE]\n  , USE_NATIVE     = typeof $Symbol == 'function'\n  , QObject        = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function(){\n  return _create(dP({}, 'a', {\n    get: function(){ return dP(this, 'a', {value: 7}).a; }\n  })).a != 7;\n}) ? function(it, key, D){\n  var protoDesc = gOPD(ObjectProto, key);\n  if(protoDesc)delete ObjectProto[key];\n  dP(it, key, D);\n  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function(tag){\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){\n  return typeof it == 'symbol';\n} : function(it){\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D){\n  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if(has(AllSymbols, key)){\n    if(!D.enumerable){\n      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;\n      D = _create(D, {enumerable: createDesc(0, false)});\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P){\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P))\n    , i    = 0\n    , l = keys.length\n    , key;\n  while(l > i)$defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P){\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key){\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){\n  it  = toIObject(it);\n  key = toPrimitive(key, true);\n  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;\n  var D = gOPD(it, key);\n  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it){\n  var names  = gOPN(toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it){\n  var IS_OP  = it === ObjectProto\n    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif(!USE_NATIVE){\n  $Symbol = function Symbol(){\n    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function(value){\n      if(this === ObjectProto)$set.call(OPSymbols, value);\n      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString(){\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f   = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f  = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if(DESCRIPTORS && !require('./_library')){\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function(name){\n    return wrap(wks(name));\n  }\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});\n\nfor(var symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);\n\nfor(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function(key){\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(key){\n    if(isSymbol(key))return keyOf(SymbolRegistry, key);\n    throw TypeError(key + ' is not a symbol!');\n  },\n  useSetter: function(){ setter = true; },\n  useSimple: function(){ setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it){\n    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined\n    var args = [it]\n      , i    = 1\n      , replacer, $replacer;\n    while(arguments.length > i)args.push(arguments[i++]);\n    replacer = args[1];\n    if(typeof replacer == 'function')$replacer = replacer;\n    if($replacer || !isArray(replacer))replacer = function(key, value){\n      if($replacer)value = $replacer.call(this, key, value);\n      if(!isSymbol(value))return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);","require('./_wks-define')('asyncIterator');","require('./_wks-define')('observable');","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _iterator = require(\"../core-js/symbol/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = require(\"../core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};","\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object')\n  , anObject = require('./_an-object');\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', {setPrototypeOf: require('./_set-proto').set});","require('../../modules/es6.object.set-prototype-of');\nmodule.exports = require('../../modules/_core').Object.setPrototypeOf;","module.exports = { \"default\": require(\"core-js/library/fn/object/set-prototype-of\"), __esModule: true };","var $export = require('./_export')\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', {create: require('./_object-create')});","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D){\n  return $Object.create(P, D);\n};","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = require(\"../core-js/object/create\");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inDOM = require('../util/inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar on = function on() {};\nif (_inDOM2.default) {\n  on = function () {\n\n    if (document.addEventListener) return function (node, eventName, handler, capture) {\n      return node.addEventListener(eventName, handler, capture || false);\n    };else if (document.attachEvent) return function (node, eventName, handler) {\n      return node.attachEvent('on' + eventName, function (e) {\n        e = e || window.event;\n        e.target = e.target || e.srcElement;\n        e.currentTarget = node;\n        handler.call(node, e);\n      });\n    };\n  }();\n}\n\nexports.default = on;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inDOM = require('../util/inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar off = function off() {};\nif (_inDOM2.default) {\n  off = function () {\n    if (document.addEventListener) return function (node, eventName, handler, capture) {\n      return node.removeEventListener(eventName, handler, capture || false);\n    };else if (document.attachEvent) return function (node, eventName, handler) {\n      return node.detachEvent('on' + eventName, handler);\n    };\n  }();\n}\n\nexports.default = off;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable flowtype/require-valid-file-annotation */\n\nvar checkIndexBounds = function checkIndexBounds(props) {\n  var index = props.index,\n      children = props.children;\n\n\n  var childrenCount = _react.Children.count(children);\n\n  process.env.NODE_ENV !== \"production\" ? (0, _warning2.default)(index >= 0 && index <= childrenCount, 'react-swipeable-view: the new index: ' + index + ' is out of bounds: [0-' + childrenCount + '].') : void 0;\n};\n\nexports.default = checkIndexBounds;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//  weak\n\nexports.default = {\n  RESISTANCE_COEF: 0.6,\n\n  // This value is closed to what browsers are using internally to\n  // trigger a native scroll.\n  UNCERTAINTY_THRESHOLD: 3 // px\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = computeIndex;\n\nvar _react = require('react');\n\nvar _constant = require('./constant');\n\nvar _constant2 = _interopRequireDefault(_constant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//  weak\n\nfunction computeIndex(params) {\n  var children = params.children,\n      startIndex = params.startIndex,\n      startX = params.startX,\n      pageX = params.pageX,\n      viewLength = params.viewLength,\n      resistance = params.resistance;\n\n\n  var indexMax = _react.Children.count(children) - 1;\n  var index = startIndex + (startX - pageX) / viewLength;\n  var newStartX = void 0;\n\n  if (!resistance) {\n    // Reset the starting point\n    if (index < 0) {\n      index = 0;\n      newStartX = (index - startIndex) * viewLength + pageX;\n    } else if (index > indexMax) {\n      index = indexMax;\n      newStartX = (index - startIndex) * viewLength + pageX;\n    }\n  } else if (index < 0) {\n    index = Math.exp(index * _constant2.default.RESISTANCE_COEF) - 1;\n  } else if (index > indexMax) {\n    index = indexMax + 1 - Math.exp((indexMax - index) * _constant2.default.RESISTANCE_COEF);\n  }\n\n  return {\n    index: index,\n    startX: newStartX\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//  weak\n\nvar getDisplaySameSlide = function getDisplaySameSlide(props, nextProps) {\n  var displaySameSlide = false;\n\n  if (props.children.length && nextProps.children.length) {\n    var oldChildren = props.children[props.index];\n    var oldKey = oldChildren ? oldChildren.key : 'empty';\n\n    if (oldKey !== null) {\n      var newChildren = nextProps.children[nextProps.index];\n      var newKey = newChildren ? newChildren.key : 'empty';\n\n      if (oldKey === newKey) {\n        displaySameSlide = true;\n      }\n    }\n  }\n\n  return displaySameSlide;\n};\n\nexports.default = getDisplaySameSlide;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable flowtype/require-valid-file-annotation */\n\nfunction mod(n, m) {\n  var q = n % m;\n  return q < 0 ? q + m : q;\n}\n\nexports.default = mod;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _checkIndexBounds = require('./checkIndexBounds');\n\nObject.defineProperty(exports, 'checkIndexBounds', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_checkIndexBounds).default;\n  }\n});\n\nvar _computeIndex = require('./computeIndex');\n\nObject.defineProperty(exports, 'computeIndex', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_computeIndex).default;\n  }\n});\n\nvar _constant = require('./constant');\n\nObject.defineProperty(exports, 'constant', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_constant).default;\n  }\n});\n\nvar _getDisplaySameSlide = require('./getDisplaySameSlide');\n\nObject.defineProperty(exports, 'getDisplaySameSlide', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getDisplaySameSlide).default;\n  }\n});\n\nvar _mod = require('./mod');\n\nObject.defineProperty(exports, 'mod', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_mod).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nexports.getDomTreeShapes = getDomTreeShapes;\nexports.findNativeHandler = findNativeHandler;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _properties = require('dom-helpers/transition/properties');\n\nvar _properties2 = _interopRequireDefault(_properties);\n\nvar _on = require('dom-helpers/events/on');\n\nvar _on2 = _interopRequireDefault(_on);\n\nvar _off = require('dom-helpers/events/off');\n\nvar _off2 = _interopRequireDefault(_off);\n\nvar _reactSwipeableViewsCore = require('react-swipeable-views-core');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addEventListenerEnhanced(node, event, handler, options) {\n  (0, _on2.default)(node, event, handler, options);\n  return {\n    remove: function remove() {\n      (0, _off2.default)(node, event, handler, options);\n    }\n  };\n} //  weak\n\nvar styleInjected = false;\n\n// Support old version of iOS and IE 10.\n// To be deleted in 2019.\nfunction injectStyle() {\n  // Inject once for all the instances\n  if (!styleInjected) {\n    var style = document.createElement('style');\n    style.innerHTML = '\\n      .react-swipeable-view-container {\\n        display: -webkit-box;\\n        display: -ms-flexbox;\\n      }\\n      .react-swipeable-view-container > div {\\n        -ms-flex-negative: 0;\\n      }\\n    ';\n\n    if (document.body) {\n      document.body.appendChild(style);\n    }\n    styleInjected = true;\n  }\n}\n\nvar styles = {\n  container: {\n    direction: 'ltr',\n    display: 'flex'\n    // Cause an issue on Firefox. We can't enable it for now.\n    // willChange: 'transform',\n  },\n  slide: {\n    width: '100%',\n    WebkitFlexShrink: 0,\n    flexShrink: 0,\n    overflow: 'auto'\n  }\n};\n\nvar axisProperties = {\n  root: {\n    x: {\n      overflowX: 'hidden'\n    },\n    'x-reverse': {\n      overflowX: 'hidden'\n    },\n    y: {\n      overflowY: 'hidden'\n    },\n    'y-reverse': {\n      overflowY: 'hidden'\n    }\n  },\n  flexDirection: {\n    x: 'row',\n    'x-reverse': 'row-reverse',\n    y: 'column',\n    'y-reverse': 'column-reverse'\n  },\n  transform: {\n    x: function x(translate) {\n      return 'translate(' + -translate + '%, 0)';\n    },\n    'x-reverse': function xReverse(translate) {\n      return 'translate(' + translate + '%, 0)';\n    },\n    y: function y(translate) {\n      return 'translate(0, ' + -translate + '%)';\n    },\n    'y-reverse': function yReverse(translate) {\n      return 'translate(0, ' + translate + '%)';\n    }\n  },\n  length: {\n    x: 'width',\n    'x-reverse': 'width',\n    y: 'height',\n    'y-reverse': 'height'\n  },\n  rotationMatrix: {\n    x: {\n      x: [1, 0],\n      y: [0, 1]\n    },\n    'x-reverse': {\n      x: [-1, 0],\n      y: [0, 1]\n    },\n    y: {\n      x: [0, 1],\n      y: [1, 0]\n    },\n    'y-reverse': {\n      x: [0, -1],\n      y: [1, 0]\n    }\n  },\n  scrollPosition: {\n    x: 'scrollLeft',\n    'x-reverse': 'scrollLeft',\n    y: 'scrollTop',\n    'y-reverse': 'scrollTop'\n  },\n  scrollLength: {\n    x: 'scrollWidth',\n    'x-reverse': 'scrollWidth',\n    y: 'scrollHeight',\n    'y-reverse': 'scrollHeight'\n  },\n  clientLength: {\n    x: 'clientWidth',\n    'x-reverse': 'clientWidth',\n    y: 'clientHeight',\n    'y-reverse': 'clientHeight'\n  }\n};\n\nfunction createTransition(property, options) {\n  var duration = options.duration,\n      easeFunction = options.easeFunction,\n      delay = options.delay;\n\n\n  return property + ' ' + duration + ' ' + easeFunction + ' ' + delay;\n}\n\n// We are using a 2x2 rotation matrix.\nfunction applyRotationMatrix(touch, axis) {\n  var rotationMatrix = axisProperties.rotationMatrix[axis];\n\n  return {\n    pageX: rotationMatrix.x[0] * touch.pageX + rotationMatrix.x[1] * touch.pageY,\n    pageY: rotationMatrix.y[0] * touch.pageX + rotationMatrix.y[1] * touch.pageY\n  };\n}\n\nfunction adaptMouse(event) {\n  event.touches = [{ pageX: event.pageX, pageY: event.pageY }];\n  return event;\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    // We reach a Swipeable View, no need to look higher in the dom tree.\n    if (element.hasAttribute('data-swipeable')) {\n      break;\n    }\n\n    var style = window.getComputedStyle(element);\n\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push({\n        element: element,\n        scrollWidth: element.scrollWidth,\n        scrollHeight: element.scrollHeight,\n        clientWidth: element.clientWidth,\n        clientHeight: element.clientHeight,\n        scrollLeft: element.scrollLeft,\n        scrollTop: element.scrollTop\n      });\n    }\n\n    element = element.parentNode;\n  }\n\n  return domTreeShapes;\n}\n\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nvar nodeHowClaimedTheScroll = null;\n\nfunction findNativeHandler(params) {\n  var domTreeShapes = params.domTreeShapes,\n      pageX = params.pageX,\n      startX = params.startX,\n      axis = params.axis;\n\n\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = pageX >= startX;\n    if (axis === 'x' || axis === 'y') {\n      goingForward = !goingForward;\n    }\n\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      nodeHowClaimedTheScroll = shape.element;\n      return true;\n    }\n\n    return false;\n  });\n}\n\nvar SwipeableViews = function (_Component) {\n  (0, _inherits3.default)(SwipeableViews, _Component);\n\n  function SwipeableViews() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, SwipeableViews);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = SwipeableViews.__proto__ || (0, _getPrototypeOf2.default)(SwipeableViews)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.rootNode = null, _this.containerNode = null, _this.ignoreNextScrollEvents = false, _this.viewLength = 0, _this.startX = 0, _this.lastX = 0, _this.vx = 0, _this.startY = 0, _this.isSwiping = undefined, _this.started = false, _this.startIndex = 0, _this.transitionListener = null, _this.touchMoveListener = null, _this.activeSlide = null, _this.handleSwipeStart = function (event) {\n      var axis = _this.props.axis;\n\n      // Latency and rapid rerenders on some devices can leave\n      // a period where rootNode briefly equals null.\n\n      if (_this.rootNode === null) {\n        return;\n      }\n\n      var touch = applyRotationMatrix(event.touches[0], axis);\n\n      _this.viewLength = _this.rootNode.getBoundingClientRect()[axisProperties.length[axis]];\n      _this.startX = touch.pageX;\n      _this.lastX = touch.pageX;\n      _this.vx = 0;\n      _this.startY = touch.pageY;\n      _this.isSwiping = undefined;\n      _this.started = true;\n\n      var computedStyle = window.getComputedStyle(_this.containerNode);\n      var transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n\n      if (transform) {\n        var transformValues = transform.split('(')[1].split(')')[0].split(',');\n        var rootStyle = window.getComputedStyle(_this.rootNode);\n\n        var tranformNormalized = applyRotationMatrix({\n          pageX: parseInt(transformValues[4], 10),\n          pageY: parseInt(transformValues[5], 10)\n        }, axis);\n\n        _this.startIndex = -tranformNormalized.pageX / (_this.viewLength - parseInt(rootStyle.paddingLeft, 10) - parseInt(rootStyle.paddingRight, 10));\n      }\n    }, _this.handleSwipeMove = function (event) {\n      // The touch start event can be cancel.\n      // Makes sure we set a starting point.\n      if (!_this.started) {\n        _this.handleTouchStart(event);\n        return;\n      }\n\n      // Latency and rapid rerenders on some devices\n      // can leave a period where rootNode briefly equals null.\n      if (_this.rootNode === null) {\n        return;\n      }\n\n      // We are not supposed to hanlde this touch move.\n      if (nodeHowClaimedTheScroll !== null && nodeHowClaimedTheScroll !== _this.rootNode) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          axis = _this$props.axis,\n          children = _this$props.children,\n          ignoreNativeScroll = _this$props.ignoreNativeScroll,\n          onSwitching = _this$props.onSwitching,\n          resistance = _this$props.resistance;\n\n\n      var touch = applyRotationMatrix(event.touches[0], axis);\n\n      // We don't know yet.\n      if (_this.isSwiping === undefined) {\n        var dx = Math.abs(_this.startX - touch.pageX);\n        var dy = Math.abs(_this.startY - touch.pageY);\n\n        var isSwiping = dx > dy && dx > _reactSwipeableViewsCore.constant.UNCERTAINTY_THRESHOLD;\n\n        // We are likely to be swiping, let's prevent the scroll event.\n        if (dx > dy) {\n          event.preventDefault();\n        }\n\n        if (isSwiping === true || dy > _reactSwipeableViewsCore.constant.UNCERTAINTY_THRESHOLD) {\n          _this.isSwiping = isSwiping;\n          _this.startX = touch.pageX; // Shift the starting point.\n\n          return; // Let's wait the next touch event to move something.\n        }\n      }\n\n      if (_this.isSwiping !== true) {\n        return;\n      }\n\n      // We are swiping, let's prevent the scroll event.\n      event.preventDefault();\n\n      // Low Pass filter.\n      _this.vx = _this.vx * 0.5 + (touch.pageX - _this.lastX) * 0.5;\n      _this.lastX = touch.pageX;\n\n      var _computeIndex = (0, _reactSwipeableViewsCore.computeIndex)({\n        children: children,\n        resistance: resistance,\n        pageX: touch.pageX,\n        startIndex: _this.startIndex,\n        startX: _this.startX,\n        viewLength: _this.viewLength\n      }),\n          index = _computeIndex.index,\n          startX = _computeIndex.startX;\n\n      // Add support for native scroll elements.\n\n\n      if (nodeHowClaimedTheScroll === null && !ignoreNativeScroll) {\n        var domTreeShapes = getDomTreeShapes(event.target, _this.rootNode);\n        var hasFoundNativeHandler = findNativeHandler({\n          domTreeShapes: domTreeShapes,\n          startX: _this.startX,\n          pageX: touch.pageX,\n          axis: axis\n        });\n\n        // We abort the touch move handler.\n        if (hasFoundNativeHandler) {\n          return;\n        }\n      }\n\n      // We are moving toward the edges.\n      if (startX) {\n        _this.startX = startX;\n      } else if (nodeHowClaimedTheScroll === null) {\n        nodeHowClaimedTheScroll = _this.rootNode;\n      }\n\n      _this.setState({\n        displaySameSlide: false,\n        isDragging: true,\n        indexCurrent: index\n      }, function () {\n        if (onSwitching) {\n          onSwitching(index, 'move');\n        }\n      });\n    }, _this.handleSwipeEnd = function () {\n      nodeHowClaimedTheScroll = null;\n\n      // The touch start event can be cancel.\n      // Makes sure that a starting point is set.\n      if (!_this.started) {\n        return;\n      }\n\n      _this.started = false;\n\n      if (_this.isSwiping !== true) {\n        return;\n      }\n\n      var indexLatest = _this.state.indexLatest;\n      var indexCurrent = _this.state.indexCurrent;\n      var delta = indexLatest - indexCurrent;\n\n      var indexNew = void 0;\n\n      // Quick movement\n      if (Math.abs(_this.vx) > _this.props.threshold) {\n        if (_this.vx > 0) {\n          indexNew = Math.floor(indexCurrent);\n        } else {\n          indexNew = Math.ceil(indexCurrent);\n        }\n      } else if (Math.abs(delta) > _this.props.hysteresis) {\n        // Some hysteresis with indexLatest.\n        indexNew = delta > 0 ? Math.floor(indexCurrent) : Math.ceil(indexCurrent);\n      } else {\n        indexNew = indexLatest;\n      }\n\n      var indexMax = _react.Children.count(_this.props.children) - 1;\n\n      if (indexNew < 0) {\n        indexNew = 0;\n      } else if (indexNew > indexMax) {\n        indexNew = indexMax;\n      }\n\n      _this.setState({\n        indexCurrent: indexNew,\n        indexLatest: indexNew,\n        isDragging: false\n      }, function () {\n        if (_this.props.onSwitching) {\n          _this.props.onSwitching(indexNew, 'end');\n        }\n\n        if (_this.props.onChangeIndex && indexNew !== indexLatest) {\n          _this.props.onChangeIndex(indexNew, indexLatest);\n        }\n\n        // Manually calling handleTransitionEnd in that case as isn't otherwise.\n        if (indexCurrent === indexLatest) {\n          _this.handleTransitionEnd();\n        }\n      });\n    }, _this.handleTouchStart = function (event) {\n      if (_this.props.onTouchStart) {\n        _this.props.onTouchStart(event);\n      }\n      _this.handleSwipeStart(event);\n    }, _this.handleTouchEnd = function (event) {\n      if (_this.props.onTouchEnd) {\n        _this.props.onTouchEnd(event);\n      }\n      _this.handleSwipeEnd(event);\n    }, _this.handleMouseDown = function (event) {\n      if (_this.props.onMouseDown) {\n        _this.props.onMouseDown(event);\n      }\n      event.persist();\n      _this.handleSwipeStart(adaptMouse(event));\n    }, _this.handleMouseUp = function (event) {\n      if (_this.props.onMouseUp) {\n        _this.props.onMouseUp(event);\n      }\n      _this.handleSwipeEnd(adaptMouse(event));\n    }, _this.handleMouseLeave = function (event) {\n      if (_this.props.onMouseLeave) {\n        _this.props.onMouseLeave(event);\n      }\n\n      // Filter out events\n      if (_this.started) {\n        _this.handleSwipeEnd(adaptMouse(event));\n      }\n    }, _this.handleMouseMove = function (event) {\n      if (_this.props.onMouseMove) {\n        _this.props.onMouseMove(event);\n      }\n\n      // Filter out events\n      if (_this.started) {\n        _this.handleSwipeMove(adaptMouse(event));\n      }\n    }, _this.handleScroll = function (event) {\n      if (_this.props.onScroll) {\n        _this.props.onScroll(event);\n      }\n\n      // Ignore events bubbling up.\n      if (event.target !== _this.rootNode) {\n        return;\n      }\n\n      if (_this.ignoreNextScrollEvents) {\n        _this.ignoreNextScrollEvents = false;\n        return;\n      }\n\n      var indexLatest = _this.state.indexLatest;\n      var indexNew = Math.ceil(event.target.scrollLeft / event.target.clientWidth) + indexLatest;\n\n      _this.ignoreNextScrollEvents = true;\n      // Reset the scroll position.\n      event.target.scrollLeft = 0;\n\n      if (_this.props.onChangeIndex && indexNew !== indexLatest) {\n        _this.props.onChangeIndex(indexNew, indexLatest);\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n  // Added as an ads.\n\n\n  (0, _createClass3.default)(SwipeableViews, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      var _this2 = this;\n\n      return {\n        swipeableViews: {\n          slideUpdateHeight: function slideUpdateHeight() {\n            _this2.updateHeight();\n          }\n        }\n      };\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      if (process.env.NODE_ENV !== 'production') {\n        (0, _reactSwipeableViewsCore.checkIndexBounds)(this.props);\n      }\n\n      this.setState({\n        indexCurrent: this.props.index,\n        indexLatest: this.props.index,\n        isDragging: false,\n        isFirstRender: !this.props.disableLazyLoading,\n        heightLatest: 0\n      });\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      // Subscribe to transition end events.\n      this.transitionListener = addEventListenerEnhanced(this.containerNode, _properties2.default.end, function (event) {\n        if (event.target !== _this3.containerNode) {\n          return;\n        }\n\n        _this3.handleTransitionEnd();\n      });\n\n      // Block the thread to handle that event.\n      this.touchMoveListener = addEventListenerEnhanced(this.rootNode, 'touchmove', function (event) {\n        // Handling touch events is disabled.\n        if (_this3.props.disabled) {\n          return;\n        }\n        _this3.handleSwipeMove(event);\n      }, {\n        passive: false\n      });\n\n      /* eslint-disable react/no-did-mount-set-state */\n      this.setState({\n        isFirstRender: false\n      });\n      /* eslint-enable react/no-did-mount-set-state */\n\n      injectStyle();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var index = nextProps.index;\n\n\n      if (typeof index === 'number' && index !== this.props.index) {\n        if (process.env.NODE_ENV !== 'production') {\n          (0, _reactSwipeableViewsCore.checkIndexBounds)(nextProps);\n        }\n\n        this.setState({\n          // If true, we are going to change the children. We shoudn't animate it.\n          displaySameSlide: (0, _reactSwipeableViewsCore.getDisplaySameSlide)(this.props, nextProps),\n          indexCurrent: index,\n          indexLatest: index\n        });\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!this.props.animateTransitions && prevState.indexCurrent !== this.state.indexCurrent) {\n        this.handleTransitionEnd();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.transitionListener.remove();\n      this.touchMoveListener.remove();\n    }\n  }, {\n    key: 'handleTransitionEnd',\n    value: function handleTransitionEnd() {\n      if (!this.props.onTransitionEnd) {\n        return;\n      }\n\n      // Filters out when changing the children\n      if (this.state.displaySameSlide) {\n        return;\n      }\n\n      // The rest callback is triggered when swiping. It's just noise.\n      // We filter it out.\n      if (!this.state.isDragging) {\n        this.props.onTransitionEnd();\n      }\n    }\n  }, {\n    key: 'updateHeight',\n    value: function updateHeight() {\n      if (this.activeSlide !== null) {\n        var child = this.activeSlide.children[0];\n        if (child !== undefined && child.offsetHeight !== undefined && this.state.heightLatest !== child.offsetHeight) {\n          this.setState({\n            heightLatest: child.offsetHeight\n          });\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props = this.props,\n          animateHeight = _props.animateHeight,\n          animateTransitions = _props.animateTransitions,\n          axis = _props.axis,\n          children = _props.children,\n          containerStyleProp = _props.containerStyle,\n          disabled = _props.disabled,\n          disableLazyLoading = _props.disableLazyLoading,\n          enableMouseEvents = _props.enableMouseEvents,\n          hysteresis = _props.hysteresis,\n          ignoreNativeScroll = _props.ignoreNativeScroll,\n          index = _props.index,\n          onChangeIndex = _props.onChangeIndex,\n          onSwitching = _props.onSwitching,\n          onTransitionEnd = _props.onTransitionEnd,\n          resistance = _props.resistance,\n          slideStyleProp = _props.slideStyle,\n          slideClassName = _props.slideClassName,\n          springConfig = _props.springConfig,\n          style = _props.style,\n          threshold = _props.threshold,\n          other = (0, _objectWithoutProperties3.default)(_props, ['animateHeight', 'animateTransitions', 'axis', 'children', 'containerStyle', 'disabled', 'disableLazyLoading', 'enableMouseEvents', 'hysteresis', 'ignoreNativeScroll', 'index', 'onChangeIndex', 'onSwitching', 'onTransitionEnd', 'resistance', 'slideStyle', 'slideClassName', 'springConfig', 'style', 'threshold']);\n      var _state = this.state,\n          displaySameSlide = _state.displaySameSlide,\n          heightLatest = _state.heightLatest,\n          indexCurrent = _state.indexCurrent,\n          isDragging = _state.isDragging,\n          isFirstRender = _state.isFirstRender;\n\n\n      var touchEvents = !disabled ? {\n        onTouchStart: this.handleTouchStart,\n        onTouchEnd: this.handleTouchEnd\n      } : {};\n\n      var mouseEvents = !disabled && enableMouseEvents ? {\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseMove: this.handleMouseMove\n      } : {};\n\n      // There is no point to animate if we are already providing a height.\n      process.env.NODE_ENV !== \"production\" ? (0, _warning2.default)(!animateHeight || !containerStyleProp || !containerStyleProp.height, 'react-swipeable-view: You are setting animateHeight to true but you are\\nalso providing a custom height.\\nThe custom height has a higher priority than the animateHeight property.\\nSo animateHeight is most likely having no effect at all.') : void 0;\n\n      var slideStyle = (0, _assign2.default)({}, styles.slide, slideStyleProp);\n\n      var transition = void 0;\n      var WebkitTransition = void 0;\n\n      if (isDragging || !animateTransitions || displaySameSlide) {\n        transition = 'all 0s ease 0s';\n        WebkitTransition = 'all 0s ease 0s';\n      } else {\n        transition = createTransition('transform', springConfig);\n        WebkitTransition = createTransition('-webkit-transform', springConfig);\n\n        if (heightLatest !== 0) {\n          var additionalTranstion = ', ' + createTransition('height', springConfig);\n          transition += additionalTranstion;\n          WebkitTransition += additionalTranstion;\n        }\n      }\n\n      var transform = axisProperties.transform[axis](indexCurrent * 100);\n      var containerStyle = {\n        WebkitTransform: transform,\n        transform: transform,\n        height: null,\n        WebkitFlexDirection: axisProperties.flexDirection[axis],\n        flexDirection: axisProperties.flexDirection[axis],\n        WebkitTransition: WebkitTransition,\n        transition: transition\n      };\n\n      if (animateHeight) {\n        containerStyle.height = heightLatest;\n      }\n\n      return _react2.default.createElement(\n        'div',\n        (0, _extends3.default)({\n          ref: function ref(node) {\n            _this4.rootNode = node;\n          },\n          style: (0, _assign2.default)({}, axisProperties.root[axis], style)\n        }, other, touchEvents, mouseEvents, {\n          onScroll: this.handleScroll\n        }),\n        _react2.default.createElement(\n          'div',\n          {\n            ref: function ref(node) {\n              _this4.containerNode = node;\n            },\n            style: (0, _assign2.default)({}, containerStyle, styles.container, containerStyleProp),\n            className: 'react-swipeable-view-container'\n          },\n          _react.Children.map(children, function (child, indexChild) {\n            if (isFirstRender && indexChild > 0) {\n              return null;\n            }\n\n            process.env.NODE_ENV !== \"production\" ? (0, _warning2.default)((0, _react.isValidElement)(child), 'react-swipeable-view: one of the children provided is invalid: ' + child + '.\\nWe are expecting a valid React Element') : void 0;\n\n            var ref = void 0;\n            var hidden = true;\n\n            if (indexChild === _this4.state.indexLatest) {\n              hidden = false;\n\n              if (animateHeight) {\n                ref = function ref(node) {\n                  _this4.activeSlide = node;\n                  _this4.updateHeight();\n                };\n                slideStyle.overflowY = 'hidden';\n              }\n            }\n\n            return _react2.default.createElement(\n              'div',\n              {\n                ref: ref,\n                style: slideStyle,\n                className: slideClassName,\n                'aria-hidden': hidden,\n                'data-swipeable': 'true'\n              },\n              child\n            );\n          })\n        )\n      );\n    }\n  }]);\n  return SwipeableViews;\n}(_react.Component);\n\nSwipeableViews.displayName = 'ReactSwipableView';\nSwipeableViews.defaultProps = {\n  animateHeight: false,\n  animateTransitions: true,\n  axis: 'x',\n  disabled: false,\n  disableLazyLoading: false,\n  enableMouseEvents: false,\n  hysteresis: 0.6,\n  ignoreNativeScroll: false,\n  index: 0,\n  threshold: 5,\n  springConfig: {\n    duration: '0.35s',\n    easeFunction: 'cubic-bezier(0.15, 0.3, 0.25, 1)',\n    delay: '0s'\n  },\n  resistance: false\n};\nSwipeableViews.childContextTypes = {\n  swipeableViews: _propTypes2.default.shape({\n    slideUpdateHeight: _propTypes2.default.func\n  })\n};\nSwipeableViews.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * If `true`, the height of the container will be animated to match the current slide height.\n   * Animating another style property has a negative impact regarding performance.\n   */\n  animateHeight: _propTypes2.default.bool,\n  /**\n   * If `false`, changes to the index prop will not cause an animated transition.\n   */\n  animateTransitions: _propTypes2.default.bool,\n  /**\n   * The axis on which the slides will slide.\n   */\n  axis: _propTypes2.default.oneOf(['x', 'x-reverse', 'y', 'y-reverse']),\n  /**\n   * Use this property to provide your slides.\n   */\n  children: _propTypes2.default.node.isRequired,\n  /**\n   * This is the inlined style that will be applied\n   * to each slide container.\n   */\n  containerStyle: _propTypes2.default.object,\n  /**\n   * If `true`, it will disable touch events.\n   * This is useful when you want to prohibit the user from changing slides.\n   */\n  disabled: _propTypes2.default.bool,\n  /**\n   * This is the config used to disable lazyloding,\n   * if `true` will render all the views in first rendering.\n   */\n  disableLazyLoading: _propTypes2.default.bool,\n  /**\n   * If `true`, it will enable mouse events.\n   * This will allow the user to perform the relevant swipe actions with a mouse.\n   */\n  enableMouseEvents: _propTypes2.default.bool,\n  /**\n   * Configure hysteresis between slides. This value determines how far\n   * should user swipe to switch slide.\n   */\n  hysteresis: _propTypes2.default.number,\n  /**\n   * If `true`, it will ignore native scroll container.\n   * It can be used to filter out false positive that blocks the swipe.\n   */\n  ignoreNativeScroll: _propTypes2.default.bool,\n  /**\n   * This is the index of the slide to show.\n   * This is useful when you want to change the default slide shown.\n   * Or when you have tabs linked to each slide.\n   */\n  index: _propTypes2.default.number,\n  /**\n   * This is callback prop. It's call by the\n   * component when the shown slide change after a swipe made by the user.\n   * This is useful when you have tabs linked to each slide.\n   *\n   * @param {integer} index This is the current index of the slide.\n   * @param {integer} indexLatest This is the oldest index of the slide.\n   */\n  onChangeIndex: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onMouseDown: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onMouseMove: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onMouseUp: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onScroll: _propTypes2.default.func,\n  /**\n   * This is callback prop. It's called by the\n   * component when the slide switching.\n   * This is useful when you want to implement something corresponding\n   * to the current slide position.\n   *\n   * @param {integer} index This is the current index of the slide.\n   * @param {string} type Can be either `move` or `end`.\n   */\n  onSwitching: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onTouchEnd: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onTouchMove: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onTouchStart: _propTypes2.default.func,\n  /**\n   * The callback that fires when the animation comes to a rest.\n   * This is useful to defer CPU intensive task.\n   */\n  onTransitionEnd: _propTypes2.default.func,\n  /**\n   * If `true`, it will add bounds effect on the edges.\n   */\n  resistance: _propTypes2.default.bool,\n  /**\n   * This is the className that will be applied\n   * on the slide component.\n   */\n  slideClassName: _propTypes2.default.string,\n  /**\n   * This is the inlined style that will be applied\n   * on the slide component.\n   */\n  slideStyle: _propTypes2.default.object,\n  /**\n   * This is the config used to create CSS transitions.\n   * This is useful to change the dynamic of the transition.\n   */\n  springConfig: _propTypes2.default.shape({\n    duration: _propTypes2.default.string,\n    easeFunction: _propTypes2.default.string,\n    delay: _propTypes2.default.string\n  }),\n  /**\n   * This is the inlined style that will be applied\n   * on the root component.\n   */\n  style: _propTypes2.default.object,\n  /**\n   * This is the threshold used for detecting a quick swipe.\n   * If the computed speed is above this value, the index change.\n   */\n  threshold: _propTypes2.default.number\n} : {};\nexports.default = SwipeableViews;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _SwipeableViews = require('./SwipeableViews');\n\nvar _SwipeableViews2 = _interopRequireDefault(_SwipeableViews);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _SwipeableViews2.default; //  weak","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\n/**\n * This component is just a simple accessibility wrapper when using tabs. If you use the\n * `TabsContainer` component, you *should* not manually use this as the `TabsContainer`\n * generates this for you.\n */\nexport default class TabPanel extends PureComponent {\n  static propTypes = {\n    /**\n     * An id for the panel. This is used for a11y. This should equal the `controlsId`\n     * of whichever tab's children will be placed in here.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An id for the tab that owns this panel. This should equal the `id` of whichever\n     * tab's children will be placed in here.\n     */\n    controlledById: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The component to render the panel as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * Boolean if the panel is currently active. This is used to generated the `aria-hidden`\n     * attribute.\n     */\n    active: PropTypes.bool,\n\n    /**\n     * Any children to display.\n     */\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    component: 'div',\n  };\n\n  render() {\n    const {\n      component: Component,\n      id,\n      active,\n      className,\n      controlledById,\n      children,\n      ...props\n    } = this.props;\n\n    return (\n      <Component\n        {...props}\n        id={id}\n        className={cn('md-tab-panel', className)}\n        role=\"tabpanel\"\n        aria-hidden={!active}\n        aria-labelledby={controlledById}\n      >\n        {children}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport between from '../utils/PropTypes/between';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport Paper from '../Papers/Paper';\nimport TabPanel from './TabPanel';\n\n/**\n * The `TabsContainer` component is used when you want to have your `Tabs` connected with\n * the `SwipeableViews`. This component will traverse the children subtree and extract out\n * the `children` from each tab, and render them in a swipeable container. However,\n * since this is using the `React.Children` traversal, You will have to keep the `Tabs`\n * and `Tab` component as a direct descendent. You are unable to make a separate component\n * that encompasses the `Tab` component.\n *\n * ```js\n * // valid\n * <TabsContainer>\n *   <Tabs>\n *     <Tab />\n *   </Tabs>\n * </TabsContainer>\n *\n * // invalid\n * <TabsContainer>\n *   <Tabs>\n *     <MyCustomTab />\n *   </Tabs>\n * </TabsContainer>\n * ```\n *\n * This is because it seems you are unable to access the `MyCustomTab`'s child Tab props correctly.\n * You can however have the tab's children as a separate component if you wish.\n */\nexport default class TabsContainer extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to each `TabPanel` that gets generated. Each tab's children\n     * will get wrapped in a `TabPanel` component.\n     */\n    panelStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to each each `TabPanel` that gets generated. Each tab's\n     * children will get wrapped in a `TabPanel` component.\n     */\n    panelClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the header component when the tabs are fixed to the top of the page.\n     * The optional toolbar and tabs get wrapped in a `Paper` component.\n     */\n    headerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the header component when the tabs are fixed to the top of the page.\n     * The optional toolbar and tabs get wrapped in a `Paper` component.\n     */\n    headerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `SwipeableViews`.\n     *\n     * @see https://github.com/oliviertassinari/react-swipeable-views#user-content-swipeableviews-\n     */\n    swipeableViewsStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `SwipeableViews` container.\n     */\n    swipeableViewsClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to each slide component or a function that returns such style.\n     *\n     * Default style and height of slide component will be passed in the function.\n     * The function should return a style that will be merged with default style, or `null`.\n     *\n     * @see https://github.com/oliviertassinari/react-swipeable-views#user-content-swipeableviews-\n     */\n    slideStyle: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n    ]),\n\n    /**\n     * The property that should be used to set height of a slide component.\n     */\n    slideHeightProp: PropTypes.oneOf(['height', 'minHeight', 'maxHeight']),\n\n    /**\n     * This should be a `Tabs` component with children of `Tab`. This is used to figure out which\n     * tab's content is currently visible.\n     */\n    children: PropTypes.element.isRequired,\n\n    /**\n     * The component to render the container as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * The component to render each `TabPanel` as.\n     */\n    panelComponent: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional toolbar to render above the tabs.\n     */\n    toolbar: PropTypes.element,\n\n    /**\n     * An optional active tab index to use. If this is defined, the component will be controlled\n     * and require the `onTabChange` prop to be defined.\n     */\n    activeTabIndex: controlled(PropTypes.number, 'onTabChange', 'defaultTabIndex'),\n\n    /**\n     * An optional function to call when a new tab is selected by swiping or clicking a tab. When\n     * a new tab has been clicked, the callback will include the active tab index, the tab's `id`,\n     * the tab's `controlsId`, the tab's `children`, and the click event.\n     *\n     * If the tab was changed by swiping, it will only contain the new active tab index.\n     *\n     * ```js\n     * onTabChange(newActiveTabIndex, tabId, tabControlsId, tabChildren, event);\n     * ```\n     */\n    onTabChange: PropTypes.func,\n\n    /**\n     * The default tab index to use when the component is uncontrolled.\n     */\n    defaultTabIndex: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the `toolbar` and `Tabs` should be cloned with `colored: true`.\n     */\n    colored: PropTypes.bool,\n\n    /**\n     * Boolean if the `toolbar` should be applied with the theme color. This _really_ only\n     * applies when you create a `fixed` tabs container.\n     */\n    themed: PropTypes.bool,\n\n    /**\n     * Boolean if the tabs and the optional toolbar should be fixed to the top of the page.\n     */\n    fixed: PropTypes.bool,\n\n    /**\n     * A boolean if a `fixed` `TabsContainer` has tabs with a label and an icon.\n     */\n    labelAndIcon: PropTypes.bool,\n\n    /**\n     * An optional component to render the fixed tabs header as.\n     */\n    headerComponent: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]),\n\n    /**\n     * The zDepth for the fixed tabs header.\n     */\n    headerZDepth: between(PropTypes.number, 0, 5),\n\n    /**\n     * Any additional props to apply to the SwipeableViews component. View the\n     * [SwipeableViews API](https://github.com/oliviertassinari/react-swipeable-views#api)\n     * for valid attributes.\n     *\n     * You will not be able to set the `style`, `className`, `slideStyle`, `index`,\n     * or `onChangeIndex` props for the SwipeableViews.\n     *\n     * The styling and classnames can be updated with the other TabsContainer props.\n     */\n    swipeableViewsProps: PropTypes.object,\n  };\n\n  static defaultProps = {\n    component: 'section',\n    defaultTabIndex: 0,\n    headerZDepth: 1,\n    slideHeightProp: 'height',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    if (typeof props.activeTabIndex === 'undefined') {\n      this.state.activeTabIndex = props.defaultTabIndex;\n    }\n  }\n\n  componentDidMount() {\n    this._resizePanel();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevIndex = getField(prevProps, prevState, 'activeTabIndex');\n    const currIndex = getField(this.props, this.state, 'activeTabIndex');\n\n    if (prevIndex !== currIndex) {\n      this._resizePanel();\n    }\n  }\n\n  _handleTabChange = (index, tabId, tabControlsId, tabChildren, event) => {\n    if (this.props.onTabChange) {\n      this.props.onTabChange(index, tabId, tabControlsId, tabChildren, event);\n    }\n\n    if (typeof this.props.activeTabIndex === 'undefined') {\n      this.setState({ activeTabIndex: index });\n    }\n  };\n\n  _handleSwipeChange = (activeTabIndex) => {\n    this._handleTabChange(activeTabIndex);\n  };\n\n  _setContainer = (container) => {\n    this._container = findDOMNode(container);\n  };\n\n  _resizePanel = () => {\n    if (!this._container) {\n      return;\n    }\n\n    const activePanel = this._container.querySelector('.md-tab-panel[aria-hidden=false]');\n    if (activePanel && this.state.panelHeight !== activePanel.offsetHeight) {\n      this.setState({ panelHeight: activePanel.offsetHeight });\n    }\n  };\n\n  render() {\n    const { panelHeight } = this.state;\n    const {\n      component: Component,\n      style,\n      className,\n      panelStyle,\n      panelClassName,\n      panelComponent,\n      headerStyle,\n      headerClassName,\n      slideStyle,\n      slideHeightProp,\n      swipeableViewsStyle,\n      swipeableViewsClassName,\n      headerComponent,\n      headerZDepth,\n      children,\n      colored,\n      fixed,\n      labelAndIcon,\n      swipeableViewsProps,\n      themed,\n      /* eslint-disable no-unused-vars */\n      toolbar: propToolbar,\n      activeTabIndex: propActiveTabeIndex,\n      onTabChange,\n      defaultTabIndex,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    let { toolbar } = this.props;\n\n    const activeTabIndex = getField(this.props, this.state, 'activeTabIndex');\n\n    const tabsEl = Children.only(children);\n    const tabId = tabsEl.props.tabId;\n    const content = Children.map(tabsEl.props.children, (tab, index) => {\n      if (!tab) {\n        return tab;\n      }\n\n      return (\n        <TabPanel\n          id={tab.props.controlsId || `${tabId}-panel-${index}`}\n          active={activeTabIndex === index}\n          style={panelStyle}\n          className={panelClassName}\n          component={panelComponent}\n          controlledById={tab.props.id || `${tabId}-${index}`}\n        >\n          <ResizeObserver watchHeight onResize={this._resizePanel} />\n          {tab.props.children}\n        </TabPanel>\n      );\n    });\n\n    const childrenProps = Children.only(children).props;\n    const tabs = cloneElement(children, {\n      colored: typeof childrenProps.colored !== 'undefined' ? childrenProps.colored : colored,\n      onTabChange: this._handleTabChange,\n      activeTabIndex,\n    });\n\n    let prominentToolbar = false;\n    if (toolbar) {\n      const toolbarProps = Children.only(toolbar).props;\n      toolbar = cloneElement(toolbar, {\n        component: toolbarProps.component || 'div',\n        colored: typeof toolbarProps.colored !== 'undefined' ? childrenProps.colored : colored,\n      });\n\n      prominentToolbar = toolbarProps.prominent || toolbarProps.prominentTitle;\n    }\n\n    let header;\n    if (fixed) {\n      header = (\n        <Paper\n          style={headerStyle}\n          className={cn('md-tabs-fixed-container', {\n            'md-toolbar--themed': themed,\n          }, headerClassName)}\n          zDepth={headerZDepth}\n          component={headerComponent}\n        >\n          {toolbar}\n          {tabs}\n        </Paper>\n      );\n    }\n\n    const baseSlideStyle = { [slideHeightProp]: panelHeight };\n\n    return (\n      <Component\n        style={style}\n        className={cn('md-tabs-container', className)}\n        {...props}\n        ref={this._setContainer}\n      >\n        {header}\n        {header ? null : toolbar}\n        {header ? null : tabs}\n        <SwipeableViews\n          {...swipeableViewsProps}\n          style={swipeableViewsStyle}\n          className={cn('md-tabs-content', {\n            'md-tabs-content--offset': !toolbar && !labelAndIcon && fixed,\n            'md-tabs-content--offset-icon': !toolbar && fixed && labelAndIcon,\n            'md-tabs-content--offset-toolbar': toolbar && fixed && !prominentToolbar && !labelAndIcon,\n            'md-tabs-content--offset-toolbar-prominent': toolbar && fixed && prominentToolbar && !labelAndIcon,\n            'md-tabs-content--offset-toolbar-icon': fixed && toolbar && labelAndIcon && !prominentToolbar,\n            'md-tabs-content--offset-toolbar-prominent-icon': fixed && toolbar && labelAndIcon && prominentToolbar,\n          }, swipeableViewsClassName)}\n          slideStyle={{\n            ...baseSlideStyle,\n            ...(typeof slideStyle === 'function' ? slideStyle(baseSlideStyle, panelHeight) : slideStyle),\n          }}\n          index={activeTabIndex}\n          onChangeIndex={this._handleSwipeChange}\n        >\n          {content}\n        </SwipeableViews>\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Motion, spring } from 'react-motion';\n\nexport default class TabIndicator extends PureComponent {\n  static propTypes = {\n    offset: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    visible: PropTypes.bool,\n  };\n\n  render() {\n    const { visible } = this.props;\n    return (\n      <Motion\n        style={{\n          x: spring(this.props.offset),\n          width: spring(this.props.width),\n          height: spring(visible ? 2 : 0),\n        }}\n      >\n        {({ x, height, width }) => {\n          const transform = `translate3d(${x}px, 0, 0)`;\n          return (\n            <span\n              style={{\n                height,\n                width,\n                WebkitTransform: transform,\n                MozTransform: transform,\n                msTransform: transform,\n                transform,\n              }}\n              className=\"md-tab-indicator\"\n            />\n          );\n        }}\n      </Motion>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport Menu from '../Menus/Menu';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport mapToListParts from '../utils/mapToListParts';\n\n/**\n * The `MenuTab` component is used when there are too many desktop tabs\n * to be displayed without any overflow. If the `Tabs` component is used,\n * this will automatically be included when the `menuOverflow` prop is true.\n */\nexport default class MenuTab extends PureComponent {\n  static propTypes = {\n    /**\n     * An id to give the tab's menu.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * The current active tab index. This is used to determine which list item\n     * is active in the menu, and if the styles for an active tab should be applied\n     * to the menu.\n     */\n    activeTabIndex: PropTypes.number.isRequired,\n\n    /**\n     * An tab index that caused the overflow to happen.\n     */\n    overflowAtIndex: PropTypes.number.isRequired,\n\n    /**\n     * A list of tabs that should be rendered in the menu once opened. This can either\n     * be:\n     *\n     * - a `ListItem`, `Divider`, or `Subheader` component\n     * - a string to use as the `primaryText` for a list item\n     * - an object that defines props to generate a `ListItem`, `Divider`, or `Subheader` component\n     */\n    tabs: PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.string,\n      PropTypes.shape({\n        divider: PropTypes.bool,\n        subheader: PropTypes.bool,\n        primaryText: PropTypes.node,\n      }),\n    ])).isRequired,\n\n    /**\n     * An optional style to apply to the menu.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the menu.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the tab in the menu.\n     */\n    tabStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the tab in the menu.\n     */\n    tabClassName: PropTypes.string,\n\n    /**\n     * An optional function to call when the tab is clicked.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * The label to display in the tab. This should normally be some text with\n     * a drop down arrow next to it.\n     */\n    label: PropTypes.node.isRequired,\n  };\n\n  state = { visible: false }\n\n  _toggleVisible = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    this.setState({ visible: !this.state.visible });\n  };\n\n  _handleClose = () => {\n    this.setState({ visible: false });\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      tabStyle,\n      tabClassName,\n      tabs,\n      label,\n      activeTabIndex,\n      overflowAtIndex,\n      ...props\n    } = this.props;\n    const active = activeTabIndex >= overflowAtIndex;\n\n    const tab = (\n      <AccessibleFakeInkedButton\n        {...props}\n        onClick={this._toggleVisible}\n        style={tabStyle}\n        className={cn('md-tab md-tab--menu', tabClassName)}\n      >\n        {label}\n      </AccessibleFakeInkedButton>\n    );\n\n    return (\n      <Menu\n        id={id}\n        style={style}\n        className={cn('md-menu--tab', {\n          'md-tab--active': active,\n          'md-tab--inactive': !active,\n        }, className)}\n        toggle={tab}\n        visible={this.state.visible}\n        onClose={this._handleClose}\n      >\n        {tabs.map(mapToListParts)}\n      </Menu>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport Button from '../Buttons/Button';\n\nexport default class TabOverflowButton extends PureComponent {\n  static propTypes = {\n    left: PropTypes.bool,\n    icon: PropTypes.bool,\n  };\n\n  render() {\n    const { left, icon, ...props } = this.props;\n    return (\n      <Button\n        {...props}\n        icon\n        className={cn('md-icon--inherit md-btn--tab-overflow', {\n          'md-btn--tab-overflow-left': left,\n          'md-btn--tab-overflow-right': !left,\n          'md-btn--tab-overflow-icon': icon,\n        })}\n      />\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport TabIndicator from './TabIndicator';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport MenuTab from './MenuTab';\nimport TabOverflowButton from './TabOverflowButton';\n\nconst MOBILE_PADDING = 72;\nconst DESKTOP_PADDING = 80;\nconst MOBILE_TAB_MIN_WIDTH = 72;\nconst DESKTOP_TAB_MIN_WIDTH = 160;\n\n\n/**\n * The `Tabs` component is used to manage the state of which tab is currently active.\n */\nexport default class Tabs extends PureComponent {\n  static propTypes = {\n    /**\n     * A base id to use for each `Tab`. When the child tabs are created, they are cloned\n     * with some additional accessibility props. Each tab will get a prop with this and the\n     * current index of the tab.\n     */\n    tabId: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The component to render the tabs in.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * This should either be a single `Tab` component or a list of `Tab` components. Unfortunately,\n     * the child *must* be exactly a `Tab` component because this is unable to extract the correct\n     * `label` and `children` from a custom `Tab` component.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]).isRequired,\n\n    /**\n     * Boolean if the tabs should be centered instead of aligned to the keyline. The tabs will\n     * only be aligned to the keyline when there are more than 3 tabs and the `alignToKeyline`\n     * prop is `false`.\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the tabs should align to a toolbar's title keyline. If this is undefined,\n     * the tabs will try to align to the keyline when there are more than 3 tabs.\n     */\n    alignToKeyline: PropTypes.bool,\n\n    /**\n     * Boolean if the tabs should be colored with the primary color. If this is false or undefined,\n     * the tabs will be colored for the light or dark theme.\n     */\n    colored: PropTypes.bool,\n\n    /**\n     * A boolean if the overflow tabs on desktop displays should appear in a menu. If this is false,\n     * the additional tabs will be available by using pagination buttons.\n     */\n    overflowMenu: PropTypes.bool,\n\n    /**\n     * An optional function to call when the active tab is changed. The callback will include\n     * the new active tab index and a click event.\n     *\n     * ```js\n     * onTabChange(newTabIndex, event);\n     * ```\n     */\n    onTabChange: PropTypes.func,\n\n    /**\n     * An optional active tab index to use. If this is defined, it will make the component controlled\n     * and require the `onTabChange` prop to be defined.\n     */\n    activeTabIndex: controlled(PropTypes.number, 'onTabChange', 'defaultTabIndex'),\n\n    /**\n     * The default tab index to use when the component is uncontrolled.\n     */\n    defaultTabIndex: PropTypes.number.isRequired,\n\n    /**\n     * When the `overflowMenu` prop is false, this will be used to render the \"next slice of tabs\"\n     * when there are too many tabs to display at once on desktop screens.\n     */\n    nextIcon: PropTypes.element,\n\n    /**\n     * When the `overflowMenu` prop is false, this will be used to render the \"previous slice of tabs\"\n     * when there are too many tabs to display at once on desktop screens.\n     */\n    previousIcon: PropTypes.element,\n\n    /**\n     * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\n     * This will be to render the icon to the right of the label.\n     */\n    overflowMenuIcon: PropTypes.element,\n\n    /**\n     * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\n     * This will be the text that displays as a tab.\n     */\n    overflowMenuLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the tabs are currently rendered on a mobile or tablet device. This is used to calculate\n     * overflow/padding on the tabs.\n     */\n    mobile: PropTypes.bool,\n    defaultMedia: deprecated(PropTypes.oneOf(['mobile', 'tablet', 'desktop']), 'Use `mobile` instead'),\n    desktopMinWidth: deprecated(PropTypes.number, 'Use `mobile` instead.'),\n    nextIconChildren: deprecated(PropTypes.node, 'Use the `nextIcon` prop instead'),\n    nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\n    previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\n    previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\n    overflowMenuIconChildren: deprecated(PropTypes.node, 'Use the `overflowMenuIcon` prop instead'),\n    overflowMenuIconClassName: deprecated(PropTypes.string, 'Use the `overflowMenuIcon` prop instead'),\n  };\n\n  static defaultProps = {\n    component: 'ul',\n    defaultTabIndex: 0,\n    nextIcon: <FontIcon>keyboard_arrow_right</FontIcon>,\n    previousIcon: <FontIcon>keyboard_arrow_left</FontIcon>,\n    overflowMenuLabel: 'More',\n    overflowMenuIcon: <FontIcon>arrow_drop_down</FontIcon>,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const defaultTabIndex = typeof props.activeTabIndex === 'undefined' ? props.defaultTabIndex : props.activeTabIndex;\n    const indicatorWidth = props.mobile ? MOBILE_TAB_MIN_WIDTH : DESKTOP_TAB_MIN_WIDTH;\n    this.state = {\n      indicatorWidth,\n      indicatorOffset: indicatorWidth * defaultTabIndex,\n      indicatorVisible: true,\n      overflowIndex: 0,\n    };\n\n    if (typeof props.activeTabIndex === 'undefined') {\n      this.state.activeTabIndex = defaultTabIndex;\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.activeTabIndex !== nextProps.activeTabIndex) {\n      this.setState({\n        ...this._calcIndicatorPosition(this._container, 0, nextProps.activeTabIndex, this.state.overflowAtIndex),\n      }, this._scrollActiveIntoView);\n    } else if (!this._shouldAlign(nextProps) && this._shouldAlign(this.props)) {\n      this.setState({ paddingLeft: null });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this._shouldAlign(this.props) && this.state.overflowAtIndex !== prevState.overflowAtIndex) {\n      const paddingLeft = this._calcPaddingLeft(this._container, this.state.mobile);\n      // Have to wait for the overflow menus to appear, then wop\n      /* eslint-disable react/no-did-update-set-state */\n      this.setState({ paddingLeft });\n    } else {\n      const labels = Children.map(Children.toArray(this.props.children), ({ props: { label } }) => label);\n      const prevLabels = Children.map(Children.toArray(prevProps.children), ({ props: { label } }) => label);\n      if (labels.length !== prevLabels.length || labels.filter((_, i) => labels[i] !== prevLabels[i]).length) {\n        this.setState({\n          ...this._calcIndicatorPosition(this._container, 0, this.props.activeTabIndex, this.state.overflowAtIndex),\n        }, this._scrollActiveIntoView);\n      }\n    }\n  }\n\n  _shouldAlign(props) {\n    return typeof props.alignToKeyline === 'boolean'\n      ? props.alignToKeyline\n      : Children.toArray(props.children).filter(child => !!child).length > 3;\n  }\n\n  _calcPaddingLeft(container, mobile) {\n    const mediaPadding = mobile ? MOBILE_PADDING : DESKTOP_PADDING;\n    const tab = container.querySelector('.md-tab');\n    const { offsetLeft: labelOffset } = tab.querySelector('.md-tab-label');\n\n    return mediaPadding - labelOffset;\n  }\n\n  _calcOverflowIndex(container, paddingLeft = 0, menu) {\n    const containerWidth = container.offsetWidth;\n    let overflowIndex = 0;\n    if (containerWidth < container.scrollWidth) {\n      const tabs = Array.prototype.slice.call(container.querySelectorAll('.md-tab'));\n      let totalWidth = 0;\n      tabs.some((tab, i) => {\n        overflowIndex = i;\n        totalWidth += tab.offsetWidth;\n\n        return totalWidth > containerWidth;\n      });\n    }\n\n    return Math.max(0, overflowIndex - (menu ? 1 : 0));\n  }\n\n  _calcIndicatorPosition(container, paddingLeft = 0, activeTabIndex, overflowAtIndex) {\n    let activeItem;\n    if (typeof activeTabIndex === 'number') {\n      if (overflowAtIndex > 0 && activeTabIndex >= overflowAtIndex) {\n        activeItem = container.querySelector('.md-menu--tab');\n      } else {\n        activeItem = container.querySelectorAll('.md-tab')[activeTabIndex];\n      }\n    } else {\n      activeItem = container.querySelector('.md-tab--active');\n    }\n\n    if (!activeItem) {\n      return { indicatorVisible: false };\n    }\n\n    const { offsetWidth: indicatorWidth, offsetLeft: indicatorOffset } = activeItem;\n    return {\n      indicatorWidth,\n      indicatorOffset: indicatorOffset + paddingLeft,\n      indicatorVisible: !overflowAtIndex || overflowAtIndex > activeTabIndex,\n    };\n  }\n\n  _setContainer = (container) => {\n    this._container = container;\n    this._positionElements(this._container !== null);\n  };\n\n  _positionElements = (initialRender) => {\n    initialRender = typeof initialRender === 'boolean' && initialRender;\n    if (!this._container) {\n      return;\n    }\n\n    const { centered, overflowMenu } = this.props;\n    const { mobile } = this.props;\n\n    let paddingLeft;\n    if (!centered && this._shouldAlign(this.props)) {\n      paddingLeft = this._calcPaddingLeft(this._container, mobile);\n    }\n\n    let overflowAtIndex;\n    if (!mobile) {\n      overflowAtIndex = this._calcOverflowIndex(this._container, paddingLeft, overflowMenu);\n    }\n\n    const indicatorPosition = this._calcIndicatorPosition(this._container, initialRender ? paddingLeft : 0);\n\n    this.setState({ mobile, paddingLeft, overflowAtIndex, ...indicatorPosition }, this._scrollActiveIntoView);\n  };\n\n  _scrollActiveIntoView = () => {\n    if (!this._container || !this.state.mobile) {\n      return;\n    }\n\n    const active = this._container.querySelector('.md-tab--active');\n    if (!active) {\n      return;\n    }\n\n    const allTabs = Array.prototype.slice.call(this._container.querySelectorAll('.md-tab'));\n    if (allTabs[0] === active) {\n      this._container.scrollLeft = 0;\n      return;\n    }\n\n    const { offsetWidth: containerWidth, scrollLeft } = this._container;\n    const { offsetWidth: activeWidth, offsetLeft: activeOffset } = active;\n    const inFullViewLeft = activeOffset - scrollLeft >= 0;\n    const inFullViewRight = (activeOffset + activeWidth) - (containerWidth + scrollLeft) <= 0;\n    if (inFullViewLeft && inFullViewRight) {\n      return;\n    }\n\n    let offset = 0;\n    allTabs.some((tab, i) => {\n      if (i < this.props.activeTabIndex) {\n        offset += tab.offsetWidth;\n      }\n\n      return i < this.state.activeTabIndex;\n    });\n\n    this._container.scrollLeft = offset;\n  };\n\n  _handleTabChange = (index, tabId, tabControlsId, tabChildren, event) => {\n    if (this.props.onTabChange) {\n      this.props.onTabChange(index, tabId, tabControlsId, tabChildren, event);\n    }\n\n    if (typeof this.props.activeTabIndex === 'undefined') {\n      this.setState({\n        activeTabIndex: index,\n        ...this._calcIndicatorPosition(this._container, 0, index, this.state.overflowAtIndex),\n      });\n    }\n  };\n\n  _mapToOverflowTabProps = (tab, i) => {\n    const index = i + this.state.overflowAtIndex;\n    const active = getField(this.props, this.state, 'activeTabIndex') === index;\n    const tabEl = Children.only(tab);\n    const handleTabChange = this._handleTabChange;\n\n    return {\n      active,\n      primaryText: tabEl.props.label,\n      onClick: function handleClick(event) {\n        const { onClick, id, controlsId, children } = tabEl.props;\n        if (onClick) {\n          onClick(index, event);\n        }\n\n        handleTabChange(index, id, controlsId, children, event);\n      },\n    };\n  };\n\n  _nextIndexes = (increment) => {\n    const { overflowIndex, overflowAtIndex } = this.state;\n    const visibleAmt = (overflowAtIndex - overflowIndex) * (increment ? 1 : -1);\n\n    this.setState({\n      overflowIndex: overflowIndex + visibleAmt,\n      overflowAtIndex: overflowAtIndex + visibleAmt,\n    });\n  };\n\n  _showNextTabs = () => {\n    this._nextIndexes(true);\n  };\n\n  _showPreviousTabs = () => {\n    this._nextIndexes(false);\n  };\n\n  render() {\n    const {\n      indicatorOffset,\n      indicatorWidth,\n      indicatorVisible,\n      overflowIndex,\n      overflowAtIndex,\n      paddingLeft,\n    } = this.state;\n\n    const {\n      component: Component,\n      style,\n      className,\n      colored,\n      centered,\n      tabId,\n      overflowMenu,\n      overflowMenuLabel,\n      nextIcon,\n      previousIcon,\n      overflowMenuIcon,\n\n      // deprecated\n      overflowMenuIconChildren,\n      overflowMenuIconClassName,\n      nextIconChildren,\n      nextIconClassName,\n      previousIconChildren,\n      previousIconClassName,\n      /* eslint-disable no-unused-vars */\n      activeTabIndex: propActiveIndex,\n      defaultTabIndex,\n      onTabChange,\n      alignToKeyline,\n      mobile,\n\n      // Deprecated\n      defaultMedia,\n      desktopMinWidth,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const activeTabIndex = getField(this.props, this.state, 'activeTabIndex');\n\n    let icon = false;\n    let children = Children.map(Children.toArray(this.props.children), (tab, index) => {\n      const handleOnClick = (tabIndex, id, tabControlsId, tabChildren, event) => {\n        if (tab.props.onClick) {\n          tab.props.onClick(tabId, id, tabControlsId, tabChildren, event);\n        }\n\n        this._handleTabChange(tabIndex, id, tabControlsId, tabChildren, event);\n      };\n\n      if (tab.props.icon) {\n        icon = true;\n      }\n\n      return cloneElement(tab, {\n        index,\n        id: tab.props.id || `${tabId}-${index}`,\n        controlsId: tab.props.controlsId || `${tabId}-panel-${index}`,\n        active: index === activeTabIndex,\n        onClick: handleOnClick,\n      });\n    });\n\n    let overflow;\n    let nextControl;\n    let previousControl;\n    if (overflowAtIndex) {\n      const length = children.length;\n      if (overflowMenu) {\n        overflow = (\n          <MenuTab\n            id={`${tabId}-overflow-menu`}\n            activeTabIndex={activeTabIndex}\n            overflowAtIndex={overflowAtIndex}\n            label={(\n              <IconSeparator label={overflowMenuLabel}>\n                {getDeprecatedIcon(overflowMenuIconClassName, overflowMenuIconChildren, overflowMenuIcon)}\n              </IconSeparator>\n            )}\n            tabs={children.slice(overflowAtIndex, children.length).map(this._mapToOverflowTabProps)}\n          />\n        );\n      }\n\n      children = children.slice(overflowIndex, overflowAtIndex);\n\n      if (!overflowMenu && overflowIndex > 0) {\n        previousControl = (\n          <TabOverflowButton\n            left\n            icon={icon}\n            iconEl={getDeprecatedIcon(previousIconClassName, previousIconChildren, previousIcon)}\n            onClick={this._showPreviousTabs}\n          />\n        );\n      }\n\n      if (!overflowMenu && length > 3 && overflowAtIndex + overflowIndex <= length) {\n        nextControl = (\n          <TabOverflowButton\n            icon={icon}\n            onClick={this._showNextTabs}\n            iconEl={getDeprecatedIcon(nextIconClassName, nextIconChildren, nextIcon)}\n          />\n        );\n      }\n    }\n\n    return (\n      <Component\n        {...props}\n        style={{ ...style, paddingLeft }}\n        className={cn('md-tabs', {\n          'md-tabs--pagination': overflowAtIndex && !overflowMenu,\n          'md-tabs--centered': centered,\n          'md-background--primary': colored,\n        }, className)}\n        role=\"tablist\"\n      >\n        <ResizeObserver watchWidth watchHeight onResize={this._positionElements} elRef={this._setContainer} />\n        {previousControl}\n        {children}\n        {nextControl}\n        {overflow}\n        <TabIndicator offset={indicatorOffset} width={indicatorWidth} visible={indicatorVisible} />\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport oneRequired from '../utils/PropTypes/oneRequired';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\n\n/**\n * The `Tab` component is used for rendering a single tab in the `Tabs` component.\n * It can optionally have either a `label`, an `icon` or both.\n */\nexport default class Tab extends PureComponent {\n  static propTypes = {\n    /**\n     * An id for the tab. This is required for a11y. If you use the `Tabs` component, this\n     * will automatically be generated for you and injected into this component.\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An id for a `TabPanel` that holds the children from this tab. This is required for a11y.\n     * If you use the `Tabs` component, this will automatically be generated for you and injected\n     * into this component.\n     */\n    controlsId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The component to render as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * Any children to display once the tab has been selected.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional icon to display in the tab. This can either be used alone, or it\n     * will be placed above the `label` if both are given.\n     */\n    icon: PropTypes.element,\n\n    /**\n     * An optional label to display in the tab. This can either be used alone, or it\n     * will be placed below the `icon` if both are given.\n     */\n    label: oneRequired(PropTypes.node, 'icon'),\n\n    /**\n     * An optional function to call when the tab is clicked. The callback includes this tab's index,\n     * id, controlsId, children, and finally click event. All the additional parameters are included\n     * if you are not using the `TabsContainer` component. The `id` and `controlsId` are mainly passed\n     * for accessibility.\n     *\n     * ```js\n     * onClick(index, id, controlsId, children, event);\n     * ```\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * Boolean if the tab is currently active. If you use the `Tabs` component, this is automatically\n     * injected.\n     */\n    active: PropTypes.bool,\n\n    /**\n     * Tab's index. If you use the `Tabs` component, this is automatically injected.\n     */\n    index: PropTypes.number,\n  };\n\n  static defaultProps = {\n    component: 'li',\n  };\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(this.props.index, this.props.id, this.props.controlsId, this.props.children, e);\n    }\n  };\n\n  render() {\n    const {\n      id,\n      controlsId,\n      className,\n      active,\n      /* eslint-disable no-unused-vars */\n      icon: propIcon,\n      label: propLabel,\n      index,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { icon, label } = this.props;\n    if (icon) {\n      const iconEl = Children.only(icon);\n      icon = cloneElement(icon, {\n        className: cn('md-icon--tab', iconEl.props.className),\n      });\n    }\n\n    if (isValidElement(label)) {\n      const labelEl = Children.only(label);\n      label = cloneElement(label, {\n        className: cn('md-tab-label', labelEl.props.className),\n      });\n    } else {\n      label = <div className=\"md-tab-label\">{label}</div>;\n    }\n    return (\n      <AccessibleFakeInkedButton\n        {...props}\n        id={id}\n        role=\"tab\"\n        onClick={this._handleClick}\n        className={cn('md-tab', {\n          'md-tab--active': active,\n          'md-tab--inactive': !active,\n          'md-tab--icon': label && icon,\n        }, className)}\n        aria-controls={controlsId}\n        aria-selected={active}\n      >\n        {icon}\n        {label}\n      </AccessibleFakeInkedButton>\n    );\n  }\n}\n","export default '1.2.9';\n"],"names":["makeEmptyFunction","arg","toObject","val","undefined","TypeError","Object","getField","props","state","field","omit","obj","keys","length","filter","indexOf","key","reduce","newProps","getTextWidth","text","el","canvas","cachedCanvas","document","createElement","context","getContext","styles","window","getComputedStyle","font","sizing","fontSize","lineHeight","fontFamily","fontStyle","fontVariant","fontWeight","measureText","width","themeColors","themeText","background","disabled","error","hint","primary","secondary","inherit","ink","card","hover","className","colors","cn","getCollapserStyles","flipped","suffix","suffixFlipped","classNames","closest","type","nodeType","toUpperCase","node","parentElement","nodeName","isFormPartRole","role","getAttribute","handleKeyboardAccessibility","e","onClick","listenToEnter","listenToSpace","which","keyCode","space","SPACE","enter","ENTER","tagName","target","match","preventDefault","form","submit","querySelector","click","getDisplayName","ComposedComponent","hoc","displayName","name","getPagePosition","direction","scroll","pageXOffset","compatMode","documentElement","body","calcPageOffset","left","right","rect","getBoundingClientRect","top","isValidClick","button","LEFT_MOUSE","shiftKey","setTouchEvent","add","eventType","callback","options","supportsPassive","passive","addTouchEvent","removeTouchEvent","captureNextEvent","cb","addEventListener","capture","stopPropagation","removeEventListener","calculateHypotenuse","a","b","Math","sqrt","getDeprecatedIcon","children","icon","React","iconClassName","handleWindowClickListeners","enabled","mobileSafari","ua","navigator","userAgent","iOS","webkit","style","cursor","getSelectedText","getSelection","toString","selection","createRange","getSelectedTextPosition","height","clientX","clientY","round","classList","contains","parseInt","rangeCount","range","getRangeAt","cloneRange","getClientRects","rects","span","appendChild","createTextNode","ZERO_WIDTH_CHARACTER","insertNode","spanParent","parentNode","removeChild","normalize","getScroll","scrollX","scrollY","x","y","scrollLeft","scrollTop","getScreenSize","position","viewport","bottom","isOutHorizontally","fixedTo","child","threshold","fixedLeft","fixedRight","childLeft","childRight","offset","offsetWidth","screenEdge","isOutVertically","toggle","fixedTop","fixedBottom","childTop","childBottom","offsetHeight","isOutOfBounds","verticalThreshold","horizontalThreshold","toFloat","value","parseFloat","getBordersSize","Array","prototype","slice","call","arguments","size","getPaddings","paddings","i","list","getSVGContentRect","bbox","getBBox","createRectInit","getHTMLElementContentRect","clientWidth","clientHeight","emptyRect","horizPad","vertPad","boxSizing","isDocumentElement","vertScrollbar","horizScrollbar","abs","getContentRect","isBrowser","isSVGGraphicsElement","createReadOnlyRect","ref","Constr","DOMRectReadOnly","create","defineConfigurable","isValued","v","addSuffix","str","trim","isBetween","num","min","max","getBtnStyles","flat","raised","floating","swapTheming","pressed","mini","fixed","fixedPosition","flatStyles","raisedStyles","textTheming","backgroundTheming","capitalizeFirst","charAt","substring","findTable","table","isValidFocusKeypress","event","additionalKeys","TAB","findFixedTo","firstChild","withTableFixes","cellIndex","_fixedTo","this","isIndexed","id","isFixed","column","findDOMNode","forceUpdate","columns","querySelectorAll","setState","rowId","propFixedTo","PureComponent","Positions","HorizontalAnchors","VerticalAnchors","contextTypes","PropTypes","oneOfType","number","string","mapToListParts","item","index","ListItem","primaryText","isValidElement","divider","subheader","nestedItems","remainingProps","component","Divider","Subheader","map","toggleScroll","scrollable","selector","queryable","remove","scrollTo","isTemporary","TEMPORARY","TEMPORARY_MINI","isPersistent","PERSISTENT","PERSISTENT_MINI","isPermanent","FULL_HEIGHT","CLIPPED","FLOATING","isMini","bem","base","modifiers","remaining","args","some","push","element","join","classes","getNonMiniType","pMini","DrawerTypes","toMiniListItem","itemProps","MiniListItem","isDateEqual","d1","d2","getTime","addDate","sourceDate","amt","part","date","Date","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","stripTime","getLastDay","getDayOfWeek","dow","day","getDay","diff","isMonthBefore","toCompare","formatTime","DateTimeFormat","locales","time","hour","minute","format","extractTimeParts","formatted","hours","minutes","separator","timePeriod","isPointInCircle","cx","cy","r","pow","toDegrees","radians","PI","calcTimeFromPoint","point","center","innerRadius","hour12","degrees","atan2","sectors","sectorSize","isInCircle","addHours","t","setHours","getHours","minMaxLoop","current","next","calculateDistance","distance","calculateValueDistance","scale","step","decimals","String","split","corrector","modded","updateUnit","unit","fn","toUnit","updated","replace","isInvalidAnimate","fab","gcc","_animateForSnackbar","Tooltipped","setPosition","Children","only","targetProps","label","clonedProps","cloneElement","TooltipContainer","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","condition","c","d","f","Error","argIndex","framesToPop","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","assign","test1","getOwnPropertyNames","test2","fromCharCode","n","test3","forEach","letter","err","shouldUseNative","shim","propName","componentName","location","propFullName","secret","ReactPropTypesSecret","invariant","getShim","isRequired","ReactPropTypes","array","bool","func","object","symbol","any","arrayOf","instanceOf","objectOf","oneOf","shape","exact","checkPropTypes","module","require$$1","len","apply","exports","result","_react","prev","getValueForKey","nextKeysPending","pendingKeys","prevKey","childMapping","nextKey","pendingNextKey","_interopRequireDefault","__esModule","default","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_extends","source","_chainFunction2","_chainFunction","_react2","defaultProps","_propTypes","_warning","childFactory","TransitionGroup","_React$Component","_this","performAppear","currentlyTransitioningKeys","componentWillAppear","_handleDoneAppearing","bind","componentDidAppear","currentChildMapping","_ChildMapping","getChildMapping","performLeave","performEnter","componentWillEnter","_handleDoneEntering","componentDidEnter","componentWillLeave","_handleDoneLeaving","componentDidLeave","keysToEnter","newChildren","childRefs","componentWillMount","keysToLeave","componentDidMount","initialChildMapping","componentWillReceiveProps","nextProps","nextChildMapping","prevChildMapping","mergeChildMappings","hasPrev","_key","hasNext","componentDidUpdate","_this2","render","_this3","childrenToRender","isCallbackRef","factoryChild","_loop","transitionLeave","transitionName","transitionAppear","transitionEnter","transitionLeaveTimeout","transitionEnterTimeout","transitionAppearTimeout","Component","propTypes","defineProperty","_hasClass2","_hasClass","RegExp","vendors","cancel","raf","curr","ms","req","setTimeout","compatRaf","getKey","vendor","k","substr","_inDOM","rafKey","transform","prefix","transitionEnd","animationEnd","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationName","animationDuration","animationTiming","animationDelay","_getTransitionPropert","vendorMap","O","toLowerCase","Moz","Webkit","getTransitionProperties","end","property","timing","delay","duration","transitionType","timeoutPropName","enabledPropName","_propTypes2","leave","active","enterActive","leaveActive","appear","appearActive","addEndListener","listener","events","_addClass2","_addClass","_removeClass2","_removeClass","_requestAnimationFrame2","_requestAnimationFrame","_properties","CSSTransitionGroupChild","_temp","_ret","_len","concat","done","transition","appearTimeout","enterTimeout","leaveTimeout","classNameAndNodeQueue","transitionTimeouts","componentWillUnmount","unmounted","timeout","clearTimeout","animationType","finishCallback","_reactDom","activeClassName","timer","removeListeners","queueClassAndNode","finish","rafHandle","flushClassNameAndNodeQueue","_TransitionGroup2","_TransitionGroup","_CSSTransitionGroupChild2","_CSSTransitionGroupChild","_PropTypes","nameShape","transitionTimeout","CSSTransitionGroup","_wrapChild","argType","isArray","hasOwn","LEFT","UP","RIGHT","DOWN","INNER_LEFT","CENTER","INNER_RIGHT","TOP","OVERLAP","BOTTOM","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","BELOW","deprecated","validator","reason","componentNameSafe","propFullNameSafe","messageKey","_warning2","warned","_resetWarned","AccessibleFakeButton","tabFocused","focus","_node","blur","_setNode","_handleClick","_handleKeyDown","onKeyDown","_handleKeyUp","onKeyUp","onTabFocus","_handleBlur","onBlur","tabbedClassName","tabIndex","noFocusOutline","childElements","toArray","unshift","opts","aborted","_timeout","_abort","expanding","pulsing","leaving","transitionOverlap","expanded","TICK","pulse","onRemove","InkContainer","inks","createInk","pageX","pageY","_createInk","_removeTimeout","_removeInk","_getKeyboardContainer","_inkContainer","pageOffset","now","pop","_container","_setContainers","group","_initOrRemoveEvents","keyboardDiff","mouseDiff","touchDiff","mouseDisabled","_isListenerDisabled","disabledInteractions","touchDisabled","keyboardDisabled","_handleFocus","_handleSubmit","_stopPropagationToFocus","_handleMouseDown","_handleMouseUp","_handleTouchStart","_handleTouchEnd","_maybeDelayClick","waitForInkTransition","_handleRemove","_clicked","_skipNextMouse","_mouseLeave","_handleMouseLeave","_aborted","_handleTouchMove","changedTouches","lastInk","abortedInk","splice","activeElement","di","ndi","mouseDisabledDiff","_isListenerDisabledDiff","touchDisabledDiff","keyboardDisabledDiff","interaction","nextDisabledInteractions","ni","inkStyle","inkClassName","Ink","inkDisabled","getComposedComponent","_composed","_setInkRef","inkContainer","_setComposedComponent","__SUPER_SECRET_REF__","inkTransitionOverlap","inkTransitionEnterTimeout","inkTransitionLeaveTimeout","inkContainerStyle","inkContainerClassName","inkDisabledInteractions","inkContextTypes","injectInk","ret","secondPerFrame","destX","precision","newV","newX","reusedTuple","getNanoSeconds","hrtime","loadTime","performance","process","hr","root","global","caf","last","queue","_now","cp","cancelled","handle","requestAnimationFrame","cancelAnimationFrame","currentStyle","currentVelocity","styleValue","_createClass","defineProperties","descriptor","protoProps","staticProps","_mapToZero2","_mapToZero","_stripStyle2","_stripStyle","_stepper4","_stepper3","_performanceNow2","_performanceNow","_raf2","_raf","_shouldStopAnimation2","_shouldStopAnimation","msPerFrame","Motion","wasAnimating","animationID","prevTime","accumulatedTime","unreadPropStyle","clearUnreadPropStyle","destStyle","dirty","_state","lastIdealStyle","lastIdealVelocity","startAnimationIfNecessary","timestamp","propsStyle","onRest","currentTime","timeDelta","currentFrameCompletion","floor","framesToCatchUp","newLastIdealStyle","newLastIdealVelocity","newCurrentStyle","newCurrentVelocity","newLastIdealStyleValue","newLastIdealVelocityValue","_stepper","stiffness","damping","_stepper2","nextIdealX","nextIdealV","defaultState","defaultStyle","_props","renderedChildren","shouldStopAnimationAll","currentStyles","currentVelocities","StaggeredMotion","unreadPropStyles","lastIdealStyles","lastIdealVelocities","someDirty","destStyles","newLastIdealStyles","newLastIdealVelocities","newCurrentStyles","newCurrentVelocities","j","defaultStyles","prevKeyIndex","nextKeyIndex","fill","sort","nextOrderA","nextOrderB","prevOrderA","prevOrderB","pivot","rehydrateStyles","mergedPropsStyles","plainStyles","cUnreadPropStyles","mergedPropsStyle","data","mergeAndSync","willEnter","willLeave","didLeave","oldMergedPropsStyles","oldCurrentStyles","oldCurrentVelocities","oldLastIdealStyles","oldLastIdealVelocities","newMergedPropsStyles","_mergeDiff2","oldIndex","oldMergedPropsStyle","leavingStyle","newMergedPropsStyleCell","foundOldIndex","plainStyle","velocity","_mergeDiff","TransitionMotion","unmounting","_mergeAndSync","propStyles","_mergeAndSync2","newMergedPropsStyle","styleThatEntered","defaultStyleCell","s","_mergeAndSync3","hydratedStyles","noWobble","gentle","wobbly","stiff","config","defaultConfig","_presets2","_presets","_interopRequire","_Motion","_StaggeredMotion","_TransitionMotion","_spring","_reorderKeys","Collapse","_setHeight","_child","paddingTop","paddingBottom","cs","getPropertyValue","minHeight","collapsed","initialOpen","nextValue","spring","motionStyle","springConfig","animate","nextStyle","ICON_SIZE","FontIcon","_mergeStyles","forceSize","forceFontSize","TileAddon","avatar","avatarIcon","iconSized","ListItemText","primaryTextStyle","primaryTextClassName","secondaryText","secondaryTextStyle","secondaryTextClassName","threeLines","secondaryTextNode","inset","List","listLevel","cascadingFixedTo","cascadingMenu","scrollHeight","ordered","inline","primarySubheader","cascadingZDepth","subheaderEl","childContextTypes","fixedToShape","MapShim","getIndex","arr","entry","Map","anonymous","__entries__","prototypeAccessors","get","set","delete","entries","has","clear","ctx","requestAnimationFrame$1","trailingTimeout","throttle","resolvePending","leadingCall","trailingCall","proxy","timeoutCallback","timeStamp","lastCallTime","transitionKeys","isIE11","test","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","observe","attributes","childList","characterData","subtree","disconnect","propertyName","getInstance","instance_","SVGGraphicsElement","SVGElement","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","this$1","observation","WeakMap","ResizeObserver$1","method","ResizeObserver","_target","_observer","_height","_width","_scrollHeight","_scrollWidth","_measure","scrollWidth","_isHeightChange","_isWidthChange","onResize","watchHeight","watchWidth","_handleRef","container","_getTarget","ResizeObserverAPI","elRef","nextTarget","getElementById","aria-hidden","Layover","_lastXFix","_lastYFix","_initialX","_initialY","_initialTop","_initialLeft","_toggle","visible","sameWidth","centered","simplified","anchor","_getAnchor","_handleOutsideClick","_contextRect","_dialog","_manageFixedToListener","_inFixed","_init","_reset","visibileDiff","childStyle","prevProps","closeOnOutsideClick","prevEnabled","_clickTimeout","_manageWindowResizeListener","belowAnchor","animationPosition","block","fullWidth","fillViewportWidth","fillViewportHeight","onClose","repositionOnScroll","repositionOnResize","toggleQuery","yThreshold","xThreshold","onContextMenu","preventContextMenu","minLeft","minRight","minBottom","childId","_fixateChild","_handleResize","_setContainer","_handleContextMenu","_isCenteredDialog","_this4","_createStyles","dialogRect","_handleScroll","_windowResizeTimeout","_handleWindowResize","maxHeight","_initialWinX","_initialWinY","offsetParent","_initialFix","clone","cloneNode","webkitTransform","transfrom","webkitTransition","vp","childHeight","childWidth","toggleHeight","toggleWidth","addToTop","addToLeft","multiplier","_childComponent","_positionChild","_ticking","_handleTick","_attemptFix","winX","winY","toggleTop","innerHeight","newTop","scrollEl","Menu","_handleClose","close","_isIgnoreTarget","_isCloseTarget","persist","cascading","cascadingAnchor","listStyle","listClassName","listProps","listZDepth","listInline","listHeightRestricted","contained","isOpen","listId","autoclose","limitHeight","expanderIconChildren","expanderIconClassName","simple","below","listVisible","_warned","anchorShape","_tile","_setTile","tile","_tileNode","itemRef","_handleMouseOver","onMouseOver","onMouseLeave","onTouchStart","_touched","touchedAt","onTouchEnd","_touchTimeout","defined","initiallyOpen","defaultOpen","defaultVisible","tileStyle","tileClassName","contentStyle","contentClassName","leftNodeStyle","leftNodeClassName","rightNodeStyle","rightNodeClassName","nestedListStyle","nestedListClassName","nestedListHeightRestricted","leftIcon","leftAvatar","rightIcon","rightAvatar","prependNested","activeBoxStyle","activeBoxClassName","animateNestedItems","expanderIcon","expanderLeft","ItemComponent","itemComponent","tileProps","passPropsToItem","ariaSize","ariaPos","cascadingId","leftNode","rightNode","nestedList","collapser","icond","avatard","sharedProps","FloatingLabel","htmlFor","iconOffset","customSize","Message","TextFieldMessage","errorText","helpText","_isMessageVisible","_anyChanges","p1","p2","changed","helpOnFocus","maxLength","currentLength","isMessageVisible","message","PasswordButton","keyboardFocus","_button","passwordVisible","TextArea","_field","getValue","_calcRowHeight","rows","rowHeight","_setMask","mask","_mask","_setField","_rowHeight","_syncHeightWithMask","maxRows","_handleChange","onChange","defaultValue","InputField","inlineIndicator","multiline","vertical","TextFieldDivider","lineDirection","DEFAULT_TEXT_FIELD_SIZE","WILL_RECEIVE_KEYS","DID_UPDATE_KEYS","TextField","_getLength","_canvas","resize","passwordInitiallyVisible","_calcWidth","nextState","_isErrored","stateful","dir","iconEl","inputStyle","inputClassName","required","leftIconStateful","rightIconStateful","passwordIcon","paddedBlock","onDoubleClick","onTouchMove","onTouchCancel","onMouseDown","onMouseUp","toolbar","passwordIconChildren","passwordIconClassName","placeholder","onFocus","adjustMinWidth","floatingLabel","_cloneIcon","_togglePasswordField","rightIconed","md-text-field--toolbar","_handleContainerClick","div","_calcIconWidth","marginLeft","indicator","iconContainer","first","second","third","ceil","disableShrink","Autocomplete","dataLabel","matches","dataDiff","menuFn","tabbed","suggestionStyle","textFieldStyle","textFieldClassName","inlineSuggestionStyle","inlineSuggestionClassName","menuId","simplifiedMenu","total","dataValue","deleteKeys","clearOnAutocomplete","autocompleteWithLabel","findInlineSuggestion","inlineSuggestionPadding","onAutocomplete","onMenuOpen","onMenuClose","focusInputOnAutocomplete","autocomplete","_handleTextFieldKeyDown","_toggleMenu","suggestion","_setMenu","_close","_handleMenuKeyDown","_mapToListItem","fuzzyFilter","haystack","needle","reg","hay","caseInsensitiveFilter","filterText","findIgnoreCase","hayStr","_findInlineSuggestions","manualFocus","_handleInlineAutocomplete","suggestionIndex","_focusSuggestion","_menu","items","_handleItemClick","m","negative","matchIndex","l","datum","dataum","menu","Avatar","color","_setRandomColor","suffixes","random","src","alt","content","_getColor","Badge","single","_isSingleChild","_normalizeCount","badgeContent","count","Number","isNaN","badgeStyle","badgeClassName","defaultTheme","circular","badgeId","invisibleOnZero","useCircular","aria-describedby","badge","isReact16","createPortal","Portal","_portal","_applyStyles","_renderPortal","renderNode","lastChild","insertBefore","_removePortal","onOpen","Paper","zDepth","raiseOnHover","BottomNav","onNavChange","colored","iconChildren","labelClassName","md-bottom-nav-label--shifting-inactive","labelEl","BottomNavigation","initiallyVisible","activeIndex","defaultActiveIndex","dynamic","_addTouchEvents","_removeTouchEvents","onVisibilityChange","portalVisible","actions","portal","links","dynamicThreshold","containerStyle","containerClassName","navigation","action","_handleNavChange","_animateIn","_animateOut","_pageY","_scrolling","touchY","passedThreshold","IconSeparator","labelStyle","iconBefore","labelProps","Tooltip","entering","_delayedTimeout","_unlinkTarget","_showTooltip","_hideTooltip","_setTarget","_stopContextMenu","tooltipStyle","tooltipClassName","tooltip","tooltipLabel","tooltipDelay","tooltipPosition","tooltipContainerStyle","tooltipContainerClassName","tooltipTransitionEnterTimeout","tooltipTransitionLeaveTimeout","Button","_blur","_attemptedBlur","_handleMouseEnter","onMouseEnter","_snackbarTimeout","snackbar","snackbarType","href","forceIconSize","forceIconFontSize","svg","iconBtnType","visibleChildren","resolvedIconChildren","injectTooltip","Card","raise","_handleExpandClick","onExpanderClick","initiallyExpanded","defaultExpanded","expanderTooltipLabel","expanderTooltipDelay","expanderTooltipPosition","isExpanded","tableCard","expanderIndex","parts","isExpander","expander","expandable","CardExpander","onExpandClick","CardActions","stacked","CardTitleBlock","subtitle","title","CardTitle","avatarClassName","CardText","Chip","removable","rotateIcon","removeIconChildren","removeIconClassName","chipIconCN","DataTable","defaultSelectedRows","indeterminate","_allSelected","_removed","_initial","checkedIcon","uncheckedIcon","indeterminateIcon","plain","baseId","selectableRows","checkboxHeaderLabel","checkboxLabelTemplate","fixedHeader","fixedFooter","checkedIconChildren","checkedIconClassName","uncheckedIconChildren","uncheckedIconClassName","indeterminateIconChildren","indeterminateIconClassName","allSelected","selectedRows","_toggleSelectedRow","_createCheckbox","_removeCheckbox","all","checked","tableStyle","tableClassName","fixedWrapperStyle","fixedWrapperClassName","fixedScrollWrapperStyle","fixedScrollWrapperClassName","responsive","fixedDividers","fixedHeight","fixedWidth","headerHeight","footerHeight","onRowToggle","_setTable","borderTop","borderBot","header","footer","_table","selected","version","row","selectedCount","TableHeader","headerContextTypes","TableBody","uncontrolled","rowContextTypes","DISABLED_INTERACTIONS","SwitchThumb","AccessibleFakeInkedButton","SwitchTrack","SelectionControl","_setInput","input","_input","_setControl","control","_control","_getIcon","defaultChecked","labelBefore","ariaLabel","ariaLabelledBy","checkedCheckboxIcon","uncheckedCheckboxIcon","checkedRadioIcon","uncheckedRadioIcon","__superSecreteProp","checkedRadioIconChildren","checkedRadioIconClassName","uncheckedRadioIconChildren","uncheckedRadioIconClassName","checkedCheckboxIconChildren","checkedCheckboxIconClassName","uncheckedCheckboxIconChildren","uncheckedCheckboxIconClassName","isSwitch","TableCheckbox","_td","_header","_handleMount","td","rowIndex","createCheckbox","removeCheckbox","baseName","Cell","TableRow","_ignoreHoverState","_handleCheckboxClick","_row","onCheckboxClick","toggleSelectedRow","_setRow","selectable","autoAdjust","checkbox","col","adjusted","CELL_SCOPE","TableColumn","fixedStyle","fixedClassName","numeric","sorted","sortIcon","selectColumnHeader","grow","sortIconBefore","sortIconChildren","scope","sortIconClassName","sortable","displayedChildren","ariaSort","baseClassNames","mergedClassNames","SelectFieldInput","_transitionNewValue","transitionTime","activeLabel","dropdownIcon","visibleLabel","labelActive","SelectFieldToggle","ARIA_ACTIVE","SelectField","_getActive","_scrollActiveIntoView","_items","_activeItem","_deleteKeys","_getDeleteKeys","itemLabel","itemValue","menuItems","preferLabel","key1","key2","toggleStyle","toggleClassName","menuTransitionName","menuTransitionEnterTimeout","menuTransitionLeaveTimeout","getItemProps","stripActiveItem","keyboardMatchingTimeout","onMenuToggle","stretchList","menuStyle","menuClassName","noAutoAdjust","useSameWidth","_reduceItems","_getActiveItemLabel","_getItemPart","found","_attemptItemFocus","_setListItem","listRef","offsetTop","dataset","_selectItem","dataIndex","up","down","_advanceFocus","_selectItemByLetter","decrement","valued","itemStripped","lastIndex","nextIndex","charCode","isLetter","isKeypad","_matchingTimeout","lastSearch","_selectFirstMatch","search","activeItem","objectType","getProps","TableFooter","TablePagination","controlledPage","page","controlledRowsPerPage","rowsPerPage","defaultRowsPerPage","defaultPage","rpp","p","start","controlsMarginLeft","selectFieldStyle","selectFieldClassName","selectFieldInputStyle","selectFieldInputClassName","rowsPerPageLabel","rowsPerPageItems","incrementIcon","decrementIcon","incrementIconChildren","incrementIconClassName","decrementIconChildren","decrementIconClassName","incrementId","decrementId","onPagination","pagination","_throttledPosition","colSpan","_setControls","_setRowsPerPage","_decrement","_increment","controls","_controls","_position","newStart","nextPage","FOCUSABLE_QUERY","tag","FocusContainer","_enableFocusTrap","_disableFocusTrap","_attemptInitialFocus","initialFocus","toFocus","_focusables","debugError","_containFocus","containerRef","focusOnMount","containFocus","_shifted","additionalFocusKeys","focusables","DialogTitle","FOOTER_PADDING","DialogFooter","maxWidth","_generateActions","_toElement","propStacked","stackedDefined","DIFF_KEYS","Dialog","_renderNode","_getStyles","contentStyles","onLeave","contentPadded","titleStyle","titleClassName","footerStyle","footerClassName","Content","contentComponent","contentProps","fullPage","autopadContent","paddedContent","autosizeContent","stackedActions","containerX","containerY","labelledBy","titleId","padDefined","dialogChildren","_setContent","_handleContentResize","_setRenderNode","dialog","_content","totalHeight","currentHeight","EditDialog","dialogStyle","dialogClassName","dialogContentStyle","dialogContentClassName","textFieldId","large","dialogZDepth","EditDialogColumn","_makeActions","_column","okLabel","okPrimary","okSecondary","okProps","cancelLabel","cancelPrimary","cancelSecondary","cancelProps","layoverStyle","layoverClassName","inlineIcon","simplifiedDialog","noIcon","inlineIconChildren","inlineIconClassName","dialogId","onOkClick","onCancelClick","okOnOutsideClick","scrollIntoView","scrollIntoViewPadding","visibleOnFocus","scrollThreshold","enforceMinWidth","inlineEditIcon","md-edit-dialog__blocked-field","dialogLabel","_handleOpen","_handleCancel","_handleOk","_skipNextOpen","offsetLeft","cancelValue","onOutsideClick","SelectFieldColumn","wrapperStyle","wrapperClassName","DropdownMenu","propChildren","MenuButton","buttonId","buttonChildren","onMenuClick","onMenuMouseDown","onMenuMouseUp","onMenuMouseEnter","onMenuMouseMove","onMenuMouseLeave","onMenuTouchStart","onMenuTouchMove","onMenuTouchCancel","onMenuTouchEnd","onMenuFocus","onMenuBlur","onMenuKeyDown","onMenuKeyUp","toggleChildren","MenuButtonColumn","DropdownMenuColumn","TableCardHeader","animating","nVisible","noAdjust","noClone","contextualTitleId","contextualChildren","noActionsAdjust","noChildrenAdjust","noLeftChildrenClone","leftChildren","contextualTitle","_cloneCellRight","_cloneLeftChildren","contextualHeader","mergedStyles","overflow","DialogContainer","dialogVisible","defaultVisibleTransitionable","_mountDialog","_pageX","_inTimeout","_activeElement","_mountPortal","closeOnEsc","escapable","modal","prevEscapable","_handleEscClose","overlay","onShow","onHide","disableScrollLocking","actionLeft","actionRight","_handleDialogMounting","_unmountPortal","Overlay","isInPortal","Drawer","defaultMedia","overlayActive","desktop","drawerActive","mobileMinWidth","tabletMinWidth","desktopMinWidth","mobileType","tabletType","desktopType","constantType","mobile","tablet","matchesMedia","media","matchMedia","_updateType","_updateMedia","_animate","_closeTimeout","navStyle","navClassName","navItems","clickableDesktopOverlay","overlayStyle","overlayClassName","navItemsId","onMediaTypeChange","autocloseAfterInk","onVisibilityToggle","closeOnNavItemClick","temporary","permanent","_setNavigation","_handleNavClick","overlayVisible","drawer","_closeDrawer","getCurrentMedia","diffType","diffMedia","prevVisible","_navigation","PanelContent","onSave","onCancel","saveProps","saveType","saveLabel","savePrimary","saveSecondary","cancelType","footerChildren","actionFooter","SINGLE_LINE_HEIGHT","ExpansionPanel","_determineIfTwoLine","twoLine","_isExpanded","onExpandToggle","_handleSave","closeOnSave","closeOnCancel","secondaryLabel","expandedSecondaryLabel","focused","columnWidths","headerStyle","headerClassName","overflown","expandIconChildren","expandIconClassName","animateContent","panelLabel","minWidth","ExpansionList","focusedIndex","_determineTabFocus","_calcColumnWidths","panels","_removeFocus","_isOverflown","widths","panel","collapserWidth","paddingLeft","paddingRight","w","_getColumnWidths","maxes","nextWidths","recalculateThreshold","prevState","FileInput","multiple","allowDuplicates","files","accept","labelChildren","FileUpload","abort","file","fileName","reader","_uploadFile","onAbort","onError","onLoad","onLoadStart","onLoadEnd","onProgress","readAs","fr","FileReader","onerror","onabort","onloadstart","onloadend","onload","onprogress","lengthComputable","loaded","readAsDataURL","readAsText","readAsArrayBuffer","_handleUpload","fileList","maxSize","onSizeError","errorFiles","fileReader","Grid","getClassName","noSpacing","gutter","spacing","align","order","phoneSize","phoneOrder","phoneOffset","phoneHidden","tabletSize","tabletOrder","tabletOffset","tabletHidden","desktopSize","desktopOrder","desktopOffset","desktopHidden","GridList","getClassNames","cellClassName","cellStyle","ListItemControl","primaryAction","secondaryAction","Media","forceAspect","aspectRatio","MediaOverlay","ToolbarTitle","prominent","fullClassName","titleEl","Toolbar","prominentTitle","themed","singleColor","nav","titleMenu","actionsRight","navEl","rightActions","JumpToContentLink","CloseButton","onCloseClick","closeIcon","NavigationDrawer","initialDrawerType","drawerType","mobileDrawerType","tabletDrawerType","desktopDrawerType","constantDrawerType","others","persistentIcon","contentId","jumpLabel","persistentIconChildren","persistentIconClassName","closeIconChildren","closeIconClassName","_toggleVisibility","toolbarStyle","toolbarClassName","drawerStyle","drawerClassName","drawerId","drawerTitle","drawerZDepth","drawerChildren","drawerHeaderChildren","drawerTransitionDuration","toolbarId","toolbarTitle","toolbarTitleMenu","toolbarTitleStyle","toolbarTitleClassName","toolbarActions","toolbarProminent","toolbarProminentTitle","toolbarThemeType","toolbarSingleColor","toolbarChildren","toolbarZDepth","extractMini","miniDrawerHeader","miniDrawerChildren","includeDrawerHeader","temporaryIcon","temporaryIconChildren","temporaryIconClassName","menuIconChildren","menuIconClassName","drawerHeader","onDrawerChange","contentActive","persistent","clipped","toolbarRelative","closeButton","miniDrawer","miniList","_handleVisibility","_handleTypeChange","DrawerType","_msg","mediaState","Intl","formatOptions","toLocaleString","PickerControl","DatePickerHeader","_selectYear","changeCalendarMode","_selectCalendar","_getFormattedDate","calendarTempDate","timeZone","year","weekday","month","calendarMode","CalendarDate","_setFocus","btn","_setActive","desktopActive","_setInactive","today","fullyActive","CalendarMonth","calendarDate","onCalendarDateClick","minDate","maxDate","firstDayOfWeek","disableWeekEnds","dateClassName","showAllDays","outerDateClassName","disableOuterDates","days","firstDay","lastDay","currentDate","endDate","activeDateTime","todayTime","currentMonth","isMinDateDisabled","isMaxDateDisabled","isWeekendDisabled","CalendarHeader","_createState","titleFormat","weekdayClassName","weekdayFormat","formatter","dows","onPreviousClick","previousIcon","onNextClick","nextIcon","isPreviousDisabled","isNextDisabled","DatePickerCalendar","Year","_setActiveFocus","md-year--active","YearPicker","_getYearRange","yearsDisplayed","_getFullYear","startYear","endYear","currentYear","years","onCalendarYearClick","DatePicker","displayMode","calendarClassName","yearPickerClassName","calendarDateClassName","calendarOuterDateClassName","calendarTitleClassName","calendarTitleFormat","calendarWeekdayClassName","calendarWeekdayFormat","picker","DatePickerContainer","_getDate","_getFormatOptions","_validateDateRange","defaultCalendarDate","initialCalendarDate","initialCalendarMode","defaultCalendarMode","minEqual","maxEqual","_closeOnEsc","pickerStyle","pickerClassName","pickerHeaderClassName","pickerContentClassName","pickerFooterClassName","animateInline","propNextIcon","propPreviousIcon","previousIconChildren","previousIconClassName","nextIconChildren","nextIconClassName","readOnly","_handleCancelClick","_handleOkClick","_changeCalendarMode","_previousMonth","_nextMonth","_setCalendarTempDate","_setCalendarTempYear","md-pointer--hover","_toggleOpen","_getFormattedValue","userLanguage","language","autoOk","nextDate","nextTemp","CLOCK_PADDING","ClockTime","onKeyboardFocus","_setTime","_time","_setPosition","radius","timeRadians","outerRadius","sin","cos","ClockHand","timeAt0Deg","coords","_calcCurrentDegrees","invisibleMinute","rotateTransform","ClockFace","_setFace","face","_face","_setPositioning","_center","_left","_top","hoverMode","_enableMouseMoving","_disableMouseMoving","_handleMouseMove","moving","_calcNewTime","onTimeChosen","interval","times","_","clockTime","TimePeriods","_setAM","setTempTime","tempTime","_setPM","TimePickerHeader","_setHour","setTimeMode","_setMinute","timeMode","timePeriods","TimePicker","_updateTime","newTime","timePart","isAM","is12","setMinutes","_handleTimeChosen","hoursInt","minutesInt","TimePickerContainer","initialDate","_getTimeParts","initialTimeMode","defaultTimeMode","_setTimeMode","_setTempTime","_getTextFieldValue","CircularProgress","determinateDashoffset","isDeterminate","circleStyle","svgStyle","rotate","ROATE_DISTANCE","WebkitTransform","MozTransform","accessibilityProps","LinearProgress","progressClassName","progressStyle","query","md-block-centered","SelectionControlGroup","_setGroup","_group","values","dec","inc","radios","_activeIndex","radio","groupValue","controlValue","controlStyle","controlClassName","LabelComponent","labelComponent","_isChecked","controlProps","Checkbox","unchecked","Radio","Switch","toggled","defaultToggled","SliderLabel","TrackFill","trackFillWidth","dragging","Thumb","on","off","thumbLeft","discrete","ThumbMask","maskInked","DiscreteValue","valuePrecision","valueStr","toFixed","half","Track","trackFillStyle","trackFillClassName","discreteValueStyle","discreteValueClassName","maskLeaving","thumbStyle","thumbClassName","onThumbFocus","onThumbKeyUp","onThumbKeyDown","tickWidth","discreteTicks","ticks","Slider","_calcDistance","_calcLeft","trackWidth","editable","_dragAdded","_calcTrackWidth","manualIncrement","_blurOnOutsideClick","_focusThumb","addDrag","_handleDragMove","_handleDragEnd","rm","_inkTimeout","_focusTimeout","invalid","cl","trackStyle","trackClassName","inputWidth","onDragChange","discreteInkTransitionTime","stepPrecision","rightChildren","_handleTextFieldChange","_handleDragStart","_setTrack","_isTextField","_updatePosition","_track","isNewValue","_isInTextField","isDiscreteValue","_isValidClassList","track","_handleIncrement","incrementedValue","disableTransition","newValue","_animateDiscreteInk","wait","_thumb","Snackbar","onDismiss","toast","_fab","_clearTimeout","_handleAutohide","autohide","autohideTimeout","_handleWindowBlur","_eventType","_handleWindowFocus","onAppear","btnProps","CHAINED_TOAST_DELAY","SnackbarContainer","_isMultiline","innerHTML","_initAndToast","_initTimeout","_createLeaveTimer","_leaveTimeout","_createSwapTimer","_swapTimeout","toasts","_dismissTimeout","dismiss","SVGIcon","_getIds","use","labels","desc","descId","titleAttr","xlinkHref","Function","__g","core","__e","it","that","aFunction","isObject","exec","require$$0","is","require$$2","S","valueOf","dP","P","Attributes","anObject","toPrimitive","IE8_DOM_DEFINE","bitmap","createDesc","$export","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","IS_WRAP","W","expProto","C","virtual","R","hide","U","cof","IObject","toInteger","store","px","shared","uid","arrayIndexOf","IS_INCLUDES","$this","fromIndex","toIObject","toLength","toIndex","IE_PROTO","names","$keys","enumBugKeys","$assign","A","Symbol","K","T","aLen","getSymbols","gOPS","isEnum","pIE","getKeys","_assign2","_assign","ObjectProto","getPrototypeOf","KEY","exp","fails","$getPrototypeOf","$Object","_defineProperty2","_defineProperty","Properties","Empty","createDict","iframeDocument","iframe","display","contentWindow","open","write","lt","dPs","USE_SYMBOL","def","TAG","stat","IteratorPrototype","NAME","setToStringTag","ITERATOR","BUGGY","returnThis","Base","DEFAULT","IS_SET","FORCED","$iterCreate","methods","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","Iterators","redefine","$at","TO_STRING","pos","charCodeAt","iterated","_t","_i","_k","Arguments","TO_STRING_TAG","collections","Collection","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","meta","NEED","fastKey","getWeak","onFreeze","$Symbol","wksExt","symbols","hiddenKeys","gOPN","windowNames","getWindowNames","gOPD","getOwnPropertyDescriptor","$GOPD","$DP","gOPNExt","$JSON","JSON","_stringify","stringify","HIDDEN","wks","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","DESCRIPTORS","$fails","_create","D","protoDesc","wrap","sym","isSymbol","iterator","$defineProperty","$defineProperties","enumKeys","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","$set","require$$3","wksDefine","for","keyFor","keyOf","useSetter","useSimple","replacer","$replacer","require$$5","require$$4","_iterator2","_iterator","_symbol2","_symbol","_typeof","_typeof3","_typeof2","check","buggy","_setPrototypeOf2","_setPrototypeOf","_create2","eventName","handler","attachEvent","srcElement","currentTarget","detachEvent","RESISTANCE_COEF","UNCERTAINTY_THRESHOLD","params","startIndex","startX","viewLength","resistance","indexMax","newStartX","_constant2","_constant","displaySameSlide","oldChildren","oldKey","q","_checkIndexBounds","_computeIndex","_getDisplaySameSlide","_mod","addEventListenerEnhanced","_on2","_off2","injectStyle","styleInjected","createTransition","easeFunction","applyRotationMatrix","touch","axis","rotationMatrix","axisProperties","adaptMouse","touches","getDomTreeShapes","rootNode","domTreeShapes","hasAttribute","findNativeHandler","goingForward","scrollPosition","areNotAtStart","areNotAtEnd","clientLength","scrollLength","nodeHowClaimedTheScroll","_extends3","_extends2","_objectWithoutProperties3","_objectWithoutProperties2","_getPrototypeOf2","_getPrototypeOf","_classCallCheck3","_classCallCheck2","_createClass3","_createClass2","_possibleConstructorReturn3","_possibleConstructorReturn2","_inherits3","_inherits2","_properties2","_on","_off","slide","WebkitFlexShrink","flexShrink","overflowX","x-reverse","overflowY","y-reverse","flexDirection","translate","SwipeableViews","_Component","_ref","containerNode","ignoreNextScrollEvents","lastX","vx","startY","isSwiping","started","transitionListener","touchMoveListener","activeSlide","handleSwipeStart","computedStyle","transformValues","rootStyle","tranformNormalized","handleSwipeMove","_this$props","ignoreNativeScroll","onSwitching","dx","dy","_reactSwipeableViewsCore","constant","computeIndex","isDragging","indexCurrent","handleTouchStart","handleSwipeEnd","indexLatest","delta","indexNew","hysteresis","onChangeIndex","handleTransitionEnd","handleTouchEnd","handleMouseDown","handleMouseUp","handleMouseLeave","handleMouseMove","onMouseMove","handleScroll","onScroll","swipeableViews","slideUpdateHeight","updateHeight","isFirstRender","disableLazyLoading","heightLatest","getDisplaySameSlide","animateTransitions","onTransitionEnd","animateHeight","containerStyleProp","enableMouseEvents","slideStyleProp","slideStyle","slideClassName","other","touchEvents","mouseEvents","WebkitTransition","additionalTranstion","WebkitFlexDirection","indexChild","hidden","data-swipeable","_SwipeableViews2","_SwipeableViews","TabPanel","controlledById","TabsContainer","_handleTabChange","tabId","tabControlsId","tabChildren","onTabChange","activeTabIndex","_handleSwipeChange","_resizePanel","activePanel","panelHeight","defaultTabIndex","panelStyle","panelClassName","panelComponent","slideHeightProp","swipeableViewsStyle","swipeableViewsClassName","headerComponent","headerZDepth","labelAndIcon","swipeableViewsProps","tabsEl","tab","controlsId","childrenProps","tabs","prominentToolbar","toolbarProps","baseSlideStyle","TabIndicator","MenuTab","_toggleVisible","tabStyle","tabClassName","overflowAtIndex","TabOverflowButton","MOBILE_TAB_MIN_WIDTH","DESKTOP_TAB_MIN_WIDTH","Tabs","_positionElements","initialRender","overflowMenu","_shouldAlign","_calcPaddingLeft","_calcOverflowIndex","indicatorPosition","_calcIndicatorPosition","allTabs","containerWidth","activeWidth","activeOffset","inFullViewRight","_mapToOverflowTabProps","tabEl","handleTabChange","_nextIndexes","increment","overflowIndex","visibleAmt","_showNextTabs","_showPreviousTabs","indicatorWidth","prevLabels","alignToKeyline","totalWidth","indicatorVisible","indicatorOffset","overflowMenuLabel","overflowMenuIcon","overflowMenuIconChildren","overflowMenuIconClassName","nextControl","previousControl","Tab"],"mappings":"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"}
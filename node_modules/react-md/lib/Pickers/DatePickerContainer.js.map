{"version":3,"sources":["../../src/js/Pickers/DatePickerContainer.js"],"names":["DatePickerContainer","props","date","value","defaultValue","DateTimeFormat","locales","minDate","maxDate","_getDate","_getFormatOptions","format","Date","_validateDateRange","defaultCalendarDate","initialCalendarDate","calendarTempDate","visible","initiallyOpen","defaultVisible","state","calendarDate","calendarMode","initialCalendarMode","defaultCalendarMode","nextProps","minEqual","maxEqual","setState","prevProps","prevState","inline","isOpen","pVisible","_handleOutsideClick","window","addEventListener","_closeOnEsc","removeEventListener","formatOptions","timeZone","style","className","pickerStyle","pickerClassName","pickerHeaderClassName","pickerContentClassName","pickerFooterClassName","inputStyle","inputClassName","textFieldStyle","textFieldClassName","label","placeholder","icon","displayMode","fullWidth","lineDirection","id","disabled","closeOnEsc","animateInline","portal","renderNode","lastChild","block","paddedBlock","active","error","floating","required","leftIconStateful","rightIcon","rightIconStateful","customSize","errorText","helpText","helpOnFocus","inlineIndicator","disableScrollLocking","ariaLabel","propNextIcon","nextIcon","propPreviousIcon","previousIcon","previousIconChildren","previousIconClassName","nextIconChildren","nextIconClassName","propValue","propVisible","onChange","readOnly","onVisibilityChange","adjustMinWidth","picker","_handleCancelClick","_handleOkClick","_changeCalendarMode","_previousMonth","_nextMonth","_setCalendarTempDate","_setCalendarTempYear","content","_setContainer","_toggleOpen","_handleKeyDown","_getFormattedValue","propTypes","oneOfType","string","number","object","calendarClassName","yearPickerClassName","node","bool","instanceOf","func","isRequired","arrayOf","okLabel","okPrimary","cancelLabel","cancelPrimary","oneOf","propName","component","others","err","Error","autoOk","yearsDisplayed","shape","weekday","era","year","month","day","hour","minute","second","timeZoneName","firstDayOfWeek","disableWeekEnds","showAllDays","disableOuterDates","calendarDateClassName","calendarOuterDateClassName","calendarTitleClassName","calendarTitleFormat","calendarWeekdayClassName","calendarWeekdayFormat","initialYearsDisplayed","defaultProps","navigator","userLanguage","language","container","_container","e","which","keyCode","contains","target","_timeout","setTimeout","getFullYear","nextDate","setFullYear","nextTemp"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;+eArBA;;;AAuBA;;;;;;;;;;;;;IAaqBA,mB;;;AAkgBnB,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA,0IACXA,KADW;;AAAA;;AAGjB,QAAIC,aAAJ;AACA,QAAIC,cAAJ;AAJiB,QAMfC,YANe,GAWbH,KAXa,CAMfG,YANe;AAAA,QAOfC,cAPe,GAWbJ,KAXa,CAOfI,cAPe;AAAA,QAQfC,OARe,GAWbL,KAXa,CAQfK,OARe;AAAA,QASfC,OATe,GAWbN,KAXa,CASfM,OATe;AAAA,QAUfC,OAVe,GAWbP,KAXa,CAUfO,OAVe;;;AAajB,QAAI,OAAOP,MAAME,KAAb,KAAuB,WAA3B,EAAwC;AACtCD,aAAO,MAAKO,QAAL,CAAcR,MAAME,KAApB,CAAP;AACD,KAFD,MAEO,IAAIC,YAAJ,EAAkB;AACvBF,aAAO,MAAKO,QAAL,CAAcL,YAAd,CAAP;AACAD,cAAQ,OAAOC,YAAP,KAAwB,QAAxB,GACJA,YADI,GAEJC,eAAeC,OAAf,EAAwB,MAAKI,iBAAL,EAAxB,EAAkDC,MAAlD,CAAyDP,YAAzD,CAFJ;AAGD,KALM,MAKA;AACLF,aAAO,IAAIU,IAAJ,EAAP;AACAT,cAAQ,EAAR;AACD;;AAEDD,WAAO,MAAKW,kBAAL,CAAwBX,IAAxB,EAA8BK,OAA9B,EAAuCC,OAAvC,CAAP;;AAEA,QAAMM,sBAAsB,OAAOb,MAAMc,mBAAb,KAAqC,WAArC,GACxBd,MAAMc,mBADkB,GAExBd,MAAMa,mBAFV;AAGA,QAAIE,mBAAmBd,IAAvB;AACA,QAAI,OAAOY,mBAAP,KAA+B,WAA/B,IAA8C,CAACb,MAAME,KAArD,IAA8D,CAACF,MAAMG,YAAzE,EAAuF;AACrFY,yBAAmB,MAAKP,QAAL,CAAcK,mBAAd,CAAnB;AACAZ,aAAOc,gBAAP;AACD,KAHD,MAGO,IAAIA,qBAAqB,IAAzB,EAA+B;AACpCA,yBAAmB,IAAIJ,IAAJ,EAAnB;AACAV,aAAO,IAAIU,IAAJ,EAAP;AACD;;AAED,QAAMK,UAAU,OAAOhB,MAAMiB,aAAb,KAA+B,WAA/B,GACZjB,MAAMiB,aADM,GAEZ,CAAC,CAACjB,MAAMkB,cAFZ;;AAIA,UAAKC,KAAL,GAAa;AACXjB,kBADW;AAEXc,sBAFW;AAGXI,oBAAcnB,IAHH;AAIXc,wCAJW;AAKXM,oBAAcrB,MAAMsB,mBAAN,IAA6BtB,MAAMuB;AALtC,KAAb;AA3CiB;AAkDlB;;;;8CAEyBC,S,EAAW;AAAA,UAC3BtB,KAD2B,GACCsB,SADD,CAC3BtB,KAD2B;AAAA,UACpBI,OADoB,GACCkB,SADD,CACpBlB,OADoB;AAAA,UACXC,OADW,GACCiB,SADD,CACXjB,OADW;;AAEnC,UAAMkB,WAAW,2BAAY,KAAKzB,KAAL,CAAWM,OAAvB,EAAgCA,OAAhC,CAAjB;AACA,UAAMoB,WAAW,2BAAY,KAAK1B,KAAL,CAAWO,OAAvB,EAAgCA,OAAhC,CAAjB;AACA,UAAI,KAAKP,KAAL,CAAWE,KAAX,KAAqBA,KAArB,IAA8B,CAACuB,QAA/B,IAA2C,CAACC,QAAhD,EAA0D;AAAA,YAClDN,YADkD,GACjC,KAAKD,KAD4B,CAClDC,YADkD;;AAExD,YAAI,OAAOlB,KAAP,KAAiB,WAArB,EAAkC;AAChCkB,yBAAe,KAAKZ,QAAL,CAAcN,KAAd,CAAf;AACD;;AAEDkB,uBAAe,KAAKR,kBAAL,CAAwBQ,YAAxB,EAAsCd,OAAtC,EAA+CC,OAA/C,CAAf;;AAEA,YAAI,CAAC,2BAAY,KAAKY,KAAL,CAAWC,YAAvB,EAAqCA,YAArC,CAAL,EAAyD;AACvD,eAAKO,QAAL,CAAc,EAAEP,0BAAF,EAAgBL,kBAAkBK,YAAlC,EAAd;AACD;AACF;AACF;;;uCAEkBQ,S,EAAWC,S,EAAW;AAAA,mBACZ,KAAK7B,KADO;AAAA,UAC/B8B,MAD+B,UAC/BA,MAD+B;AAAA,UACvBC,MADuB,UACvBA,MADuB;;AAEvC,UAAMf,UAAU,OAAOe,MAAP,KAAkB,WAAlB,GACZA,MADY,GAEZ,wBAAS,KAAK/B,KAAd,EAAqB,KAAKmB,KAA1B,EAAiC,SAAjC,CAFJ;AAGA,UAAMa,WAAW,OAAOJ,UAAUG,MAAjB,KAA4B,WAA5B,GACbH,UAAUG,MADG,GAEb,wBAASH,SAAT,EAAoBC,SAApB,EAA+B,SAA/B,CAFJ;;AAIA,UAAIb,YAAYgB,QAAhB,EAA0B;AACxB;AACD;;AAED,UAAIhB,OAAJ,EAAa;AACX,YAAIc,MAAJ,EAAY;AACV,oDAA2B,KAAKG,mBAAhC,EAAqD,IAArD;AACAC,iBAAOC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKC,WAAxC;AACD;AACF,OALD,MAKO,IAAIN,MAAJ,EAAY;AACjB,kDAA2B,KAAKG,mBAAhC,EAAqD,KAArD;AACAC,eAAOG,mBAAP,CAA2B,SAA3B,EAAsC,KAAKD,WAA3C;AACD;AACF;;;2CAEsB;AACrB,UAAMpB,UAAU,OAAO,KAAKhB,KAAL,CAAW+B,MAAlB,KAA6B,WAA7B,GACZ,KAAK/B,KAAL,CAAW+B,MADC,GAEZ,wBAAS,KAAK/B,KAAd,EAAqB,KAAKmB,KAA1B,EAAiC,SAAjC,CAFJ;;AAIA,UAAIH,WAAW,KAAKhB,KAAL,CAAW8B,MAA1B,EAAkC;AAChC,kDAA2B,KAAKG,mBAAhC,EAAqD,KAArD;AACAC,eAAOG,mBAAP,CAA2B,SAA3B,EAAsC,KAAKD,WAA3C;AACD;AACF;;;6BAEQlC,K,EAAO;AACd,UAAIA,UAAU,EAAV,IAAgBA,UAAU,IAA9B,EAAoC;AAClC,eAAO,IAAIS,IAAJ,EAAP;AACD,OAFD,MAEO,IAAI,OAAOT,KAAP,KAAiB,QAArB,EAA+B;AACpC,eAAO,IAAIS,IAAJ,CAAST,KAAT,CAAP;AACD;;AAED,aAAOA,KAAP;AACD;;;wCAEmB;AAAA,oBACkB,KAAKF,KADvB;AAAA,UACVsC,aADU,WACVA,aADU;AAAA,UACKC,QADL,WACKA,QADL;;AAElB,0BAAYD,aAAZ,IAA2BC,kBAA3B;AACD;;;;;AAwJD;;;;;;;uCAOmBvC,K,EAAOmB,K,EAAO;AAAA,UACvBf,cADuB,GACKJ,KADL,CACvBI,cADuB;AAAA,UACPC,OADO,GACKL,KADL,CACPK,OADO;;AAE/B,UAAMH,QAAQ,wBAASF,KAAT,EAAgBmB,KAAhB,EAAuB,OAAvB,CAAd;AACA,UAAI,CAACjB,KAAL,EAAY;AACV,eAAO,EAAP;AACD,OAFD,MAEO,IAAIA,iBAAiBS,IAArB,EAA2B;AAChC,eAAOP,eAAeC,OAAf,EAAwB,KAAKI,iBAAL,EAAxB,EAAkDC,MAAlD,CAAyD,IAAIC,IAAJ,CAAST,KAAT,CAAzD,CAAP;AACD,OAFM,MAEA;AACL,eAAOA,KAAP;AACD;AACF;;AAED;;;;;;;;;;;;;;;uCAYmBkB,Y,EAAcd,O,EAASC,O,EAAS;AACjD,UAAIN,OAAOmB,YAAX;AACA,UAAId,WAAWA,UAAUc,YAAzB,EAAuC;AACrCnB,eAAO,IAAIU,IAAJ,CAASL,OAAT,CAAP;AACD;;AAED,UAAIC,WAAWA,UAAUa,YAAzB,EAAuC;AACrCnB,eAAO,IAAIU,IAAJ,CAASJ,OAAT,CAAP;AACD;;AAED,aAAON,IAAP;AACD;;;6BAEQ;AAAA,oBAoEH,KAAKD,KApEF;AAAA,UAELwC,KAFK,WAELA,KAFK;AAAA,UAGLC,SAHK,WAGLA,SAHK;AAAA,UAILC,WAJK,WAILA,WAJK;AAAA,UAKLC,eALK,WAKLA,eALK;AAAA,UAMLC,qBANK,WAMLA,qBANK;AAAA,UAOLC,sBAPK,WAOLA,sBAPK;AAAA,UAQLC,qBARK,WAQLA,qBARK;AAAA,UASLC,UATK,WASLA,UATK;AAAA,UAULC,cAVK,WAULA,cAVK;AAAA,UAWLC,cAXK,WAWLA,cAXK;AAAA,UAYLC,kBAZK,WAYLA,kBAZK;AAAA,UAaLC,KAbK,WAaLA,KAbK;AAAA,UAcLC,WAdK,WAcLA,WAdK;AAAA,UAeLC,IAfK,WAeLA,IAfK;AAAA,UAgBLvB,MAhBK,WAgBLA,MAhBK;AAAA,UAiBLwB,WAjBK,WAiBLA,WAjBK;AAAA,UAkBLC,SAlBK,WAkBLA,SAlBK;AAAA,UAmBLC,aAnBK,WAmBLA,aAnBK;AAAA,UAoBLC,EApBK,WAoBLA,EApBK;AAAA,UAqBLC,QArBK,WAqBLA,QArBK;AAAA,UAsBLC,UAtBK,WAsBLA,UAtBK;AAAA,UAuBLC,aAvBK,WAuBLA,aAvBK;AAAA,UAwBLC,MAxBK,WAwBLA,MAxBK;AAAA,UAyBLC,UAzBK,WAyBLA,UAzBK;AAAA,UA0BLC,SA1BK,WA0BLA,SA1BK;AAAA,UA2BLC,KA3BK,WA2BLA,KA3BK;AAAA,UA4BLC,WA5BK,WA4BLA,WA5BK;AAAA,UA6BLC,MA7BK,WA6BLA,MA7BK;AAAA,UA8BLC,KA9BK,WA8BLA,KA9BK;AAAA,UA+BLC,QA/BK,WA+BLA,QA/BK;AAAA,UAgCLC,QAhCK,WAgCLA,QAhCK;AAAA,UAiCLC,gBAjCK,WAiCLA,gBAjCK;AAAA,UAkCLC,SAlCK,WAkCLA,SAlCK;AAAA,UAmCLC,iBAnCK,WAmCLA,iBAnCK;AAAA,UAoCLC,UApCK,WAoCLA,UApCK;AAAA,UAqCLC,SArCK,WAqCLA,SArCK;AAAA,UAsCLC,QAtCK,WAsCLA,QAtCK;AAAA,UAuCLC,WAvCK,WAuCLA,WAvCK;AAAA,UAwCLC,eAxCK,WAwCLA,eAxCK;AAAA,UAyCLC,oBAzCK,WAyCLA,oBAzCK;AAAA,UA0CSC,SA1CT,WA0CL,YA1CK;AAAA,UA2CKC,YA3CL,WA2CLC,QA3CK;AAAA,UA4CSC,gBA5CT,WA4CLC,YA5CK;AAAA,UA+CLpD,MA/CK,WA+CLA,MA/CK;AAAA,UAgDLqD,oBAhDK,WAgDLA,oBAhDK;AAAA,UAiDLC,qBAjDK,WAiDLA,qBAjDK;AAAA,UAkDLC,gBAlDK,WAkDLA,gBAlDK;AAAA,UAmDLC,iBAnDK,WAmDLA,iBAnDK;AAAA,UAqDEC,SArDF,WAqDLtF,KArDK;AAAA,UAsDIuF,WAtDJ,WAsDLzE,OAtDK;AAAA,UAuDLb,YAvDK,WAuDLA,YAvDK;AAAA,UAwDLe,cAxDK,WAwDLA,cAxDK;AAAA,UAyDLwE,QAzDK,WAyDLA,QAzDK;AAAA,UA0DLC,QA1DK,WA0DLA,QA1DK;AAAA,UA2DLC,kBA3DK,WA2DLA,kBA3DK;AAAA,UA4DL/E,mBA5DK,WA4DLA,mBA5DK;AAAA,UA+DLC,mBA/DK,WA+DLA,mBA/DK;AAAA,UAgELG,aAhEK,WAgELA,aAhEK;AAAA,UAiEL4E,cAjEK,WAiELA,cAjEK;AAAA,UAmEF7F,KAnEE,ynBA0CL,YA1CK;;AAsEP,UAAMiF,WAAW,iCAAkBM,iBAAlB,EAAqCD,gBAArC,EAAuDN,YAAvD,CAAjB;AACA,UAAMG,eAAe,iCAAkBE,qBAAlB,EAAyCD,oBAAzC,EAA+DF,gBAA/D,CAArB;AACA,UAAMlE,UAAU,OAAOe,MAAP,KAAkB,WAAlB,GACZA,MADY,GAEZ,wBAAS,KAAK/B,KAAd,EAAqB,KAAKmB,KAA1B,EAAiC,SAAjC,CAFJ;;AAIA,UAAM2E,SACJ,iEACM,KAAK3E,KADX,EAEMnB,KAFN;AAGE,kBAAUiF,QAHZ;AAIE,sBAAcE,YAJhB;AAKE,cAAM,CAAC,CAAC9B,IALV;AAME,gBAAQvB,MANV;AAOE,eAAOY,WAPT;AAQE,mBAAWC,eARb;AASE,yBAAiBC,qBATnB;AAUE,0BAAkBC,sBAVpB;AAWE,yBAAiBC,qBAXnB;AAYE,qBAAaQ,WAZf;AAaE,uBAAe,KAAKyC,kBAbtB;AAcE,mBAAW,KAAKC,cAdlB;AAeE,4BAAoB,KAAKC,mBAf3B;AAgBE,yBAAiB,KAAKC,cAhBxB;AAiBE,qBAAa,KAAKC,UAjBpB;AAkBE,6BAAqB,KAAKC,oBAlB5B;AAmBE,6BAAqB,KAAKC;AAnB5B,SADF;;AAwBA,UAAIC,gBAAJ;AACA,UAAIxE,MAAJ,EAAY;AACVwE,kBAAU;AAAA;AAAA,YAAU,WAAW,CAACtF,OAAtB,EAA+B,SAAS4C,aAAxC;AAAwDkC;AAAxD,SAAV;AACD,OAFD,MAEO;AACLQ,kBACE;AAAA;AAAA;AACE,gBAAO7C,EAAP,YADF;AAEE,qBAASzC,OAFX;AAGE,oBAAQ,KAAK+E,kBAHf;AAIE,6BAAgB,mBAJlB;AAKE,8BAAiB,2BALnB;AAME,0BAAYhB,SANd;AAOE,wBAAYpB,UAPd;AAQE,wBAAYG,UARd;AASE,oBAAQD,MATV;AAUE,uBAAWE,SAVb;AAWE,0BAAc,KAXhB;AAYE,kCAAsBe;AAZxB;AAcGgB;AAdH,SADF;AAkBD;;AAED,aACE;AAAA;AAAA,UAAK,OAAOtD,KAAZ,EAAmB,WAAW,0BAAG,qBAAH,EAA0BC,SAA1B,CAA9B,EAAoE,KAAK,KAAK8D,aAA9E;AACE;AACE,cAAI9C,EADN;AAEE,iBAAOR,cAFT;AAGE,qBAAW,0BAAG,EAAE,qBAAqB,CAACS,QAAxB,EAAH,EAAuCR,kBAAvC,CAHb;AAIE,sBAAYH,UAJd;AAKE,0BAAgB,0BAAG,EAAE,qBAAqB,CAACW,QAAxB,EAAH,EAAuCV,cAAvC,CALlB;AAME,kBAAQkB,UAAUlD,OANpB;AAOE,iBAAOmD,KAPT;AAQE,oBAAUC,YAAYpD,OARxB;AASE,oBAAUqD,QATZ;AAUE,oBAAUX,QAVZ;AAWE,oBAAUL,IAXZ;AAYE,4BAAkBiB,gBAZpB;AAaE,qBAAWC,SAbb;AAcE,6BAAmBC,iBAdrB;AAeE,2BAAiBK,eAfnB;AAgBE,iBAAOb,KAhBT;AAiBE,uBAAaC,WAjBf;AAkBE,qBAAWV,SAlBb;AAmBE,yBAAeC,aAnBjB;AAoBE,sBAAYiB,UApBd;AAqBE,oBAAUE,QArBZ;AAsBE,uBAAaC,WAtBf;AAuBE,qBAAWF,SAvBb;AAwBE,iBAAOvB,KAxBT;AAyBE,uBAAaC,WAzBf;AA0BE,mBAAS,KAAKoD,WA1BhB;AA2BE,qBAAW,KAAKC,cA3BlB;AA4BE,iBAAO,KAAKC,kBAAL,CAAwB,KAAK1G,KAA7B,EAAoC,KAAKmB,KAAzC,CA5BT;AA6BE;AA7BF,UADF;AAgCGmF;AAhCH,OADF;AAoCD;;;;;;AA59BkBvG,mB,CACZ4G,S,GAAY;AACjB;;;AAGAlD,MAAI,iCAAkB,oBAAUmD,SAAV,CAAoB,CACxC,oBAAUC,MAD8B,EAExC,oBAAUC,MAF8B,CAApB,CAAlB,CAJa;;AASjB;;;AAGA,gBAAc,iCAAkB,oBAAUD,MAA5B,CAZG;;AAcjB;;;AAGArE,SAAO,oBAAUuE,MAjBA;;AAmBjB;;;AAGAtE,aAAW,oBAAUoE,MAtBJ;;AAwBjB;;;AAGAnE,eAAa,oBAAUqE,MA3BN;;AA6BjB;;;AAGApE,mBAAiB,oBAAUkE,MAhCV;;AAkCjB;;;AAGAjE,yBAAuB,oBAAUiE,MArChB;;AAuCjB;;;AAGAhE,0BAAwB,oBAAUgE,MA1CjB;;AA4CjB;;;AAGA/D,yBAAuB,oBAAU+D,MA/ChB;;AAiDjB;;;AAGAG,qBAAmB,oBAAUH,MApDZ;;AAsDjB;;;AAGAI,uBAAqB,oBAAUJ,MAzDd;;AA2DjB;;;AAGA9D,cAAY,oBAAUgE,MA9DL;;AAgEjB;;;AAGA/D,kBAAgB,oBAAU6D,MAnET;;AAqEjB;;;AAGA5D,kBAAgB,oBAAU8D,MAxET;;AA0EjB;;;AAGA7D,sBAAoB,oBAAU2D,MA7Eb;;AA+EjB;;;;;AAKAxD,QAAM,oBAAU6D,IApFC;;AAsFjB;;;AAGAhG,kBAAgB,oBAAUiG,IAzFT;;AA2FjB;;;;AAIAhE,SAAO,oBAAU+D,IA/FA;;AAiGjB;;;AAGA9D,eAAa,oBAAUyD,MApGN;;AAsGjB;;;;;AAKA3G,SAAO,0BAAW,oBAAU0G,SAAV,CAAoB,CACpC,oBAAUC,MAD0B,EAEpC,oBAAUO,UAAV,CAAqBzG,IAArB,CAFoC,CAApB,CAAX,EAGH,UAHG,EAGS,cAHT,CA3GU;;AAgHjB;;;;AAIAR,gBAAc,oBAAUyG,SAAV,CAAoB,CAChC,oBAAUC,MADsB,EAEhC,oBAAUO,UAAV,CAAqBzG,IAArB,CAFgC,CAApB,CApHG;;AAyHjB;;;;;AAKAE,uBAAqB,oBAAU+F,SAAV,CAAoB,CACvC,oBAAUC,MAD6B,EAEvC,oBAAUO,UAAV,CAAqBzG,IAArB,CAFuC,CAApB,CA9HJ;;AAmIjB;;;;;;;AAOA+E,YAAU,oBAAU2B,IA1IH;;AA4IjB;;;;;;;AAOAjH,kBAAgB,oBAAUiH,IAAV,CAAeC,UAnJd;;AAqJjB;;;;AAIAjH,WAAS,oBAAUuG,SAAV,CAAoB,CAC3B,oBAAUC,MADiB,EAE3B,oBAAUU,OAAV,CAAkB,oBAAUV,MAA5B,CAF2B,CAApB,EAGNS,UA5Jc;;AA8JjB;;;AAGAE,WAAS,oBAAUN,IAAV,CAAeI,UAjKP;;AAmKjB;;;AAGAG,aAAW,oBAAUN,IAtKJ;;AAwKjB;;;AAGAO,eAAa,oBAAUR,IAAV,CAAeI,UA3KX;;AA6KjB;;;AAGAK,iBAAe,oBAAUR,IAhLR;;AAkLjB;;;AAGA5F,uBAAqB,oBAAUqG,KAAV,CAAgB,CAAC,UAAD,EAAa,MAAb,CAAhB,CArLJ;;AAuLjB;;;AAGAzC,gBAAc,oBAAU+B,IA1LP;;AA4LjB;;;AAGAjC,YAAU,oBAAUiC,IA/LH;;AAiMjB;;;;AAIA5G,WAAS,oBAAU8G,UAAV,CAAqBzG,IAArB,CArMQ;;AAuMjB;;;;AAIAJ,WAAS,iBAACP,KAAD,EAAQ6H,QAAR,EAAkBC,SAAlB,EAA2C;AAAA,sCAAXC,MAAW;AAAXA,YAAW;AAAA;;AAClD,QAAMC,MAAM,oBAAUZ,UAAV,CAAqBzG,IAArB,oBAA2BX,KAA3B,EAAkC6H,QAAlC,EAA4CC,SAA5C,SAA0DC,MAA1D,EAAZ;AACA,QAAIC,OAAO,CAAChI,MAAMM,OAAd,IAAyB,CAACN,MAAM6H,QAAN,CAA9B,EAA+C;AAC7C,aAAOG,GAAP;AACD;;AAJiD,QAM1C1H,OAN0C,GAMrBN,KANqB,CAM1CM,OAN0C;AAAA,QAMjCC,OANiC,GAMrBP,KANqB,CAMjCO,OANiC;;AAOlD,QAAID,UAAUC,OAAd,EAAuB;AACrB,aAAO,IAAI0H,KAAJ,sBACa3H,OADb,2CACwDC,OADxD,QAAP;AAGD;;AAED,WAAO,IAAP;AACD,GAzNgB;;AA2NjB;;;;AAIA2H,UAAQ,oBAAUf,IA/ND;;AAiOjB;;;AAGAgB,kBAAgB,oBAAUrB,MApOT;;AAsOjB;;;;AAIAhF,UAAQ,oBAAUqF,IA1OD;;AA4OjB;;;;;AAKA7D,eAAa,oBAAUsE,KAAV,CAAgB,CAAC,WAAD,EAAc,UAAd,CAAhB,CAjPI;;AAmPjB;;;AAGAtF,iBAAe,oBAAU8F,KAAV,CAAgB;AAC7BC,aAAS,oBAAUT,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,CAAhB,CADoB;AAE7BU,SAAK,oBAAUV,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,CAAhB,CAFwB;AAG7BW,UAAM,oBAAUX,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB,CAHuB;AAI7BY,WAAO,oBAAUZ,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,EAAiC,OAAjC,EAA0C,MAA1C,CAAhB,CAJsB;AAK7Ba,SAAK,oBAAUb,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB,CALwB;AAM7Bc,UAAM,oBAAUd,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB,CANuB;AAO7Be,YAAQ,oBAAUf,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB,CAPqB;AAQ7BgB,YAAQ,oBAAUhB,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB,CARqB;AAS7BiB,kBAAc,oBAAUjB,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB;AATe,GAAhB,CAtPE;;AAkQjB;;;;AAIArF,YAAU,oBAAUsE,MAAV,CAAiBS,UAtQV;;AAwQjB;;;AAGA/D,aAAW,oBAAU4D,IA3QJ;;AA6QjB;;;;AAIA3D,iBAAe,oBAAUoE,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAhB,CAjRE;;AAmRjB;;;;AAIA5G,WAAS,0BAAW,oBAAUmG,IAArB,EAA2B,oBAA3B,EAAiD,gBAAjD,CAvRQ;;AAyRjB;;;;;;;;AAQAvB,sBAAoB,oBAAUyB,IAjSb;;AAmSjB;;;AAGA3D,YAAU,oBAAUyD,IAtSH;;AAwSjB;;;AAGAxD,cAAY,oBAAUwD,IA3SL;;AA6SjB;;;AAGAvD,iBAAe,oBAAUuD,IAhTR;;AAkTjB;;;;;AAKA9C,YAAU,oBAAU8C,IAvTH;;AAyTjB;;;AAGAnD,SAAO,oBAAU2C,SAAV,CAAoB3C,KA5TV;;AA8TjB;;;AAGAC,eAAa,oBAAU0C,SAAV,CAAoB1C,WAjUhB;;AAmUjB;;;AAGAC,UAAQ,oBAAUyC,SAAV,CAAoBzC,MAtUX;;AAwUjB;;;AAGAC,SAAO,oBAAUwC,SAAV,CAAoBxC,KA3UV;;AA6UjB;;;AAGAC,YAAU,oBAAUuC,SAAV,CAAoBvC,QAhVb;;AAkVjB;;;AAGAE,oBAAkB,oBAAUqC,SAAV,CAAoBrC,gBArVrB;;AAuVjB;;;AAGAC,aAAW,oBAAUoC,SAAV,CAAoBpC,SA1Vd;;AA4VjB;;;AAGAC,qBAAmB,oBAAUmC,SAAV,CAAoBnC,iBA/VtB;;AAiWjB;;;AAGAC,cAAY,oBAAUkC,SAAV,CAAoBlC,UApWf;;AAsWjB;;;AAGAC,aAAW,oBAAUiC,SAAV,CAAoBjC,SAzWd;;AA2WjB;;;AAGAC,YAAU,oBAAUgC,SAAV,CAAoBhC,QA9Wb;;AAgXjB;;;AAGAC,eAAa,oBAAU+B,SAAV,CAAoB/B,WAnXhB;;AAqXjB;;;AAGAC,mBAAiB,oBAAU8B,SAAV,CAAoB9B,eAxXpB;;AA0XjB;;;;;;AAMAhB,UAAQ,oBAAUsD,IAhYD;;AAkYjB;;;;AAIArD,cAAY,oBAAUiD,MAtYL;;AAwYjB;;;;AAIApB,YAAU,oBAAUwB,IA5YH;;AA8YjB;;;AAGA2B,kBAAgB,oBAAUlB,KAAV,CAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAhB,CAjZC;;AAmZjB;;;AAGAmB,mBAAiB,oBAAU5B,IAtZV;;AAwZjB;;;AAGA6B,eAAa,oBAAU7B,IA3ZN;;AA6ZjB;;;;;;;;;AASA8B,qBAAmB,oBAAU9B,IAtaZ;;AAwajB;;;AAGA+B,yBAAuB,oBAAUrC,MA3ahB;;AA6ajB;;;;;;;AAOAsC,8BAA4B,oBAAUtC,MApbrB;;AAsbjB;;;AAGAuC,0BAAwB,oBAAUvC,MAzbjB;;AA2bjB;;;AAGAwC,uBAAqB,oBAAUjB,KAAV,CAAgB;AACnCE,SAAK,oBAAUV,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,CAAhB,CAD8B;AAEnCW,UAAM,oBAAUX,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB,CAF6B;AAGnCY,WAAO,oBAAUZ,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,EAAiC,OAAjC,EAA0C,MAA1C,CAAhB;AAH4B,GAAhB,CA9bJ;;AAocjB;;;AAGA0B,4BAA0B,oBAAUzC,MAvcnB;;AAycjB;;;AAGA0C,yBAAuB,oBAAU3B,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,CAAhB,CA5cN;;AA8cjB;;;AAGA9C,wBAAsB,oBAAUqC,IAjdf;;AAmdjB;;;;AAIApD,aAAW,oBAAUoD,IAvdJ;;AAydjB/B,wBAAsB,0BAAW,oBAAU8B,IAArB,EAA2B,qCAA3B,CAzdL;AA0djB7B,yBAAuB,0BAAW,oBAAUwB,MAArB,EAA6B,qCAA7B,CA1dN;AA2djBvB,oBAAkB,0BAAW,oBAAU4B,IAArB,EAA2B,iCAA3B,CA3dD;AA4djB3B,qBAAmB,0BAAW,oBAAUsB,MAArB,EAA6B,iCAA7B,CA5dF;AA6djBhB,kBAAgB,0BAAW,oBAAUsB,IAArB,EAA2B,kCAA3B,CA7dC;AA8djBpF,UAAQ,0BAAW,oBAAUoF,IAArB,EAA2B,uBAA3B,CA9dS;AA+djBlG,iBAAe,0BAAW,oBAAUkG,IAArB,EAA2B,8BAA3B,CA/dE;AAgejBrG,uBAAqB,0BAAW,oBAAU8F,SAAV,CAAoB,CAClD,oBAAUC,MADwC,EAElD,oBAAUO,UAAV,CAAqBzG,IAArB,CAFkD,CAApB,CAAX,EAGjB,mCAHiB,CAheJ;AAoejBW,uBAAqB,0BAAW,oBAAUsG,KAAV,CAAgB,CAAC,UAAD,EAAa,MAAb,CAAhB,CAAX,EAAkD,mCAAlD,CApeJ;AAqejB4B,yBAAuB,0BACrB,oBAAU1C,MADW,EAErB,6EAFqB;AAreN,C;AADA/G,mB,CA4eZ0J,Y,GAAe;AACpB7F,iBAAe,IADK;AAEpBuB,gBAAc;AAAA;AAAA;AAAA;AAAA,GAFM;AAGpBF,YAAU;AAAA;AAAA;AAAA;AAAA,GAHU;AAIpBiD,UAAQ,KAJY;AAKpB7E,QAAM;AAAA;AAAA;AAAA;AAAA,GALc;AAMpB8E,kBAAgB,GANI;AAOpB5G,uBAAqB,UAPD;AAQpBnB,0CARoB,EAQY;AAChCC,WAAS,OAAO6B,MAAP,KAAkB,WAAlB,GACLA,OAAOwH,SAAP,CAAiBC,YAAjB,IAAiCzH,OAAOwH,SAAP,CAAiBE,QAD7C,GAEL,OAXgB;AAYpBpC,WAAS,IAZW;AAapBC,aAAW,IAbS;AAcpBC,eAAa,QAdO;AAepBC,iBAAe,IAfK;AAgBpBhE,cAAY,IAhBQ;AAiBpBmB,wBAAsB,KAjBF;AAkBpB,gBAAc,aAlBM;AAmBpBvC,YAAU;AAnBU,C;;;;;OA8ItBgE,a,GAAe,UAACsD,SAAD,EAAe;AAC5B,WAAKC,UAAL,GAAkBD,SAAlB;AACD,G;;OAEDzH,W,GAAc,UAAC2H,CAAD,EAAO;AACnB,QAAI,CAACA,EAAEC,KAAF,IAAWD,EAAEE,OAAd,mBAAJ,EAAoC;AAClC,aAAKlE,kBAAL,CAAwBgE,CAAxB;AACD;AACF,G;;OAED9H,mB,GAAsB,UAAC8H,CAAD,EAAO;AAC3B,QAAI,OAAKD,UAAL,IAAmB,CAAC,OAAKA,UAAL,CAAgBI,QAAhB,CAAyBH,EAAEI,MAA3B,CAAxB,EAA4D;AAC1D,aAAKpE,kBAAL,CAAwBgE,CAAxB;AACD;AACF,G;;OAEDvD,W,GAAc,UAACuD,CAAD,EAAO;AACnB,QAAI,OAAK/J,KAAL,CAAW0D,QAAX,IAAuB,OAAK1D,KAAL,CAAW2F,QAAtC,EAAgD;AAC9C;AACD;;AAED,QAAM3E,UAAU,EAAE,OAAO,OAAKhB,KAAL,CAAW+B,MAAlB,KAA6B,WAA7B,GACd,OAAK/B,KAAL,CAAW+B,MADG,GAEd,wBAAS,OAAK/B,KAAd,EAAqB,OAAKmB,KAA1B,EAAiC,SAAjC,CAFY,CAAhB;;AAIA,QAAI,OAAKnB,KAAL,CAAW4F,kBAAf,EAAmC;AACjC,aAAK5F,KAAL,CAAW4F,kBAAX,CAA8B5E,OAA9B,EAAuC+I,CAAvC;AACD;;AAED,QAAI,OAAO,OAAK/J,KAAL,CAAW+B,MAAlB,KAA6B,WAA7B,IAA4C,OAAO,OAAK/B,KAAL,CAAWgB,OAAlB,KAA8B,WAA9E,EAA2F;AACzF,aAAKW,QAAL,CAAc,EAAEX,gBAAF,EAAd;AACD;AACF,G;;OAEDyF,c,GAAiB,UAACsD,CAAD,EAAO;AACtB,+CAA4BA,CAA5B,EAA+B,OAAKvD,WAApC,EAAiD,IAAjD,EAAuD,IAAvD;;AAEA,QAAI,CAACuD,EAAEC,KAAF,IAAWD,EAAEE,OAAd,uBAAkC,OAAK9I,KAAL,CAAW+C,MAAjD,EAAyD;AACvD,aAAKvC,QAAL,CAAc,EAAEuC,QAAQ,KAAV,EAAd;AACD;AACF,G;;OAED8B,c,GAAiB,UAAC+D,CAAD,EAAO;AAAA,kBAC4C,OAAK/J,KADjD;AAAA,QACdI,cADc,WACdA,cADc;AAAA,QACEC,OADF,WACEA,OADF;AAAA,QACWqF,QADX,WACWA,QADX;AAAA,QACqBE,kBADrB,WACqBA,kBADrB;;AAEtB,QAAM1F,QAAQE,eAAeC,OAAf,EAAwB,OAAKI,iBAAL,EAAxB,EAAkDC,MAAlD,CAAyD,OAAKS,KAAL,CAAWJ,gBAApE,CAAd;AACA,QAAI2E,QAAJ,EAAc;AACZA,eAASxF,KAAT,EAAgB,IAAIS,IAAJ,CAAS,OAAKQ,KAAL,CAAWJ,gBAApB,CAAhB,EAAuDgJ,CAAvD;AACD;;AAED,QAAInE,kBAAJ,EAAwB;AACtBA,yBAAmB,KAAnB,EAA0BmE,CAA1B;AACD;;AAED,QAAI5I,cAAJ;AACA,QAAI,OAAO,OAAKnB,KAAL,CAAWE,KAAlB,KAA4B,WAAhC,EAA6C;AAC3CiB,cAAQ,EAAEjB,YAAF,EAAR;AACD;;AAED,QAAI,OAAO,OAAKF,KAAL,CAAWgB,OAAlB,KAA8B,WAA9B,IAA6C,OAAO,OAAKhB,KAAL,CAAW+B,MAAlB,KAA6B,WAA9E,EAA2F;AACzFZ,cAAQA,SAAS,EAAjB;AACAA,YAAMH,OAAN,GAAgB,KAAhB;AACD;;AAED,QAAIG,KAAJ,EAAW;AACT,aAAKQ,QAAL,CAAcR,KAAd;AACD;AACF,G;;OAED4E,kB,GAAqB,UAACgE,CAAD,EAAO;AAC1B,QAAM5I,QAAQ,EAAEJ,kBAAkB,OAAKI,KAAL,CAAWC,YAA/B,EAAd;AACA,QAAI,OAAO,OAAKpB,KAAL,CAAW+B,MAAlB,KAA6B,WAA7B,IAA4C,OAAO,OAAK/B,KAAL,CAAW+B,MAAlB,KAA6B,WAA7E,EAA0F;AACxFZ,YAAMH,OAAN,GAAgB,KAAhB;AACD;;AAED,QAAI,OAAKhB,KAAL,CAAW4F,kBAAf,EAAmC;AACjC,aAAK5F,KAAL,CAAW4F,kBAAX,CAA8B,KAA9B,EAAqCmE,CAArC;AACD;;AAED,WAAKpI,QAAL,CAAcR,KAAd;AACD,G;;OAED8E,mB,GAAsB,UAAC5E,YAAD,EAAkB;AACtC,QAAI,OAAKF,KAAL,CAAWE,YAAX,KAA4BA,YAAhC,EAA8C;AAAE;AAAS;;AAEzD,WAAKM,QAAL,CAAc,EAAEN,0BAAF,EAAd;AACD,G;;OAED6E,c,GAAiB,YAAM;AACrB,QAAM9E,eAAe,uBAAQ,OAAKD,KAAL,CAAWC,YAAnB,EAAiC,CAAC,CAAlC,EAAqC,GAArC,CAArB;AACA,WAAKO,QAAL,CAAc,EAAEP,0BAAF,EAAd;AACD,G;;OAED+E,U,GAAa,YAAM;AACjB,QAAM/E,eAAe,uBAAQ,OAAKD,KAAL,CAAWC,YAAnB,EAAiC,CAAjC,EAAoC,GAApC,CAArB;AACA,WAAKO,QAAL,CAAc,EAAEP,0BAAF,EAAd;AACD,G;;OAEDgF,oB,GAAuB,UAACrF,gBAAD,EAAsB;AAAA,kBACW,OAAKf,KADhB;AAAA,QACnCkI,MADmC,WACnCA,MADmC;AAAA,QAC3B9H,cAD2B,WAC3BA,cAD2B;AAAA,QACXC,OADW,WACXA,OADW;AAAA,QACFqF,QADE,WACFA,QADE;;;AAG3C,QAAMvE,QAAQ,EAAEJ,kCAAF,EAAd;AACA,QAAImH,MAAJ,EAAY;AACV,UAAMhI,QAAQE,eAAeC,OAAf,EAAwB,OAAKI,iBAAL,EAAxB,EAAkDC,MAAlD,CAAyDK,gBAAzD,CAAd;AACA,UAAI2E,QAAJ,EAAc;AACZA,iBAASxF,KAAT,EAAgB,IAAIS,IAAJ,CAASI,gBAAT,CAAhB;AACD;;AAED,UAAI,OAAO,OAAKf,KAAL,CAAWE,KAAlB,KAA4B,WAAhC,EAA6C;AAC3CiB,cAAMjB,KAAN,GAAcA,KAAd;AACD;;AAED,aAAKkK,QAAL,GAAgBC,WAAW,YAAM;AAC/B,eAAKD,QAAL,GAAgB,IAAhB;;AAEA,YAAI,OAAKpK,KAAL,CAAW4F,kBAAf,EAAmC;AACjC,iBAAK5F,KAAL,CAAW4F,kBAAX,CAA8B,KAA9B;AACD;;AAED,YAAI,OAAO,OAAK5F,KAAL,CAAWgB,OAAlB,KAA8B,WAA9B,IAA6C,OAAO,OAAKhB,KAAL,CAAW+B,MAAlB,KAA6B,WAA9E,EAA2F;AACzF,iBAAKJ,QAAL,CAAc,EAAEX,SAAS,KAAX,EAAd;AACD;AACF,OAVe,CAAhB;AAWD;AACD,WAAKW,QAAL,CAAcR,KAAd;AACD,G;;OAEDkF,oB,GAAuB,UAACkC,IAAD,EAAU;AAAA,iBACY,OAAKpH,KADjB;AAAA,QACvBJ,gBADuB,UACvBA,gBADuB;AAAA,QACLK,YADK,UACLA,YADK;;AAE/B,QAAIL,iBAAiBuJ,WAAjB,OAAmC/B,IAAvC,EAA6C;AAAE;AAAS;;AAFzB,kBAIF,OAAKvI,KAJH;AAAA,QAIvBM,OAJuB,WAIvBA,OAJuB;AAAA,QAIdC,OAJc,WAIdA,OAJc;;AAK/B,QAAIgK,WAAW,IAAI5J,IAAJ,CAASS,aAAaoJ,WAAb,CAAyBjC,IAAzB,CAAT,CAAf;AACA,QAAIkC,WAAW,IAAI9J,IAAJ,CAASI,iBAAiByJ,WAAjB,CAA6BjC,IAA7B,CAAT,CAAf;;AAEA,QAAIjI,WAAWmK,WAAWnK,OAA1B,EAAmC;AACjCiK,iBAAW,IAAI5J,IAAJ,CAASL,OAAT,CAAX;AACAmK,iBAAW,IAAI9J,IAAJ,CAASL,OAAT,CAAX;AACD;;AAED,QAAIC,WAAWkK,WAAWlK,OAA1B,EAAmC;AACjCgK,iBAAW,IAAI5J,IAAJ,CAASJ,OAAT,CAAX;AACAkK,iBAAW,IAAI9J,IAAJ,CAASJ,OAAT,CAAX;AACD;;AAED,WAAKoB,QAAL,CAAc;AACZP,oBAAcmJ,QADF;AAEZxJ,wBAAkB0J;AAFN,KAAd;AAID,G;;;kBA9wBkB1K,mB","file":"DatePickerContainer.js","sourcesContent":["/* eslint-disable new-cap,no-shadow */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { ESC, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport controlled from '../utils/PropTypes/controlled';\nimport isDateEqual from '../utils/DateUtils/isDateEqual';\nimport addDate from '../utils/DateUtils/addDate';\nimport DateTimeFormat from '../utils/DateUtils/DateTimeFormat';\n\nimport Collapse from '../Helpers/Collapse';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport TextField from '../TextFields/TextField';\nimport Dialog from '../Dialogs/DialogContainer';\nimport DatePicker from './DatePicker';\n\n/**\n * The `DatePickerContainer` component is a wrapper for the main `DatePicker` component\n * to manage the state and _logic_ for rendering the `DatePicker`. This component will\n * either render inline or in a `Dialog` depending if the `inline` prop is set to `true`.\n *\n * NOTE: This component is actually exported as `DatePicker` when using the `import { member }` syntax.\n * The following two lines are equivalent:\n *\n * ```js\n * import { DatePicker } from 'react-md/lib/Pickers';\n * import DatePicker from 'react-md/lib/Pickers/DatePickerContainer';\n * ```\n */\nexport default class DatePickerContainer extends PureComponent {\n  static propTypes = {\n    /**\n     * An id for the text field in the date picker. This is require for a11y.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An aria label for the dialog. This is required for a11y.\n     */\n    'aria-label': isRequiredForA11y(PropTypes.string),\n\n    /**\n     * An optional style to apply to the date picker's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the date picker's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the date picker.\n     */\n    pickerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the date picker.\n     */\n    pickerClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the header of date picker.\n     */\n    pickerHeaderClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the content container of date picker.\n     */\n    pickerContentClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the footer of date picker.\n     */\n    pickerFooterClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the calendar container of date picker.\n     */\n    calendarClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the year picker of date picker.\n     */\n    yearPickerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the input tag.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the input tag.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the text field's container.\n     */\n    textFieldStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the text field's container.\n     */\n    textFieldClassName: PropTypes.string,\n\n    /**\n     * An optional icon to display with the date picker.\n     *\n     * @see {@link TextFields/TextField#leftIcon}\n     */\n    icon: PropTypes.node,\n\n    /**\n     * Boolean if the date picker is open by default.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * An optional label to be displayed in the date picker's text\n     * field.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional placeholder to be displayed in the date picker's text field.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * The value of the date picker. This will make the date picker\n     * be a controlled component. This value should either be a\n     * formatted date string or a date object.\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]), 'onChange', 'defaultValue'),\n\n    /**\n     * An optional default value to give for the date picker. This should\n     * either be a formatted date string or a date object.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]),\n\n    /**\n     * An optional date to use when the calendar is opened for the first time.\n     * If this is omitted, it will either be the `defaultValue`, `value`, or\n     * today.\n     */\n    defaultCalendarDate: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]),\n\n    /**\n     * An optional function to call when the selected date is changed\n     * by hitting the OK button. The newly formatted date string,\n     * the new Date object, and the change event will be given.\n     *\n     * `onChange(dateString, dateObject, event)`.\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * A function to format the dates since it should be formatted to the user's\n     * locale. This _should_ be the `Intl.DateTimeFormat` function. You\n     * can also create your own if you really wanted. Inadvisable though.\n     *\n     * See [intl-polyfill](https://github.com/andyearnshaw/Intl.js/) for more info.\n     */\n    DateTimeFormat: PropTypes.func.isRequired,\n\n    /**\n     * The locales to use for formatting the date. This will default to using\n     * the user's language in the browser or `'en-US'` when server rendering.\n     */\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n\n    /**\n     * The label to use for the ok button on the date picker.\n     */\n    okLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the ok button should be styled with the primary color.\n     */\n    okPrimary: PropTypes.bool,\n\n    /**\n     * The label to use for the cancel button on the date picker.\n     */\n    cancelLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the cancel button should be styled with the primary color.\n     */\n    cancelPrimary: PropTypes.bool,\n\n    /**\n     * The initial mode to open the calendar in.\n     */\n    defaultCalendarMode: PropTypes.oneOf(['calendar', 'year']),\n\n    /**\n     * The icon to use to display the previous month icon in the calendar.\n     */\n    previousIcon: PropTypes.node,\n\n    /**\n     * The icon to use to display the next month icon in the calendar.\n     */\n    nextIcon: PropTypes.node,\n\n    /**\n     * An optional min date to use for the date picker. This will prevent\n     * any dates before this time to be chosen.\n     */\n    minDate: PropTypes.instanceOf(Date),\n\n    /**\n     * An optional max date to use for the date picker. This will prevent\n     * any dates after this time to be chosen.\n     */\n    maxDate: (props, propName, component, ...others) => {\n      const err = PropTypes.instanceOf(Date)(props, propName, component, ...others);\n      if (err || !props.minDate || !props[propName]) {\n        return err;\n      }\n\n      const { minDate, maxDate } = props;\n      if (minDate > maxDate) {\n        return new Error(\n          `The min date: '${minDate}' is greater than the max date: '${maxDate}'`\n        );\n      }\n\n      return null;\n    },\n\n    /**\n     * Boolean if the date should automatically be selected when a user clicks\n     * on a new date instead of making them hit the ok button.\n     */\n    autoOk: PropTypes.bool,\n\n    /**\n     * The number of years to display.\n     */\n    yearsDisplayed: PropTypes.number,\n\n    /**\n     * Boolean if the date picker should be displayed inline instead of in a\n     * dialog.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * An optional force of the display mode of the date picker.\n     * This _should_ not really be used since there are media queries\n     * to use the correct mode based on device orientation.\n     */\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n    /**\n     * The DateTimeFormat options to apply to format the date.\n     */\n    formatOptions: PropTypes.shape({\n      weekday: PropTypes.oneOf(['narrow', 'short', 'long']),\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n      day: PropTypes.oneOf(['numeric', '2-digit']),\n      hour: PropTypes.oneOf(['numeric', '2-digit']),\n      minute: PropTypes.oneOf(['numeric', '2-digit']),\n      second: PropTypes.oneOf(['numeric', '2-digit']),\n      timeZoneName: PropTypes.oneOf(['short', 'long']),\n    }),\n\n    /**\n     * The timeZone to be used in all formatting operations.\n     * For a full list of possible timeZone values check https://www.iana.org/time-zones.\n     */\n    timeZone: PropTypes.string.isRequired,\n\n    /**\n     * Boolean if the text field for the Date Picker should be displayed as full width.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * The direction that the text field divider expands from when the text field\n     * in the date picker gains focus.\n     */\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\n\n    /**\n     * An optional boolean if the time picker is current visible by dialog or inline.\n     * If this is set, the `onOpenToggle` function is required.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the date picker is opened in either a dialog, or\n     * inline. The callback will include the next state.\n     *\n     * ```js\n     * onVisibilityChange(!visible, e);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * Boolean if the time picker is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should be able to close if a keyboard user presses the escape key.\n     */\n    closeOnEsc: PropTypes.bool,\n\n    /**\n     * Boolean if the inline time picker's visibility should be animated.\n     */\n    animateInline: PropTypes.bool,\n\n    /**\n     * Boolean if the time is required.\n     *\n     * @see {@link TextFields/TextField#required}\n     */\n    required: PropTypes.bool,\n\n    /**\n     * @see {@link TextFields/TextField#block}\n     */\n    block: TextField.propTypes.block,\n\n    /**\n     * @see {@link TextFields/TextField#paddedBlock}\n     */\n    paddedBlock: TextField.propTypes.paddedBlock,\n\n    /**\n     * @see {@link TextFields/TextField#active}\n     */\n    active: TextField.propTypes.active,\n\n    /**\n     * @see {@link TextFields/TextField#error}\n     */\n    error: TextField.propTypes.error,\n\n    /**\n     * @see {@link TextFields/TextField#floating}\n     */\n    floating: TextField.propTypes.floating,\n\n    /**\n     * @see {@link TextFields/TextField#leftIconStateful}\n     */\n    leftIconStateful: TextField.propTypes.leftIconStateful,\n\n    /**\n     * @see {@link TextFields/TextField#rightIcon}\n     */\n    rightIcon: TextField.propTypes.rightIcon,\n\n    /**\n     * @see {@link TextFields/TextField#rightIconStateful}\n     */\n    rightIconStateful: TextField.propTypes.rightIconStateful,\n\n    /**\n     * @see {@link TextFields/TextField#customSize}\n     */\n    customSize: TextField.propTypes.customSize,\n\n    /**\n     * @see {@link TextFields/TextField#errorText}\n     */\n    errorText: TextField.propTypes.errorText,\n\n    /**\n     * @see {@link TextFields/TextField#helpText}\n     */\n    helpText: TextField.propTypes.helpText,\n\n    /**\n     * @see {@link TextFields/TextField#helpOnFocus}\n     */\n    helpOnFocus: TextField.propTypes.helpOnFocus,\n\n    /**\n     * @see {@link TextFields/TextField#inlineIndicator}\n     */\n    inlineIndicator: TextField.propTypes.inlineIndicator,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the dialog.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM Node to render the dialog into. The default is to render as the first child\n     * in the `body`.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the DatePicker should be read only. This will prevent the user from opening the picker\n     * and only display the current date in the text field.\n     */\n    readOnly: PropTypes.bool,\n\n    /**\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\n     */\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n\n    /**\n     * True if weekends are to be greyed out.\n     */\n    disableWeekEnds: PropTypes.bool,\n\n    /**\n     * True if dates from adjacent months should be shown in calendar.\n     */\n    showAllDays: PropTypes.bool,\n\n    /**\n     * Boolean if the dates from adjacent months should be disabled. This will only\n     * do something if the `showAllDays` prop is enabled as well.\n     *\n     * This is really only helpful if youd like the other days to appear, but not be\n     * clickable until the user switches to that month.\n     *\n     * @see {@link #showAllDays}\n     */\n    disableOuterDates: PropTypes.bool,\n\n    /**\n     * An optional className to apply to a date in calendar.\n     */\n    calendarDateClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to a date from an adjacent month in calendar. This will be applied\n     * along with the `calendarDateClassName`.\n     *\n     * @see {@link #showAllDays}\n     * @see {@link #calendarDateClassName}\n     */\n    calendarOuterDateClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the title in calendar header.\n     */\n    calendarTitleClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat options to apply to format the title in calendar header.\n     */\n    calendarTitleFormat: PropTypes.shape({\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n    }),\n\n    /**\n     * An optional className to apply to a weekday in calendar header.\n     */\n    calendarWeekdayClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat option to apply to format a weekday in calendar header.\n     */\n    calendarWeekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\n\n    /**\n     * @see {@link Dialogs/DialogContainer#disableScrollLocking}\n     */\n    disableScrollLocking: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should be rendered as the last child of the `renderNode` or `body` instead\n     * of the first.\n     */\n    lastChild: PropTypes.bool,\n\n    previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\n    previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\n    nextIconChildren: deprecated(PropTypes.node, 'use the `nextIcon` prop instead'),\n    nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\n    adjustMinWidth: deprecated(PropTypes.bool, 'No longer valid for a text field'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    initialCalendarDate: deprecated(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]), 'Use `defaultCalendarDate` instead'),\n    initialCalendarMode: deprecated(PropTypes.oneOf(['calendar', 'year']), 'Use `defaultCalendarMode` instead'),\n    initialYearsDisplayed: deprecated(\n      PropTypes.number,\n      'Use `yearsDisplayed` instead. I have not implemented infinite loading years'\n    ),\n  };\n\n  static defaultProps = {\n    animateInline: true,\n    previousIcon: <FontIcon>chevron_left</FontIcon>,\n    nextIcon: <FontIcon>chevron_right</FontIcon>,\n    autoOk: false,\n    icon: <FontIcon>date_range</FontIcon>,\n    yearsDisplayed: 100,\n    defaultCalendarMode: 'calendar',\n    DateTimeFormat: DateTimeFormat, // eslint-disable-line object-shorthand\n    locales: typeof window !== 'undefined'\n      ? window.navigator.userLanguage || window.navigator.language\n      : 'en-US',\n    okLabel: 'Ok',\n    okPrimary: true,\n    cancelLabel: 'Cancel',\n    cancelPrimary: true,\n    closeOnEsc: true,\n    disableScrollLocking: false,\n    'aria-label': 'Pick a date',\n    timeZone: 'UTC',\n  };\n\n  constructor(props) {\n    super(props);\n\n    let date;\n    let value;\n    const {\n      defaultValue,\n      DateTimeFormat,\n      locales,\n      minDate,\n      maxDate,\n    } = props;\n\n    if (typeof props.value !== 'undefined') {\n      date = this._getDate(props.value);\n    } else if (defaultValue) {\n      date = this._getDate(defaultValue);\n      value = typeof defaultValue === 'string'\n        ? defaultValue\n        : DateTimeFormat(locales, this._getFormatOptions()).format(defaultValue);\n    } else {\n      date = new Date();\n      value = '';\n    }\n\n    date = this._validateDateRange(date, minDate, maxDate);\n\n    const defaultCalendarDate = typeof props.initialCalendarDate !== 'undefined'\n      ? props.initialCalendarDate\n      : props.defaultCalendarDate;\n    let calendarTempDate = date;\n    if (typeof defaultCalendarDate !== 'undefined' && !props.value && !props.defaultValue) {\n      calendarTempDate = this._getDate(defaultCalendarDate);\n      date = calendarTempDate;\n    } else if (calendarTempDate === null) {\n      calendarTempDate = new Date();\n      date = new Date();\n    }\n\n    const visible = typeof props.initiallyOpen !== 'undefined'\n      ? props.initiallyOpen\n      : !!props.defaultVisible;\n\n    this.state = {\n      value,\n      visible,\n      calendarDate: date,\n      calendarTempDate,\n      calendarMode: props.initialCalendarMode || props.defaultCalendarMode,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value, minDate, maxDate } = nextProps;\n    const minEqual = isDateEqual(this.props.minDate, minDate);\n    const maxEqual = isDateEqual(this.props.maxDate, maxDate);\n    if (this.props.value !== value || !minEqual || !maxEqual) {\n      let { calendarDate } = this.state;\n      if (typeof value !== 'undefined') {\n        calendarDate = this._getDate(value);\n      }\n\n      calendarDate = this._validateDateRange(calendarDate, minDate, maxDate);\n\n      if (!isDateEqual(this.state.calendarDate, calendarDate)) {\n        this.setState({ calendarDate, calendarTempDate: calendarDate });\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { inline, isOpen } = this.props;\n    const visible = typeof isOpen !== 'undefined'\n      ? isOpen\n      : getField(this.props, this.state, 'visible');\n    const pVisible = typeof prevProps.isOpen !== 'undefined'\n      ? prevProps.isOpen\n      : getField(prevProps, prevState, 'visible');\n\n    if (visible === pVisible) {\n      return;\n    }\n\n    if (visible) {\n      if (inline) {\n        handleWindowClickListeners(this._handleOutsideClick, true);\n        window.addEventListener('keydown', this._closeOnEsc);\n      }\n    } else if (inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  }\n\n  componentWillUnmount() {\n    const visible = typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible');\n\n    if (visible && this.props.inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  }\n\n  _getDate(value) {\n    if (value === '' || value === null) {\n      return new Date();\n    } else if (typeof value === 'string') {\n      return new Date(value);\n    }\n\n    return value;\n  }\n\n  _getFormatOptions() {\n    const { formatOptions, timeZone } = this.props;\n    return { ...formatOptions, timeZone };\n  }\n\n  _setContainer= (container) => {\n    this._container = container;\n  };\n\n  _closeOnEsc = (e) => {\n    if ((e.which || e.keyCode) === ESC) {\n      this._handleCancelClick(e);\n    }\n  };\n\n  _handleOutsideClick = (e) => {\n    if (this._container && !this._container.contains(e.target)) {\n      this._handleCancelClick(e);\n    }\n  };\n\n  _toggleOpen = (e) => {\n    if (this.props.disabled || this.props.readOnly) {\n      return;\n    }\n\n    const visible = !(typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible'));\n\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(visible, e);\n    }\n\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    handleKeyboardAccessibility(e, this._toggleOpen, true, true);\n\n    if ((e.which || e.keyCode) === TAB && this.state.active) {\n      this.setState({ active: false });\n    }\n  };\n\n  _handleOkClick = (e) => {\n    const { DateTimeFormat, locales, onChange, onVisibilityChange } = this.props;\n    const value = DateTimeFormat(locales, this._getFormatOptions()).format(this.state.calendarTempDate);\n    if (onChange) {\n      onChange(value, new Date(this.state.calendarTempDate), e);\n    }\n\n    if (onVisibilityChange) {\n      onVisibilityChange(false, e);\n    }\n\n    let state;\n    if (typeof this.props.value === 'undefined') {\n      state = { value };\n    }\n\n    if (typeof this.props.visible === 'undefined' && typeof this.props.isOpen === 'undefined') {\n      state = state || {};\n      state.visible = false;\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _handleCancelClick = (e) => {\n    const state = { calendarTempDate: this.state.calendarDate };\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.isOpen === 'undefined') {\n      state.visible = false;\n    }\n\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(false, e);\n    }\n\n    this.setState(state);\n  };\n\n  _changeCalendarMode = (calendarMode) => {\n    if (this.state.calendarMode === calendarMode) { return; }\n\n    this.setState({ calendarMode });\n  };\n\n  _previousMonth = () => {\n    const calendarDate = addDate(this.state.calendarDate, -1, 'M');\n    this.setState({ calendarDate });\n  };\n\n  _nextMonth = () => {\n    const calendarDate = addDate(this.state.calendarDate, 1, 'M');\n    this.setState({ calendarDate });\n  };\n\n  _setCalendarTempDate = (calendarTempDate) => {\n    const { autoOk, DateTimeFormat, locales, onChange } = this.props;\n\n    const state = { calendarTempDate };\n    if (autoOk) {\n      const value = DateTimeFormat(locales, this._getFormatOptions()).format(calendarTempDate);\n      if (onChange) {\n        onChange(value, new Date(calendarTempDate));\n      }\n\n      if (typeof this.props.value === 'undefined') {\n        state.value = value;\n      }\n\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        if (this.props.onVisibilityChange) {\n          this.props.onVisibilityChange(false);\n        }\n\n        if (typeof this.props.visible === 'undefined' && typeof this.props.isOpen === 'undefined') {\n          this.setState({ visible: false });\n        }\n      });\n    }\n    this.setState(state);\n  };\n\n  _setCalendarTempYear = (year) => {\n    const { calendarTempDate, calendarDate } = this.state;\n    if (calendarTempDate.getFullYear() === year) { return; }\n\n    const { minDate, maxDate } = this.props;\n    let nextDate = new Date(calendarDate.setFullYear(year));\n    let nextTemp = new Date(calendarTempDate.setFullYear(year));\n\n    if (minDate && nextTemp < minDate) {\n      nextDate = new Date(minDate);\n      nextTemp = new Date(minDate);\n    }\n\n    if (maxDate && nextTemp > maxDate) {\n      nextDate = new Date(maxDate);\n      nextTemp = new Date(maxDate);\n    }\n\n    this.setState({\n      calendarDate: nextDate,\n      calendarTempDate: nextTemp,\n    });\n  };\n\n  /**\n   * Gets the current value from the date picker as a formatted string.\n   *\n   * @param {Object} props? the props object to use.\n   * @param {Object} state? the state object to use.\n   * @return {String} a formatted date string or the empty string.\n   */\n  _getFormattedValue(props, state) {\n    const { DateTimeFormat, locales } = props;\n    const value = getField(props, state, 'value');\n    if (!value) {\n      return '';\n    } else if (value instanceof Date) {\n      return DateTimeFormat(locales, this._getFormatOptions()).format(new Date(value));\n    } else {\n      return value;\n    }\n  }\n\n  /**\n   * Attempts to validate the `calendarDate` in the state against the min and\n   * max dates.\n   *\n   * This will return null if the current calendarDate is still within the range.\n   *\n   * @param {Date} calendarDate - The current calendar date to compare to.\n   * @param {Date} minDate - An optional min date to compare to.\n   * @param {Date} maxDate - An optional max date to compare to.\n   * @return {Object} - The new state object with the updated calendarDate and\n   *    calendarTempDate keys or null.\n   */\n  _validateDateRange(calendarDate, minDate, maxDate) {\n    let date = calendarDate;\n    if (minDate && minDate > calendarDate) {\n      date = new Date(minDate);\n    }\n\n    if (maxDate && maxDate < calendarDate) {\n      date = new Date(maxDate);\n    }\n\n    return date;\n  }\n\n  render() {\n    const {\n      style,\n      className,\n      pickerStyle,\n      pickerClassName,\n      pickerHeaderClassName,\n      pickerContentClassName,\n      pickerFooterClassName,\n      inputStyle,\n      inputClassName,\n      textFieldStyle,\n      textFieldClassName,\n      label,\n      placeholder,\n      icon,\n      inline,\n      displayMode,\n      fullWidth,\n      lineDirection,\n      id,\n      disabled,\n      closeOnEsc,\n      animateInline,\n      portal,\n      renderNode,\n      lastChild,\n      block,\n      paddedBlock,\n      active,\n      error,\n      floating,\n      required,\n      leftIconStateful,\n      rightIcon,\n      rightIconStateful,\n      customSize,\n      errorText,\n      helpText,\n      helpOnFocus,\n      inlineIndicator,\n      disableScrollLocking,\n      'aria-label': ariaLabel,\n      nextIcon: propNextIcon,\n      previousIcon: propPreviousIcon,\n\n      // deprecated\n      isOpen,\n      previousIconChildren,\n      previousIconClassName,\n      nextIconChildren,\n      nextIconClassName,\n      /* eslint-disable no-unused-vars */\n      value: propValue,\n      visible: propVisible,\n      defaultValue,\n      defaultVisible,\n      onChange,\n      readOnly,\n      onVisibilityChange,\n      defaultCalendarDate,\n\n      // deprecated\n      initialCalendarDate,\n      initiallyOpen,\n      adjustMinWidth,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const nextIcon = getDeprecatedIcon(nextIconClassName, nextIconChildren, propNextIcon);\n    const previousIcon = getDeprecatedIcon(previousIconClassName, previousIconChildren, propPreviousIcon);\n    const visible = typeof isOpen !== 'undefined'\n      ? isOpen\n      : getField(this.props, this.state, 'visible');\n\n    const picker = (\n      <DatePicker\n        {...this.state}\n        {...props}\n        nextIcon={nextIcon}\n        previousIcon={previousIcon}\n        icon={!!icon}\n        inline={inline}\n        style={pickerStyle}\n        className={pickerClassName}\n        headerClassName={pickerHeaderClassName}\n        contentClassName={pickerContentClassName}\n        footerClassName={pickerFooterClassName}\n        displayMode={displayMode}\n        onCancelClick={this._handleCancelClick}\n        onOkClick={this._handleOkClick}\n        changeCalendarMode={this._changeCalendarMode}\n        onPreviousClick={this._previousMonth}\n        onNextClick={this._nextMonth}\n        onCalendarDateClick={this._setCalendarTempDate}\n        onCalendarYearClick={this._setCalendarTempYear}\n      />\n    );\n\n    let content;\n    if (inline) {\n      content = <Collapse collapsed={!visible} animate={animateInline}>{picker}</Collapse>;\n    } else {\n      content = (\n        <Dialog\n          id={`${id}-dialog`}\n          visible={visible}\n          onHide={this._handleCancelClick}\n          dialogClassName=\"md-dialog--picker\"\n          contentClassName=\"md-dialog-content--picker\"\n          aria-label={ariaLabel}\n          closeOnEsc={closeOnEsc}\n          renderNode={renderNode}\n          portal={portal}\n          lastChild={lastChild}\n          focusOnMount={false}\n          disableScrollLocking={disableScrollLocking}\n        >\n          {picker}\n        </Dialog>\n      );\n    }\n\n    return (\n      <div style={style} className={cn('md-picker-container', className)} ref={this._setContainer}>\n        <TextField\n          id={id}\n          style={textFieldStyle}\n          className={cn({ 'md-pointer--hover': !disabled }, textFieldClassName)}\n          inputStyle={inputStyle}\n          inputClassName={cn({ 'md-pointer--hover': !disabled }, inputClassName)}\n          active={active || visible}\n          error={error}\n          floating={floating || visible}\n          required={required}\n          disabled={disabled}\n          leftIcon={icon}\n          leftIconStateful={leftIconStateful}\n          rightIcon={rightIcon}\n          rightIconStateful={rightIconStateful}\n          inlineIndicator={inlineIndicator}\n          block={block}\n          paddedBlock={paddedBlock}\n          fullWidth={fullWidth}\n          lineDirection={lineDirection}\n          customSize={customSize}\n          helpText={helpText}\n          helpOnFocus={helpOnFocus}\n          errorText={errorText}\n          label={label}\n          placeholder={placeholder}\n          onClick={this._toggleOpen}\n          onKeyDown={this._handleKeyDown}\n          value={this._getFormattedValue(this.props, this.state)}\n          readOnly\n        />\n        {content}\n      </div>\n    );\n  }\n}\n"]}
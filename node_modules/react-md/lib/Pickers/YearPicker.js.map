{"version":3,"sources":["../../src/js/Pickers/YearPicker.js"],"names":["YearPicker","props","state","_getYearRange","nextProps","yearsDisplayed","setState","_getFullYear","minDate","maxDate","calendarTempDate","year","getFullYear","range","parseInt","startYear","endYear","container","offsetHeight","offsetWidth","querySelector","top","offsetTop","height","scrollTop","currentYear","years","push","onCalendarYearClick","className","_setContainer","propTypes","string","instanceOf","Date","isRequired","func","number"],"mappings":"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","file":"YearPicker.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport Year from './Year';\n\n/**\n * The `YearPicker` component is the Year view in a `DatePicker`. This\n * will display a list of years to select from within the given range.\n */\nexport default class YearPicker extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\n    onCalendarYearClick: PropTypes.func.isRequired,\n    yearsDisplayed: PropTypes.number.isRequired,\n    minDate: PropTypes.instanceOf(Date),\n    maxDate: PropTypes.instanceOf(Date),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = this._getYearRange(props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.yearsDisplayed !== nextProps.yearsDisplayed) {\n      this.setState(this._getFullYear(nextProps));\n    }\n  }\n\n  /**\n   * Gets the current start and end years for the year picker.\n   *\n   * @param {Object} props - The current props to extract the year range from.\n   * @return {Object} an object containign the start and end years\n   */\n  _getYearRange({ minDate, maxDate, yearsDisplayed, calendarTempDate }) {\n    const year = calendarTempDate.getFullYear();\n    const range = !minDate && !maxDate\n      ? parseInt(yearsDisplayed / 2, 10)\n      : yearsDisplayed;\n\n    let startYear;\n    let endYear;\n    if (minDate && maxDate) {\n      startYear = minDate.getFullYear();\n      endYear = maxDate.getFullYear();\n    } else if (!minDate && !maxDate) {\n      startYear = year - range;\n      endYear = year + range;\n      if (yearsDisplayed % 2 === 0) {\n        endYear -= 1;\n      }\n    } else if (!maxDate) {\n      startYear = minDate.getFullYear();\n      endYear = startYear + yearsDisplayed - 1;\n    } else {\n      endYear = maxDate.getFullYear();\n      startYear = endYear - yearsDisplayed + 1;\n    }\n\n    return { startYear, endYear };\n  }\n\n  _setContainer(container) {\n    if (container === null) {\n      return;\n    }\n\n    const { offsetHeight, offsetWidth } = container;\n    const { offsetTop: top, offsetHeight: height } = container.querySelector('.md-year--active');\n\n    // Portrait seems to be 3/4 of the way while landscape is about 1/2\n    if (offsetHeight > offsetWidth) {\n      container.scrollTop = top - (offsetHeight * 3 / 4);\n    } else {\n      container.scrollTop = top - (offsetHeight / 2) + (height / 2);\n    }\n  }\n\n  render() {\n    const { startYear, endYear } = this.state;\n\n    const currentYear = this.props.calendarTempDate.getFullYear();\n    const years = [];\n    for (let year = startYear; year <= endYear; year++) {\n      years.push(\n        <Year\n          key={year}\n          year={year}\n          active={year === currentYear}\n          onClick={this.props.onCalendarYearClick}\n        />\n      );\n    }\n\n    return (\n      <section\n        className={cn('md-picker-content md-picker-content--year', this.props.className)}\n        ref={this._setContainer}\n      >\n        <ol className=\"md-years\">\n          {years}\n        </ol>\n      </section>\n    );\n  }\n}\n"]}
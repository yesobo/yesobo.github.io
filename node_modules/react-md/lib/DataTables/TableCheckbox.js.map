{"version":3,"sources":["../../src/js/DataTables/TableCheckbox.js"],"names":["TableCheckbox","_td","_header","_handleMount","td","header","querySelector","index","parentNode","rowIndex","tagName","context","createCheckbox","removeCheckbox","props","checked","checkedIcon","uncheckedIcon","indeterminateIcon","indeterminate","footer","rowId","baseName","checkboxHeaderLabel","checkboxLabelTemplate","Cell","label","replace","content","fixedHeader","fixedFooter","cloneElement","className","undefined","propTypes","number","bool","contextTypes","oneOfType","string","isRequired","element","func"],"mappings":"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","file":"TableCheckbox.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport SelectionControl from '../SelectionControls/SelectionControl';\n\nimport findTable from './findTable';\n\nexport default class TableCheckbox extends Component {\n  static propTypes = {\n    index: PropTypes.number,\n    checked: PropTypes.bool,\n  };\n\n  static contextTypes = {\n    rowId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    baseName: PropTypes.string.isRequired,\n    indeterminate: PropTypes.bool,\n    checkedIcon: PropTypes.element,\n    uncheckedIcon: PropTypes.element,\n    indeterminateIcon: PropTypes.element,\n    checkboxHeaderLabel: PropTypes.string.isRequired,\n    checkboxLabelTemplate: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n    createCheckbox: PropTypes.func.isRequired,\n    removeCheckbox: PropTypes.func.isRequired,\n    header: PropTypes.bool,\n    footer: PropTypes.bool,\n    fixedHeader: PropTypes.bool.isRequired,\n    fixedFooter: PropTypes.bool.isRequired,\n  };\n\n  _td = null;\n  _header = false;\n\n  _handleMount = (td) => {\n    if (td) {\n      const header = findTable(td).querySelector('thead');\n      const index = td.parentNode.rowIndex - (header ? 1 : 0);\n\n      if (td.parentNode.parentNode.tagName === 'TBODY') {\n        this.context.createCheckbox(index);\n      }\n      this._td = td;\n      this._header = header;\n    } else if (this._td) {\n      const index = this._td.parentNode.rowIndex;\n      this.context.removeCheckbox(index - (this._header ? 1 : 0));\n      this._td = null;\n      this._header = false;\n    }\n  };\n\n  render() {\n    const { checked, index, ...props } = this.props;\n    const {\n      checkedIcon,\n      uncheckedIcon,\n      indeterminateIcon,\n      indeterminate,\n      header,\n      footer,\n      rowId,\n      baseName,\n      checkboxHeaderLabel,\n      checkboxLabelTemplate,\n    } = this.context;\n\n    const Cell = header ? 'th' : 'td';\n    let label;\n    if (header) {\n      label = checkboxHeaderLabel;\n    } else if (typeof checkboxLabelTemplate === 'function') {\n      label = checkboxLabelTemplate(index);\n    } else {\n      label = checkboxLabelTemplate.replace(/{{row}}/g, index);\n    }\n\n    let content = (\n      <SelectionControl\n        {...props}\n        id={rowId}\n        name={`${baseName}-checkbox`}\n        type=\"checkbox\"\n        checked={checked}\n        checkedCheckboxIcon={checkedIcon}\n        uncheckedCheckboxIcon={header && indeterminate ? indeterminateIcon : uncheckedIcon}\n        aria-label={label}\n      />\n    );\n    const fixedHeader = header && this.context.fixedHeader;\n    const fixedFooter = footer && this.context.fixedFooter;\n\n    if (fixedHeader) {\n      content = (\n        <div\n          className={cn('md-table-column__fixed', {\n            'md-table-column__fixed--header': fixedHeader,\n            'md-table-column__fixed--footer': fixedFooter,\n          })}\n        >\n          {React.cloneElement(content, {\n            className: cn({\n              'md-table-checkbox--header': header,\n              'md-table-checkbox--footer': footer,\n            }),\n          })}\n        </div>\n      );\n    }\n\n\n    return (\n      <Cell\n        className={cn('md-table-checkbox', {\n          'md-table-column--fixed': fixedHeader,\n        })}\n        scope={header ? 'col' : undefined}\n        ref={this._handleMount}\n      >\n        {content}\n      </Cell>\n    );\n  }\n}\n"]}
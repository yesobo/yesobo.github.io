{"version":3,"sources":["../../src/js/DataTables/DataTable.js"],"names":["DataTable","props","rows","defaultSelectedRows","state","header","indeterminate","undefined","allSelected","_allSelected","selectedRows","_removed","_initial","checkedIcon","uncheckedIcon","indeterminateIcon","plain","baseId","selectableRows","checkboxHeaderLabel","checkboxLabelTemplate","fixedHeader","fixedFooter","checkedIconChildren","checkedIconClassName","uncheckedIconChildren","uncheckedIconClassName","indeterminateIconChildren","indeterminateIconClassName","toggleSelectedRow","_toggleSelectedRow","createCheckbox","_createCheckbox","removeCheckbox","_removeCheckbox","baseName","all","length","some","checked","style","className","tableStyle","tableClassName","fixedWrapperStyle","fixedWrapperClassName","fixedScrollWrapperStyle","fixedScrollWrapperClassName","children","responsive","fixedDividers","fixedHeight","fixedWidth","headerHeight","footerHeight","fullWidth","onRowToggle","table","_setTable","content","height","borderTop","borderBot","footer","width","propTypes","oneOfType","number","string","object","node","isRequired","arrayOf","bool","element","func","shape","defaultProps","childContextTypes","_table","index","setState","slice","selected","splice","version","match","row","e","selectedCount","i","querySelector","target","map","filter","b"],"mappings":"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","file":"DataTable.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport requiredForA11yIfNot from '../utils/PropTypes/requiredForA11yIfNot';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport contextTypes from './contextTypes';\n\n/**\n * The `DataTable` component is used to manage the state of all rows.\n * This can either be a __plain__ table or a __data__ table.\n *\n * A __data__ table will include checkboxes on each row while a __plain__ table\n * will not.\n */\nexport default class DataTable extends PureComponent {\n  static propTypes = {\n    /**\n     * A base id to use for every checkbox or `EditDialogColumn` in the data table. This is\n     * required for a11y if the data table is not plain. It is recommended to always provide\n     * this prop if you are using any of the advanced table components to auto-generate unique\n     * ids for each element.\n     *\n     * @see {@link DataTables/EditDialogColumn}\n     * @see {@link DataTables/SelectFieldColumn}\n     * @see {@link DataTables/DropdownMenuColumn}\n     * @see {@link DataTables/MenuButtonColumn}\n     * @see {@link DataTables/TablePagination}\n     */\n    baseId: requiredForA11yIfNot(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'plain'),\n\n    /**\n     * Optional style to apply to the table. If the table is `responsive`, this will be applied to the surrounding `div`\n     * instead of the table itself. Use the `tableStyle` in this case.\n     *\n     * @see {@link #tableStyle}\n     * @see {@link #responsive}\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the table. If the table is `responsive`, this will be applied to the\n     * surrounding `div` instead of the table itself. Use the `tableClassName` in this case.\n     *\n     * @see {@link #tableClassName}\n     * @see {@link #responsive}\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `table` itself when the `responsive` prop is enabled. If the table is not\n     * `responsive`, use the `style` prop.\n     *\n     * @see {@link #style}\n     * @see {@link #responsive}\n     */\n    tableStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `table` itself when the `responsive` prop is enabled. If the table is not\n     * `responsive`, use the `className` prop.\n     *\n     * @see {@link #className}\n     * @see {@link #responsive}\n     */\n    tableClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the fixed table wrapper that appears when there is a fixed\n     * header or a fixed footer.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     * @see {@link #fixedWrapperClassName}\n     * @see {@link #fixedScrollWrapperStyle}\n     * @see {@link #fixedScrollWrapperClassName}\n     */\n    fixedWrapperStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the fixed table wrapper that appears when there is a fixed\n     * header or a fixed footer.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     * @see {@link #fixedWrapperStyle}\n     * @see {@link #fixedScrollWrapperStyle}\n     * @see {@link #fixedScrollWrapperClassName}\n     */\n    fixedWrapperClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the fixed table wrapper's scroll container that appears when there is a fixed\n     * header or a fixed footer.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     * @see {@link #fixedWrapperStyle}\n     * @see {@link #fixedWrapperClassName}\n     * @see {@link #fixedScrollWrapperStyle}\n     */\n    fixedScrollWrapperStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the fixed table wrapper's scroll container that appears when there is a fixed\n     * header or a fixed footer.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     * @see {@link #fixedWrapperStyle}\n     * @see {@link #fixedWrapperClassName}\n     * @see {@link #fixedScrollWrapperStyle}\n     */\n    fixedScrollWrapperClassName: PropTypes.string,\n\n    /**\n     * The table contents to display. This *should* be a list of `TableHeader` and `TableBody`\n     * components.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * An optional array of booleans denoting if a row is selected.\n     * This is an associative array so the index must match the row\n     * number in the `TableBody` component.\n     */\n    defaultSelectedRows: PropTypes.arrayOf(PropTypes.bool).isRequired,\n\n    /**\n     * Boolean if the table is responsive. This will wrap the table in a container\n     * that allows scrolling to the right if overflow exists.\n     */\n    responsive: PropTypes.bool.isRequired,\n\n    /**\n     * Boolean if this table should not include the checkboxes on each row.\n     * This really means that the entire table is unselectable and you wish\n     * to display as a normal table.\n     */\n    plain: PropTypes.bool,\n\n    /**\n     * The checked checkbox icon to display when a row is selected. This really defaults\n     * to the `checkedCheckboxIcon` prop from the `SelectionControl`.\n     *\n     * @see {@link SelectionControls/SelectionControl#checkedCheckboxIcon}\n     */\n    checkedIcon: PropTypes.element,\n\n    /**\n     * The unchecked checkbox icon to display when a row is selected. This really defaults\n     * to the `uncheckedCheckboxIcon` prop from the `SelectionControl`.\n     *\n     * @see {@link SelectionControls/SelectionControl#uncheckedCheckboxIcon}\n     */\n    uncheckedIcon: PropTypes.element,\n\n    /**\n     * An optional function to call when a non-plain data table has a row toggled. The callback\n     * will include:\n     * - the row id\n     * - boolean if the row is now checked\n     * - the total count of rows selected\n     * - the change event\n     *\n     * All rows will be toggled on or off when the row id is 0 and a `thead` exists in the table.\n     */\n    onRowToggle: invalidIf(PropTypes.func, 'plain'),\n\n    /**\n     * Boolean if the `DataTable` should inject checkboxes at the start of each row.\n     */\n    selectableRows: PropTypes.bool,\n\n    /**\n     * Boolean if the checkboxes in the table should also include an _indeterminate_ state.\n     * It will use the `indeterminateIconChildren` and `indeterminateIconClassName` when at least\n     * 1 row has been checked, but not all rows.\n     */\n    indeterminate: PropTypes.bool,\n\n    /**\n     * An optional icon to display when the selected state is indeterminate.\n     *\n     * @see {@link #indeterminate}\n     */\n    indeterminateIcon: PropTypes.element,\n\n    /**\n     * This is the aria-label to apply to the checkbox in the table's header. This\n     * is just used for accessibility since the checkboxes have no visible label.\n     */\n    checkboxHeaderLabel: PropTypes.string.isRequired,\n\n    /**\n     * This is the aria-label to apply to a checkbox in the table's body. This can either\n     * be a constant string that will replace `{{row}}` with the current row index, or\n     * a function that takes the row index and returns a string.\n     *\n     * ```js\n     * checkboxLabelTemplate={rowIndex => `Toggle row ${row}`}\n     * ```\n     */\n    checkboxLabelTemplate: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * Boolean if the table should include a fixed header. This will allow the `TableHeader` component\n     * to stay fixed to the top of the table while the `TableBody` scrolls horizontally.\n     *\n     * @see {@link #fixedFooter}\n     * @see [react-md-make-fixed-table](/components/data-tables?tab=2#mixin-react-md-make-fixed-table)\n     */\n    fixedHeader: PropTypes.bool,\n\n    /**\n     * Boolean if the table should include a fixed footer. This will allow the `TableFooter` component\n     * to stay fixed to the bottom of the table while the `TableBody` scrolls horizontally.\n     *\n     * @see {@link #fixedHeader}\n     * @see [react-md-make-fixed-table](/components/data-tables?tab=2#mixin-react-md-make-fixed-table)\n     */\n    fixedFooter: PropTypes.bool,\n\n    /**\n     * Either a boolean or a shape of booleans for if a divider should appear at the top or bottom of the table\n     * when there is a fixed header/footer. By default, this will automatically create dividers.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     */\n    fixedDividers: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.shape({\n        header: PropTypes.bool,\n        footer: PropTypes.bool,\n      }),\n    ]),\n\n    /**\n     * An optional height to set for a table with a fixed header and/or a fixed footer. It is recommended to use\n     * the related `react-md-make-fixed-table` mixin instead.\n     *\n     * @see {@link #headerHeight}\n     * @see {@link #footerHeight}\n     */\n    fixedHeight: PropTypes.number,\n\n    /**\n     * An optional width to set for a table with a fixed header and/or a fixed footer. It is recommended to use\n     * the related `react-md-make-fixed-table` mixin instead.\n     */\n    fixedWidth: PropTypes.number,\n\n    /**\n     * This is the height of the table's header columns. This should be equal to the `md-data-table-header-height`\n     * variable.\n     *\n     * @see [md-data-table-header-height](/components/data-tables?tab=2#variable-md-data-table-header-height)\n     * @see {@link #fixedHeight}\n     */\n    headerHeight: PropTypes.number.isRequired,\n\n    /**\n     * This is the height of the table's header columns. This should be equal to the `md-data-table-header-height`\n     * variable.\n     *\n     * @see [md-data-table-column-height](/components/data-tables?tab=2#variable-md-data-table-column-height)\n     * @see {@link #fixedHeight}\n     */\n    footerHeight: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the `<table>` element should always span the entire width of its container.\n     */\n    fullWidth: PropTypes.bool,\n\n    indeterminateIconChildren: deprecated(PropTypes.node, 'Use the `indeterminateIcon` prop instead'),\n    indeterminateIconClassName: deprecated(PropTypes.string, 'Use the `indeterminateIcon` prop instead'),\n    checkedIconClassName: deprecated(PropTypes.string, 'Use the `checkedIcon` prop instead'),\n    checkedIconChildren: deprecated(PropTypes.node, 'Use the `checkedIcon` prop instead'),\n    uncheckedIconClassName: deprecated(PropTypes.string, 'Use the `uncheckedIcon` prop instead'),\n    uncheckedIconChildren: deprecated(PropTypes.node, 'Use the `uncheckedIcon` prop instead'),\n  };\n\n  static defaultProps = {\n    indeterminateIcon: <FontIcon>indeterminate_check_box</FontIcon>,\n    defaultSelectedRows: [],\n    responsive: true,\n    selectableRows: true,\n    checkboxHeaderLabel: 'Toggle All Rows',\n    checkboxLabelTemplate: 'Toggle row {{row}}',\n    fixedHeader: false,\n    fixedFooter: false,\n    fixedDividers: true,\n    headerHeight: 56,\n    footerHeight: 48,\n    fullWidth: true,\n  };\n\n  static childContextTypes = contextTypes;\n\n  constructor(props) {\n    super();\n\n    const rows = props.defaultSelectedRows;\n    this.state = {\n      header: false,\n      indeterminate: props.indeterminate ? false : undefined,\n      allSelected: this._allSelected(rows),\n      selectedRows: rows,\n    };\n\n    this._removed = 0;\n    this._initial = true;\n  }\n\n  getChildContext() {\n    const {\n      checkedIcon,\n      uncheckedIcon,\n      indeterminateIcon,\n      plain,\n      baseId,\n      selectableRows,\n      checkboxHeaderLabel,\n      checkboxLabelTemplate,\n      fixedHeader,\n      fixedFooter,\n\n      // deprecated\n      checkedIconChildren,\n      checkedIconClassName,\n      uncheckedIconChildren,\n      uncheckedIconClassName,\n      indeterminateIconChildren,\n      indeterminateIconClassName,\n    } = this.props;\n\n    return {\n      checkedIcon: getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon),\n      uncheckedIcon: getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon),\n      indeterminateIcon: getDeprecatedIcon(indeterminateIconClassName, indeterminateIconChildren, indeterminateIcon),\n      indeterminate: this.state.indeterminate,\n      plain,\n      allSelected: this.state.allSelected,\n      selectedRows: this.state.selectedRows,\n      toggleSelectedRow: this._toggleSelectedRow,\n      createCheckbox: this._createCheckbox,\n      removeCheckbox: this._removeCheckbox,\n      baseId,\n      baseName: `${baseId}-control`,\n      selectableRows,\n      checkboxHeaderLabel,\n      checkboxLabelTemplate,\n      fixedHeader,\n      fixedFooter,\n    };\n  }\n\n  componentDidUpdate() {\n    this._removed = 0;\n    this._initial = false;\n  }\n\n  _allSelected(rows) {\n    let all = rows.length !== 0;\n    rows.some(checked => {\n      if (!checked) {\n        all = false;\n      }\n\n      return !all;\n    });\n\n    return all;\n  }\n\n  _setTable = (table) => {\n    this._table = table;\n  };\n\n  _createCheckbox = (index) => {\n    this.setState((state, props) => {\n      const selectedRows = state.selectedRows.slice();\n      // Only use the default selected rows prop on first mount. If other changes occur after,\n      // default to false.\n      const selected = this._initial && props.defaultSelectedRows[index] || false;\n      selectedRows.splice(index, 0, selected);\n      return { selectedRows, allSelected: this._allSelected(selectedRows) };\n    });\n  };\n\n  _removeCheckbox = (index) => {\n    this.setState((state) => {\n      // When multiple checkboxes are removed in a render cycle, they are removed in list order.\n      // So to keep the index correct while removing, need to keep subtract the provided index by\n      // the current number of removed elements. This value gets reset to 0 after a finished cycle.\n      const selectedRows = state.selectedRows.slice();\n\n      // This is really ugly. React 16 doesn't need to track all this while React 15 does\n      if (React.version && React.version.match(/^16\\./)) {\n        selectedRows.splice(index, 1);\n      } else {\n        selectedRows.splice(index - this._removed, 1);\n        this._removed += 1;\n      }\n      return { selectedRows, allSelected: this._allSelected(selectedRows) };\n    });\n  };\n\n  _toggleSelectedRow = (row, header, e) => {\n    let selectedRows;\n    let allSelected = this.state.allSelected;\n    let selectedCount = 0;\n    const i = this._table && this._table.querySelector('.md-table-header') ? row - 1 : row;\n    const { checked } = e.target;\n    if (header) {\n      selectedRows = this.state.selectedRows.map(() => checked);\n      allSelected = checked;\n      selectedCount = !checked ? 0 : selectedRows.length;\n    } else {\n      selectedRows = this.state.selectedRows.slice();\n      selectedRows[i] = !selectedRows[i];\n      selectedCount = selectedRows.filter(b => b).length;\n      allSelected = selectedCount === selectedRows.length;\n    }\n\n    if (this.props.onRowToggle) {\n      this.props.onRowToggle(row, checked, selectedCount, e);\n    }\n\n    const indeterminate = this.props.indeterminate && !allSelected && selectedCount > 0;\n\n    this.setState({ selectedRows, allSelected, indeterminate });\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      tableStyle,\n      tableClassName,\n      fixedWrapperStyle,\n      fixedWrapperClassName,\n      fixedScrollWrapperStyle,\n      fixedScrollWrapperClassName,\n      children,\n      plain,\n      responsive,\n      fixedHeader,\n      fixedFooter,\n      fixedDividers,\n      fixedHeight,\n      fixedWidth,\n      headerHeight,\n      footerHeight,\n      fullWidth,\n      /* eslint-disable no-unused-vars */\n      indeterminate,\n      indeterminateIcon,\n      checkedIcon,\n      uncheckedIcon,\n      defaultSelectedRows,\n      baseId,\n      onRowToggle,\n      selectableRows,\n      checkboxHeaderLabel,\n      checkboxLabelTemplate,\n\n      // deprecated\n      checkedIconChildren,\n      checkedIconClassName,\n      uncheckedIconChildren,\n      uncheckedIconClassName,\n      indeterminateIconChildren,\n      indeterminateIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const table = (\n      <table\n        {...props}\n        ref={this._setTable}\n        style={responsive ? tableStyle : style}\n        className={cn('md-data-table', {\n          'md-data-table--plain': plain,\n          'md-data-table--full-width': fullWidth,\n          [className]: !responsive && className,\n          [tableClassName]: responsive && tableClassName,\n        })}\n      >\n        {children}\n      </table>\n    );\n\n    if (!responsive) {\n      return table;\n    }\n\n    let content = table;\n    if (fixedHeader || fixedFooter) {\n      let height = fixedHeight;\n      if (fixedHeight) {\n        if (fixedHeader) {\n          height -= headerHeight;\n        }\n\n        if (fixedFooter) {\n          height -= footerHeight;\n        }\n      }\n\n      let borderTop = fixedHeader;\n      let borderBot = fixedFooter;\n      if (typeof fixedDividers === 'boolean') {\n        borderTop = borderTop && fixedDividers;\n        borderBot = borderBot && fixedDividers;\n      } else {\n        borderTop = borderTop && (typeof fixedDividers.header === 'undefined' || fixedDividers.header);\n        borderBot = borderBot && (typeof fixedDividers.footer === 'undefined' || fixedDividers.footer);\n      }\n\n      content = (\n        <div\n          style={fixedWrapperStyle}\n          className={cn('md-data-table__fixed-wrapper', {\n            'md-data-table__fixed-wrapper--header': fixedHeader,\n            'md-data-table__fixed-wrapper--footer': fixedFooter,\n          }, fixedWrapperClassName)}\n        >\n          <div\n            style={{ height, ...fixedScrollWrapperStyle }}\n            className={cn('md-data-table__scroll-wrapper', {\n              'md-divider-border': fixedDividers,\n              'md-divider-border--top': borderTop,\n              'md-divider-border--bottom': borderBot,\n            }, fixedScrollWrapperClassName)}\n          >\n            {table}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        style={{ width: fixedWidth, ...style }}\n        className={cn('md-data-table--responsive', {\n          'md-data-table--fixed': fixedHeader || fixedFooter,\n        }, className)}\n      >\n        {content}\n      </div>\n    );\n  }\n}\n"]}
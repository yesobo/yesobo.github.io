{"version":3,"sources":["../../src/js/DataTables/TablePagination.js"],"names":["TablePagination","props","context","controlledPage","page","controlledRowsPerPage","rowsPerPage","defaultRowsPerPage","defaultPage","state","start","controlsMarginLeft","_table","_ticking","nextProps","rpp","p","setState","className","selectFieldStyle","selectFieldClassName","selectFieldInputStyle","selectFieldInputClassName","rows","rowsPerPageLabel","rowsPerPageItems","incrementIcon","decrementIcon","simplifiedMenu","incrementIconChildren","incrementIconClassName","decrementIconChildren","decrementIconClassName","propId","id","propIncrementId","incrementId","propDecrementId","decrementId","onPagination","propRowsPerPage","propPage","baseId","pagination","Math","min","_throttledPosition","_setControls","marginLeft","Positions","BELOW","_setRowsPerPage","_decrement","_increment","propTypes","oneOfType","number","string","style","object","bool","func","isRequired","node","arrayOf","element","contextTypes","fixedFooter","defaultProps","controls","_controls","addEventListener","_position","offsetWidth","scrollLeft","max","requestAnimationFrame","newStart","nextPage","nextState"],"mappings":"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","file":"TablePagination.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport SelectField from '../SelectFields/SelectField';\nimport Button from '../Buttons/Button';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport findTable from './findTable';\nimport TableFooter from './TableFooter';\nimport TableColumn from './TableColumn';\n\n/**\n * The `TablePagination` component is used to generate the table footer that helps\n * pagination through a large dataset by limiting the number of rows per page.\n * The pagination will always be placed persistently at the bottom of the table\n * so that when a user scrolls to the right, they will always be able to use the\n * pagination.\n */\nexport default class TablePagination extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional id to provide to the select field. If this is omitted, it will be\n     * the `DataTable`'s `baseId` with '-pagination'.\n     *\n     * @see {@link DataTables/DataTable#baseId}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the increment icon button. If this is omitted, it will be\n     * the `id` with '-increment-btn'.\n     *\n     * @see {@link #id}\n     */\n    incrementId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the decrement icon button. If this is omitted, it will be\n     * the `id` with '-decrement-btn'.\n     *\n     * @see {@link #id}\n     */\n    decrementId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the `tfoot` tag.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `tfoot` tag.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the select field.\n     *\n     * @see {@link SelectFields/SelectField#style}\n     */\n    selectFieldStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field.\n     *\n     * @see {@link SelectFields/SelectField#className}\n     */\n    selectFieldClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the select field's input.\n     *\n     * @see {@link SelectFields/SelectField#inputStyle}\n     */\n    selectFieldInputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field's input.\n     *\n     * @see {@link SelectFields/SelectField#inputClassName}\n     */\n    selectFieldInputClassName: PropTypes.string,\n\n    /**\n     * Boolean if the select field should use the simplified menu logic.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * A function to call when a user clicks the increment or decrement pagination\n     * icon button. This function will be given the new start index and the number\n     * or rows per page as well as the current page.\n     *\n     * ```js\n     * onPagination(newStart, rowsPerPage, currentPage);\n     * ```\n     */\n    onPagination: PropTypes.func.isRequired,\n\n    /**\n     * The current value for the select field holding the number of rows per page.\n     */\n    rowsPerPage: PropTypes.number,\n\n    /**\n     * The current page for the pagination. This will make the component controlled, so the only way to get pagination\n     * is making sure you are updating this prop after the `onPagination` callback is called.\n     *\n     * Pages start from 1 instead of 0.\n     */\n    page: PropTypes.number,\n\n    /**\n     * The default page to start from for the pagination. Pages start from 1 instead of 0.\n     */\n    defaultPage: PropTypes.number.isRequired,\n\n    /**\n     * The default number of rows per page to display. This will be the value for the\n     * `SelectField`.\n     */\n    defaultRowsPerPage: PropTypes.number.isRequired,\n\n    /**\n     * The label to use for the rows per page `SelectField`.\n     */\n    rowsPerPageLabel: PropTypes.node.isRequired,\n\n    /**\n     * A list of numbers for the amount of rows per page to display at a time.\n     * This will be rendered into the `SelectField`.\n     */\n    rowsPerPageItems: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    /**\n     * The total number of rows that can be displayed. This is the unfiltered/non-subset\n     * number of rows. This is used to help calculate the increment/decrement values to\n     * display and determine if the user can increment/decrement again.\n     */\n    rows: PropTypes.number.isRequired,\n\n    /**\n     * The icon to use for the increment icon button.\n     */\n    incrementIcon: PropTypes.element,\n\n    /**\n     * The icon to use for the decrement icon button.\n     */\n    decrementIcon: PropTypes.element,\n\n    incrementIconChildren: deprecated(PropTypes.node, 'Use the `incrementIcon` prop instead'),\n    incrementIconClassName: deprecated(PropTypes.string, 'Use the `incrementIcon` prop instead'),\n    decrementIconChildren: deprecated(PropTypes.node, 'Use the `decrementIcon` prop instead'),\n    decrementIconClassName: deprecated(PropTypes.string, 'Use the `decrementIcon` prop instead'),\n  };\n\n  static contextTypes = {\n    baseId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    fixedFooter: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    defaultPage: 1,\n    defaultRowsPerPage: 10,\n    rowsPerPageLabel: 'Rows per page:',\n    rowsPerPageItems: [10, 20, 30, 40, 50, 100],\n    incrementIcon: <FontIcon>keyboard_arrow_right</FontIcon>,\n    decrementIcon: <FontIcon>keyboard_arrow_left</FontIcon>,\n    simplifiedMenu: false,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    const controlledPage = typeof props.page !== 'undefined';\n    const controlledRowsPerPage = typeof props.rowsPerPage !== 'undefined';\n    const rowsPerPage = controlledRowsPerPage ? props.rowsPerPage : props.defaultRowsPerPage;\n    const page = controlledPage ? props.page : props.defaultPage;\n    this.state = {\n      start: (page - 1) * rowsPerPage,\n      controlsMarginLeft: 0,\n    };\n\n    if (!controlledPage) {\n      this.state.page = page;\n    }\n\n    if (!controlledRowsPerPage) {\n      this.state.rowsPerPage = props.defaultRowsPerPage;\n    }\n\n    this._table = null;\n    this._ticking = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { rowsPerPage, page } = this.props;\n    if (page !== nextProps.page || rowsPerPage !== nextProps.rowsPerPage) {\n      const rpp = getField(nextProps, this.state, 'rowsPerPage');\n      const p = getField(nextProps, this.state, 'page');\n\n      this.setState({ start: (p - 1) * rpp });\n    }\n  }\n\n  _setControls = (controls) => {\n    this._controls = controls;\n    this._table = findTable(controls);\n\n    if (this._table && this.context.fixedFooter) {\n      this._table.addEventListener('scroll', this._throttledPosition);\n    }\n  };\n\n  _position = () => {\n    if (this._table) {\n      const { fixedFooter } = this.context;\n      const { offsetWidth, scrollLeft } = this._table;\n\n      let controlsMarginLeft = offsetWidth - this._controls.offsetWidth;\n      if (fixedFooter) {\n        controlsMarginLeft += scrollLeft;\n      }\n\n      this.setState({\n        controlsMarginLeft: Math.max(24, controlsMarginLeft),\n      });\n    }\n  };\n\n  _throttledPosition = () => {\n    if (!this._ticking) {\n      requestAnimationFrame(() => {\n        this._ticking = false;\n        this._position();\n      });\n    }\n\n    this._ticking = true;\n  };\n\n  _increment = () => {\n    const { rows, onPagination } = this.props;\n    const { start } = this.state;\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    const page = getField(this.props, this.state, 'page');\n\n    // Only correct multiple of rows per page\n    const max = rows - (rows % rowsPerPage);\n\n    const newStart = Math.min(start + rowsPerPage, max);\n    const nextPage = page + 1;\n\n    onPagination(newStart, rowsPerPage, nextPage);\n    if (typeof this.props.page === 'undefined') {\n      this.setState({ start: newStart, page: nextPage });\n    }\n  };\n\n  _decrement = () => {\n    const { start } = this.state;\n    const page = getField(this.props, this.state, 'page');\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    const newStart = Math.max(0, start - rowsPerPage);\n    const nextPage = page - 1;\n\n    this.props.onPagination(newStart, rowsPerPage, nextPage);\n    if (typeof this.props.page === 'undefined') {\n      this.setState({ start: newStart, page: nextPage });\n    }\n  };\n\n  _setRowsPerPage = (rowsPerPage) => {\n    const page = 1;\n    const newStart = 0;\n    this.props.onPagination(newStart, rowsPerPage, page);\n    let nextState;\n    if (typeof this.props.rowsPerPage === 'undefined') {\n      nextState = { rowsPerPage };\n    }\n\n    if (typeof this.props.page === 'undefined') {\n      nextState = nextState || {};\n      nextState.start = newStart;\n    }\n\n    if (nextState) {\n      this.setState(nextState);\n    }\n  };\n\n  render() {\n    const { controlsMarginLeft, start } = this.state;\n    const {\n      className,\n      selectFieldStyle,\n      selectFieldClassName,\n      selectFieldInputStyle,\n      selectFieldInputClassName,\n      rows,\n      rowsPerPageLabel,\n      rowsPerPageItems,\n      incrementIcon,\n      decrementIcon,\n      simplifiedMenu,\n\n      // deprecated\n      incrementIconChildren,\n      incrementIconClassName,\n      decrementIconChildren,\n      decrementIconClassName,\n      /* eslint-disable no-unused-vars */\n      id: propId,\n      incrementId: propIncrementId,\n      decrementId: propDecrementId,\n      onPagination,\n      rowsPerPage: propRowsPerPage,\n      page: propPage,\n      defaultPage,\n      defaultRowsPerPage,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const { baseId } = this.context;\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    let { id, incrementId, decrementId } = this.props;\n    if (!id) {\n      id = `${baseId}-pagination`;\n    }\n\n    if (!incrementId) {\n      incrementId = `${id}-increment-btn`;\n    }\n\n    if (!decrementId) {\n      decrementId = `${id}-decrement-btn`;\n    }\n\n    const pagination = `${start + 1}-${Math.min(rows, start + rowsPerPage)} of ${rows}`;\n    return (\n      <TableFooter {...props} className={cn('md-table-footer--pagination', className)}>\n        <ResizeObserver watchWidth component=\"tr\" onResize={this._throttledPosition} />\n        <ResizeObserver watchWidth component=\"tr\" target={this._table} onResize={this._throttledPosition} />\n        <tr>\n          {/* colspan 100% so footer columns do not align with body and header */}\n          <TableColumn colSpan=\"100%\">\n            <div\n              ref={this._setControls}\n              className=\"md-table-pagination md-table-pagination--controls md-text\"\n              style={{ marginLeft: controlsMarginLeft }}\n            >\n              <span className=\"md-table-pagination__label\">\n                {rowsPerPageLabel}\n              </span>\n              <SelectField\n                id={id}\n                menuItems={rowsPerPageItems}\n                position={SelectField.Positions.BELOW}\n                style={selectFieldStyle}\n                className={selectFieldClassName}\n                inputStyle={selectFieldInputStyle}\n                inputClassName={cn('md-select-field--pagination', selectFieldInputClassName)}\n                value={rowsPerPage}\n                onChange={this._setRowsPerPage}\n                simplifiedMenu={simplifiedMenu}\n              />\n              <span className=\"md-table-pagination--label\">{pagination}</span>\n              <Button\n                id={decrementId}\n                icon\n                onClick={this._decrement}\n                disabled={start === 0}\n                iconEl={getDeprecatedIcon(decrementIconClassName, decrementIconChildren, decrementIcon)}\n              />\n              <Button\n                id={incrementId}\n                icon\n                onClick={this._increment}\n                disabled={start + rowsPerPage >= rows}\n                iconEl={getDeprecatedIcon(incrementIconClassName, incrementIconChildren, incrementIcon)}\n              />\n            </div>\n            {/*\n              * Since the footer controls is positioned absolutely for a persistent footer,\n              * we have a mask to correctly set the height of the footer.\n              */}\n            <div className=\"md-table-pagination\" />\n          </TableColumn>\n        </tr>\n      </TableFooter>\n    );\n  }\n}\n"]}
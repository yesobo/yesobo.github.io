{"version":3,"sources":["../../src/js/NavigationDrawers/NavigationDrawer.js"],"names":["DrawerTypes","getNonMiniType","type","pMini","PERSISTENT_MINI","tMini","TEMPORARY_MINI","indexOf","PERSISTENT","TEMPORARY","toMiniListItem","item","index","divider","subheader","key","itemProps","NavigationDrawer","props","defaultProps","mobileType","mobileDrawerType","tabletType","tabletDrawerType","desktopType","desktopDrawerType","constantType","constantDrawerType","others","getCurrentMedia","defaultMedia","defaultVisible","initialDrawerType","state","mobile","tablet","desktop","drawerType","visible","persistentIcon","id","contentId","label","jumpLabel","persistentIconChildren","persistentIconClassName","closeIconChildren","closeIconClassName","closeIcon","onCloseClick","_toggleVisibility","renderNode","context","nextProps","nVisible","_animate","_timeout","clearTimeout","style","className","toolbarStyle","toolbarClassName","drawerStyle","drawerClassName","contentStyle","contentClassName","Content","contentComponent","navItems","children","drawerId","drawerTitle","drawerZDepth","drawerChildren","drawerHeaderChildren","drawerTransitionDuration","toolbarId","toolbarTitle","toolbarTitleMenu","toolbarTitleStyle","toolbarTitleClassName","toolbarActions","toolbarProminent","toolbarProminentTitle","toolbarThemeType","toolbarSingleColor","toolbarChildren","toolbarZDepth","transitionName","transitionEnterTimeout","transitionLeaveTimeout","extractMini","miniDrawerHeader","miniDrawerChildren","footer","includeDrawerHeader","contentProps","temporaryIcon","temporaryIconChildren","temporaryIconClassName","menuIconChildren","menuIconClassName","propDrawerType","propDrawerHeader","drawerHeader","propRenderNode","onDrawerChange","contentActive","mini","temporary","persistent","clipped","CLIPPED","floating","FLOATING","offset","toolbarRelative","nav","closeButton","miniDrawer","miniList","map","desktopOffset","_handleVisibility","_handleTypeChange","DrawerType","_warned","_msg","FULL_HEIGHT","console","error","replace","propTypes","oneOfType","number","string","navItemsId","object","navStyle","navClassName","overlayStyle","overlayClassName","node","bool","position","oneOf","isRequired","arrayOf","element","shape","primaryText","mobileMinWidth","tabletMinWidth","desktopMinWidth","onMediaTypeChange","func","onVisibilityChange","autoclose","actions","portal","lastChild","onVisibilityToggle","contentTransitionName","contentTransitionEnterTimeout","contentTransitionLeaveTimeout","contextTypes","childContextTypes","transitionDuration","setTimeout","setState","e","callback","mediaState"],"mappings":"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","file":"NavigationDrawer.js","sourcesContent":["import React, { PureComponent, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport Button from '../Buttons/Button';\nimport Drawer from '../Drawers/Drawer';\nimport List from '../Lists/List';\nimport Toolbar from '../Toolbars/Toolbar';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\n\nconst { DrawerTypes } = Drawer;\nimport { isTemporary, isPersistent, isPermanent, isMini } from '../Drawers/isType';\nimport JumpToContentLink from './JumpToContentLink';\nimport CloseButton from './CloseButton';\nimport MiniListItem from './MiniListItem';\n\nfunction getNonMiniType(type) {\n  const { PERSISTENT_MINI: pMini, TEMPORARY_MINI: tMini } = DrawerTypes;\n  if ([pMini, tMini].indexOf(type) === -1) {\n    return type;\n  }\n\n  return pMini === type ? DrawerTypes.PERSISTENT : DrawerTypes.TEMPORARY;\n}\n\nfunction toMiniListItem(item, index) {\n  if (isValidElement(item)) {\n    return item;\n  }\n\n  const { divider, subheader, key, ...itemProps } = item;\n  if (divider || subheader) {\n    return null;\n  }\n\n  return <MiniListItem key={key || index} {...itemProps} />;\n}\n\n/**\n * The `NavigationDrawer` is used when you want a full layout configuration. It is a combination\n * of the `Toolbar` component and the `Drawer` component. Any props that are not specifically\n * listed below will be provided to the `Drawer` component. So if there are props on the `Drawer`\n * that are not listed here, they will be passed along.\n *\n * The main benefit of using this component is that it will manage adding respective offset\n * classes automatically for you to the content and the drawer. It will also manage using\n * a mini drawer type for you.\n */\nexport default class NavigationDrawer extends PureComponent {\n  static DrawerType = { // deprecated\n    /* eslint-disable no-console */\n    _warned: false,\n    _msg: 'Invalid use of `NavigationDrawer.DrawerType.{{TYPE}}`. The `NavigationDrawer.DrawerType` ' +\n      'has been deprecated and will be removed in the next major release. Please use the ' +\n      '`NavigationDrawer.DrawerTypes.{{TYPE}}` instead.',\n\n    get FULL_HEIGHT() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'FULL_HEIGHT'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.FULL_HEIGHT;\n    },\n\n    get CLIPPED() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'CLIPPED'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.CLIPPED;\n    },\n\n    get FLOATING() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'FLOATING'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.FLOATING;\n    },\n\n    get PERSISTENT() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'PERSISTENT'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.PERSISTENT;\n    },\n\n    get PERSISTENT_MINI() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'PERSISTENT_MINI'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.PERSISTENT_MINI;\n    },\n\n    get TEMPORARY() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'TEMPORARY'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.TEMPORARY;\n    },\n\n    get TEMPORARY_MINI() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'TEMPORARY_MINI'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.TEMPORARY_MINI;\n    },\n    /* eslint-enable no-console */\n  };\n\n  static DrawerTypes = DrawerTypes;\n\n  static propTypes = {\n    /**\n     * An optional id to provide to the entire div wrapper.\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the drawer. This is generally a good idea to provide if\n     * there are any `navItems` defined.\n     *\n     * @see {@link #navItemsId}\n     */\n    drawerId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the navItems list. If this is omitted and the `drawerId` prop is\n     * defined, it will be defaulted to `${drawerId}-nav-items`.\n     *\n     * @see {@link #drawerId}\n     * @see {@link Drawers#navItemsId}\n     */\n    navItemsId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the main toolbar.\n     */\n    toolbarId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An id to give the main content. A hidden link is created in the main drawer's header that links to the main\n     * content. This is used for keyboard only users to jump the navigation and jump straight to the content.\n     *\n     * If you provide your own `drawerHeader`, it is suggested to include the link yourself.\n     */\n    contentId: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional style to apply to the surrounding container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the surrounding container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the main toolbar.\n     */\n    toolbarStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the toolbar.\n     */\n    toolbarClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the main toolbar's title.\n     */\n    toolbarTitleStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the main toolbar's title.\n     */\n    toolbarTitleClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the drawer.\n     */\n    drawerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the drawer.\n     */\n    drawerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `List` surrounding the `navItems`.\n     */\n    navStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `List` surrounding the `navItems`.\n     */\n    navClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the content. This is the container surrounding whatever\n     * `children` are passed in.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the content. This is the container surrounding whatever\n     * `children` are passed in.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the overlay.\n     */\n    overlayStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the overlay.\n     */\n    overlayClassName: PropTypes.string,\n\n    /**\n     * The children to display in the main content.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the `drawerHeader` component should be built if the `drawerHeader` prop is not\n     * passed in.\n     */\n    includeDrawerHeader: PropTypes.bool,\n\n    /**\n     * An optional header to display in the drawer. This will normally be the `Toolbar` component\n     * or any other type of header. You can either use this prop with the `CloseButton` component\n     * when displaying a persistent drawer, or use the `drawerTitle` and `drawerHeaderChildren` prop\n     * to build a toolbar.\n     */\n    drawerHeader: PropTypes.node,\n\n    /**\n     * An optional title to use for the drawer's header toolbar. If the `drawerHeader` prop is defined,\n     * this is invalid.\n     */\n    drawerTitle: invalidIf(PropTypes.node, 'drawerHeader'),\n\n    /**\n     * An optional zDepth to apply to the drawer. If this is omitted, the value will be set as follows:\n     * - floating || inline = 1\n     * - temporary = 5\n     * - all others = 1\n     *\n     * @see {@link Papers/Paper#zDepth}\n     */\n    drawerZDepth: PropTypes.number,\n\n    /**\n     * Any additional children to display after the `drawerHeader` and `navItems` list in the drawer.\n     */\n    drawerChildren: PropTypes.node,\n\n    /**\n     * Any additional children to display in the drawer's header `Toolbar`. If the `drawerHeader` prop is defined,\n     * this is invalid.\n     */\n    drawerHeaderChildren: invalidIf(PropTypes.node, 'drawerHeader'),\n\n    /**\n     * The position for the drawer to be displayed.\n     */\n    position: PropTypes.oneOf(['left', 'right']).isRequired,\n\n    /**\n     * An optional list of elements or props to use to build a navigational list in the drawer.\n     * When the item is an object of props, it will build a `ListItem` component unless a key of\n     * `divider` or `subheader` is set to true. It will then create the Divider or Subheader component\n     * with any other remaining keys.\n     */\n    navItems: PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({\n        divider: PropTypes.bool,\n        subheader: PropTypes.bool,\n        primaryText: PropTypes.node,\n      }),\n    ])),\n\n    /**\n     * The drawer type to use for mobile devices.\n     */\n    mobileDrawerType: PropTypes.oneOf([\n      DrawerTypes.TEMPORARY,\n      DrawerTypes.TEMPORARY_MINI,\n    ]).isRequired,\n\n    /**\n     * The drawer type to use for tablets.\n     */\n    tabletDrawerType: PropTypes.oneOf([\n      DrawerTypes.FULL_HEIGHT,\n      DrawerTypes.CLIPPED,\n      DrawerTypes.FLOATING,\n      DrawerTypes.PERSISTENT,\n      DrawerTypes.PERSISTENT_MINI,\n      DrawerTypes.TEMPORARY,\n      DrawerTypes.TEMPORARY_MINI,\n    ]).isRequired,\n\n    /**\n     * The drawer type to use for desktop displays.\n     */\n    desktopDrawerType: PropTypes.oneOf([\n      DrawerTypes.FULL_HEIGHT,\n      DrawerTypes.CLIPPED,\n      DrawerTypes.FLOATING,\n      DrawerTypes.PERSISTENT,\n      DrawerTypes.PERSISTENT_MINI,\n      DrawerTypes.TEMPORARY,\n      DrawerTypes.TEMPORARY_MINI,\n    ]).isRequired,\n\n    /**\n     * An optional drawer type to enforce on all screen sizes. If the drawer type is not\n     * `temporary`, you are required to define the `onMediaTypeChange` prop to handle switching\n     * to temporary when the media matches a mobile device.\n     * ```\n     */\n    drawerType: PropTypes.oneOf([\n      DrawerTypes.FULL_HEIGHT,\n      DrawerTypes.CLIPPED,\n      DrawerTypes.FLOATING,\n      DrawerTypes.PERSISTENT,\n      DrawerTypes.PERSISTENT_MINI,\n      DrawerTypes.TEMPORARY,\n      DrawerTypes.TEMPORARY_MINI,\n    ]),\n\n    /**\n     * The default media match for the drawer. This will be what is displayed on first render.\n     * The component will adjust itself to the current media after it has mounted, but this\n     * is mostly used for server side rendering.\n     */\n    defaultMedia: PropTypes.oneOf(['mobile', 'tablet', 'desktop']),\n\n    /**\n     * The min width to use for a mobile media query. This prop should match the `md-mobile-min-width`\n     * variable.\n     *\n     * The media query for a mobile device will be:\n     *\n     * ```js\n     * window.matchMedia(\n     *   `screen and (min-width: ${mobileMinWidth}px) and (max-width: ${tabletMinWidth - 1}px`\n     * ).matches;\n     * ```\n     */\n    mobileMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * The min width to use for a tablet media query. This prop should match the `md-tablet-min-width`\n     * variable.\n     *\n     * The media query for a tablet device will be:\n     *\n     * ```js\n     * window.matchMedia(\n     *   `screen and (min-width: ${tabletMinWidth}px) and (max-width: ${desktopWidth - 1}px`\n     * ).matches;\n     * ```\n     */\n    tabletMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * The min width to use for a desktop media query. This prop should match the `md-desktop-min-width`\n     * variable.\n     *\n     * The media query for a tablet device will be:\n     *\n     * ```js\n     * window.matchMedia(`screen and (min-width: ${tabletMinWidth}px)`).matches;\n     * ```\n     */\n    desktopMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to call when the type of the drawer changes because of the\n     * new media queries. The callback will include the newly selected drawer type\n     * and an object containing the media matches of `mobile`, `tablet`, and `desktop`.\n     *\n     * ```js\n     * this.props.onMediaTypeChange(NavigationDrawer.DrawerTypes.TEMPORARY, {\n     *   mobile: true,\n     *   tablet: false,\n     *   desktop: false,\n     * });\n     * ```\n     */\n    onMediaTypeChange: PropTypes.func,\n\n    /**\n     * Boolean if the temporary or persistent drawers are visible by default.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * Boolean if the temporary or persistent drawers are visible. If this is defined,\n     * it will make the component controlled and require the `onVisibilityChange` prop\n     * to be defined.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the visibility of the drawer changes. The callback\n     * will include the new visibility.\n     *\n     * ```js\n     * onVisibilityChange(false);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * A boolean if the mini drawer's list should be generated from the `navItems` prop. When building\n     * the list, it will extract the `leftIcon` or `leftAvatar` from the `navItem` and then create a\n     * mini `ListItem` containing only that icon or image. Any other event listeners will also be applied.\n     *\n     *\n     * @see {@link #miniDrawerHeader}\n     * @see {@link #miniDrawerChildren}\n     */\n    extractMini: PropTypes.bool,\n\n    /**\n     * An optional header to display in the mini drawer. This will be displayed above the optional\n     * mini nav list that get generated if the `extractMini` prop is `true` and the `miniDrawerChildren`.\n     *\n     * @see {@link #extractMini}\n     */\n    miniDrawerHeader: PropTypes.node,\n\n    /**\n     * Any additional children to display in the mini drawer. This will be displayed after the `miniDrawerHeader`\n     * and the optional mini nav list that gets generated if the `extractMini` prop is `true`.\n     *\n     * @see {@link #extractMini}\n     */\n    miniDrawerChildren: PropTypes.node,\n\n    /**\n     * Boolean if the drawer should automatically close after a nav item has been clicked for `temporary` drawers.\n     */\n    autoclose: PropTypes.bool,\n\n    /**\n     * An optional title to display in the main toolbar. Either the `toolbarTitle` or the `toolbarTitleMenu`\n     * may be defined, not both.\n     */\n    toolbarTitle: invalidIf(PropTypes.node, 'toolbarTitleMenu'),\n\n    /**\n     * An optional select field menu to display in the main toolbar. Either the `toolbarTitle` or the `toolbarTitleMenu`\n     * may be defined, not both.\n     */\n    toolbarTitleMenu: PropTypes.element,\n\n    /**\n     * The theme style for the main toolbar.\n     *\n     * @see {@link Toolbars/Toolbar}\n     */\n    toolbarThemeType: PropTypes.oneOf(['default', 'colored', 'themed']).isRequired,\n\n    /**\n     * Boolean if the toolbar's nav, actions, and title should share the same color.\n     */\n    toolbarSingleColor: PropTypes.bool,\n\n    /**\n     * A boolean if the toolbar should be prominent.\n     */\n    toolbarProminent: PropTypes.bool,\n\n    /**\n     * A boolean if the toolbar's title should be prominent.\n     */\n    toolbarProminentTitle: PropTypes.bool,\n\n    /**\n     * A list of elements or a single element to display to the right of the\n     * toolbar's nav, title, and children.\n     *\n     * @see {@link Toolbars/Toolbar#actions}\n     */\n    toolbarActions: Toolbar.propTypes.actions,\n\n    /**\n     * Any children to display in the toolbar. This will be displayed between the optional title and\n     * actions.\n     */\n    toolbarChildren: Toolbar.propTypes.children,\n\n    /**\n     * An optional zDepth to apply to the toolbar.\n     *\n     * @see {@link Toolbars/Toolbar#zDepth}\n     */\n    toolbarZDepth: PropTypes.number,\n\n    /**\n     * The component to render the content in.\n     */\n    contentComponent: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * An optional footer display after the main content.\n     */\n    footer: PropTypes.node,\n\n    /**\n     * The icon to use to render the button that will toggle the visibility of the\n     * navigation drawer for `temporary` and `persistent` drawers. This is normally a\n     * hamburger menu.\n     */\n    temporaryIcon: PropTypes.element,\n\n    /**\n     * The icon to use to render the button that appears on a persistent drawer's open\n     * header. This is used to create the `CloseButton` for drawers. When a persistent\n     * drawer is closed, the `temporaryIcon` will be used to create a button to open the drawer.\n     *\n     * If the `drawerHeader` prop is defined, you will have to either include the `CloseButton`\n     * in your header manually, or create your own controlled button to close the drawer.\n     */\n    persistentIcon: PropTypes.element,\n\n    /**\n     * The transition name to use when the page's content changes. If you want to disable\n     * transitions, set both the `transitionEnterTimeout` and `transitionLeaveTimeout` props\n     * to a false-ish value. (`null`, `undefined`, or `0`).\n     */\n    transitionName: PropTypes.string.isRequired,\n\n    /**\n     * The transition enter timeout when the page's content changes. If you want to disable\n     * the enter transition, set this to a false-ish value (`null`, `undefined`, or `0`).\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * The transition leave timeout when the page's content changes. If you want to disable\n     * the leave transition, set this to a false-ish value (`null`, `undefined`, or `0`).\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * The transition duration for the drawer when sliding in and out of view.\n     */\n    drawerTransitionDuration: PropTypes.number.isRequired,\n\n    /**\n     * Any additional props to provide to the main content. This will be applied before any of the generated props,\n     * so this should not include `style`, `className`, or `component`.\n     */\n    contentProps: PropTypes.object,\n\n    /**\n     * The label to use for a keyboard accessibility link that jumps all the navigation and allows a user to focus\n     * the main content. This is created in the drawer's header.\n     */\n    jumpLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the drawer. The overlay that appears for temporary type drawers will still appear in the\n     * separate subtree.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM Node to render the drawer into. The default is to render as\n     * the first child in the `body`.\n     *\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n     * since the `Portal` component will not be used.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the drawer should be rendered as the last child instead of the first child\n     * in the `renderNode` or `body`.\n     *\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n     * since the `Portal` component will not be used.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * Boolean if the `drawerType` should remain constant across all media. This is really only valid\n     * if the `drawerType` is one of the temporary types.\n     */\n    constantDrawerType: PropTypes.bool,\n\n    menuIconChildren: deprecated(PropTypes.node, 'Use `temporaryIcon` instead'),\n    menuIconClassName: deprecated(PropTypes.string, 'Use `temporaryIcon` instead'),\n    closeIconChildren: deprecated(PropTypes.node, 'Use `persistentIcon` instead'),\n    closeIconClassName: deprecated(PropTypes.string, 'Use `persistentIcon` instead'),\n    temporaryIconChildren: deprecated(PropTypes.node, 'Use the `temporaryIcon` instead'),\n    temporaryIconClassName: deprecated(PropTypes.string, 'Use the `temporaryIcon` instead.'),\n    persistentIconChildren: deprecated(PropTypes.node, 'Use the `persistentIcon` instead'),\n    persistentIconClassName: deprecated(PropTypes.string, 'Use the `persistentIcon` prop instead'),\n    onDrawerChange: deprecated(PropTypes.func, 'Use `onVisibilityChange` or `onMediaTypeChange` instead'),\n    onVisibilityToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\n    contentTransitionName: deprecated(PropTypes.string, 'Use `transitionName` instead'),\n    contentTransitionEnterTimeout: deprecated(PropTypes.number, 'Use `transtionEnterTimeout` instead'),\n    contentTransitionLeaveTimeout: deprecated(PropTypes.number, 'Use `transtionLeaveTimeout` instead'),\n    initialDrawerType: deprecated(\n      PropTypes.oneOf(['mobile', 'tablet', 'desktop']),\n      'Use `defaultMedia` instead'\n    ),\n  };\n\n  static contextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  static childContextTypes = {\n    closeIcon: PropTypes.element,\n    onCloseClick: PropTypes.func,\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    label: PropTypes.node.isRequired,\n    renderNode: PropTypes.object,\n  }\n\n  static defaultProps = {\n    autoclose: Drawer.defaultProps.autoclose,\n    contentId: 'main-content',\n    // Defaults to false since it keeps the state of the drawerType in sync and makes the Drawer\n    // controlled. On initial mount without any defaultMedia updates, it would always be considered\n    // temporary\n    constantDrawerType: false,\n    jumpLabel: 'Jump to content',\n    extractMini: true,\n    position: Drawer.defaultProps.position,\n    defaultMedia: Drawer.defaultProps.defaultMedia,\n    mobileDrawerType: Drawer.defaultProps.mobileType,\n    tabletDrawerType: Drawer.defaultProps.tabletType,\n    desktopDrawerType: Drawer.defaultProps.desktopType,\n    mobileMinWidth: Drawer.defaultProps.mobileMinWidth,\n    tabletMinWidth: Drawer.defaultProps.tabletMinWidth,\n    desktopMinWidth: Drawer.defaultProps.desktopMinWidth,\n    includeDrawerHeader: true,\n    contentComponent: 'main',\n    temporaryIcon: <FontIcon>menu</FontIcon>,\n    toolbarThemeType: 'colored',\n    persistentIcon: <FontIcon>arrow_back</FontIcon>,\n    transitionName: 'md-cross-fade',\n    transitionEnterTimeout: 300,\n    drawerTransitionDuration: Drawer.defaultProps.transitionDuration,\n  };\n\n  /**\n   * Determines the current media and returns an object containing matches for `mobile`, `tablet`, `desktop`,\n   * and the current drawer type. This expects a `props` object of the drawer.\n   *\n   * If this is used server side, it will default to only matching mobile.\n   *\n   * @param {Object=} props - The current drawer's prop shape to extract the mobile, tablet, and desktop type/min\n   *    widths. This defaults to the drawer's default props.\n   * @return {Object} an object containing the media matches and the current type to use for the drawer.\n   */\n  static getCurrentMedia(props = NavigationDrawer.defaultProps) {\n    const {\n      mobileDrawerType: mobileType,\n      tabletDrawerType: tabletType,\n      desktopDrawerType: desktopType,\n      constantDrawerType: constantType,\n      ...others\n    } = props;\n\n    return Drawer.getCurrentMedia({ mobileType, tabletType, desktopType, constantType, ...others });\n  }\n\n  constructor(props) {\n    super(props);\n\n    const { defaultMedia, defaultVisible, initialDrawerType } = props;\n\n    this.state = {\n      mobile: initialDrawerType || defaultMedia === 'mobile',\n      tablet: initialDrawerType || defaultMedia === 'tablet',\n      desktop: initialDrawerType || defaultMedia === 'desktop',\n    };\n\n    if (typeof props.drawerType === 'undefined') {\n      this.state.drawerType = props[`${initialDrawerType || defaultMedia}DrawerType`];\n    }\n\n    const type = getField(props, this.state, 'drawerType');\n\n    if (typeof props.visible === 'undefined') {\n      // The logic for determining the visibility is handled by the created mini drawer\n      this.state.visible = isPermanent(type);\n      if (!this.state.visible && typeof defaultVisible !== 'undefined') {\n        this.state.visible = defaultVisible;\n      }\n    }\n  }\n\n  getChildContext() {\n    const {\n      persistentIcon,\n      contentId: id,\n      jumpLabel: label,\n\n      // deprecated\n      persistentIconChildren,\n      persistentIconClassName,\n      closeIconChildren,\n      closeIconClassName,\n    } = this.props;\n\n    return {\n      id,\n      label,\n      closeIcon: getDeprecatedIcon(\n        closeIconClassName || persistentIconClassName,\n        closeIconChildren || persistentIconChildren,\n        persistentIcon,\n      ),\n      onCloseClick: this._toggleVisibility,\n      renderNode: this.context.renderNode,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const visible = getField(this.props, this.state, 'visible');\n    const nVisible = getField(nextProps, this.state, 'visible');\n    if (visible !== nVisible) {\n      this._animate(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  _animate = (props = this.props, state = this.state) => {\n    if (isTemporary(getField(props, state, 'drawerType'))) {\n      return;\n    }\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this.setState({ contentActive: false });\n    }, props.drawerTransitionDuration);\n\n    this.setState({ contentActive: true });\n  };\n\n  _toggleVisibility = (e) => {\n    const { onVisibilityToggle, onVisibilityChange, onDrawerChange } = this.props;\n    const visible = !getField(this.props, this.state, 'visible');\n    const callback = onVisibilityChange || onVisibilityToggle || onDrawerChange;\n    if (callback) {\n      callback(visible, e);\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n      this._animate(this.props);\n    }\n  };\n\n  _handleVisibility = (visible) => {\n    const { onVisibilityToggle, onVisibilityChange, onDrawerChange } = this.props;\n    const callback = onVisibilityChange || onVisibilityToggle || onDrawerChange;\n    if (callback) {\n      callback(visible);\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n      this._animate(this.props);\n    }\n  };\n\n  _handleTypeChange = (drawerType, mediaState) => {\n    const { onMediaTypeChange } = this.props;\n    let state = mediaState;\n    if (onMediaTypeChange) {\n      onMediaTypeChange(drawerType, mediaState);\n    }\n\n    if (typeof this.props.drawerType === 'undefined') {\n      state = { ...mediaState, drawerType };\n    }\n\n\n    this.setState(state);\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      toolbarStyle,\n      toolbarClassName,\n      drawerStyle,\n      drawerClassName,\n      contentStyle,\n      contentClassName,\n      contentComponent: Content,\n      navItems,\n      children,\n      drawerId,\n      drawerTitle,\n      drawerZDepth,\n      drawerChildren,\n      drawerHeaderChildren,\n      drawerTransitionDuration,\n      toolbarId,\n      toolbarTitle,\n      toolbarTitleMenu,\n      toolbarTitleStyle,\n      toolbarTitleClassName,\n      toolbarActions,\n      toolbarProminent,\n      toolbarProminentTitle,\n      toolbarThemeType,\n      toolbarSingleColor,\n      toolbarChildren,\n      toolbarZDepth,\n      mobileDrawerType: mobileType,\n      tabletDrawerType: tabletType,\n      desktopDrawerType: desktopType,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      extractMini,\n      miniDrawerHeader,\n      miniDrawerChildren,\n      footer,\n      includeDrawerHeader,\n      contentId,\n      contentProps,\n      constantDrawerType,\n      temporaryIcon,\n\n      // deprecated\n      temporaryIconChildren,\n      temporaryIconClassName,\n      menuIconChildren,\n      menuIconClassName,\n      /* eslint-disable no-unused-vars */\n      drawerType: propDrawerType,\n      drawerHeader: propDrawerHeader,\n      renderNode: propRenderNode,\n      jumpLabel,\n      persistentIcon,\n\n      // deprecated\n      onDrawerChange,\n      closeIconChildren,\n      closeIconClassName,\n      persistentIconChildren,\n      persistentIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { drawerHeader } = this.props;\n    const { desktop, tablet, contentActive } = this.state;\n\n    const drawerType = getField(this.props, this.state, 'drawerType');\n    const visible = getField(this.props, this.state, 'visible');\n    const renderNode = getField(this.props, this.context, 'renderNode');\n    const mini = isMini(drawerType);\n    const temporary = isTemporary(drawerType);\n    const persistent = isPersistent(drawerType);\n    const clipped = drawerType === DrawerTypes.CLIPPED;\n    const floating = drawerType === DrawerTypes.FLOATING;\n\n    const offset = (desktop || tablet ? !temporary && visible : visible);\n    const toolbarRelative = cn({\n      'md-toolbar-relative': !toolbarProminent && !toolbarProminentTitle,\n      'md-toolbar-relative--prominent': toolbarProminent || toolbarProminentTitle,\n    });\n\n    let nav;\n    if (temporary || persistent) {\n      nav = (\n        <Button\n          key=\"nav\"\n          onClick={this._toggleVisibility}\n          disabled={persistent && visible}\n          icon\n          iconEl={getDeprecatedIcon(\n            menuIconClassName || temporaryIconClassName,\n            menuIconChildren || temporaryIconChildren,\n            temporaryIcon\n          )}\n        />\n      );\n    }\n\n    let closeButton;\n    if (persistent) {\n      closeButton = <CloseButton />;\n    }\n\n    if (!drawerHeader && includeDrawerHeader) {\n      drawerHeader = (\n        <Toolbar\n          key=\"drawer-header\"\n          title={drawerTitle}\n          actions={visible && nav ? closeButton : null}\n          className={cn('md-divider-border md-divider-border--bottom', {\n            [toolbarRelative]: clipped || floating,\n          })}\n        >\n          {drawerHeaderChildren}\n          <JumpToContentLink />\n        </Toolbar>\n      );\n    }\n    let miniDrawer;\n    if (mini) {\n      let miniList;\n      if (extractMini) {\n        miniList = navItems.map(toMiniListItem);\n        miniList = <List key=\"mini-nav-items\" className={toolbarRelative}>{miniList}</List>;\n      }\n\n      miniDrawer = (\n        <Drawer key=\"mini-drawer\" type={drawerType} renderNode={renderNode} aria-hidden={visible}>\n          {miniDrawerHeader}\n          {miniList}\n          {miniDrawerChildren}\n        </Drawer>\n      );\n    }\n\n    const desktopOffset = !clipped && !floating && offset;\n\n    return (\n      <div style={style} className={className} id={id}>\n        <Toolbar\n          id={toolbarId}\n          colored={toolbarThemeType === 'colored'}\n          themed={toolbarThemeType === 'themed'}\n          singleColor={toolbarSingleColor}\n          style={toolbarStyle}\n          className={cn({\n            'md-toolbar--over-drawer': clipped || floating || (mini && !visible),\n          }, toolbarClassName)}\n          title={toolbarTitle}\n          titleMenu={toolbarTitleMenu}\n          prominent={toolbarProminent}\n          prominentTitle={toolbarProminentTitle}\n          titleStyle={toolbarTitleStyle}\n          titleClassName={cn({\n            'md-title--drawer-active': contentActive,\n            'md-transition--deceleration': offset && visible,\n            'md-transition--acceleration': offset && !visible,\n            'md-title--permanent-offset': desktopOffset && isPermanent(drawerType),\n            'md-title--persistent-offset': desktopOffset && persistent,\n          }, toolbarTitleClassName)}\n          nav={nav}\n          actions={toolbarActions}\n          fixed\n          zDepth={toolbarZDepth}\n        >\n          {toolbarChildren}\n        </Toolbar>\n        {miniDrawer}\n        <Drawer\n          {...props}\n          id={drawerId}\n          constantType={constantDrawerType}\n          transitionDuration={drawerTransitionDuration}\n          header={drawerHeader}\n          style={drawerStyle}\n          className={drawerClassName}\n          navItems={navItems}\n          renderNode={renderNode}\n          mobileType={mobileType}\n          tabletType={tabletType}\n          desktopType={desktopType}\n          type={getNonMiniType(drawerType)}\n          visible={visible}\n          zDepth={drawerZDepth}\n          onVisibilityChange={this._handleVisibility}\n          onMediaTypeChange={this._handleTypeChange}\n        >\n          {drawerChildren}\n        </Drawer>\n        <CSSTransitionGroup\n          {...contentProps}\n          id={contentId}\n          component={Content}\n          transitionName={transitionName}\n          transitionEnter={!!transitionEnterTimeout}\n          transitionEnterTimeout={transitionEnterTimeout}\n          transitionLeave={!!transitionLeaveTimeout}\n          transitionLeaveTimeout={transitionLeaveTimeout}\n          tabIndex={-1}\n          style={contentStyle}\n          className={cn('md-navigation-drawer-content', {\n            'md-navigation-drawer-content--active': contentActive,\n            'md-navigation-drawer-content--inactive': !visible,\n            'md-navigation-drawer-content--prominent-offset': toolbarProminent || toolbarProminentTitle,\n            'md-transition--deceleration': visible,\n            'md-transition--acceleration': !visible,\n            'md-drawer-relative': offset,\n            'md-drawer-relative--mini': mini && (!visible || temporary),\n          }, toolbarRelative, contentClassName)}\n        >\n          {children}\n        </CSSTransitionGroup>\n        {footer}\n      </div>\n    );\n  }\n}\n"]}
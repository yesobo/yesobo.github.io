{"version":3,"sources":["../../src/js/Menus/Menu.js"],"names":["Menu","_handleClose","e","props","close","onClose","_handleClick","onClick","node","target","_container","contains","_isIgnoreTarget","_isCloseTarget","persist","_timeout","setTimeout","parentNode","_handleKeyDown","onKeyDown","cascading","id","fixedTo","cascadingAnchor","listLevel","context","cascadingMenu","cascadingZDepth","cascadingFixedTo","cascadingId","clearTimeout","classList","getAttribute","className","listStyle","listClassName","visible","children","listProps","listZDepth","listInline","listHeightRestricted","sameWidth","simplified","contained","isOpen","propFixedTo","propListId","listId","propPosition","position","autoclose","limitHeight","expanderIconChildren","expanderIconClassName","simple","onContextMenu","Positions","BELOW","below","listVisible","HorizontalAnchors","VerticalAnchors","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","_warned","CONTEXT","console","error","propTypes","oneOfType","number","string","style","object","component","func","anchor","belowAnchor","toggle","bool","isRequired","fullWidth","block","centered","preventContextMenu","xThreshold","yThreshold","closeOnOutsideClick","toggleQuery","transitionName","transitionEnterTimeout","transitionLeaveTimeout","repositionOnScroll","repositionOnResize","minLeft","minRight","minBottom","fillViewportWidth","fillViewportHeight","defaultProps","x","INNER_RIGHT","y","OVERLAP","RIGHT","window","contextTypes","childContextTypes"],"mappings":"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","file":"Menu.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getField from '../utils/getField';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Layover from '../Helpers/Layover';\nimport List from '../Lists/List';\n\n/**\n * The `Menu` controlled component is used to display a list of children in the `List`\n * component once the `visible` prop is true.\n */\nexport default class Menu extends PureComponent {\n  static HorizontalAnchors = Layover.HorizontalAnchors;\n  static VerticalAnchors = Layover.VerticalAnchors;\n  static Positions = {\n    // Can't do ...Layover.Positions since it triggers the get for CONTEXT\n    TOP_LEFT: Layover.Positions.TOP_LEFT,\n    TOP_RIGHT: Layover.Positions.TOP_RIGHT,\n    BOTTOM_LEFT: Layover.Positions.BOTTOM_LEFT,\n    BOTTOM_RIGHT: Layover.Positions.BOTTOM_RIGHT,\n    BELOW: Layover.Positions.BELOW,\n    _warned: false,\n    get CONTEXT() {\n      if (!this._warned) {\n        /* eslint-disable no-console */\n        console.error(\n          'The `Menu.Positions.CONTEXT` position has been deprecated and will be removed ' +\n          'in the next major release. To make the `Menu` behave as a context menu, provide ' +\n          'the `onContextMenu` prop instead.'\n        );\n        /* eslint-enable no-console */\n      }\n\n      this._warned = true;\n      return 'context';\n    },\n  };\n\n  static propTypes = {\n    /**\n     * An id to provide to the menu's container. This is required for accessibility as it generates\n     * the `aria-` attributes for dynamic content.\n     *\n     * @see {@link #listId}\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional id to provide to the menu's list. If this prop is omitted, the list's id will be\n     * `\\`${id}-list\\``\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the main container for the menu.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the main container for the menu.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the list once the menu has opened.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the list once the menu has opened.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * The component to render the main container as.\n     *\n     * @see {@link Helpers/Layover#component}\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]),\n\n    /**\n     * This is how the menu's `List` gets anchored to the `toggle` element.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the optional anchor to use when the `position` is set to `Menu.Positions.BELOW`.\n     * Set this to `null` to use the default `anchor` prop.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is the animation position for the list that appears.\n     *\n     * @see {@link Helpers/Layover#animationPosition}\n     */\n    position: positionShape,\n\n    /**\n     * This is the component/element that should toggle the menu open.\n     *\n     * @see {@link Helpers/Layover#toggle}\n     */\n    toggle: PropTypes.node,\n\n    /**\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * Any additional props that should be applied to the list in the menu. This is really used\n     * when additional `aria-` tags need to be applied.\n     */\n    listProps: PropTypes.object,\n\n    /**\n     * Boolean if the menu's list should appear horizontally instead of vertically.\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\n     */\n    listZDepth: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\n     * `$md-menu-desktop-max-height` values.\n     *\n     * @see [md-menu-mobile-max-height](/components/menus?tab=2#variable-md-menu-mobile-max-height)\n     * @see [md-menu-desktop-max-height](/components/menus?tab=2#variable-md-menu-desktop-max-height)\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list is visible.\n     */\n    visible: PropTypes.bool.isRequired,\n\n    /**\n     * Any children to render in the menu's list. This _should_ normally be `ListItem`, or\n     * `ListItemControl`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional function to call when en element in the menu has been clicked.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when a key is pressed anywhere in the menu.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * A function to call to close the menu. This is used for closing on outside clicks,\n     * closing when a list item has been clicked, or the user presses escape.\n     */\n    onClose: PropTypes.func.isRequired,\n\n    /**\n     * Boolean if the menu should be cascading. This means that the menu will pop the additional\n     * `nestedItems` on any `ListItem` to be appear either to the right or left of the visible list.\n     */\n    cascading: PropTypes.bool,\n\n    /**\n     * This is how the cascading lists get anchored to the list item.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    cascadingAnchor: Layover.propTypes.anchor,\n\n    /**\n     * This is the z-depth the list should gain for a cascading menu. This only gets applied on\n     * items that are more than 1 level deep.\n     */\n    cascadingZDepth: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the `md-full-width` class name should get applied to the menu's container.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should be displayed as a block instead of as an inline block.\n     *\n     * @see {@link #fullWidth}\n     */\n    block: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#centered}\n     */\n    centered: Layover.propTypes.centered,\n\n    /**\n     * @see {@link Helpers/Layover#sameWidth}\n     */\n    sameWidth: Layover.propTypes.sameWidth,\n\n    /**\n     * If you would like the menu to interact as a context menu, provide this prop.\n     *\n     * @see {@link Helpers/Layover#onContextMenu}\n     */\n    onContextMenu: Layover.propTypes.onContextMenu,\n\n    /**\n     * Boolean if the default behavior of the context menu should be prevented when using the\n     * `onContextMenu` prop.\n     *\n     * @see {@link Helpers/Layover#preventContextMenu}\n     */\n    preventContextMenu: Layover.propTypes.preventContextMenu,\n\n    /**\n     * @see {@link Helpers/Layover#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#toggleQuery}\n     */\n    toggleQuery: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional transition name to use for the list appearing/disappearing.\n     *\n     * @see {@link Helpers/Layover#transitionName}\n     */\n    transitionName: PropTypes.string,\n\n    /**\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplified: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    close: deprecated(PropTypes.func, 'Use `onClose` instead'),\n    autoclose: deprecated(PropTypes.bool, 'The menus will always autoclose as according to the specs'),\n    contained: deprecated(PropTypes.bool, 'Use `sameWidth` instead'),\n    limitHeight: deprecated(PropTypes.bool, 'The menus will always be limited in height as according to the specs'),\n    expanderIconClassName: deprecated(\n      PropTypes.node,\n      'The expander for cascading menus will now just be a simple rotate of the existing `ListItem` ' +\n      'expander icon'\n    ),\n    expanderIconChildren: deprecated(\n      PropTypes.node,\n      'The expander for cascading menus will now just be a simple rotate of the existing `ListItem` ' +\n      'expander icon'\n    ),\n  };\n\n  static defaultProps = {\n    anchor: {\n      x: Layover.HorizontalAnchors.INNER_RIGHT,\n      y: Layover.VerticalAnchors.OVERLAP,\n    },\n    cascadingAnchor: {\n      x: Layover.HorizontalAnchors.RIGHT,\n      y: Layover.VerticalAnchors.OVERLAP,\n    },\n    position: Layover.Positions.TOP_RIGHT,\n    fixedTo: typeof window !== 'undefined' ? window : {},\n    listZDepth: 2,\n    listHeightRestricted: true,\n    cascadingZDepth: 3,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n    simplified: true,\n  };\n\n  static contextTypes = {\n    listLevel: PropTypes.number,\n    cascadingId: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    cascadingMenu: PropTypes.bool,\n    cascadingAnchor: anchorShape,\n    cascadingZDepth: PropTypes.number,\n  };\n\n  static childContextTypes = {\n    listLevel: PropTypes.number,\n    cascadingId: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    cascadingMenu: PropTypes.bool,\n    cascadingFixedTo: fixedToShape,\n    cascadingAnchor: anchorShape,\n    cascadingZDepth: PropTypes.number,\n  };\n\n  getChildContext() {\n    const { cascading, id, fixedTo, cascadingAnchor } = this.props;\n    const listLevel = this.context.listLevel || 0;\n    const cascadingMenu = typeof cascading !== 'undefined' ? cascading : this.context.cascadingMenu;\n    const cascadingZDepth = getField(this.context, this.props, 'cascadingZDepth');\n    const cascadingFixedTo = typeof fixedTo !== 'undefined' ? fixedTo : this.context.cascadingFixedTo;\n\n    return {\n      listLevel,\n      cascadingId: `${id}-level-${listLevel + 1}`,\n      cascadingMenu,\n      cascadingAnchor,\n      cascadingZDepth,\n      cascadingFixedTo,\n    };\n  }\n\n  componentDidMount() {\n    this._container = findDOMNode(this);\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  _handleClose = (e) => {\n    const { close, onClose } = this.props;\n    if (close || onClose) {\n      (close || onClose)(e);\n    }\n  };\n\n  /**\n   * Checks if a provided event target or HTML Element is considered a menu click target.\n   * This normally is just a ListItem.\n   */\n  _isCloseTarget(target) {\n    return target.classList.contains('md-list-item')\n      && !target.classList.contains('md-list-item--nested-container');\n  }\n\n  /**\n   * Checks if a provided event target or HTML Element is something that should shortcut/break\n   * out of the click event loop because it **should not** close menus when clicked.\n   */\n  _isIgnoreTarget(target) {\n    return target.getAttribute('disabled') !== null\n      || target.classList.contains('md-list-control');\n  }\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    let node = e.target;\n    while (this._container && this._container.contains(node)) {\n      if (this._isIgnoreTarget(node)) {\n        return;\n      } else if (this._isCloseTarget(node)) {\n        e.persist();\n        // set a timeout so item click events still trigger, and then close\n        this._timeout = setTimeout(() => {\n          this._timeout = null;\n          this._handleClose(e);\n        }, TICK);\n\n        return;\n      }\n\n      node = node.parentNode;\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    handleKeyboardAccessibility(e, this._handleClick, true, true);\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      listStyle,\n      listClassName,\n      visible,\n      children,\n      listProps,\n      listZDepth,\n      listInline,\n      listHeightRestricted,\n      cascading,\n      sameWidth,\n      simplified,\n      contained, // deprecated\n      isOpen, // deprecated\n      /* eslint-disable no-unused-vars */\n      fixedTo: propFixedTo,\n      listId: propListId,\n      cascadingAnchor,\n      cascadingZDepth,\n      onClose,\n      position: propPosition,\n\n      // deprecated\n      close,\n      autoclose,\n      limitHeight,\n      expanderIconChildren,\n      expanderIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { listId, position } = this.props;\n    if (!listId) {\n      listId = `${id}-list`;\n    }\n\n    // can't have a simplified menu for cascading and context menus\n    const simple = !cascading && !props.onContextMenu && position !== 'context' && simplified;\n    if (position === 'context') {\n      position = Menu.Positions.BELOW;\n    }\n\n    const below = position === Menu.Positions.BELOW;\n    const fixedTo = typeof propFixedTo !== 'undefined' ? propFixedTo : this.context.cascadingFixedTo;\n    const listVisible = typeof isOpen !== 'undefined' ? isOpen : visible;\n    return (\n      <Layover\n        {...props}\n        id={id}\n        className={cn('md-menu-container', {\n          'md-menu-container--menu-below': simplified && below,\n        }, className)}\n        simplified={simple}\n        sameWidth={contained || sameWidth}\n        fixedTo={fixedTo}\n        onClick={this._handleClick}\n        onKeyDown={this._handleKeyDown}\n        onClose={this._handleClose}\n        animationPosition={position}\n        visible={listVisible}\n        aria-haspopup\n        aria-expanded={listVisible}\n        aria-owns={listId}\n      >\n        <List\n          {...listProps}\n          id={listId}\n          key=\"menu-list\"\n          style={listStyle}\n          className={cn('md-list--menu', {\n            'md-list--menu-restricted': listHeightRestricted,\n            'md-list--menu-contained': simplified && (sameWidth || contained),\n            [`md-list--menu-${position}`]: simplified,\n            [`md-paper md-paper--${listZDepth}`]: listZDepth,\n          }, listClassName)}\n          inline={listInline}\n        >\n          {children}\n        </List>\n      </Layover>\n    );\n  }\n}\n"]}
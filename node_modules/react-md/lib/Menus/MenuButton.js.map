{"version":3,"sources":["../../src/js/Menus/MenuButton.js"],"names":["MenuButton","props","id","listId","buttonId","menuStyle","menuClassName","listStyle","listClassName","listProps","listZDepth","listInline","listHeightRestricted","menuItems","buttonChildren","children","anchor","belowAnchor","fixedTo","position","cascading","cascadingAnchor","cascadingZDepth","fullWidth","block","centered","sameWidth","repositionOnScroll","repositionOnResize","xThreshold","yThreshold","closeOnOutsideClick","transitionName","transitionEnterTimeout","transitionLeaveTimeout","visible","defaultVisible","onVisibilityChange","simplifiedMenu","minLeft","minRight","minBottom","fillViewportWidth","fillViewportHeight","onMenuClick","onMenuMouseDown","onMenuMouseUp","onMenuMouseEnter","onMenuMouseMove","onMenuMouseLeave","onMenuTouchStart","onMenuTouchMove","onMenuTouchCancel","onMenuTouchEnd","onMenuFocus","onMenuBlur","onMenuKeyDown","onMenuKeyUp","isOpen","defaultOpen","onMenuToggle","items","toggleChildren","Positions","HorizontalAnchors","VerticalAnchors","propTypes","oneOfType","number","string","style","object","className","bool","isRequired","onClick","func","onMouseDown","onMouseUp","onMouseEnter","onMouseMove","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onFocus","onBlur","onKeyDown","onKeyUp","node","arrayOf","defaultProps"],"mappings":"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","file":"MenuButton.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Button from '../Buttons/Button';\nimport DropdownMenu from './DropdownMenu';\n\n/**\n * The `MenuButton` is a simple wrapper / combination of the `Button` and the `Menu`\n * components that can be uncontrolled.\n */\nexport default class MenuButton extends PureComponent {\n  static Positions = DropdownMenu.Positions;\n  static HorizontalAnchors = DropdownMenu.HorizontalAnchors;\n  static VerticalAnchors = DropdownMenu.VerticalAnchors;\n  static propTypes = {\n    /**\n     * An id to use for the menu button. This is required for accessibility.\n     *\n     * @see {@link Menus/Menu#id}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the menu's list.\n     *\n     * @see {@link Menus/Menu#listId}\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the button. If this is omitted, the button will automatically\n     * gain an id of `${id}-toggle`.\n     */\n    buttonId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the button.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the button.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the surrounding menu.\n     */\n    menuStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the surrounding menu.\n     */\n    menuClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the list.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the list.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * Any additional props to provide to the list.\n     *\n     * @see {@link Menus/Menu#listProps}\n     */\n    listProps: PropTypes.object,\n\n    /**\n     * The z-depth to use for the list.\n     *\n     * @see {@link Menus/Menu/listZDepth}\n     */\n    listZDepth: PropTypes.number,\n\n    /**\n     * Boolean if the list should be displayed inline.\n     *\n     * @see {@link Lists/List#inline}\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * Boolean if the list's height should be restricted.\n     *\n     * @see {@link Menus/Menu#listHeightRestricted}\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list is currently visible. If this is defined, it will\n     * require the `onVisibilityChange` function to be defined since it will become\n     * a controlled component.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * Boolean if the menu's list should be visible by default.\n     */\n    defaultVisible: PropTypes.bool.isRequired,\n\n    /**\n     * An optional function to call when the button is clicked.\n     *\n     * @see {@link #onMenuClick}\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mousedown` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseDown}\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseup` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseUp}\n     */\n    onMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseenter` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseEnter}\n     */\n    onMouseEnter: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mousemove` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseMove}\n     */\n    onMouseMove: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseleave` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseLeave}\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchstart` event is triggered by the button.\n     *\n     * @see {@link #onMenuTouchStart}\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchmove` event is triggered by the button.\n     *\n     * @see {@link #onMenuTouchMove}\n     */\n    onTouchMove: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchend` event is triggered by the button.\n     *\n     * @see {@link #onMenuTouchEnd}\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchcancel` event is triggered by the button.\n     *\n     * @see {@link #onMenuTouchCancel}\n     */\n    onTouchCancel: PropTypes.func,\n\n    /**\n     * An optional function to call when the `focus` event is triggered by the button.\n     *\n     * @see {@link #onMenuFocus}\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when the `blur` event is triggered by the button.\n     *\n     * @see {@link #onMenuBlur}\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keydown` event is triggered by the button.\n     *\n     * @see {@link #onMenuKeyDown}\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keyup` event is triggered by the button.\n     *\n     * @see {@link #onMenuKeyUp}\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the entire `MenuButton` is clicked. This can be triggered\n     * by clicking the button or any list item that appears in the menu list.\n     *\n     * @see {@link #onClick}\n     */\n    onMenuClick: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mousedown` event.\n     *\n     * @see {@link #onMouseDown}\n     */\n    onMenuMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseup` event.\n     *\n     * @see {@link #onMouseUp}\n     */\n    onMenuMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseenter` event.\n     *\n     * @see {@link #onMouseEnter}\n     */\n    onMenuMouseEnter: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mousemove` event.\n     *\n     * @see {@link #onMouseMove}\n     */\n    onMenuMouseMove: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseleave` event.\n     *\n     * @see {@link #onMouseLeave}\n     */\n    onMenuMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `touchstart` event.\n     *\n     * @see {@link @onTouchStart}\n     */\n    onMenuTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `touchmove` event.\n     *\n     * @see {@link @onTouchMove}\n     */\n    onMenuTouchMove: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `touchend` event.\n     *\n     * @see {@link @onTouchEnd}\n     */\n    onMenuTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `touchcancel` event.\n     *\n     * @see {@link @onTouchCancel}\n     */\n    onMenuTouchCancel: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `focus` event.\n     *\n     * @see {@link #onFocus}\n     */\n    onMenuFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `blur` event.\n     *\n     * @see {@link #onBlur}\n     */\n    onMenuBlur: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `keydown` event.\n     *\n     * @see {@link #onKeyDown}\n     */\n    onMenuKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `keyup` event.\n     *\n     * @see {@link #onKeyUp}\n     */\n    onMenuKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the visibility changes for the menu. The callback will\n     * include the next visibility state and the event that triggered the change.\n     *\n     * ```js\n     * onVisibilityChange(visible, event);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * This is a 0 to many relationship of `ListItem` to display in the menu's `List`. If the type\n     * of the item is a number or string, it will be passed to the `ListItem` as the `primaryText`.\n     * If it is an object, it should be the shape of the `ListItem` props. If it is a node, it will\n     * just be rendered in the `List`.\n     *\n     * @see {@link Lists/ListItem}\n     * @see {@link Menus/Menu#children}\n     */\n    menuItems: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.object,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.object,\n        PropTypes.node,\n      ])),\n    ]),\n\n    /**\n     * This should be the children to use in the `Button` that gets created as the menu's toggle.\n     *\n     * @see {@link Buttons/Button}\n     * @see {@link Menus/Menu#toggle}\n     */\n    children: PropTypes.node,\n\n    /**\n     * The anchor position of the menu's list.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is how the menu's list is fixed to the toggle.\n     *\n     * @see {@link Menus/Menu#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * This is the animation position for the menu's list.\n     *\n     * @see {@link Menus/Menu#position}\n     */\n    position: positionShape,\n\n    /**\n     * Boolean if the menu's list should gain the cascading styles.\n     *\n     * @see {@link Menus/Menu#cascading}\n     */\n    cascading: PropTypes.bool,\n\n    /**\n     * The zDepth to use for the lists that appear in cascading menus.\n     *\n     * @see {@link Menus/Menu#cascadingZDepth}\n     */\n    cascadingZDepth: PropTypes.number,\n\n    /**\n     * The anchor position for the cascading lists.\n     *\n     * @see {@link Menus/Menu#cascadingAnchor}\n     */\n    cascadingAnchor: anchorShape,\n\n    /**\n     * Boolean if the menu should display as a full width container. This will *not* update the button\n     * to be full width as well.\n     *\n     * @see {@link Menus/Menu#fullWidth}\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's container should display as `block` instead of `inline-block`.\n     *\n     * @see {@link Menus/Menu#block}\n     */\n    block: PropTypes.bool,\n\n    /**\n     * Boolean if the list should appear centered related to the button.\n     *\n     * @see {@link Menus/Menu#centered}\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list should be the same width as the button.\n     *\n     * @see {@link Menus/Menu#sameWidth}\n     */\n    sameWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Menus/Menu#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Menus/Menu#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * Boolean if the menu's list should be closed when an element outside of the menu has been clicked.\n     *\n     * @see {@link Menus/Menu#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * The transition name to use for the menu's list visibility changes.\n     *\n     * @see {@link Menus/Menu#transitionName}\n     */\n    transitionName: PropTypes.string,\n\n    /**\n     * The transition name to use when the menu's list gains visibility.\n     *\n     * @see {@link Menus/Menu#transitionEnterTimeout}\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * The transition timeout to use when the menu's list loses visibility.\n     *\n     * @see {@link Menus/Menu#transitionLeaveTimeout}\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: DropdownMenu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: DropdownMenu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: DropdownMenu.propTypes.minBottom,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    buttonChildren: deprecated(\n      PropTypes.node,\n      'To build a button, put any elements in the `children`. The `ListItem` have been moved to the `menuItems` prop'\n    ),\n    onMenuToggle: deprecated(PropTypes.bool, 'Use `onVisibilityChange` instead'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n  };\n\n  static defaultProps = {\n    defaultVisible: false,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n  };\n\n  render() {\n    const {\n      id,\n      listId,\n      buttonId,\n      menuStyle,\n      menuClassName,\n      listStyle,\n      listClassName,\n      listProps,\n      listZDepth,\n      listInline,\n      listHeightRestricted,\n      menuItems,\n      buttonChildren,\n      children,\n      anchor,\n      belowAnchor,\n      fixedTo,\n      position,\n      cascading,\n      cascadingAnchor,\n      cascadingZDepth,\n      fullWidth,\n      block,\n      centered,\n      sameWidth,\n      repositionOnScroll,\n      repositionOnResize,\n      xThreshold,\n      yThreshold,\n      closeOnOutsideClick,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      visible,\n      defaultVisible,\n      onVisibilityChange,\n      simplifiedMenu,\n      minLeft,\n      minRight,\n      minBottom,\n      fillViewportWidth,\n      fillViewportHeight,\n      onMenuClick,\n      onMenuMouseDown,\n      onMenuMouseUp,\n      onMenuMouseEnter,\n      onMenuMouseMove,\n      onMenuMouseLeave,\n      onMenuTouchStart,\n      onMenuTouchMove,\n      onMenuTouchCancel,\n      onMenuTouchEnd,\n      onMenuFocus,\n      onMenuBlur,\n      onMenuKeyDown,\n      onMenuKeyUp,\n      isOpen, // deprecated\n      defaultOpen, // deprecated\n      onMenuToggle, // deprecated\n      ...props\n    } = this.props;\n\n    let items = children;\n    let toggleChildren = buttonChildren;\n    if (typeof menuItems !== 'undefined') {\n      toggleChildren = children;\n      items = menuItems;\n    }\n\n    return (\n      <DropdownMenu\n        id={id}\n        listId={listId}\n        style={menuStyle}\n        className={menuClassName}\n        listStyle={listStyle}\n        listClassName={listClassName}\n        listProps={listProps}\n        listInline={listInline}\n        listZDepth={listZDepth}\n        listHeightRestricted={listHeightRestricted}\n        visible={typeof isOpen !== 'undefined' ? isOpen : visible}\n        defaultVisible={typeof defaultOpen !== 'undefined' ? defaultOpen : defaultVisible}\n        menuItems={items}\n        simplifiedMenu={simplifiedMenu}\n        anchor={anchor}\n        belowAnchor={belowAnchor}\n        fixedTo={fixedTo}\n        position={position}\n        cascading={cascading}\n        cascadingAnchor={cascadingAnchor}\n        cascadingZDepth={cascadingZDepth}\n        fullWidth={fullWidth}\n        block={block}\n        centered={centered}\n        sameWidth={sameWidth}\n        minLeft={minLeft}\n        minRight={minRight}\n        minBottom={minBottom}\n        fillViewportWidth={fillViewportWidth}\n        fillViewportHeight={fillViewportHeight}\n        repositionOnScroll={repositionOnScroll}\n        repositionOnResize={repositionOnResize}\n        xThreshold={xThreshold}\n        yThreshold={yThreshold}\n        closeOnOutsideClick={closeOnOutsideClick}\n        transitionName={transitionName}\n        transitionEnterTimeout={transitionEnterTimeout}\n        transitionLeaveTimeout={transitionLeaveTimeout}\n        onVisibilityChange={onMenuToggle || onVisibilityChange}\n        onClick={onMenuClick}\n        onMouseDown={onMenuMouseDown}\n        onMouseUp={onMenuMouseUp}\n        onMouseEnter={onMenuMouseEnter}\n        onMouseMove={onMenuMouseMove}\n        onMouseLeave={onMenuMouseLeave}\n        onTouchStart={onMenuTouchStart}\n        onTouchMove={onMenuTouchMove}\n        onTouchCancel={onMenuTouchCancel}\n        onTouchEnd={onMenuTouchEnd}\n        onFocus={onMenuFocus}\n        onBlur={onMenuBlur}\n        onKeyDown={onMenuKeyDown}\n        onKeyUp={onMenuKeyUp}\n      >\n        <Button {...props} id={buttonId}>\n          {toggleChildren}\n        </Button>\n      </DropdownMenu>\n    );\n  }\n}\n"]}
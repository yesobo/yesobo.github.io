{"version":3,"sources":["../../src/js/Sliders/Thumb.js"],"names":["Thumb","props","style","className","on","off","active","disabled","dragging","thumbLeft","discrete","Object","assign","left","propTypes","object","string","isRequired","bool"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;AAEA;;;IAGqBA,K;;;;;;;;;;;6BAaV;AAAA,mBAYH,KAAKC,KAZF;AAAA,UAELC,KAFK,UAELA,KAFK;AAAA,UAGLC,SAHK,UAGLA,SAHK;AAAA,UAILC,EAJK,UAILA,EAJK;AAAA,UAKLC,GALK,UAKLA,GALK;AAAA,UAMLC,MANK,UAMLA,MANK;AAAA,UAOLC,QAPK,UAOLA,QAPK;AAAA,UAQLC,QARK,UAQLA,QARK;AAAA,UASLC,SATK,UASLA,SATK;AAAA,UAULC,QAVK,UAULA,QAVK;AAAA,UAWFT,KAXE;;AAcP,aACE;AACE,kBAAUM;AADZ,SAEMN,KAFN;AAGE,eAAOU,OAAOC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB,EAAEW,MAAMJ,SAAR,EAAzB,CAHT;AAIE,mBAAW,0BAAG,iBAAH,EAAsBN,SAAtB,EAAiC;AAC1C,qCAA2BG,MADe;AAE1C,uCAA6BE,QAFa;AAG1C,uCAA6BD,QAHa;AAI1C,iCAAuBH,EAJmB;AAK1C,6CAAmC,CAACM,QAAD,IAAaL,GALN;AAM1C,uCAA6BK,QANa;AAO1C,0CAAgCA,YAAYJ,MAAZ,IAAsBF,EAPZ;AAQ1C,2CAAiCM,YAAY,CAACH,QAAb,IAAyBF,GARhB;AAS1C,8CAAoCK,YAAYJ,MATN;AAU1C,kDAAwCI,YAAYJ,MAAZ,IAAsBD;AAVpB,SAAjC;AAJb,SADF;AAmBD;;;;;;AA9CkBL,K,CACZc,S,GAAY;AACjBZ,SAAO,oBAAUa,MADA;AAEjBZ,aAAW,oBAAUa,MAFJ;AAGjBP,aAAW,oBAAUO,MAAV,CAAiBC,UAHX;AAIjBb,MAAI,oBAAUc,IAJG;AAKjBb,OAAK,oBAAUa,IALE;AAMjBZ,UAAQ,oBAAUY,IAND;AAOjBX,YAAU,oBAAUW,IAPH;AAQjBV,YAAU,oBAAUU,IARH;AASjBR,YAAU,oBAAUQ;AATH,C;kBADAlB,K","file":"Thumb.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport AccessibleFakeButton from '../Helpers/AccessibleFakeButton';\n\n/**\n * The `Thumb` component is the little ball for the slider.\n */\nexport default class Thumb extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    thumbLeft: PropTypes.string.isRequired,\n    on: PropTypes.bool,\n    off: PropTypes.bool,\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    dragging: PropTypes.bool,\n    discrete: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      on,\n      off,\n      active,\n      disabled,\n      dragging,\n      thumbLeft,\n      discrete,\n      ...props\n    } = this.props;\n\n    return (\n      <AccessibleFakeButton\n        disabled={disabled}\n        {...props}\n        style={Object.assign({}, style, { left: thumbLeft })}\n        className={cn('md-slider-thumb', className, {\n          'md-slider-thumb--active': active,\n          'md-slider-thumb--dragging': dragging,\n          'md-slider-thumb--disabled': disabled,\n          'md-slider-thumb--on': on,\n          'md-slider-thumb--continuous-off': !discrete && off,\n          'md-slider-thumb--discrete': discrete,\n          'md-slider-thumb--discrete-on': discrete && active && on,\n          'md-slider-thumb--discrete-off': discrete && !disabled && off,\n          'md-slider-thumb--discrete-active': discrete && active,\n          'md-slider-thumb--discrete-active-off': discrete && active && off,\n        })}\n      />\n    );\n  }\n}\n"]}
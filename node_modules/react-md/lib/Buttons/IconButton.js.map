{"version":3,"sources":["../../src/js/Buttons/IconButton.js"],"names":["IconButton","props","iconClassName","children","tooltip","floating","tooltipLabel","tooltipPosition","propTypes","string","node","className","type","disabled","bool","href","onClick","func","oneOf","tooltipDelay","number","deprecated","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;;;;;;IAOMA,U;;;;;;;;;;;6BAwEK;AAAA,mBAOH,KAAKC,KAPF;AAAA,UAELC,aAFK,UAELA,aAFK;AAAA,UAGLC,QAHK,UAGLA,QAHK;AAAA,UAILC,OAJK,UAILA,OAJK;AAAA,UAKLC,QALK,UAKLA,QALK;AAAA,UAMFJ,KANE;;AAQP,aAAOA,MAAMK,YAAb;AACA,aAAOL,MAAMM,eAAb;;AAEA,aACE;AAAA;AAAA,qBAAYN,KAAZ,IAAmB,MAAM,CAACI,QAA1B,EAAoC,UAAUA,QAA9C;AACGD,eADH;AAEE;AAAA;AAAA,YAAU,eAAeF,aAAzB;AAAyCC;AAAzC;AAFF,OADF;AAMD;;;;;;AAzFGH,U,CACGQ,S,GAAY;AACjB;;;AAGAN,iBAAe,oBAAUO,MAJR;;AAMjB;;;AAGAN,YAAU,oBAAUO,IATH;;AAWjB;;;AAGAC,aAAW,oBAAUF,MAdJ;;AAgBjB;;;AAGAG,QAAM,oBAAUH,MAnBC;;AAqBjB;;;AAGAI,YAAU,oBAAUC,IAxBH;;AA0BjB;;;AAGAC,QAAM,oBAAUN,MA7BC;;AA+BjB;;;AAGAO,WAAS,oBAAUC,IAlCF;AAmCjB;;;;;;;AAQAX,gBAAc,oBAAUI,IA3CP;;AA6CjB;;;;AAIAH,mBAAiB,oBAAUW,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAAhB,CAjDA;;AAmDjB;;;AAGAC,gBAAc,oBAAUC,MAtDP;;AAwDjB;AACAhB,WAAS,oBAAUM,IAzDF;AA0DjBL,YAAU,oBAAUS,IA1DH;;AA4DjBO,cAAY,mCACV,kFACA,iFADA,GAEA,cAHU;AA5DK,C;AADfrB,U,CAoEGsB,Y,GAAe;AACpBV,QAAM;AADc,C;kBAwBT,6BAAcZ,UAAd,C","file":"IconButton.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport deprecated from '../utils/PropTypes/componentDeprecated';\nimport FontIcon from '../FontIcons/FontIcon';\nimport injectTooltip from '../Tooltips/injectTooltip';\nimport Button from './Button';\n\n/**\n * The `IconButton` component automatically includes ink and a tooltip.\n * The tooltip will only be included if the `tooltipLabel` prop is given.\n *\n * Any other props (such as style or event listeners) will also be\n * applied.\n */\nclass IconButton extends PureComponent {\n  static propTypes = {\n    /**\n     * The className to use for rendering the `FontIcon`.\n     */\n    iconClassName: PropTypes.string,\n\n    /**\n     * Any children to use to render the `FontIcon`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional className to apply to the button.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The button type.\n     */\n    type: PropTypes.string,\n\n    /**\n     * Boolean if the button is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional href to convert the button into a link button.\n     */\n    href: PropTypes.string,\n\n    /**\n     * An optional function to call when the button is clicked.\n     */\n    onClick: PropTypes.func,\n    /**\n     * Boolean if the IconButton is floating\n    floating: PropTypes.bool,\n\n    /**\n     * An optional label to use if you would like a tooltip to display\n     * on hover or touch hold.\n     */\n    tooltipLabel: PropTypes.node,\n\n    /**\n     * The position that the tooltip should be displayed relative to\n     * the button.\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * An optional amount of delay before the tooltip appears.\n     */\n    tooltipDelay: PropTypes.number,\n\n    // Inject from injectTooltip\n    tooltip: PropTypes.node,\n    floating: PropTypes.bool,\n\n    deprecated: deprecated(\n      'The behavior of the `IconButton` can be achieved with the `Button` component ' +\n      'without the additional bundle size. Switch to the `Button` component and add a ' +\n      'prop `icon`.'\n    ),\n  };\n\n  static defaultProps = {\n    type: 'button',\n  };\n\n  render() {\n    const {\n      iconClassName,\n      children,\n      tooltip,\n      floating,\n      ...props\n    } = this.props;\n    delete props.tooltipLabel;\n    delete props.tooltipPosition;\n\n    return (\n      <Button {...props} icon={!floating} floating={floating}>\n        {tooltip}\n        <FontIcon iconClassName={iconClassName}>{children}</FontIcon>\n      </Button>\n    );\n  }\n}\n\nexport default injectTooltip(IconButton);\n"]}
{"version":3,"sources":["../../src/js/Subheaders/Subheader.js"],"names":["Subheader","props","Component","component","inset","primary","primaryText","className","children","hint","propTypes","style","object","string","bool","node","isRequired","oneOfType","func","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;AAEA;;;IAGqBA,S;;;;;;;;;;;6BA+CV;AAAA,mBASH,KAAKC,KATF;AAAA,UAEMC,SAFN,UAELC,SAFK;AAAA,UAGLC,KAHK,UAGLA,KAHK;AAAA,UAILC,OAJK,UAILA,OAJK;AAAA,UAKLC,WALK,UAKLA,WALK;AAAA,UAMLC,SANK,UAMLA,SANK;AAAA,UAOLC,QAPK,UAOLA,QAPK;AAAA,UAQFP,KARE;;AAWP,aACE;AAAC,iBAAD;AAAA,qBACMA,KADN;AAEE,qBAAW,0BAAG,cAAH,EAAmB;AAC5B,mCAAuBG;AADK,WAAnB,EAER,2BAAY,EAAEC,gBAAF,EAAWI,MAAM,CAACJ,OAAlB,EAAZ,CAFQ,EAEkCE,SAFlC;AAFb;AAMGD,mBANH;AAOGE;AAPH,OADF;AAWD;;;;;;AArEkBR,S,CACZU,S,GAAY;AACjB;;;AAGAC,SAAO,oBAAUC,MAJA;;AAMjB;;;AAGAL,aAAW,oBAAUM,MATJ;;AAWjB;;;AAGAR,WAAS,oBAAUS,IAdF;;AAgBjB;;;;AAIAV,SAAO,oBAAUU,IApBA;;AAsBjB;;;AAGAR,eAAa,oBAAUS,IAAV,CAAeC,UAzBX;;AA2BjB;;;;AAIAR,YAAU,oBAAUO,IA/BH;;AAiCjB;;;AAGAZ,aAAW,oBAAUc,SAAV,CAAoB,CAC7B,oBAAUJ,MADmB,EAE7B,oBAAUK,IAFmB,CAApB,EAGRF;AAvCc,C;AADAhB,S,CA2CZmB,Y,GAAe;AACpBhB,aAAW;AADS,C;kBA3CHH,S","file":"Subheader.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The `Subheader` component is generally used inside of lists or menus.\n */\nexport default class Subheader extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the subheader.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the subheader.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if the subheader should be styled with the primary color.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the subheader is inset in the list. This will add additional\n     * spacing to align the subheader.\n     */\n    inset: PropTypes.bool,\n\n    /**\n     * The primary text to use in the subheader.\n     */\n    primaryText: PropTypes.node.isRequired,\n\n    /**\n     * Any optional children to display after the `primaryText`. This prop is\n     * not recommended.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The component to render the Subheader as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    component: 'li',\n  };\n\n  render() {\n    const {\n      component: Component,\n      inset,\n      primary,\n      primaryText,\n      className,\n      children,\n      ...props\n    } = this.props;\n\n    return (\n      <Component\n        {...props}\n        className={cn('md-subheader', {\n          'md-list-item--inset': inset,\n        }, themeColors({ primary, hint: !primary }), className)}\n      >\n        {primaryText}\n        {children}\n      </Component>\n    );\n  }\n}\n"]}
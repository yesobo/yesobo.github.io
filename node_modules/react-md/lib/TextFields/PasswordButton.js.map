{"version":3,"sources":["../../src/js/TextFields/PasswordButton.js"],"names":["PasswordButton","state","keyboardFocus","_handleOutsideClick","e","_button","contains","target","window","removeEventListener","setState","_handleBlur","_handleKeyUp","key","which","keyCode","props","active","passwordVisible","block","floating","icon","disabled","hint","propTypes","bool","element"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;;;;;;;;;;;IAEqBA,c;;;;;;;;;;;;;;sMASnBC,K,GAAQ,EAAEC,eAAe,KAAjB,E,QAERC,mB,GAAsB,UAACC,CAAD,EAAO;AAC3B,UAAI,MAAKC,OAAL,IAAgB,CAAC,MAAKA,OAAL,CAAaC,QAAb,CAAsBF,EAAEG,MAAxB,CAArB,EAAsD;AACpDC,eAAOC,mBAAP,CAA2B,OAA3B,EAAoC,MAAKN,mBAAzC;AACA,cAAKO,QAAL,CAAc,EAAER,eAAe,KAAjB,EAAd;AACD;AACF,K,QAEDS,W,GAAc,YAAM;AAClB,UAAI,MAAKV,KAAL,CAAWC,aAAf,EAA8B;AAC5B,cAAKQ,QAAL,CAAc,EAAER,eAAe,KAAjB,EAAd;AACD;AACF,K,QAEDU,Y,GAAe,UAACR,CAAD,EAAO;AACpB,UAAMS,MAAMT,EAAEU,KAAF,IAAWV,EAAEW,OAAzB;AACA,UAAIF,qBAAJ,EAAiB;AACf,cAAKH,QAAL,CAAc,EAAER,eAAe,IAAjB,EAAd;AACD;AACF,K;;;;;6BAEQ;AAAA,UACCA,aADD,GACmB,KAAKD,KADxB,CACCC,aADD;;AAAA,mBASH,KAAKc,KATF;AAAA,UAGLC,MAHK,UAGLA,MAHK;AAAA,UAILC,eAJK,UAILA,eAJK;AAAA,UAKLC,KALK,UAKLA,KALK;AAAA,UAMLC,QANK,UAMLA,QANK;AAAA,UAOLC,IAPK,UAOLA,IAPK;AAAA,UAQFL,KARE;;AAWP,aACE;AAAA;AAAA,qBACMA,KADN;AAEE,kBAAQ,KAAKL,WAFf;AAGE,mBAAS,KAAKC,YAHhB;AAIE,gBAAK,QAJP;AAKE,qBAAW,0BAAG,kEAAH,EAAuE;AAChF,sCAA0BV,aADsD;AAEhF,0CAA8Be,UAAU,CAACC,eAFuC;AAGhF,wDAA4CE,QAHoC;AAIhF,qDAAyCD;AAJuC,WAAvE,EAKR,2BAAY,EAAEG,UAAU,CAACL,MAAb,EAAqBM,MAAMN,MAA3B,EAAZ,CALQ;AALb;AAYGI;AAZH,OADF;AAgBD;;;;;;AA1DkBrB,c,CACZwB,S,GAAY;AACjBP,UAAQ,oBAAUQ,IADD;AAEjBP,mBAAiB,oBAAUO,IAFV;AAGjBJ,QAAM,oBAAUK,OAHC;AAIjBP,SAAO,oBAAUM,IAJA;AAKjBL,YAAU,oBAAUK;AALH,C;kBADAzB,c","file":"PasswordButton.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { TAB } from '../constants/keyCodes';\nimport themeColors from '../utils/themeColors';\n\nexport default class PasswordButton extends PureComponent {\n  static propTypes = {\n    active: PropTypes.bool,\n    passwordVisible: PropTypes.bool,\n    icon: PropTypes.element,\n    block: PropTypes.bool,\n    floating: PropTypes.bool,\n  };\n\n  state = { keyboardFocus: false };\n\n  _handleOutsideClick = (e) => {\n    if (this._button && !this._button.contains(e.target)) {\n      window.removeEventListener('click', this._handleOutsideClick);\n      this.setState({ keyboardFocus: false });\n    }\n  };\n\n  _handleBlur = () => {\n    if (this.state.keyboardFocus) {\n      this.setState({ keyboardFocus: false });\n    }\n  };\n\n  _handleKeyUp = (e) => {\n    const key = e.which || e.keyCode;\n    if (key === TAB) {\n      this.setState({ keyboardFocus: true });\n    }\n  };\n\n  render() {\n    const { keyboardFocus } = this.state;\n    const {\n      active,\n      passwordVisible,\n      block,\n      floating,\n      icon,\n      ...props\n    } = this.props;\n\n    return (\n      <button\n        {...props}\n        onBlur={this._handleBlur}\n        onKeyUp={this._handleKeyUp}\n        type=\"button\"\n        className={cn('md-text-field-inline-indicator md-password-btn md-pointer--hover', {\n          'md-password-btn--focus': keyboardFocus,\n          'md-password-btn--invisible': active && !passwordVisible,\n          'md-text-field-inline-indicator--floating': floating,\n          'md-text-field-inline-indicator--block': block,\n        }, themeColors({ disabled: !active, hint: active }))}\n      >\n        {icon}\n      </button>\n    );\n  }\n}\n"]}
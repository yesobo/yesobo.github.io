{"version":3,"sources":["../../src/js/Lists/ListItemText.js"],"names":["ListItemText","props","active","activeClassName","disabled","primaryText","primaryTextStyle","primaryTextClassName","secondaryText","secondaryTextStyle","secondaryTextClassName","className","threeLines","secondaryTextNode","hint","text","propTypes","bool","string","node","isRequired","object"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;;;AAEA;;;;IAIqBA,Y;;;;;;;;;;;6BAeV;AAAA,mBAcH,KAAKC,KAdF;AAAA,UAELC,MAFK,UAELA,MAFK;AAAA,UAGLC,eAHK,UAGLA,eAHK;AAAA,UAILC,QAJK,UAILA,QAJK;AAAA,UAKLC,WALK,UAKLA,WALK;AAAA,UAMLC,gBANK,UAMLA,gBANK;AAAA,UAOLC,oBAPK,UAOLA,oBAPK;AAAA,UAQLC,aARK,UAQLA,aARK;AAAA,UASLC,kBATK,UASLA,kBATK;AAAA,UAULC,sBAVK,UAULA,sBAVK;AAAA,UAWLC,SAXK,UAWLA,SAXK;AAAA,UAYLC,UAZK,UAYLA,UAZK;AAAA,UAaFX,KAbE;;AAgBP,UAAIY,0BAAJ;AACA,UAAIL,aAAJ,EAAmB;AACjBK,4BACE;AAAA;AAAA;AACE,mBAAOJ,kBADT;AAEE,uBAAW,0BAAG,yBAAH,EAA8B;AACvC,2CAA6BG;AADU,aAA9B,EAER,2BAAY,EAAER,kBAAF,EAAYU,MAAM,CAACV,QAAnB,EAAZ,CAFQ,EAEoCM,sBAFpC;AAFb;AAMGF;AANH,SADF;AAUD;;AAED,aACE;AAAA;AAAA,qBAASP,KAAT,IAAgB,WAAW,0BAAG,iBAAH,EAAsBU,SAAtB,CAA3B;AACE;AAAA;AAAA;AACE,mBAAOL,gBADT;AAEE,uBAAW,0BAAG,uBAAH,sBACRH,eADQ,EACU,CAACC,QAAD,IAAaF,MADvB,GAER,2BAAY,EAAEE,kBAAF,EAAYW,MAAM,CAACb,MAAnB,EAAZ,CAFQ,EAEkCK,oBAFlC;AAFb;AAMGF;AANH,SADF;AASGQ;AATH,OADF;AAaD;;;;;;AA1DkBb,Y,CACZgB,S,GAAY;AACjBd,UAAQ,oBAAUe,IADD;AAEjBd,mBAAiB,oBAAUe,MAFV;AAGjBd,YAAU,oBAAUa,IAHH;AAIjBZ,eAAa,oBAAUc,IAAV,CAAeC,UAJX;AAKjBd,oBAAkB,oBAAUe,MALX;AAMjBd,wBAAsB,oBAAUW,MANf;AAOjBV,iBAAe,oBAAUW,IAPR;AAQjBV,sBAAoB,oBAAUY,MARb;AASjBX,0BAAwB,oBAAUQ,MATjB;AAUjBP,aAAW,oBAAUO,MAVJ;AAWjBN,cAAY,oBAAUK;AAXL,C;kBADAjB,Y","file":"ListItemText.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The `ListItemText` component is used to render the `primaryText` and an optional\n * `secondaryText` for a `ListItem`.\n */\nexport default class ListItemText extends PureComponent {\n  static propTypes = {\n    active: PropTypes.bool,\n    activeClassName: PropTypes.string,\n    disabled: PropTypes.bool,\n    primaryText: PropTypes.node.isRequired,\n    primaryTextStyle: PropTypes.object,\n    primaryTextClassName: PropTypes.string,\n    secondaryText: PropTypes.node,\n    secondaryTextStyle: PropTypes.object,\n    secondaryTextClassName: PropTypes.string,\n    className: PropTypes.string,\n    threeLines: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      active,\n      activeClassName,\n      disabled,\n      primaryText,\n      primaryTextStyle,\n      primaryTextClassName,\n      secondaryText,\n      secondaryTextStyle,\n      secondaryTextClassName,\n      className,\n      threeLines,\n      ...props\n    } = this.props;\n\n    let secondaryTextNode;\n    if (secondaryText) {\n      secondaryTextNode = (\n        <div\n          style={secondaryTextStyle}\n          className={cn('md-tile-text--secondary', {\n            'md-tile-text--three-lines': threeLines,\n          }, themeColors({ disabled, hint: !disabled }), secondaryTextClassName)}\n        >\n          {secondaryText}\n        </div>\n      );\n    }\n\n    return (\n      <div {...props} className={cn('md-tile-content', className)}>\n        <div\n          style={primaryTextStyle}\n          className={cn('md-tile-text--primary', {\n            [activeClassName]: !disabled && active,\n          }, themeColors({ disabled, text: !active }), primaryTextClassName)}\n        >\n          {primaryText}\n        </div>\n        {secondaryTextNode}\n      </div>\n    );\n  }\n}\n"]}
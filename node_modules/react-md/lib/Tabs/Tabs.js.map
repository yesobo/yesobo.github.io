{"version":3,"sources":["../../src/js/Tabs/Tabs.js"],"names":["MOBILE_PADDING","DESKTOP_PADDING","MOBILE_TAB_MIN_WIDTH","DESKTOP_TAB_MIN_WIDTH","Tabs","props","_setContainer","container","_container","_positionElements","initialRender","centered","overflowMenu","mobile","paddingLeft","_shouldAlign","_calcPaddingLeft","overflowAtIndex","_calcOverflowIndex","indicatorPosition","_calcIndicatorPosition","setState","_scrollActiveIntoView","state","active","querySelector","allTabs","Array","prototype","slice","call","querySelectorAll","scrollLeft","containerWidth","offsetWidth","activeWidth","activeOffset","offsetLeft","inFullViewLeft","inFullViewRight","offset","some","tab","i","activeTabIndex","_handleTabChange","index","tabId","tabControlsId","tabChildren","event","onTabChange","_mapToOverflowTabProps","tabEl","only","handleTabChange","primaryText","label","onClick","handleClick","id","controlsId","children","_nextIndexes","increment","overflowIndex","visibleAmt","_showNextTabs","_showPreviousTabs","defaultTabIndex","indicatorWidth","indicatorOffset","indicatorVisible","nextProps","prevProps","prevState","labels","map","toArray","prevLabels","length","filter","_","alignToKeyline","child","mediaPadding","labelOffset","menu","scrollWidth","tabs","totalWidth","Math","max","activeItem","Component","component","style","className","colored","overflowMenuLabel","nextIcon","previousIcon","overflowMenuIcon","overflowMenuIconChildren","overflowMenuIconClassName","nextIconChildren","nextIconClassName","previousIconChildren","previousIconClassName","propActiveIndex","defaultMedia","desktopMinWidth","icon","handleOnClick","tabIndex","overflow","nextControl","previousControl","propTypes","oneOfType","number","string","object","func","isRequired","element","arrayOf","bool","node","oneOf","defaultProps"],"mappings":"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","file":"Tabs.js","sourcesContent":["import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport TabIndicator from './TabIndicator';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport MenuTab from './MenuTab';\nimport TabOverflowButton from './TabOverflowButton';\n\nconst MOBILE_PADDING = 72;\nconst DESKTOP_PADDING = 80;\nconst MOBILE_TAB_MIN_WIDTH = 72;\nconst DESKTOP_TAB_MIN_WIDTH = 160;\n\n\n/**\n * The `Tabs` component is used to manage the state of which tab is currently active.\n */\nexport default class Tabs extends PureComponent {\n  static propTypes = {\n    /**\n     * A base id to use for each `Tab`. When the child tabs are created, they are cloned\n     * with some additional accessibility props. Each tab will get a prop with this and the\n     * current index of the tab.\n     */\n    tabId: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The component to render the tabs in.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * This should either be a single `Tab` component or a list of `Tab` components. Unfortunately,\n     * the child *must* be exactly a `Tab` component because this is unable to extract the correct\n     * `label` and `children` from a custom `Tab` component.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]).isRequired,\n\n    /**\n     * Boolean if the tabs should be centered instead of aligned to the keyline. The tabs will\n     * only be aligned to the keyline when there are more than 3 tabs and the `alignToKeyline`\n     * prop is `false`.\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the tabs should align to a toolbar's title keyline. If this is undefined,\n     * the tabs will try to align to the keyline when there are more than 3 tabs.\n     */\n    alignToKeyline: PropTypes.bool,\n\n    /**\n     * Boolean if the tabs should be colored with the primary color. If this is false or undefined,\n     * the tabs will be colored for the light or dark theme.\n     */\n    colored: PropTypes.bool,\n\n    /**\n     * A boolean if the overflow tabs on desktop displays should appear in a menu. If this is false,\n     * the additional tabs will be available by using pagination buttons.\n     */\n    overflowMenu: PropTypes.bool,\n\n    /**\n     * An optional function to call when the active tab is changed. The callback will include\n     * the new active tab index and a click event.\n     *\n     * ```js\n     * onTabChange(newTabIndex, event);\n     * ```\n     */\n    onTabChange: PropTypes.func,\n\n    /**\n     * An optional active tab index to use. If this is defined, it will make the component controlled\n     * and require the `onTabChange` prop to be defined.\n     */\n    activeTabIndex: controlled(PropTypes.number, 'onTabChange', 'defaultTabIndex'),\n\n    /**\n     * The default tab index to use when the component is uncontrolled.\n     */\n    defaultTabIndex: PropTypes.number.isRequired,\n\n    /**\n     * When the `overflowMenu` prop is false, this will be used to render the \"next slice of tabs\"\n     * when there are too many tabs to display at once on desktop screens.\n     */\n    nextIcon: PropTypes.element,\n\n    /**\n     * When the `overflowMenu` prop is false, this will be used to render the \"previous slice of tabs\"\n     * when there are too many tabs to display at once on desktop screens.\n     */\n    previousIcon: PropTypes.element,\n\n    /**\n     * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\n     * This will be to render the icon to the right of the label.\n     */\n    overflowMenuIcon: PropTypes.element,\n\n    /**\n     * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\n     * This will be the text that displays as a tab.\n     */\n    overflowMenuLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the tabs are currently rendered on a mobile or tablet device. This is used to calculate\n     * overflow/padding on the tabs.\n     */\n    mobile: PropTypes.bool,\n    defaultMedia: deprecated(PropTypes.oneOf(['mobile', 'tablet', 'desktop']), 'Use `mobile` instead'),\n    desktopMinWidth: deprecated(PropTypes.number, 'Use `mobile` instead.'),\n    nextIconChildren: deprecated(PropTypes.node, 'Use the `nextIcon` prop instead'),\n    nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\n    previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\n    previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\n    overflowMenuIconChildren: deprecated(PropTypes.node, 'Use the `overflowMenuIcon` prop instead'),\n    overflowMenuIconClassName: deprecated(PropTypes.string, 'Use the `overflowMenuIcon` prop instead'),\n  };\n\n  static defaultProps = {\n    component: 'ul',\n    defaultTabIndex: 0,\n    nextIcon: <FontIcon>keyboard_arrow_right</FontIcon>,\n    previousIcon: <FontIcon>keyboard_arrow_left</FontIcon>,\n    overflowMenuLabel: 'More',\n    overflowMenuIcon: <FontIcon>arrow_drop_down</FontIcon>,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const defaultTabIndex = typeof props.activeTabIndex === 'undefined' ? props.defaultTabIndex : props.activeTabIndex;\n    const indicatorWidth = props.mobile ? MOBILE_TAB_MIN_WIDTH : DESKTOP_TAB_MIN_WIDTH;\n    this.state = {\n      indicatorWidth,\n      indicatorOffset: indicatorWidth * defaultTabIndex,\n      indicatorVisible: true,\n      overflowIndex: 0,\n    };\n\n    if (typeof props.activeTabIndex === 'undefined') {\n      this.state.activeTabIndex = defaultTabIndex;\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.activeTabIndex !== nextProps.activeTabIndex) {\n      this.setState({\n        ...this._calcIndicatorPosition(this._container, 0, nextProps.activeTabIndex, this.state.overflowAtIndex),\n      }, this._scrollActiveIntoView);\n    } else if (!this._shouldAlign(nextProps) && this._shouldAlign(this.props)) {\n      this.setState({ paddingLeft: null });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this._shouldAlign(this.props) && this.state.overflowAtIndex !== prevState.overflowAtIndex) {\n      const paddingLeft = this._calcPaddingLeft(this._container, this.state.mobile);\n      // Have to wait for the overflow menus to appear, then wop\n      /* eslint-disable react/no-did-update-set-state */\n      this.setState({ paddingLeft });\n    } else {\n      const labels = Children.map(Children.toArray(this.props.children), ({ props: { label } }) => label);\n      const prevLabels = Children.map(Children.toArray(prevProps.children), ({ props: { label } }) => label);\n      if (labels.length !== prevLabels.length || labels.filter((_, i) => labels[i] !== prevLabels[i]).length) {\n        this.setState({\n          ...this._calcIndicatorPosition(this._container, 0, this.props.activeTabIndex, this.state.overflowAtIndex),\n        }, this._scrollActiveIntoView);\n      }\n    }\n  }\n\n  _shouldAlign(props) {\n    return typeof props.alignToKeyline === 'boolean'\n      ? props.alignToKeyline\n      : Children.toArray(props.children).filter(child => !!child).length > 3;\n  }\n\n  _calcPaddingLeft(container, mobile) {\n    const mediaPadding = mobile ? MOBILE_PADDING : DESKTOP_PADDING;\n    const tab = container.querySelector('.md-tab');\n    const { offsetLeft: labelOffset } = tab.querySelector('.md-tab-label');\n\n    return mediaPadding - labelOffset;\n  }\n\n  _calcOverflowIndex(container, paddingLeft = 0, menu) {\n    const containerWidth = container.offsetWidth;\n    let overflowIndex = 0;\n    if (containerWidth < container.scrollWidth) {\n      const tabs = Array.prototype.slice.call(container.querySelectorAll('.md-tab'));\n      let totalWidth = 0;\n      tabs.some((tab, i) => {\n        overflowIndex = i;\n        totalWidth += tab.offsetWidth;\n\n        return totalWidth > containerWidth;\n      });\n    }\n\n    return Math.max(0, overflowIndex - (menu ? 1 : 0));\n  }\n\n  _calcIndicatorPosition(container, paddingLeft = 0, activeTabIndex, overflowAtIndex) {\n    let activeItem;\n    if (typeof activeTabIndex === 'number') {\n      if (overflowAtIndex > 0 && activeTabIndex >= overflowAtIndex) {\n        activeItem = container.querySelector('.md-menu--tab');\n      } else {\n        activeItem = container.querySelectorAll('.md-tab')[activeTabIndex];\n      }\n    } else {\n      activeItem = container.querySelector('.md-tab--active');\n    }\n\n    if (!activeItem) {\n      return { indicatorVisible: false };\n    }\n\n    const { offsetWidth: indicatorWidth, offsetLeft: indicatorOffset } = activeItem;\n    return {\n      indicatorWidth,\n      indicatorOffset: indicatorOffset + paddingLeft,\n      indicatorVisible: !overflowAtIndex || overflowAtIndex > activeTabIndex,\n    };\n  }\n\n  _setContainer = (container) => {\n    this._container = container;\n    this._positionElements(this._container !== null);\n  };\n\n  _positionElements = (initialRender) => {\n    initialRender = typeof initialRender === 'boolean' && initialRender;\n    if (!this._container) {\n      return;\n    }\n\n    const { centered, overflowMenu } = this.props;\n    const { mobile } = this.props;\n\n    let paddingLeft;\n    if (!centered && this._shouldAlign(this.props)) {\n      paddingLeft = this._calcPaddingLeft(this._container, mobile);\n    }\n\n    let overflowAtIndex;\n    if (!mobile) {\n      overflowAtIndex = this._calcOverflowIndex(this._container, paddingLeft, overflowMenu);\n    }\n\n    const indicatorPosition = this._calcIndicatorPosition(this._container, initialRender ? paddingLeft : 0);\n\n    this.setState({ mobile, paddingLeft, overflowAtIndex, ...indicatorPosition }, this._scrollActiveIntoView);\n  };\n\n  _scrollActiveIntoView = () => {\n    if (!this._container || !this.state.mobile) {\n      return;\n    }\n\n    const active = this._container.querySelector('.md-tab--active');\n    if (!active) {\n      return;\n    }\n\n    const allTabs = Array.prototype.slice.call(this._container.querySelectorAll('.md-tab'));\n    if (allTabs[0] === active) {\n      this._container.scrollLeft = 0;\n      return;\n    }\n\n    const { offsetWidth: containerWidth, scrollLeft } = this._container;\n    const { offsetWidth: activeWidth, offsetLeft: activeOffset } = active;\n    const inFullViewLeft = activeOffset - scrollLeft >= 0;\n    const inFullViewRight = (activeOffset + activeWidth) - (containerWidth + scrollLeft) <= 0;\n    if (inFullViewLeft && inFullViewRight) {\n      return;\n    }\n\n    let offset = 0;\n    allTabs.some((tab, i) => {\n      if (i < this.props.activeTabIndex) {\n        offset += tab.offsetWidth;\n      }\n\n      return i < this.state.activeTabIndex;\n    });\n\n    this._container.scrollLeft = offset;\n  };\n\n  _handleTabChange = (index, tabId, tabControlsId, tabChildren, event) => {\n    if (this.props.onTabChange) {\n      this.props.onTabChange(index, tabId, tabControlsId, tabChildren, event);\n    }\n\n    if (typeof this.props.activeTabIndex === 'undefined') {\n      this.setState({\n        activeTabIndex: index,\n        ...this._calcIndicatorPosition(this._container, 0, index, this.state.overflowAtIndex),\n      });\n    }\n  };\n\n  _mapToOverflowTabProps = (tab, i) => {\n    const index = i + this.state.overflowAtIndex;\n    const active = getField(this.props, this.state, 'activeTabIndex') === index;\n    const tabEl = Children.only(tab);\n    const handleTabChange = this._handleTabChange;\n\n    return {\n      active,\n      primaryText: tabEl.props.label,\n      onClick: function handleClick(event) {\n        const { onClick, id, controlsId, children } = tabEl.props;\n        if (onClick) {\n          onClick(index, event);\n        }\n\n        handleTabChange(index, id, controlsId, children, event);\n      },\n    };\n  };\n\n  _nextIndexes = (increment) => {\n    const { overflowIndex, overflowAtIndex } = this.state;\n    const visibleAmt = (overflowAtIndex - overflowIndex) * (increment ? 1 : -1);\n\n    this.setState({\n      overflowIndex: overflowIndex + visibleAmt,\n      overflowAtIndex: overflowAtIndex + visibleAmt,\n    });\n  };\n\n  _showNextTabs = () => {\n    this._nextIndexes(true);\n  };\n\n  _showPreviousTabs = () => {\n    this._nextIndexes(false);\n  };\n\n  render() {\n    const {\n      indicatorOffset,\n      indicatorWidth,\n      indicatorVisible,\n      overflowIndex,\n      overflowAtIndex,\n      paddingLeft,\n    } = this.state;\n\n    const {\n      component: Component,\n      style,\n      className,\n      colored,\n      centered,\n      tabId,\n      overflowMenu,\n      overflowMenuLabel,\n      nextIcon,\n      previousIcon,\n      overflowMenuIcon,\n\n      // deprecated\n      overflowMenuIconChildren,\n      overflowMenuIconClassName,\n      nextIconChildren,\n      nextIconClassName,\n      previousIconChildren,\n      previousIconClassName,\n      /* eslint-disable no-unused-vars */\n      activeTabIndex: propActiveIndex,\n      defaultTabIndex,\n      onTabChange,\n      alignToKeyline,\n      mobile,\n\n      // Deprecated\n      defaultMedia,\n      desktopMinWidth,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const activeTabIndex = getField(this.props, this.state, 'activeTabIndex');\n\n    let icon = false;\n    let children = Children.map(Children.toArray(this.props.children), (tab, index) => {\n      const handleOnClick = (tabIndex, id, tabControlsId, tabChildren, event) => {\n        if (tab.props.onClick) {\n          tab.props.onClick(tabId, id, tabControlsId, tabChildren, event);\n        }\n\n        this._handleTabChange(tabIndex, id, tabControlsId, tabChildren, event);\n      };\n\n      if (tab.props.icon) {\n        icon = true;\n      }\n\n      return cloneElement(tab, {\n        index,\n        id: tab.props.id || `${tabId}-${index}`,\n        controlsId: tab.props.controlsId || `${tabId}-panel-${index}`,\n        active: index === activeTabIndex,\n        onClick: handleOnClick,\n      });\n    });\n\n    let overflow;\n    let nextControl;\n    let previousControl;\n    if (overflowAtIndex) {\n      const length = children.length;\n      if (overflowMenu) {\n        overflow = (\n          <MenuTab\n            id={`${tabId}-overflow-menu`}\n            activeTabIndex={activeTabIndex}\n            overflowAtIndex={overflowAtIndex}\n            label={(\n              <IconSeparator label={overflowMenuLabel}>\n                {getDeprecatedIcon(overflowMenuIconClassName, overflowMenuIconChildren, overflowMenuIcon)}\n              </IconSeparator>\n            )}\n            tabs={children.slice(overflowAtIndex, children.length).map(this._mapToOverflowTabProps)}\n          />\n        );\n      }\n\n      children = children.slice(overflowIndex, overflowAtIndex);\n\n      if (!overflowMenu && overflowIndex > 0) {\n        previousControl = (\n          <TabOverflowButton\n            left\n            icon={icon}\n            iconEl={getDeprecatedIcon(previousIconClassName, previousIconChildren, previousIcon)}\n            onClick={this._showPreviousTabs}\n          />\n        );\n      }\n\n      if (!overflowMenu && length > 3 && overflowAtIndex + overflowIndex <= length) {\n        nextControl = (\n          <TabOverflowButton\n            icon={icon}\n            onClick={this._showNextTabs}\n            iconEl={getDeprecatedIcon(nextIconClassName, nextIconChildren, nextIcon)}\n          />\n        );\n      }\n    }\n\n    return (\n      <Component\n        {...props}\n        style={{ ...style, paddingLeft }}\n        className={cn('md-tabs', {\n          'md-tabs--pagination': overflowAtIndex && !overflowMenu,\n          'md-tabs--centered': centered,\n          'md-background--primary': colored,\n        }, className)}\n        role=\"tablist\"\n      >\n        <ResizeObserver watchWidth watchHeight onResize={this._positionElements} elRef={this._setContainer} />\n        {previousControl}\n        {children}\n        {nextControl}\n        {overflow}\n        <TabIndicator offset={indicatorOffset} width={indicatorWidth} visible={indicatorVisible} />\n      </Component>\n    );\n  }\n}\n"]}
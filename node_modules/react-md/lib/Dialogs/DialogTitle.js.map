{"version":3,"sources":["../../src/js/Dialogs/DialogTitle.js"],"names":["DialogTitle","props","children","className","propTypes","id","oneOfType","number","string","node"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,W;;;;;;;;;;;6BAUV;AAAA,mBACmC,KAAKC,KADxC;AAAA,UACCC,QADD,UACCA,QADD;AAAA,UACWC,SADX,UACWA,SADX;AAAA,UACyBF,KADzB;;AAGP,UAAI,CAACC,QAAL,EAAe;AACb,eAAO,IAAP;AACD;;AAED,aACE;AAAA;AAAA,qBAAQD,KAAR,IAAe,WAAW,0BAAG,2BAAH,EAAgCE,SAAhC,CAA1B;AACGD;AADH,OADF;AAKD;;;;;;AAtBkBF,W,CACZI,S,GAAY;AACjBC,MAAI,oBAAUC,SAAV,CAAoB,CACtB,oBAAUC,MADY,EAEtB,oBAAUC,MAFY,CAApB,CADa;AAKjBL,aAAW,oBAAUK,MALJ;AAMjBN,YAAU,oBAAUO;AANH,C;kBADAT,W","file":"DialogTitle.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport default class DialogTitle extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  render() {\n    const { children, className, ...props } = this.props;\n\n    if (!children) {\n      return null;\n    }\n\n    return (\n      <h2 {...props} className={cn('md-title md-title--dialog', className)}>\n        {children}\n      </h2>\n    );\n  }\n}\n"]}
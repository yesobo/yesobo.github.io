{"version":3,"sources":["../../src/js/Dialogs/Dialog.js"],"names":["DIFF_KEYS","Dialog","props","height","width","styles","style","state","contentStyles","contentStyle","contentPadded","renderNode","_renderNode","pageX","pageY","setState","_getStyles","onOpen","nextProps","some","key","onLeave","id","className","titleStyle","titleClassName","footerStyle","footerClassName","contentClassName","title","Content","contentComponent","contentProps","actions","children","fullPage","centered","autopadContent","paddedContent","autosizeContent","stackedActions","containerX","containerY","labelledBy","titleId","padDefined","dialogChildren","_setContent","_handleContentResize","_setRenderNode","propTypes","oneOfType","number","string","object","func","isRequired","node","element","arrayOf","additionalFocusKeys","initialFocus","focusOnMount","containFocus","bool","zDepth","defaultProps","childContextTypes","transformOrigin","dialog","content","_content","querySelectorAll","length","scrollHeight","el","maxHeight","parentNode","querySelector","footer","totalHeight","offsetHeight","equalHeight","currentHeight"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,YAAY,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,cAA7B,CAAlB;;AAEA;;;;;;;IAMqBC,M;;;AAuQnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAAA;;AAAA,QAGTC,MAHS,GAGSD,KAHT,CAGTC,MAHS;AAAA,QAGDC,KAHC,GAGSF,KAHT,CAGDE,KAHC;;AAIjB,QAAIC,SAASH,MAAMI,KAAnB;AACA,QAAIH,UAAUC,KAAd,EAAqB;AACnBC,eAASA,UAAU,EAAnB;AACAA,0BAAWF,cAAX,EAAmBC,YAAnB,IAA6BC,MAA7B;AACD;;AAED,UAAKE,KAAL,GAAa;AACXF,oBADW;AAEXG,qBAAeN,MAAMO,YAFV;AAGXC,qBAAe;AAHJ,KAAb;AAViB;AAelB;;;;sCAEiB;AAChB,aAAO,EAAEC,YAAY,KAAKC,WAAnB,EAAP;AACD;;;yCAEoB;AAAA,mBACM,KAAKV,KADX;AAAA,UACXW,KADW,UACXA,KADW;AAAA,UACJC,KADI,UACJA,KADI;;AAEnB,UAAI,CAACD,KAAD,IAAU,CAACC,KAAf,EAAsB;AACpB;AACD;;AAED,WAAKC,QAAL,CAAc,EAAEV,QAAQ,KAAKW,UAAL,CAAgB,KAAKd,KAArB,CAAV,EAAd;AACD;;;wCAEmB;AAClB,UAAI,KAAKA,KAAL,CAAWe,MAAf,EAAuB;AACrB,aAAKf,KAAL,CAAWe,MAAX;AACD;AACF;;;8CAEyBC,S,EAAW;AAAA;;AACnC,UAAIlB,UAAUmB,IAAV,CAAe;AAAA,eAAOD,UAAUE,GAAV,MAAmB,OAAKlB,KAAL,CAAWkB,GAAX,CAA1B;AAAA,OAAf,CAAJ,EAA+D;AAC7D,aAAKL,QAAL,CAAc;AACZV,kBAAQ,KAAKW,UAAL,CAAgBE,SAAhB,CADI;AAEZV,sCAAoB,KAAKD,KAAL,CAAWC,aAA/B,EAAiDU,UAAUT,YAA3D;AAFY,SAAd;AAID;AACF;;;2CAEsB;AACrB,UAAI,KAAKP,KAAL,CAAWmB,OAAf,EAAwB;AACtB,aAAKnB,KAAL,CAAWmB,OAAX;AACD;AACF;;;6BA0CQ;AAAA,mBAC0C,KAAKd,KAD/C;AAAA,UACCG,aADD,UACCA,aADD;AAAA,UACgBL,MADhB,UACgBA,MADhB;AAAA,UACwBG,aADxB,UACwBA,aADxB;;AAAA,oBAkCH,KAAKN,KAlCF;AAAA,UAGLoB,EAHK,WAGLA,EAHK;AAAA,UAILC,SAJK,WAILA,SAJK;AAAA,UAKLC,UALK,WAKLA,UALK;AAAA,UAMLC,cANK,WAMLA,cANK;AAAA,UAOLC,WAPK,WAOLA,WAPK;AAAA,UAQLC,eARK,WAQLA,eARK;AAAA,UASLC,gBATK,WASLA,gBATK;AAAA,UAULC,KAVK,WAULA,KAVK;AAAA,UAWaC,OAXb,WAWLC,gBAXK;AAAA,UAYLC,YAZK,WAYLA,YAZK;AAAA,UAaLC,OAbK,WAaLA,OAbK;AAAA,UAcLC,QAdK,WAcLA,QAdK;AAAA,UAeLC,QAfK,WAeLA,QAfK;AAAA,UAgBLC,QAhBK,WAgBLA,QAhBK;AAAA,UAiBLC,cAjBK,WAiBLA,cAjBK;AAAA,UAkBLC,aAlBK,WAkBLA,aAlBK;AAAA,UAmBLC,eAnBK,WAmBLA,eAnBK;AAAA,UAoBLC,cApBK,WAoBLA,cApBK;AAAA,UAsBLlC,KAtBK,WAsBLA,KAtBK;AAAA,UAuBLG,YAvBK,WAuBLA,YAvBK;AAAA,UAwBLI,KAxBK,WAwBLA,KAxBK;AAAA,UAyBLC,KAzBK,WAyBLA,KAzBK;AAAA,UA0BL2B,UA1BK,WA0BLA,UA1BK;AAAA,UA2BLC,UA3BK,WA2BLA,UA3BK;AAAA,UA4BLzB,MA5BK,WA4BLA,MA5BK;AAAA,UA6BLI,OA7BK,WA6BLA,OA7BK;AAAA,UA8BLlB,MA9BK,WA8BLA,MA9BK;AAAA,UA+BLC,KA/BK,WA+BLA,KA/BK;AAAA,UAiCFF,KAjCE;;AAAA,UAoCkByC,UApClB,GAoCiC,KAAKzC,KApCtC,CAoCD,iBApCC;;AAqCP,UAAM0C,UAAatB,EAAb,WAAN;AACA,UAAI,CAACqB,UAAD,IAAed,KAAnB,EAA0B;AACxBc,qBAAaC,OAAb;AACD;;AAED,UAAMC,aAAa,OAAOP,aAAP,KAAyB,WAA5C;AACA,UAAMQ,iBAAiBX,WAAWD,QAAX,GAAsB,CAC3C;AAAA;AAAA;AACE,eAAI,OADN;AAEE,cAAIU,OAFN;AAGE,iBAAOpB,UAHT;AAIE,qBAAWC;AAJb;AAMGI;AANH,OAD2C,EAS3C;AAAC,eAAD;AAAA;AACE,eAAK,CAACgB,UAAD,IAAeR,cAAf,GAAgC,KAAKU,WAArC,GAAmD,IAD1D;AAEE,eAAI;AAFN,WAGMf,YAHN;AAIE,iBAAOxB,aAJT;AAKE,qBAAW,0BAAG,mBAAH,EAAwB;AACjC,yCAA6BqC,aAAaP,aAAb,GAA6B5B;AADzB,WAAxB,EAERkB,gBAFQ;AALb;AASGW,0BAAkB,0DAAgB,iBAAhB,EAA4B,gBAA5B,EAAuC,UAAU,KAAKS,oBAAtD,GAAlB,GAAmG,IATtG;AAUGd;AAVH,OAT2C,EAqB3C;AACE,aAAI,QADN;AAEE,eAAOR,WAFT;AAGE,mBAAWC,eAHb;AAIE,iBAASM,OAJX;AAKE,iBAASO;AALX,QArB2C,CAA7C;;AA8BA,aACE;AAAA;AAAA,qBACMtC,KADN;AAEE,cAAIoB,EAFN;AAGE,6CAHF;AAIE,eAAK,KAAK2B,cAJZ;AAKE,iBAAO5C,MALT;AAME,qBAAW,0BAAG,WAAH,EAAgB;AACzB,oCAAwB8B,QADC;AAEzB,mCAAuBC;AAFE,WAAhB,EAGRb,SAHQ,CANb;AAUE,gBAAK,QAVP;AAWE,6BAAiBoB;AAXnB;AAaGG;AAbH,OADF;AAiBD;;;;;;AA5bkB7C,M,CACZiD,S,GAAY;AACjB;;;AAGA5B,MAAI,iCAAkB,oBAAU6B,SAAV,CAAoB,CACxC,oBAAUC,MAD8B,EAExC,oBAAUC,MAF8B,CAApB,CAAlB,CAJa;;AASjB;;;AAGA,sBAAoB,kCAAmB,oBAAUF,SAAV,CAAoB,CACzD,oBAAUC,MAD+C,EAEzD,oBAAUC,MAF+C,CAApB,CAAnB,EAGhB,OAHgB,EAGP,iBAHO,EAGY,YAHZ,CAZH;;AAiBjB;;;AAGA,qBAAmB,oBAAUF,SAAV,CAAoB,CACrC,oBAAUC,MAD2B,EAErC,oBAAUC,MAF2B,CAApB,CApBF;;AAyBjB;;;AAGA,gBAAc,oBAAUA,MA5BP;;AA8BjB;;;AAGA/C,SAAO,oBAAUgD,MAjCA;;AAmCjB;;;AAGA/B,aAAW,oBAAU8B,MAtCJ;;AAwCjB;;;AAGA7B,cAAY,oBAAU8B,MA3CL;;AA6CjB;;;AAGA7B,kBAAgB,oBAAU4B,MAhDT;;AAkDjB;;;;AAIA3B,eAAa,oBAAU4B,MAtDN;;AAwDjB;;;;AAIA3B,mBAAiB,oBAAU0B,MA5DV;;AA8DjB;;;AAGA5C,gBAAc,oBAAU6C,MAjEP;;AAmEjB;;;AAGA1B,oBAAkB,oBAAUyB,MAtEX;;AAwEjB;;;;;;;;;;;;;;;;;AAiBAtB,oBAAkB,oBAAUoB,SAAV,CAAoB,CACpC,oBAAUE,MAD0B,EAEpC,oBAAUE,IAF0B,CAApB,EAGfC,UA5Fc;;AA8FjB;;;AAGAxB,gBAAc,oBAAUsB,MAjGP;;AAmGjB;;;AAGAzB,SAAO,oBAAU4B,IAtGA;;AAwGjB;;;AAGAvB,YAAU,oBAAUuB,IA3GH;;AA6GjB;;;;AAIAxB,WAAS,oBAAUkB,SAAV,CAAoB,CAC3B,oBAAUO,OADiB,EAE3B,oBAAUJ,MAFiB,EAG3B,oBAAUK,OAAV,CAAkB,oBAAUR,SAAV,CAAoB,CACpC,oBAAUO,OAD0B,EAEpC,oBAAUJ,MAF0B,CAApB,CAAlB,CAH2B,CAApB,CAjHQ;;AA0HjB;;;AAGAM,uBAAqB,yBAAeV,SAAf,CAAyBU,mBA7H7B;;AA+HjB;;;AAGAC,gBAAc,yBAAeX,SAAf,CAAyBW,YAlItB;;AAoIjB;;;AAGAC,gBAAc,yBAAeZ,SAAf,CAAyBY,YAvItB;;AAyIjB;;;AAGAC,gBAAc,yBAAeb,SAAf,CAAyBa,YA5ItB;;AA8IjB;;;;AAIAlD,SAAO,oBAAUuC,MAlJA;;AAoJjB;;;;AAIAtC,SAAO,oBAAUsC,MAxJA;;AA0JjB;;;;AAIAX,cAAY,oBAAUW,MA9JL;;AAgKjB;;;;AAIAV,cAAY,oBAAUU,MApKL;;AAsKjB;;;AAGAjB,YAAU,oBAAU6B,IAzKH;;AA2KjB;;;AAGAC,UAAQ,oBAAUb,MAAV,CAAiBI,UA9KR;;AAgLjB;;;;AAIAvC,UAAQ,oBAAUsC,IApLD;;AAsLjB;;;;AAIAlC,WAAS,oBAAUkC,IA1LF;;AA4LjB;;;AAGAnB,YAAU,oBAAU4B,IA/LH;;AAiMjB;;;;;;;;AAQA1B,iBAAe,oBAAU0B,IAzMR;;AA2MjB;;;;AAIA3B,kBAAgB,oBAAU2B,IA/MT;;AAiNjB;;;;;AAKAzB,mBAAiB,oBAAUyB,IAtNV;;AAwNjB;;;;;;;;;AASA7D,UAAQ,oBAAUgD,SAAV,CAAoB,CAC1B,oBAAUC,MADgB,EAE1B,oBAAUC,MAFgB,CAApB,CAjOS;;AAsOjB;;;;;;;;;AASAjD,SAAO,oBAAU+C,SAAV,CAAoB,CACzB,oBAAUC,MADe,EAEzB,oBAAUC,MAFe,CAApB,CA/OU;;AAoPjB;;;;AAIAb,kBAAgB,oBAAUwB;AAxPT,C;AADA/D,M,CA4PZiE,Y,GAAe;AACpB7B,kBAAgB,IADI;AAEpBE,mBAAiB,IAFG;AAGpBR,oBAAkB,SAHE;AAIpBkC,UAAQ;AAJY,C;AA5PHhE,M,CAmQZkE,iB,GAAoB;AACzBxD,cAAY,oBAAU2C;AADG,C;;;;;OAuD3BtC,U,GAAa;AAAA,mFAAkE,OAAKd,KAAvE;AAAA,QAAGW,KAAH,QAAGA,KAAH;AAAA,QAAU4B,UAAV,QAAUA,UAAV;AAAA,QAAsB3B,KAAtB,QAAsBA,KAAtB;AAAA,QAA6B4B,UAA7B,QAA6BA,UAA7B;AAAA,QAAyCvC,MAAzC,QAAyCA,MAAzC;AAAA,QAAiDC,KAAjD,QAAiDA,KAAjD;AAAA,QAAwDE,KAAxD,QAAwDA,KAAxD;;AAAA;AACXH,cAAQ,OAAOA,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,IADtC;AAEXC,aAAO,OAAOA,KAAP,KAAiB,WAAjB,GAA+BA,KAA/B,GAAuC,IAFnC;AAGXgE,uBAAiBvD,SAASC,KAAT,GAAoBD,QAAQ4B,UAA5B,YAA4C3B,QAAQ4B,UAApD,WAAqE;AAH3E,OAIRpC,KAJQ;AAAA,G;;OAOb2C,c,GAAiB,UAACoB,MAAD,EAAY;AAC3B,WAAKzD,WAAL,GAAmB,2BAAYyD,MAAZ,CAAnB;AACD,G;;OAEDtB,W,GAAc,UAACuB,OAAD,EAAa;AACzB,QAAIA,YAAY,IAAhB,EAAsB;AACpB,aAAKC,QAAL,GAAgB,2BAAYD,OAAZ,CAAhB;AACA,UAAM5D,gBAAgB,OAAK6D,QAAL,CAAcC,gBAAd,CAA+B,UAA/B,EAA2CC,MAA3C,KAAsD,CAA5E;;AAEA,aAAK1D,QAAL,CAAc,EAAEL,4BAAF,EAAd;AACD;AACF,G;;OAEDsC,oB,GAAuB,iBAAmC;AAAA,QAAhC0B,YAAgC,SAAhCA,YAAgC;AAAA,QAAdJ,OAAc,SAAlBK,EAAkB;;AACxD,QAAMC,YAAYN,QAAQhE,KAAR,CAAcsE,SAAhC;AACA,QAAMP,SAASC,QAAQO,UAAvB;AACAP,YAAQhE,KAAR,CAAcsE,SAAd,GAA0B,MAA1B;AACA,QAAM/C,QAAQ,OAAK3B,KAAL,CAAW2B,KAAX,GAAmBwC,OAAOS,aAAP,CAAqB,mBAArB,CAAnB,GAA+D,IAA7E;AACA,QAAMC,SAAS,OAAK7E,KAAL,CAAW+B,OAAX,GAAqBoC,OAAOS,aAAP,CAAqB,mBAArB,CAArB,GAAiE,IAAhF;;AAEA,QAAME,cAAcX,OAAOY,YAAP,IAAuBpD,QAAQA,MAAMoD,YAAd,GAA6B,CAApD,KAA0DF,SAASA,OAAOE,YAAhB,GAA+B,CAAzF,CAApB;AACAX,YAAQhE,KAAR,CAAcsE,SAAd,GAA0BA,SAA1B;AACA,QAAMM,cAAcF,gBAAgBN,YAApC;AACA,QAAIQ,WAAJ,EAAiB;AACf,UAAMC,gBAAiB,OAAK5E,KAAL,CAAWC,aAAX,IAA4B,OAAKD,KAAL,CAAWC,aAAX,CAAyBoE,SAAtD,IAAoE,IAA1F;AACA,UAAIO,iBAAiBA,kBAAkBT,YAAvC,EAAqD;AACnD,eAAK3D,QAAL,CAAc,EAAEP,eAAe,OAAKN,KAAL,CAAWO,YAA5B,EAAd;AACD;AACF,KALD,MAKO;AACL,aAAKM,QAAL,CAAc,EAAEP,0BAAiBoE,WAAWI,WAA5B,IAA4C,OAAK9E,KAAL,CAAWO,YAAvD,CAAF,EAAd;AACD;AACF,G;;;kBAhWkBR,M","file":"Dialog.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport FocusContainer from '../Helpers/FocusContainer';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport Paper from '../Papers/Paper';\nimport DialogTitle from './DialogTitle';\nimport DialogFooter from './DialogFooter';\n\nconst DIFF_KEYS = ['style', 'height', 'width', 'contentStyle'];\n\n/**\n * The `Dialog` is just a static component for creating dialogs. Dialogs\n * seemed like they could be used outside of the `DialogContainer` component,\n * so it was exposed as well. In *most* cases, you will still want to use\n * the `DialogContainer` component.\n */\nexport default class Dialog extends PureComponent {\n  static propTypes = {\n    /**\n     * @see {@link Dialogs/DialogContainer#id}\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * @see {@link Dialogs/DialogContainer#aria-describedby}\n     */\n    'aria-describedby': oneRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'title', 'aria-labelledby', 'aria-label'),\n\n    /**\n     * @see {@link Dialogs/DialogContainer#aria-labelledby}\n     */\n    'aria-labelledby': PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * @see {@link Dialogs/DialogContainer#aria-label}\n     */\n    'aria-label': PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the dialog.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional styke to apply to the title.\n     */\n    titleStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the title.\n     */\n    titleClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the footer. This is used when the `actions`\n     * prop is defined.\n     */\n    footerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the footer. This is used when the `actions`\n     * prop is defined.\n     */\n    footerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog's content.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the dialog's content.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * The component to render the content as. This is helpful if you would like to use\n     * the CSSTransitionGroup. This really just saves a tiny bit of markup.\n     *\n     * ```js\n     * <Dialog\n     *   contentComponent={CSSTransitionGroup}\n     *   contentProps={{\n     *     transitionName: 'md-cross-fade',\n     *     transitionLeave: false,\n     *     transitionEnterTimeout: 150,\n     *   }}\n     * >\n     *   {dynamicContent}\n     * </Dialog>\n     * ```\n     */\n    contentComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * Any additional props to pass to the content component.\n     */\n    contentProps: PropTypes.object,\n\n    /**\n     * An optional title to display in the dialog.\n     */\n    title: PropTypes.node,\n\n    /**\n     * Any children to display in the content of the dialog.\n     */\n    children: PropTypes.node,\n\n    /**\n     * A single action or a list of actions to display in the dialog. This can either be a list\n     * of `FlatButton` props or `<Button flat {...props} />` elements.\n     */\n    actions: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.object,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.object,\n      ])),\n    ]),\n\n    /**\n     * @see {@link Helpers/FocusContainer#additionalFocusKeys}\n     */\n    additionalFocusKeys: FocusContainer.propTypes.additionalFocusKeys,\n\n    /**\n     * @see {@link Helpers/FocusContainer#initialFocus}\n     */\n    initialFocus: FocusContainer.propTypes.initialFocus,\n\n    /**\n     * @see {@link Helpers/FocusContainer#focusOnMount}\n     */\n    focusOnMount: FocusContainer.propTypes.focusOnMount,\n\n    /**\n     * @see {@link Helpers/FocusContainer#containFocus}\n     */\n    containFocus: FocusContainer.propTypes.containFocus,\n\n    /**\n     * An optional x coordinate on the page that caused a full page dialog\n     * to be created. This is really just used for a `transformOrigin` style.\n     */\n    pageX: PropTypes.number,\n\n    /**\n     * An optional y coordinate on the page that caused a full page dialog\n     * to be created. This is really just used for a `transformOrigin` style.\n     */\n    pageY: PropTypes.number,\n\n    /**\n     * An optional x scroll position of the container holding the dialog. This\n     * is really just used for a `transformOrigin` style on full page dialogs.\n     */\n    containerX: PropTypes.number,\n\n    /**\n     * An optional y scroll position of the container holding the dialog. This\n     * is really just used for a `transformOrigin` style on full page dialogs.\n     */\n    containerY: PropTypes.number,\n\n    /**\n     * Boolean if the dialog should be rendered as a full page dialog.\n     */\n    fullPage: PropTypes.bool,\n\n    /**\n     * The zDepth to use for the dialog.\n     */\n    zDepth: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to call when the dialog has been opened. This is\n     * really just used for the `DialogContainer`.\n     */\n    onOpen: PropTypes.func,\n\n    /**\n     * An optional function to call when the dialog has been closed. This is\n     * really just used for the `DialogContainer`.\n     */\n    onLeave: PropTypes.func,\n\n    /**\n     * Boolean if the dialog should be centered in the page.\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the content should be padded. This will take precedence\n     * over the `autopadContent` prop. So if this is defined, that value\n     * will be used instead of any thing that was was calculated in this\n     * component.\n     *\n     * @see {@link #autopadContent}\n     */\n    paddedContent: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should automatically try to determine if the content\n     * should be padded. It will be padded if the dialog does not contain a `List`.\n     */\n    autopadContent: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog content's size should automatically be resized to overflow\n     * correctly when there is a lot of content. This will calculate and apply some `maxHeight`\n     * to the `contentStyle`.\n     */\n    autosizeContent: PropTypes.bool,\n\n    /**\n     * An optional height to apply to the dialog. This is used if it is easier to just apply height/width\n     * with for specific dialogs instead of in CSS.\n     *\n     * **This prop should not be used if the `fullPage` prop is enabled.**\n     *\n     * @see {@link #fullPage}\n     * @see {@link #width}\n     */\n    height: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional width to apply to the dialog. This is used if it is easier to just apply height/width\n     * with for specific dialogs instead of in CSS.\n     *\n     * **This prop should not be used if the `fullPage` prop is enabled.**\n     *\n     * @see {@link #fullPage}\n     * @see {@link #height}\n     */\n    width: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * Boolean if the actions should be stacked on top of each other. If this value is `undefined`, it will\n     * automatically attempt to guess if the items should be stacked.\n     */\n    stackedActions: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    autopadContent: true,\n    autosizeContent: true,\n    contentComponent: 'section',\n    zDepth: 5,\n  };\n\n  static childContextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  constructor(props) {\n    super();\n\n    const { height, width } = props;\n    let styles = props.style;\n    if (height || width) {\n      styles = styles || {};\n      styles = { height, width, ...styles };\n    }\n\n    this.state = {\n      styles,\n      contentStyles: props.contentStyle,\n      contentPadded: false,\n    };\n  }\n\n  getChildContext() {\n    return { renderNode: this._renderNode };\n  }\n\n  componentWillMount() {\n    const { pageX, pageY } = this.props;\n    if (!pageX || !pageY) {\n      return;\n    }\n\n    this.setState({ styles: this._getStyles(this.props) });\n  }\n\n  componentDidMount() {\n    if (this.props.onOpen) {\n      this.props.onOpen();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (DIFF_KEYS.some(key => nextProps[key] !== this.props[key])) {\n      this.setState({\n        styles: this._getStyles(nextProps),\n        contentStyles: { ...this.state.contentStyles, ...nextProps.contentStyle },\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.onLeave) {\n      this.props.onLeave();\n    }\n  }\n\n  _getStyles = ({ pageX, containerX, pageY, containerY, height, width, style } = this.props) => ({\n    height: typeof height !== 'undefined' ? height : null,\n    width: typeof width !== 'undefined' ? width : null,\n    transformOrigin: pageX || pageY ? `${pageX - containerX}px ${pageY - containerY}px` : null,\n    ...style,\n  });\n\n  _setRenderNode = (dialog) => {\n    this._renderNode = findDOMNode(dialog);\n  };\n\n  _setContent = (content) => {\n    if (content !== null) {\n      this._content = findDOMNode(content);\n      const contentPadded = this._content.querySelectorAll('.md-list').length === 0;\n\n      this.setState({ contentPadded });\n    }\n  };\n\n  _handleContentResize = ({ scrollHeight, el: content }) => {\n    const maxHeight = content.style.maxHeight;\n    const dialog = content.parentNode;\n    content.style.maxHeight = 'none';\n    const title = this.props.title ? dialog.querySelector('.md-title--dialog') : null;\n    const footer = this.props.actions ? dialog.querySelector('.md-dialog-footer') : null;\n\n    const totalHeight = dialog.offsetHeight - (title ? title.offsetHeight : 0) - (footer ? footer.offsetHeight : 0);\n    content.style.maxHeight = maxHeight;\n    const equalHeight = totalHeight === scrollHeight;\n    if (equalHeight) {\n      const currentHeight = (this.state.contentStyles && this.state.contentStyles.maxHeight) || null;\n      if (currentHeight && currentHeight !== scrollHeight) {\n        this.setState({ contentStyles: this.props.contentStyle });\n      }\n    } else {\n      this.setState({ contentStyles: { maxHeight: totalHeight, ...this.props.contentStyle } });\n    }\n  };\n\n  render() {\n    const { contentPadded, styles, contentStyles } = this.state;\n    const {\n      id,\n      className,\n      titleStyle,\n      titleClassName,\n      footerStyle,\n      footerClassName,\n      contentClassName,\n      title,\n      contentComponent: Content,\n      contentProps,\n      actions,\n      children,\n      fullPage,\n      centered,\n      autopadContent,\n      paddedContent,\n      autosizeContent,\n      stackedActions,\n      /* eslint-disable no-unused-vars */\n      style,\n      contentStyle,\n      pageX,\n      pageY,\n      containerX,\n      containerY,\n      onOpen,\n      onLeave,\n      height,\n      width,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { 'aria-labelledby': labelledBy } = this.props;\n    const titleId = `${id}-title`;\n    if (!labelledBy && title) {\n      labelledBy = titleId;\n    }\n\n    const padDefined = typeof paddedContent !== 'undefined';\n    const dialogChildren = fullPage ? children : [\n      <DialogTitle\n        key=\"title\"\n        id={titleId}\n        style={titleStyle}\n        className={titleClassName}\n      >\n        {title}\n      </DialogTitle>,\n      <Content\n        ref={!padDefined && autopadContent ? this._setContent : null}\n        key=\"content\"\n        {...contentProps}\n        style={contentStyles}\n        className={cn('md-dialog-content', {\n          'md-dialog-content--padded': padDefined ? paddedContent : contentPadded,\n        }, contentClassName)}\n      >\n        {autosizeContent ? <ResizeObserver watchHeight watchWidth onResize={this._handleContentResize} /> : null}\n        {children}\n      </Content>,\n      <DialogFooter\n        key=\"footer\"\n        style={footerStyle}\n        className={footerClassName}\n        actions={actions}\n        stacked={stackedActions}\n      />,\n    ];\n\n    return (\n      <Paper\n        {...props}\n        id={id}\n        component={FocusContainer}\n        ref={this._setRenderNode}\n        style={styles}\n        className={cn('md-dialog', {\n          'md-dialog--full-page': fullPage,\n          'md-dialog--centered': centered,\n        }, className)}\n        role=\"dialog\"\n        aria-labelledby={labelledBy}\n      >\n        {dialogChildren}\n      </Paper>\n    );\n  }\n}\n"]}
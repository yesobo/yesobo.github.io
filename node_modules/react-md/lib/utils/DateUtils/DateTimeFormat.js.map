{"version":3,"sources":["../../../src/js/utils/DateUtils/DateTimeFormat.js"],"names":["DateTimeFormat","Intl","locales","formatOptions","options","date","toLocaleString"],"mappings":";;;;;;;;;;AAAA;;AAEA;;;;AAIA,IAAMA,iBAAkB,YAAM;AAC5B,MAAI,OAAOC,IAAP,KAAgB,WAAhB,IAA+B,OAAOA,KAAKD,cAAZ,KAA+B,WAAlE,EAA+E;AAC7E,WAAOC,KAAKD,cAAZ;AACD;;AAED;AACA;AAA8B;AAC5B,4BAAYE,OAAZ,EAAqBC,aAArB,EAAoC;AAAA;;AAClC,WAAKD,OAAL,GAAeA,OAAf;AACA,WAAKE,OAAL,GAAeD,aAAf;AACD;;AAJH;AAAA;AAAA,6BAMSE,IANT,EAMe;AACX,eAAOA,KAAKC,cAAL,EAAP;AACD;AARH;;AAAA;AAAA;AAUD,CAhBsB,EAAvB;;kBAkBeN,c","file":"DateTimeFormat.js","sourcesContent":["/** @module utils/DateUtils/DateTimeFormat */\n\n/**\n * A _really_ terrible DateTimeFormat mock if it is not available in\n * the browser or node version.\n */\nconst DateTimeFormat = (() => {\n  if (typeof Intl !== 'undefined' && typeof Intl.DateTimeFormat !== 'undefined') {\n    return Intl.DateTimeFormat;\n  }\n\n  // Very bad 'mock' of Intl.DateTimeFormat\n  return class DateTimeFormat { // eslint-disable-line no-shadow\n    constructor(locales, formatOptions) {\n      this.locales = locales;\n      this.options = formatOptions;\n    }\n\n    format(date) {\n      return date.toLocaleString();\n    }\n  };\n})();\n\nexport default DateTimeFormat;\n"]}
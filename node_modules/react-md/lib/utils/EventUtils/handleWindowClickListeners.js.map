{"version":3,"sources":["../../../src/js/utils/EventUtils/handleWindowClickListeners.js"],"names":["handleWindowClickListeners","mobileSafari","cb","enabled","window","ua","navigator","userAgent","iOS","match","webkit","document","body","style","cursor","listener"],"mappings":";;;;;kBAcwBA,0B;AAdxB;AACA,IAAIC,qBAAJ;;AAEA;;;;;;;;;;;AAWe,SAASD,0BAAT,CAAoCE,EAApC,EAAyD;AAAA,MAAjBC,OAAiB,uEAAP,KAAO;;AACtE,MAAI,OAAOF,YAAP,KAAwB,WAAxB,IAAuC,OAAOG,MAAP,KAAkB,WAA7D,EAA0E;AACxE,QAAMC,KAAKD,OAAOE,SAAP,CAAiBC,SAA5B;AACA,QAAMC,MAAMH,GAAGI,KAAH,CAAS,cAAT,CAAZ;AACA,QAAMC,SAASL,GAAGI,KAAH,CAAS,SAAT,CAAf;AACAR,mBAAeO,OAAOE,MAAP,IAAiB,CAACL,GAAGI,KAAH,CAAS,QAAT,CAAjC;;AAEA,QAAIR,YAAJ,EAAkB;AAChBU,eAASC,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,SAA7B;AACD;AACF;;AAED,MAAMC,WAAWX,QAAUD,UAAU,KAAV,GAAkB,QAA5B,oBAAjB;AACAY,WAAS,OAAT,EAAkBb,EAAlB;AACD","file":"handleWindowClickListeners.js","sourcesContent":["/** @module utils/EventUtils/handleWindowClickListeners */\nlet mobileSafari;\n\n/**\n * Since mobile safari doesn't delegate click events to the window (it only does touch events),\n * this utility function will hack a fix to allow the delegation by updaging the body's cursor\n * to be a pointer.\n *\n * Hopefully this can be removed one day....\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile\n * @param {function} cb - the callback function to use for a window click event.\n * @param {boolean} enabled - boolean if the click event is enabled.\n */\nexport default function handleWindowClickListeners(cb, enabled = false) {\n  if (typeof mobileSafari === 'undefined' && typeof window !== 'undefined') {\n    const ua = window.navigator.userAgent;\n    const iOS = ua.match(/iP(ad|hone)/i);\n    const webkit = ua.match(/WebKit/i);\n    mobileSafari = iOS && webkit && !ua.match(/CriOS/i);\n\n    if (mobileSafari) {\n      document.body.style.cursor = 'pointer';\n    }\n  }\n\n  const listener = window[`${enabled ? 'add' : 'remove'}EventListener`];\n  listener('click', cb);\n}\n"]}
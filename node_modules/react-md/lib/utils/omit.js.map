{"version":3,"sources":["../../src/js/utils/omit.js"],"names":["omit","obj","keys","length","Object","filter","indexOf","key","reduce","newProps"],"mappings":";;;;;kBASwBA,I;AATxB;;AAEA;;;;;;;AAOe,SAASA,IAAT,CAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACtC,MAAI,CAACD,GAAL,EAAU;AACR,WAAO,EAAP;AACD,GAFD,MAEO,IAAI,CAACC,IAAD,IAAS,CAACA,KAAKC,MAAnB,EAA2B;AAChC,WAAOF,GAAP;AACD;;AAED,SAAOG,OAAOF,IAAP,CAAYD,GAAZ,EAAiBI,MAAjB,CAAwB;AAAA,WAAOH,KAAKI,OAAL,CAAaC,GAAb,MAAsB,CAAC,CAA9B;AAAA,GAAxB,EAAyDC,MAAzD,CAAgE,UAACC,QAAD,EAAWF,GAAX,EAAmB;AACxFE,aAASF,GAAT,IAAgBN,IAAIM,GAAJ,CAAhB;;AAEA,WAAOE,QAAP;AACD,GAJM,EAIJ,EAJI,CAAP;AAKD","file":"omit.js","sourcesContent":["/** @module utils/omit */\n\n/**\n * This should hopefully be very similar to lodash's omit function. It will\n * take an object and return a new object without any of the given keys.\n *\n * @param {Object} obj - The object to omit keys from.\n * @param {Array.<String>} keys - a list of keys to remove.\n */\nexport default function omit(obj, keys) {\n  if (!obj) {\n    return {};\n  } else if (!keys || !keys.length) {\n    return obj;\n  }\n\n  return Object.keys(obj).filter(key => keys.indexOf(key) === -1).reduce((newProps, key) => {\n    newProps[key] = obj[key];\n\n    return newProps;\n  }, {});\n}\n"]}
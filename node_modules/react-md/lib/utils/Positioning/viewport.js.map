{"version":3,"sources":["../../../src/js/utils/Positioning/viewport.js"],"names":["viewport","el","rect","getBoundingClientRect","top","right","bottom","left"],"mappings":";;;;;kBAawBA,Q;;AAZxB;;;;;;AAEA;;;;;;;;;;AAUe,SAASA,QAAT,CAAkBC,EAAlB,EAAsB;AACnC,MAAI,CAACA,EAAL,EAAS;AACP,WAAO,EAAP;AACD;;AAED,MAAMC,OAAOD,GAAGE,qBAAH,EAAb;AACA,MAAMC,MAAMF,KAAKE,GAAL,IAAY,CAAxB;AACA,MAAMC,QAAQH,KAAKG,KAAL,IAAc,6BAAc,OAAd,CAA5B;AACA,MAAMC,SAASJ,KAAKI,MAAL,IAAe,6BAAc,QAAd,CAA9B;AACA,MAAMC,OAAOL,KAAKK,IAAL,IAAa,CAA1B;;AAEA,SAAOH,OAAOC,KAAP,IAAgBC,MAAhB,IAA0BC,IAA1B,IAAkC,EAAEH,QAAF,EAAOC,YAAP,EAAcC,cAAd,EAAsBC,UAAtB,EAAzC;AACD,C,CAzBD","file":"viewport.js","sourcesContent":["/** @module utils/Positioning/viewport */\nimport getScreenSize from './getScreenSize';\n\n/**\n * Determines if an element is still in the viewport. If it is,\n * it will return a `true` boolean. If it is not, it will return\n * an object containing booleans for top, right, bottom, and left\n * where a `false` value will mean it is out of the viewport for that\n * position.\n *\n * @param {Object} el - The element to test.\n * @return {boolean|Object} the results.\n */\nexport default function viewport(el) {\n  if (!el) {\n    return {};\n  }\n\n  const rect = el.getBoundingClientRect();\n  const top = rect.top >= 0;\n  const right = rect.right <= getScreenSize('Width');\n  const bottom = rect.bottom <= getScreenSize('Height');\n  const left = rect.left >= 0;\n\n  return top && right && bottom && left || { top, right, bottom, left };\n}\n"]}
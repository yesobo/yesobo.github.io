{"version":3,"sources":["../../../src/js/utils/Positioning/getSelectedTextPosition.js"],"names":["getSelectedTextPosition","ZERO_WIDTH_CHARACTER","e","height","target","clientX","clientY","text","width","Math","round","classList","contains","parseInt","window","getComputedStyle","fontSize","left","top","getSelection","selection","rangeCount","range","getRangeAt","cloneRange","rect","getClientRects","rects","length","span","document","createElement","appendChild","createTextNode","insertNode","getBoundingClientRect","spanParent","parentNode","removeChild","normalize"],"mappings":";;;;;kBAawBA,uB;;AAZxB;;;;AACA;;;;;;AAFA;AAIA,IAAMC,uBAAuB,QAA7B;;AAEA;;;;;;;AAOe,SAASD,uBAAT,CAAiCE,CAAjC,EAAoC;AACjD,MAAIC,eAAJ;AADiD,MAEzCC,MAFyC,GAEZF,CAFY,CAEzCE,MAFyC;AAAA,MAEjCC,OAFiC,GAEZH,CAFY,CAEjCG,OAFiC;AAAA,MAExBC,OAFwB,GAEZJ,CAFY,CAExBI,OAFwB;;AAGjD,MAAMC,OAAO,gCAAb;AACA,MAAMC,QAAQC,KAAKC,KAAL,CAAW,4BAAaH,IAAb,EAAmBH,MAAnB,KAA8B,CAAzC,CAAd;AACA,MAAI,CAACG,IAAD,IAASH,OAAOO,SAAP,CAAiBC,QAAjB,CAA0B,eAA1B,CAAb,EAAyD;AACvDT,aAASU,SAASC,OAAOC,gBAAP,CAAwBX,MAAxB,EAAgCY,QAAzC,EAAmD,EAAnD,CAAT;AACA,WAAO;AACLR,kBADK;AAELL,oBAFK;AAGLc,YAAMZ,UAAUG,KAHX;AAILU,WAAKZ;AAJA,KAAP;AAMD;;AAED;AACA,MAAIQ,OAAOK,YAAX,EAAyB;AACvB,QAAMC,YAAYN,OAAOK,YAAP,EAAlB;AACA,QAAIC,UAAUC,UAAd,EAA0B;AACxB,UAAMC,QAAQF,UAAUG,UAAV,CAAqB,CAArB,EAAwBC,UAAxB,EAAd;AACA,UAAIC,OAAO,IAAX;AACA,UAAIH,MAAMI,cAAV,EAA0B;AACxB,YAAMC,QAAQL,MAAMI,cAAN,EAAd;AACA,YAAIC,MAAMC,MAAN,GAAe,CAAnB,EAAsB;AACpBH,iBAAOE,MAAM,CAAN,CAAP;AACD;AACF;;AAED,UAAI,CAACF,IAAL,EAAW;AACT,YAAMI,OAAOC,SAASC,aAAT,CAAuB,MAAvB,CAAb;AACAF,aAAKG,WAAL,CAAiBF,SAASG,cAAT,CAAwBhC,oBAAxB,CAAjB;AACAqB,cAAMY,UAAN,CAAiBL,IAAjB;AACAJ,eAAOI,KAAKM,qBAAL,EAAP;;AAEA,YAAMC,aAAaP,KAAKQ,UAAxB;AACAD,mBAAWE,WAAX,CAAuBT,IAAvB;AACAO,mBAAWG,SAAX;AACD;;AAED,aAAOd,IAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","file":"getSelectedTextPosition.js","sourcesContent":["/** @module utils/Positoning/getSelectedTextPosition */\nimport getSelectedText from '../getSelectedText';\nimport getTextWidth from './getTextWidth';\n\nconst ZERO_WIDTH_CHARACTER = '\\u200b';\n\n/**\n * A utility function to attempt to get the current highlighted text position.\n *\n * When a context menu is opened, this function attempts to find the bounding client rect\n * for the highlighted text. However, if the text is in the text field, some weird stuff\n * happens and it is unable to get it correctly.\n */\nexport default function getSelectedTextPosition(e) {\n  let height;\n  const { target, clientX, clientY } = e;\n  const text = getSelectedText();\n  const width = Math.round(getTextWidth(text, target) || 0);\n  if (!text || target.classList.contains('md-text-field')) {\n    height = parseInt(window.getComputedStyle(target).fontSize, 10);\n    return {\n      width,\n      height,\n      left: clientX - width,\n      top: clientY,\n    };\n  }\n\n  // All browsers I am supporting have window.getSelection, but better safe than sorry\n  if (window.getSelection) {\n    const selection = window.getSelection();\n    if (selection.rangeCount) {\n      const range = selection.getRangeAt(0).cloneRange();\n      let rect = null;\n      if (range.getClientRects) {\n        const rects = range.getClientRects();\n        if (rects.length > 0) {\n          rect = rects[0];\n        }\n      }\n\n      if (!rect) {\n        const span = document.createElement('span');\n        span.appendChild(document.createTextNode(ZERO_WIDTH_CHARACTER));\n        range.insertNode(span);\n        rect = span.getBoundingClientRect();\n\n        const spanParent = span.parentNode;\n        spanParent.removeChild(span);\n        spanParent.normalize();\n      }\n\n      return rect;\n    }\n  }\n\n  return null;\n}\n"]}
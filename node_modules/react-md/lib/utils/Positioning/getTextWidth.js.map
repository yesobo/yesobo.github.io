{"version":3,"sources":["../../../src/js/utils/Positioning/getTextWidth.js"],"names":["getTextWidth","cachedCanvas","text","el","canvas","document","createElement","context","getContext","styles","window","getComputedStyle","font","sizing","fontSize","lineHeight","fontFamily","fontStyle","fontVariant","fontWeight","measureText","width"],"mappings":";;;;;kBAmBwBA,Y;AAnBxB;;AAEA,IAAIC,qBAAJ;;AAEA;;;;;;;;;;;;;;;AAee,SAASD,YAAT,CAAsBE,IAAtB,EAA4BC,EAA5B,EAAgCC,MAAhC,EAAwC;AACrD,MAAI,CAACD,EAAL,EAAS;AACP,WAAO,IAAP;AACD;;AAED,MAAI,CAACC,MAAL,EAAa;AACX,QAAI,CAACH,YAAL,EAAmB;AACjBA,qBAAeI,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACD;;AAEDF,aAASH,YAAT;AACD;;AAED,MAAMM,UAAUH,OAAOI,UAAP,CAAkB,IAAlB,CAAhB;AACA,MAAI,CAACD,OAAL,EAAc;AAAE;AACd,WAAO,IAAP;AACD;;AAED,MAAME,SAASC,OAAOC,gBAAP,CAAwBR,EAAxB,CAAf;AACA,MAAIS,OAAOH,OAAOG,IAAlB;AACA;AACA;AACA,MAAI,CAACA,IAAL,EAAW;AACT;AACA,QAAMC,SAAYJ,OAAOK,QAAnB,WAAiCL,OAAOM,UAAxC,SAAsDN,OAAOO,UAAnE;AACAJ,WAAUH,OAAOQ,SAAjB,SAA8BR,OAAOS,WAArC,SAAoDT,OAAOU,UAA3D,SAAyEN,MAAzE;AACD;;AAEDN,UAAQK,IAAR,GAAeA,IAAf;AACA,SAAOL,QAAQa,WAAR,CAAoBlB,IAApB,EAA0BmB,KAAjC;AACD","file":"getTextWidth.js","sourcesContent":["/** @module utils/Positioning/getTextWidth */\n\nlet cachedCanvas;\n\n/**\n * A utility function to measure the width (in px) of any text. It will require a canvas\n * and an element to use to determine the current fonts to apply since different fonts will\n * have different widths.\n *\n * This isn't fully accurate since some browsers handle the calculations a bit differently so\n * they are off by a 0-3px\n *\n * @param {String} text - The text to measure the width\n * @param {HTMLElement} el - The element to use to determine the current font for the text.\n * @param {HTMLElement=} canvas - An optional canvas to use for doing the calculations. If this\n *    is omitted, it will just use the locally created canvas to do the calculations.\n * @return {number} this will either return null if there is a problem calculating the width or\n *    the length (in px) of the text.\n */\nexport default function getTextWidth(text, el, canvas) {\n  if (!el) {\n    return null;\n  }\n\n  if (!canvas) {\n    if (!cachedCanvas) {\n      cachedCanvas = document.createElement('canvas');\n    }\n\n    canvas = cachedCanvas;\n  }\n\n  const context = canvas.getContext('2d');\n  if (!context) { // context doesn't exist in testing without complicated mocks\n    return null;\n  }\n\n  const styles = window.getComputedStyle(el);\n  let font = styles.font;\n  // Some browsers do not actually supply the font style since they are on an older version of CSSProperties,\n  // so the font string needs to be made manually.\n  if (!font) {\n    // font-style font-variant font-weight font-size/line-height font-family\n    const sizing = `${styles.fontSize} / ${styles.lineHeight} ${styles.fontFamily}`;\n    font = `${styles.fontStyle} ${styles.fontVariant} ${styles.fontWeight} ${sizing}`;\n  }\n\n  context.font = font;\n  return context.measureText(text).width;\n}\n"]}
{"version":3,"sources":["../../src/js/Cards/Card.js"],"names":["Card","props","_handleMouseOver","e","onMouseOver","raise","_touched","setState","zDepth","_handleMouseLeave","onMouseLeave","state","_handleTouchStart","onTouchStart","_handleExpandClick","onExpanderClick","expanded","initiallyExpanded","defaultExpanded","expanderTooltipLabel","expanderTooltipDelay","expanderTooltipPosition","expanderIcon","iconClassName","iconChildren","expanderIconClassName","expanderIconChildren","isExpanded","onExpandClick","icon","tooltipLabel","tooltipDelay","tooltipPosition","className","tableCard","children","animate","propExpanded","expanderIndex","parts","map","toArray","child","i","isExpander","expander","expandable","collapsed","propTypes","style","object","string","node","bool","func","element","oneOf","number","defaultProps","childContextTypes"],"mappings":"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","file":"Card.js","sourcesContent":["import React, { PureComponent, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport getField from '../utils/getField';\nimport contextTypes from './contextTypes';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport FontIcon from '../FontIcons/FontIcon';\nimport Paper from '../Papers/Paper';\nimport Collapse from '../Helpers/Collapse';\n\nexport default class Card extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the card.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Any Card parts that should be rendered.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the card is expanded by default when there is an expander\n     * component.\n     */\n    defaultExpanded: PropTypes.bool,\n\n    /**\n     * Boolean if the card should raise on hover when on a desktop display.\n     */\n    raise: PropTypes.bool,\n\n    /**\n     * Boolean if the card is currently expanded. This will require the `onExpanderClick` function\n     * to toggle the state. The card will become controlled if this is not `undefined`.\n     */\n    expanded: controlled(PropTypes.bool, 'onExpanderClick', 'defaultExpanded'),\n\n    /**\n     * An optional function to call when the expander is clicked.\n     */\n    onExpanderClick: PropTypes.func,\n\n    /**\n     * The icon to use for the expander button. It is recommended to use this prop over\n     * the `expaderIconChildren` and `expanderIconClassName` since it provides more control.\n     */\n    expanderIcon: PropTypes.element,\n\n    /**\n     * The tooltip position for the expander icon.\n     */\n    expanderTooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * The optional tooltip to display for the expander icon.\n     */\n    expanderTooltipLabel: PropTypes.node,\n\n    /**\n     * An optional delay before the tooltip appears for the expander icon on hover.\n     */\n    expanderTooltipDelay: PropTypes.number,\n\n    /**\n     * Boolean if the card contains a table. It will update the styling accordingly.\n     * When using the `DataTable` component, do not wrap it in a `CardText` component.\n     *\n     * ```js\n     * <Card tableCard={true}>\n     *   <CardTitle title=\"Example />\n     *   <DataTable>\n     *     ...\n     *   </DataTable>\n     * </Card>\n     * ```\n     */\n    tableCard: PropTypes.bool,\n\n    /**\n     * An optional function to call when the mouseover event is triggered.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when the mouseleave event is triggered.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when the touchstart event is triggered.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * Boolean if the card expansion should be animated.\n     */\n    animate: PropTypes.bool,\n\n    expanderIconClassName: deprecated(PropTypes.string, 'Use `expanderIcon` instead'),\n    expanderIconChildren: deprecated(PropTypes.node, 'Use `expanderIcon` instead'),\n    initiallyExpanded: deprecated(PropTypes.bool, 'Use `defaultExpanded` instead'),\n    isExpanded: deprecated(PropTypes.bool, 'Use `expanded` instead'),\n    iconChildren: deprecated(PropTypes.node, 'Use the `expanderIconChildren` prop instead'),\n    iconClassName: deprecated(PropTypes.string, 'Use the `expanderIconClassName` prop instead'),\n  };\n\n  static defaultProps = {\n    animate: true,\n    expanderIcon: <FontIcon>keyboard_arrow_down</FontIcon>,\n    expanderTooltipPosition: 'left',\n  };\n\n  static childContextTypes = contextTypes;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      zDepth: 1,\n      expanded: typeof props.initiallyExpanded !== 'undefined' ? props.initiallyExpanded : !!props.defaultExpanded,\n    };\n  }\n\n  getChildContext() {\n    const {\n      expanderTooltipLabel,\n      expanderTooltipDelay,\n      expanderTooltipPosition,\n      expanderIcon,\n\n      // deprecated\n      iconClassName,\n      iconChildren,\n      expanderIconClassName,\n      expanderIconChildren,\n    } = this.props;\n\n    const expanded = typeof this.props.isExpanded !== 'undefined'\n      ? this.props.isExpanded\n      : getField(this.props, this.state, 'expanded');\n\n    return {\n      expanded,\n      onExpandClick: this._handleExpandClick,\n      icon: getDeprecatedIcon(\n        iconChildren || expanderIconChildren,\n        iconClassName || expanderIconClassName,\n        expanderIcon\n      ),\n      tooltipLabel: expanderTooltipLabel,\n      tooltipDelay: expanderTooltipDelay,\n      tooltipPosition: expanderTooltipPosition,\n    };\n  }\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (this.props.raise && !this._touched) {\n      this.setState({ zDepth: 4 });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n\n    this._touched = false;\n    if (this.props.raise && this.state.zDepth !== 1) {\n      this.setState({ zDepth: 1 });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    this._touched = true;\n  };\n\n  _handleExpandClick = (e) => {\n    const { onExpanderClick } = this.props;\n    const expanded = !getField(this.props, this.state, 'expanded');\n    if (onExpanderClick) {\n      onExpanderClick(expanded, e);\n    }\n\n    if (typeof this.props.expanded === 'undefined') {\n      this.setState({ expanded });\n    }\n  };\n\n  render() {\n    const { zDepth } = this.state;\n    const {\n      className,\n      raise,\n      tableCard,\n      children,\n      animate,\n      /* eslint-disable no-unused-vars */\n      expanded: propExpanded,\n      onExpanderClick,\n      defaultExpanded,\n      expanderIcon,\n      expanderIconChildren,\n      expanderIconClassName,\n      expanderTooltipLabel,\n      expanderTooltipDelay,\n      expanderTooltipPosition,\n\n      // deprecated\n      iconChildren,\n      iconClassName,\n      isExpanded,\n      initiallyExpanded,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const expanded = typeof this.props.isExpanded !== 'undefined'\n      ? this.props.isExpanded\n      : getField(this.props, this.state, 'expanded');\n    let expanderIndex = -1;\n    const parts = Children.map(Children.toArray(children), (child, i) => {\n      if (!child || !child.props) {\n        return child;\n      } else if (expanderIndex < 0 && (child.props.isExpander || child.props.expander)) {\n        expanderIndex = i;\n      }\n\n      if (!child.props.expandable) {\n        return child;\n      }\n\n      const collapsed = expanderIndex === -1 || expanderIndex === i || !expanded;\n      return <Collapse collapsed={collapsed} animate={animate}>{child}</Collapse>;\n    });\n\n    return (\n      <Paper\n        {...props}\n        zDepth={zDepth}\n        className={cn('md-card', {\n          'md-card--raise': raise,\n          'md-card--table': tableCard,\n        }, 'md-background--card', className)}\n        onMouseOver={this._handleMouseOver}\n        onMouseLeave={this._handleMouseLeave}\n        onTouchStart={this._handleTouchStart}\n      >\n        {parts}\n      </Paper>\n    );\n  }\n}\n"]}
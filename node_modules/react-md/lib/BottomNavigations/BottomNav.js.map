{"version":3,"sources":["../../src/js/BottomNavigations/BottomNav.js"],"names":["BottomNav","_handleClick","e","props","onClick","onNavChange","index","active","fixed","className","colored","animate","iconClassName","iconChildren","propIcon","icon","propLabel","label","labelClassName","count","labelEl","only","cloneElement","inherit","primary","text","propTypes","style","object","string","component","oneOfType","func","bool","children","node","number","isRequired","role","element","defaultProps"],"mappings":"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","file":"BottomNav.js","sourcesContent":["import React, { PureComponent, Children, isValidElement, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport Collapse from '../Helpers/Collapse';\nimport FontIcon from '../FontIcons';\n\n/**\n * The `BottomNav` component is used for rendering the navigation tab/link in the `BottomNavigation`\n * component.\n */\nexport default class BottomNav extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]),\n    active: PropTypes.bool,\n    fixed: PropTypes.bool,\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    label: PropTypes.node.isRequired,\n    colored: PropTypes.bool,\n    iconChildren: PropTypes.node,\n    iconClassName: PropTypes.string,\n    onClick: PropTypes.func,\n    onNavChange: PropTypes.func,\n    role: PropTypes.string,\n    animate: PropTypes.bool,\n    icon: PropTypes.element,\n  };\n\n  static defaultProps = {\n    component: 'a',\n    role: null,\n  };\n\n  _handleClick = (e) => {\n    const { onClick, onNavChange, index } = this.props;\n    if (onClick) {\n      onClick(index, e);\n    }\n\n    if (onNavChange) {\n      onNavChange(index, e);\n    }\n  };\n\n  render() {\n    const {\n      active,\n      fixed,\n      className,\n      colored,\n      animate,\n\n      // deprecated\n      iconClassName,\n      iconChildren,\n      /* eslint-disable no-unused-vars */\n      index,\n      icon: propIcon,\n      label: propLabel,\n      onClick,\n      onNavChange,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { label, icon } = this.props;\n    const labelClassName = cn('md-bottom-nav-label', { 'md-bottom-nav-label--shifting-inactive': !active && !fixed });\n    if (Children.count(label) === 1 && isValidElement(label)) {\n      const labelEl = Children.only(label);\n      label = cloneElement(label, {\n        className: cn(labelClassName, labelEl.props.className),\n      });\n    } else {\n      label = <div className={labelClassName}>{label}</div>;\n    }\n\n    if (!icon && (iconClassName || iconChildren)) {\n      // Deprecated\n      icon = <FontIcon iconClassName={iconClassName} inherit>{iconChildren}</FontIcon>;\n    } else if (icon) {\n      icon = React.cloneElement(icon, { inherit: true });\n    }\n\n    return (\n      <AccessibleFakeInkedButton\n        {...props}\n        onClick={this._handleClick}\n        className={cn('md-bottom-nav', {\n          'md-bottom-nav--active': active,\n          'md-bottom-nav--fixed': fixed,\n          'md-bottom-nav--shifting': !fixed,\n          'md-bottom-nav--shifting-active': !fixed && active,\n          'md-bottom-nav--shifting-inactive': !fixed && !active,\n        }, themeColors({ primary: !colored && active, text: !active && !colored }, className))}\n      >\n        {icon}\n        <Collapse collapsed={!fixed && !active} animate={animate}>\n          {label}\n        </Collapse>\n      </AccessibleFakeInkedButton>\n    );\n  }\n}\n"]}